{ "name": "wix-stores",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "stores-index.js" },
  "docs":
    { "summary": "The wix-stores module contains functionality for working with your\n site's store from client-side code.",
      "description":
        [ "To use the Stores API, import `wixStores` from the `wix-stores` module:",
          "",
          "   ```javascript",
          "   import wixStores from 'wix-stores';",
          "   ```",
          "> **Note:**",
          " Additional Stores related APIs can be found in the [`CartIcon`]($w.CartIcon.html),",
          "  [`ProductPage`]($w.ProductPage.html), [`ThankYouPage`]($w.thankyoupage.html), and [`Currencies`](wix-pay-backend.Currencies.html) pages." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "cart",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-stores.Cart",
        "locations":
          [ { "lineno": 54,
              "filename": "stores-index.js" } ],
        "docs":
          { "summary": "The wix-stores.cart module provides functionality for working with your site's cart from client-side code.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "navigate",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-stores.Navigate",
        "locations":
          [ { "lineno": 72,
              "filename": "stores-index.js" } ],
        "docs":
          { "summary": "The wix-stores.navigate module provides functionality for navigating your store from client-side code.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "product",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-stores.Product",
        "locations":
          [ { "lineno": 63,
              "filename": "stores-index.js" } ],
        "docs":
          { "summary": "The wix-stores.product module provides functionality for working with your store's products from client-side code.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "getCurrentCart",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores.CartObj" ] },
            "doc": "Fulfilled - The retrieved cart." },
        "locations":
          [ { "lineno": 203,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.cart.getCurrentCart()](https://www.wix.com/velo/reference/wix-stores/cart/getcurrentcart).",
            "description":
              [ "Gets the current site visitor's cart.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.cart.getCurrentCart()`](wix-stores/cart/getcurrentcart).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { cart } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.getCurrentCart()`,",
                ">    and replace it with `cart.getCurrentCart()`.",
                ">    Update your code to work with the new `cart.getCurrentCart()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples":
              [ { "title": "Get the current site visitor's cart",
                  "body":
                    [ "// Updated example using cart.getCurrentCart()",
                      "",
                      "import { cart } from 'wix-stores';",
                      "",
                      "cart.getCurrentCart()",
                      "  .then((currentCart) => {",
                      "    const cartId = currentCart._id;",
                      "    const cartLineItems = currentCart.lineItems;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "/* Example of returned currentCart object:",
                      "*",
                      "* {",
                      "*   \"_id\": \"b36eb035-635a-450e-b74d-acf86ee4dfcc\",",
                      "*   \"appliedCoupon\": {",
                      "*     \"couponId\": \"e81e9c48-f954-4044-ba64-ccfe5c103c8f\",",
                      "*     \"name\": \"Summer Sale\",",
                      "*     \"code\": \"SummerSale\",",
                      "*     \"discountValue\": \"$10.00\",",
                      "*     \"couponType\": \"MoneyOff\"",
                      "*   },",
                      "*   \"billingAddress\": {",
                      "*     \"firstName\": \"John\",",
                      "*     \"lastName\": \"Doe\",",
                      "*     \"email\":\"john.doe@somedomain.com\",",
                      "*     \"phone\":\"5555555\",",
                      "*     \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      "*   },",
                      "*   \"buyerNote\": \"This is a note from the buyer.\",",
                      "*   \"buyerInfo\":{",
                      "*     \"firstName\": \"John\",",
                      "*     \"lastName\": \"Doe\",",
                      "*     \"email\": \"john.doe@somedomain.com\",",
                      "*     \"phone\": \"5555555555\",",
                      "*     \"identityType\": \"CONTACT\"",
                      "*   },",
                      "*   \"status\": \"INCOMPLETE\",",
                      "*   \"currency\": {",
                      "*      \"code\": \"USD\",",
                      "*      \"symbol\": \"$\"",
                      "*   },",
                      "*   \"shippingInfo\": {",
                      "*      \"deliveryOption\": \"Free Shipping\",",
                      "*      \"shippingAddress\": {",
                      "*        \"firstName\": \"John\",",
                      "*        \"lastName\": \"Doe\",",
                      "*        \"email\":\"john.doe@somedomain.com\",",
                      "*        \"phone\":\"5555555\",",
                      "*        \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      "*      },",
                      "*      \"pickupDetails\":null",
                      "*   },",
                      "*   \"lineItems\":[",
                      "*     {",
                      "*       \"quantity\": 1,",
                      "*       \"price\": 120,",
                      "*       \"name\": \"A product\",",
                      "*       \"productId\": \"a668ef33-f5b8-6569-d04c-1d123be68441\",",
                      "*       \"totalPrice\": 120,",
                      "*       \"lineItemType\": \"PHYSICAL\",",
                      "*       \"customTextFields\": [",
                      "*         \"title\": \"Custom Field\",",
                      "*         \"value\": \"Custom value\"",
                      "*       ],",
                      "*       \"mediaItem\": {",
                      "*         \"src\": \"wix:image://v1/a9ff3b_ed3b544c319b4fad9c222c791a997832.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      "*         \"type\": \"IMAGE\"",
                      "*       },",
                      "*       \"sku\": \"21554345656\",",
                      "*       \"options\": [ ],",
                      "*       \"weight\": 3,",
                      "*       \"id\": 1",
                      "*     },",
                      "*     {",
                      "*       \"quantity\": 1,",
                      "*       \"price\": 25,",
                      "*       \"name\": \"Another product\",",
                      "*       \"productId\": \"1a2d7e83-4bef-31d5-09e1-3326ee271c09\",",
                      "*       \"totalPrice\": 25,",
                      "*       \"lineItemType\": \"PHYSICAL\",",
                      "*       \"mediaItem\": {",
                      "*         \"src\": \"wix:image://v1/a9ff3b_c6158b4d41784ae8b08337a331e1de7f.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      "*         \"type\": \"IMAGE\"",
                      "*       },",
                      "*       \"sku\": \"217537123517253\",",
                      "*       \"options\": [",
                      "*         {",
                      "*           \"option\": \"Size\",",
                      "*           \"selection\": \"Medium\"",
                      "*         },",
                      "*         {",
                      "*           \"option\": \"Color\",",
                      "*           \"selection\": \"Black\"",
                      "*         }",
                      "*       ],",
                      "*       \"weight\": 2,",
                      "*       \"id\": 2",
                      "*     }",
                      "*   ],",
                      "*   \"totals\": {",
                      "*      \"discount\": 0,",
                      "*      \"quantity\": 2,",
                      "*      \"shipping\": 0,",
                      "*      \"subtotal\": 145,",
                      "*      \"tax\": 0,",
                      "*      \"total\": 145,",
                      "*      \"weight\": 5",
                      "*   },",
                      "*   \"weightUnit\": \"LB\"",
                      "* }",
                      "*/",
                      "",
                      "",
                      "// Deprecated example",
                      "",
                      "import wixStores from 'wix-stores';",
                      "",
                      "wixStores.getCurrentCart()",
                      "  .then((cartData) => {",
                      "    const cartId = cartData._id;",
                      "    const cartLineItems = cartData.lineItems;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getProductOptionsAvailability",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "The ID of the product whose availability is being checked." },
            { "name": "choices",
              "type": "Object",
              "doc": "Option choices to use when checking the product's availability in the form of an object containing a key:value pair for each product choice. For example, if a product has a size choice, this key value will be something like \"Size\" and its value will be something like \"Large\"." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores.ProductOptionsAvailability" ] },
            "doc": "Fulfilled - The availability information of the product." },
        "locations":
          [ { "lineno": 70,
              "filename": "products.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.product.getOptionsAvailability()](https://www.wix.com/velo/reference/wix-stores/product/getoptionsavailability).",
            "description":
              [ "Gets the availability of a product based on the specified option choices.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.product.getOptionsAvailability()`](wix-stores/product/getoptionsavailability).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { product } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.getProductOptionsAvailability()`,",
                ">    and replace it with `product.getOptionsAvailability()`.",
                ">    Update your code to work with the new `product.getOptionsAvailability()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples":
              [ { "title": "Get a product's availability information",
                  "body":
                    [ "// Updated example using product.getOptionsAvailability()",
                      "",
                      "import { product } from 'wix-stores';",
                      "",
                      "const productId = \"91f7ac8b-2baa-289c-aa50-6d64764f35d3\";",
                      "const choices = {",
                      "  \"Weight\": \"250g\",",
                      "  \"Ground for\": \"Stovetop\"",
                      "};",
                      "",
                      "product.getOptionsAvailability(productId, choices)",
                      "  .then((availability) => {",
                      "    const available = availability.availableForPurchase;",
                      "    const options = availability.productOptions;",
                      "    const mainMedia = availability.mainMedia;",
                      "    const mediaItems = availability.mediaItems;",
                      "    const selectedVariant = availability.selectedVariant;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.log(error);",
                      "  });",
                      "",
                      "",
                      "/*",
                      " * Example of returned availability object:",
                      " *",
                      " *  {",
                      " *    \"availableForPurchase\": true,",
                      " *    \"productOptions\": {",
                      " *      \"Weight\": {",
                      " *        \"optionType\": \"drop_down\",",
                      " *        \"name\": \"Weight\",",
                      " *        \"choices\": [",
                      " *          {",
                      " *            \"value\": \"250g\",",
                      " *            \"description\": \"250g\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          },",
                      " *          {",
                      " *            \"value\": \"500g\",",
                      " *            \"description\": \"500g\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          }",
                      " *        ]",
                      " *      },",
                      " *      \"Ground for\": {",
                      " *        \"optionType\": \"drop_down\",",
                      " *        \"name\": \"Ground for\",",
                      " *        \"choices\": [",
                      " *          {",
                      " *            \"value\": \"Stovetop\",",
                      " *            \"description\": \"Stovetop\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          },",
                      " *          {",
                      " *            \"value\": \"Filter\",",
                      " *            \"description\": \"Filter\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          }",
                      " *        ]",
                      " *      }",
                      " *    },",
                      " *    \"mainMedia\": \"null\",",
                      " *    \"mediaItems\": [],",
                      " *    \"selectedVariant\": {",
                      " *      \"sku\": \"10001\",",
                      " *      \"currency\": \"USD\",",
                      " *      \"price\": 35,",
                      " *      \"discountedPrice\": 30,",
                      " *      \"formattedPrice\": \"$35.00\",",
                      " *      \"formattedDiscountedPrice\": \"$30.00\",",
                      " *      \"visible\": true,",
                      " *      \"inStock\": true,",
                      " *      \"weight\": 0.25",
                      " *    }",
                      " *  }",
                      " *",
                      " */",
                      "",
                      "",
                      "// Deprecated example",
                      "",
                      "import wixStores from 'wix-stores';",
                      "",
                      "const productId = \"91f7ac8b-2baa-289c-aa50-6d64764f35d3\";",
                      "const choices = {",
                      "  \"Size\": \"Large\",",
                      "  \"Color\": \"Red\"",
                      "};",
                      "",
                      "wixStores.getProductOptionsAvailability(productId, choices)",
                      "  .then((availability) => {",
                      "    const available = availability.availableForPurchase;",
                      "    const options = availability.productOptions;",
                      "    const mainMedia = availability.mainMedia;",
                      "    const mediaItems = availability.mediaItems;",
                      "    const selectedVariant = availability.selectedVariant;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example gets a product's availability information by specifying an option choice.\n Since all the product's options have a corresponding choice, a variant is selected." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getProductVariants",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "ID of the product whose variants are being retrieved. Pass only this field to retrieve all the specified product's variants." },
            { "name": "options",
              "type": "wix-stores.ProductVariantOptions",
              "doc": "Variant options to return. If not specified, all the product's variants are returned.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-stores.VariantItem" ] } ] },
            "doc": "Fulfilled - The variants with the specified choices." },
        "locations":
          [ { "lineno": 213,
              "filename": "products.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.product.getVariants()](https://www.wix.com/velo/reference/wix-stores/product/getvariants).",
            "description":
              [ "Gets the availability of a product based on the specified option choices.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.product.getVariants()`](wix-stores/product/getvariants).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { product } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.getProductVariants()`,",
                ">    and replace it with `product.getVariants()`.",
                ">    Update your code to work with the new `product.getVariants()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples":
              [ { "title": "Get product variants by specified choices",
                  "body":
                    [ "// Updated example using product.getVariants()",
                      "",
                      "import { product } from 'wix-stores';",
                      "",
                      "const productId = \"91f7ac8b-2baa-289c-aa50-6d64764f35d3\";",
                      "const options = {",
                      "  choices: {",
                      "    \"Weight\": \"500g\"",
                      "  }",
                      "};",
                      "",
                      "product.getVariants(productId, options)",
                      "  .then((variants) => {",
                      "    const firstVariant = variants[0];",
                      "    const firstPrice = firstVariant.variant.price;",
                      "    const numberOfReturnedVariants = variants.length;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "/*",
                      " * Example of returned variants:",
                      " *",
                      " *  [",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-003f-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"500g\",",
                      " *        \"Ground for\": \"Stovetop\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 65,",
                      " *        \"discountedPrice\": 60,",
                      " *        \"pricePerUnit\": 0.24,",
                      " *        \"formattedPrice\": \"$65.00\",",
                      " *        \"formattedDiscountedPrice\": \"$65.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.24\",",
                      " *        \"weight\": 0.5,",
                      " *        \"sku\": \"10002\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    },",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-0040-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"500g\",",
                      " *        \"Ground for\": \"Filter\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 70,",
                      " *        \"discountedPrice\": 65,",
                      " *        \"pricePerUnit\": 0.26,",
                      " *        \"formattedPrice\": \"$70.00\",",
                      " *        \"formattedDiscountedPrice\": \"$70.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.26\",",
                      " *        \"weight\": 1,",
                      " *        \"sku\": \"10004\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    }",
                      " *  ]",
                      " *",
                      " */",
                      "",
                      "",
                      "// Deprecated example",
                      "",
                      "import wixStores from 'wix-stores';",
                      "",
                      "const productId = \"3fb6a3c8-988b-7895-04bd-5c59ae0b18ea\";",
                      "const options = {",
                      "  choices: {",
                      "    \"Size\": \"Large\",",
                      "    \"Color\": \"Red\"",
                      "  }",
                      "};",
                      "",
                      "wixStores.getProductVariants(productId, options)",
                      "  .then((variants) => {",
                      "    const firstVariant = variants[0];",
                      "    const firstPrice = firstVariant.variant.price;",
                      "    const numberOfReturnedVariants = variants.length;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Get product variants by variant IDs",
                  "body":
                    [ "// Updated example using product.getVariants()",
                      "",
                      "import { product } from 'wix-stores';",
                      "",
                      "const productId = \"91f7ac8b-2baa-289c-aa50-6d64764f35d3\";",
                      "const options = {",
                      "  variantIds: [",
                      "    \"00000000-0000-0020-0005-a316e6ba5b37\",",
                      "    \"00000000-0000-003f-0005-a316e6ba5b37\"",
                      "  ]",
                      "};",
                      "",
                      "product.getVariants(productId, options)",
                      "  .then((variants) => {",
                      "    const firstVariant = variants[0];",
                      "    const firstPrice = firstVariant.variant.price;",
                      "    const numberOfReturnedVariants = variants.length;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  })",
                      "",
                      "/*",
                      " * Example of returned variants array:",
                      " *",
                      " *  [",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-0020-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"250g\",",
                      " *        \"Ground for\": \"Stovetop\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 35,",
                      " *        \"discountedPrice\": 30,",
                      " *        \"pricePerUnit\": 0.12,",
                      " *        \"formattedPrice\": \"$35.00\",",
                      " *        \"formattedDiscountedPrice\": \"$35.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.12\",",
                      " *        \"weight\": 0.25,",
                      " *        \"sku\": \"10001\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    },",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-003f-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"500g\",",
                      " *        \"Ground for\": \"Stovetop\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 65,",
                      " *        \"discountedPrice\": 60,",
                      " *        \"pricePerUnit\": 0.24,",
                      " *        \"formattedPrice\": \"$65.00\",",
                      " *        \"formattedDiscountedPrice\": \"$65.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.24\",",
                      " *        \"weight\": 0.5,",
                      " *        \"sku\": \"10002\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    }",
                      " *  ]",
                      " *",
                      " */",
                      "",
                      "",
                      "// Deprecated example",
                      "",
                      "import wixStores from 'wix-stores';",
                      "",
                      "const productId = \"3fb6a3c8-988b-7895-04bd-5c59ae0b18ea\";",
                      "const options = {",
                      "  variantIds: [",
                      "    \"00000000-0000-03e1-0005-957f699d0688\",",
                      "    \"00000000-0000-03e2-0005-957f699d0688\"",
                      "  ]",
                      "};",
                      "",
                      "wixStores.getProductVariants(productId, options)",
                      "  .then((variants) => {",
                      "    const firstVariant = variants[0];",
                      "    const firstPrice = firstVariant.variant.price;",
                      "    const numberOfReturnedVariants = variants.length;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCartChanged",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "wix-stores.CartChangedHandler",
              "doc": "The name of the function or the function expression to run when a cart changes." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 142,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.cart.onChange()](https://www.wix.com/velo/reference/wix-stores/cart/onchange).",
            "description":
              [ "The `onCartChanged()` function is a client-side event handler invoked every time the cart changes.",
                "It takes a callback function which receives the new `Cart` object as a parameter.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.cart.onChange()`](wix-stores/cart/oncartchanged).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { cart } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.onCartChanged()`,",
                ">    and replace it with `cart.onChange()`.",
                ">    Update your code to work with the new `cart.onChange()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples":
              [ { "title": "An event when a cart is changed",
                  "body":
                    [ "// Updated example using cart.onChange()",
                      "",
                      "/************************************",
                      " * Global (Site) code (masterPage.js) *",
                      " ************************************/",
                      "",
                      "import { cart } from 'wix-stores';",
                      "",
                      "$w.onReady(function () {",
                      "  cart.onChange((changedCart) => {",
                      "    const cartId = changedCart._id;",
                      "    const cartLineItems = changedCart.lineItems;",
                      "  });",
                      "});",
                      "",
                      "",
                      "/* Example of returned changedCart object:",
                      " *",
                      " * {",
                      " *   \"_id\": \"b36eb035-635a-450e-b74d-acf86ee4dfcc\",",
                      " *   \"appliedCoupon\": {",
                      " *     \"couponId\": \"e81e9c48-f954-4044-ba64-ccfe5c103c8f\",",
                      " *     \"name\": \"Summer Sale\",",
                      " *     \"code\": \"SummerSale\",",
                      " *     \"discountValue\": \"$10.00\",",
                      " *     \"couponType\": \"MoneyOff\"",
                      " *   },",
                      " *   \"billingAddress\": {",
                      " *     \"firstName\": \"John\",",
                      " *     \"lastName\": \"Doe\",",
                      " *     \"email\":\"john.doe@somedomain.com\",",
                      " *     \"phone\":\"5555555\",",
                      " *     \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      " *   },",
                      " *   \"buyerNote\": \"This is a note from the buyer.\",",
                      " *   \"buyerInfo\":{",
                      " *     \"firstName\": \"John\",",
                      " *     \"lastName\": \"Doe\",",
                      " *     \"email\": \"john.doe@somedomain.com\",",
                      " *     \"phone\": \"5555555555\",",
                      " *     \"identityType\": \"CONTACT\"",
                      " *   },",
                      " *   \"status\": \"INCOMPLETE\",",
                      " *   \"currency\": {",
                      " *      \"code\": \"USD\",",
                      " *      \"symbol\": \"$\"",
                      " *   },",
                      " *   \"shippingInfo\": {",
                      " *      \"deliveryOption\": \"Free Shipping\",",
                      " *      \"shippingAddress\": {",
                      " *        \"firstName\": \"John\",",
                      " *        \"lastName\": \"Doe\",",
                      " *        \"email\":\"john.doe@somedomain.com\",",
                      " *        \"phone\":\"5555555\",",
                      " *        \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      " *      },",
                      " *      \"pickupDetails\":null",
                      " *   },",
                      " *   \"lineItems\":[",
                      " *     {",
                      " *       \"quantity\": 1,",
                      " *       \"price\": 120,",
                      " *       \"name\": \"A product\",",
                      " *       \"productId\": \"a668ef33-f5b8-6569-d04c-1d123be68441\",",
                      " *       \"totalPrice\": 120,",
                      " *       \"lineItemType\": \"PHYSICAL\",",
                      " *       \"customTextFields\": [",
                      " *         \"title\": \"Custom Field\",",
                      " *         \"value\": \"Custom value\"",
                      " *       ],",
                      " *       \"mediaItem\": {",
                      " *         \"src\": \"wix:image://v1/a9ff3b_ed3b544c319b4fad9c222c791a997832.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      " *         \"type\": \"IMAGE\"",
                      " *       },",
                      " *       \"sku\": \"21554345656\",",
                      " *       \"options\": [ ],",
                      " *       \"weight\": 3,",
                      " *       \"id\": 1",
                      " *     },",
                      " *     {",
                      " *       \"quantity\": 1,",
                      " *       \"price\": 25,",
                      " *       \"name\": \"Another product\",",
                      " *       \"productId\": \"1a2d7e83-4bef-31d5-09e1-3326ee271c09\",",
                      " *       \"totalPrice\": 25,",
                      " *       \"lineItemType\": \"PHYSICAL\",",
                      " *       \"mediaItem\": {",
                      " *         \"src\": \"wix:image://v1/a9ff3b_c6158b4d41784ae8b08337a331e1de7f.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      " *         \"type\": \"IMAGE\"",
                      " *       },",
                      " *       \"sku\": \"217537123517253\",",
                      " *       \"options\": [",
                      " *         {",
                      " *           \"option\": \"Size\",",
                      " *           \"selection\": \"Medium\"",
                      " *         },",
                      " *         {",
                      " *           \"option\": \"Color\",",
                      " *           \"selection\": \"Black\"",
                      " *         }",
                      " *       ],",
                      " *       \"weight\": 2,",
                      " *       \"id\": 2",
                      " *     }",
                      " *   ],",
                      " *   \"totals\": {",
                      " *      \"discount\": 0,",
                      " *      \"quantity\": 2,",
                      " *      \"shipping\": 0,",
                      " *      \"subtotal\": 145,",
                      " *      \"tax\": 0,",
                      " *      \"total\": 145,",
                      " *      \"weight\": 5",
                      " *   },",
                      " *   \"weightUnit\": \"LB\"",
                      " * }",
                      " *",
                      " */",
                      "",
                      "// Deprecated example",
                      "",
                      "/************************************",
                      " * Global (Site) code (masterPage.js) *",
                      " ************************************/",
                      "",
                      "import wixStores from 'wix-stores';",
                      "",
                      "$w.onReady(function () {",
                      "  wixStores.onCartChanged((cart) => {",
                      "    const cartId = cart._id;",
                      "    const cartLineItems = cart.lineItems;",
                      "  });",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "removeProductFromCart",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "cartLineItemId",
              "type": "number",
              "doc": "ID of the cart line item to remove." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores.CartObj" ] },
            "doc": "Fulfilled - The updated cart." },
        "locations":
          [ { "lineno": 259,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.cart.removeProduct()](https://www.wix.com/velo/reference/wix-stores/cart/removeproduct).",
            "description":
              [ "The `removeProductFromCart()` function returns a Promise that resolves to the",
                " updated cart after the product is removed.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.cart.removeProduct()`](wix-stores/cart/removeproductfromcart).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { cart } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.removeProductFromCart()`,",
                ">    and replace it with `cart.removeProduct()`.",
                ">    Update your code to work with the new `cart.removeProduct()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples":
              [ { "title": "Remove item with `id: 3` from cart",
                  "body":
                    [ "// Updated example using cart.removeProduct()",
                      "",
                      "import { cart } from 'wix-stores';",
                      "",
                      "const cartLineItemId = 3;",
                      "",
                      "cart.removeProduct(cartLineItemId)",
                      "  .then((updatedCart) => {",
                      "    // Product successfully removed",
                      "    const cartLineItems = updatedCart.lineItems;",
                      "  })",
                      "  .catch((error) => {",
                      "    // Product not removed",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "/* Example of returned updatedCart object:",
                      " *",
                      " * {",
                      " *   \"_id\": \"b36eb035-635a-450e-b74d-acf86ee4dfcc\",",
                      " *   \"appliedCoupon\": {",
                      " *     \"couponId\": \"e81e9c48-f954-4044-ba64-ccfe5c103c8f\",",
                      " *     \"name\": \"Summer Sale\",",
                      " *     \"code\": \"SummerSale\",",
                      " *     \"discountValue\": \"$10.00\",",
                      " *     \"couponType\": \"MoneyOff\"",
                      " *   },",
                      " *   \"billingAddress\": {",
                      " *     \"firstName\": \"John\",",
                      " *     \"lastName\": \"Doe\",",
                      " *     \"email\":\"john.doe@somedomain.com\",",
                      " *     \"phone\":\"5555555\",",
                      " *     \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      " *   },",
                      " *   \"buyerNote\": \"This is a note from the buyer.\",",
                      " *   \"buyerInfo\":{",
                      " *     \"firstName\": \"John\",",
                      " *     \"lastName\": \"Doe\",",
                      " *     \"email\": \"john.doe@somedomain.com\",",
                      " *     \"phone\": \"5555555555\",",
                      " *     \"identityType\": \"CONTACT\"",
                      " *   },",
                      " *   \"status\": \"INCOMPLETE\",",
                      " *   \"currency\": {",
                      " *      \"code\": \"USD\",",
                      " *      \"symbol\": \"$\"",
                      " *   },",
                      " *   \"shippingInfo\": {",
                      " *      \"deliveryOption\": \"Free Shipping\",",
                      " *      \"shippingAddress\": {",
                      " *        \"firstName\": \"John\",",
                      " *        \"lastName\": \"Doe\",",
                      " *        \"email\":\"john.doe@somedomain.com\",",
                      " *        \"phone\":\"5555555\",",
                      " *        \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      " *      },",
                      " *      \"pickupDetails\":null",
                      " *   },",
                      " *   \"lineItems\":[",
                      " *     {",
                      " *       \"quantity\": 1,",
                      " *       \"price\": 120,",
                      " *       \"name\": \"A product\",",
                      " *       \"productId\": \"a668ef33-f5b8-6569-d04c-1d123be68441\",",
                      " *       \"totalPrice\": 120,",
                      " *       \"lineItemType\": \"PHYSICAL\",",
                      " *       \"customTextFields\": [",
                      " *         \"title\": \"Custom Field\",",
                      " *         \"value\": \"Custom value\"",
                      " *       ],",
                      " *       \"mediaItem\": {",
                      " *         \"src\": \"wix:image://v1/a9ff3b_ed3b544c319b4fad9c222c791a997832.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      " *         \"type\": \"IMAGE\"",
                      " *       },",
                      " *       \"sku\": \"21554345656\",",
                      " *       \"options\": [ ],",
                      " *       \"weight\": 3,",
                      " *       \"id\": 1",
                      " *     },",
                      " *     {",
                      " *       \"quantity\": 1,",
                      " *       \"price\": 25,",
                      " *       \"name\": \"Another product\",",
                      " *       \"productId\": \"1a2d7e83-4bef-31d5-09e1-3326ee271c09\",",
                      " *       \"totalPrice\": 25,",
                      " *       \"lineItemType\": \"PHYSICAL\",",
                      " *       \"mediaItem\": {",
                      " *         \"src\": \"wix:image://v1/a9ff3b_c6158b4d41784ae8b08337a331e1de7f.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      " *         \"type\": \"IMAGE\"",
                      " *       },",
                      " *       \"sku\": \"217537123517253\",",
                      " *       \"options\": [",
                      " *         {",
                      " *           \"option\": \"Size\",",
                      " *           \"selection\": \"Medium\"",
                      " *         },",
                      " *         {",
                      " *           \"option\": \"Color\",",
                      " *           \"selection\": \"Black\"",
                      " *         }",
                      " *       ],",
                      " *       \"weight\": 2,",
                      " *       \"id\": 2",
                      " *     }",
                      " *   ],",
                      " *   \"totals\": {",
                      " *      \"discount\": 0,",
                      " *      \"quantity\": 2,",
                      " *      \"shipping\": 0,",
                      " *      \"subtotal\": 145,",
                      " *      \"tax\": 0,",
                      " *      \"total\": 145,",
                      " *      \"weight\": 5",
                      " *   },",
                      " *   \"weightUnit\": \"LB\"",
                      " * }",
                      " *",
                      " */",
                      "",
                      "",
                      "// Deprecated example",
                      "",
                      "import wixStores from 'wix-stores';",
                      "",
                      "const cartLineItemId = 3;",
                      "",
                      "wixStores.removeProductFromCart(cartLineItemId)",
                      "  .then((updatedCart) => {",
                      "    // Product successfully removed",
                      "  })",
                      "  .catch((error) => {",
                      "    // Product not removed",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Remove item by `productId`",
                  "body":
                    [ "// Updated example using cart.removeProduct()",
                      "",
                      "import { cart } from 'wix-stores';",
                      "",
                      "const productIdToRemove = \"3fb6a3c8-988b-8755-04bd-5c59ae0b18ea\";",
                      "",
                      "cart.getCurrentCart()",
                      "  .then((currentCart) => {",
                      "",
                      "    // Find the cart item by productId",
                      "    const itemToRemove = currentCart.lineItems.find(lineItem => lineItem.productId = productIdToRemove);",
                      "",
                      "    // If the item is found, remove it from the cart",
                      "    if (itemToRemove) {",
                      "      cart.removeProduct(itemToRemove.id)",
                      "        .then((updatedCart) => {",
                      "          // Product successfully removed",
                      "          const cartLineItems = updatedCart.lineItems;",
                      "        })",
                      "        .catch((error) => {",
                      "          // Product not removed",
                      "          console.error(error);",
                      "        });",
                      "    } else {",
                      "      console.log(\"Item not found by productId\")",
                      "    }",
                      "  });",
                      "",
                      "",
                      "/* Example of returned updatedCart:",
                      " *",
                      " * {",
                      " *   \"_id\": \"b36eb035-635a-450e-b74d-acf86ee4dfcc\",",
                      " *   \"appliedCoupon\": {",
                      " *     \"couponId\": \"e81e9c48-f954-4044-ba64-ccfe5c103c8f\",",
                      " *     \"name\": \"Summer Sale\",",
                      " *     \"code\": \"SummerSale\",",
                      " *     \"discountValue\": \"$10.00\",",
                      " *     \"couponType\": \"MoneyOff\"",
                      " *   },",
                      " *   \"billingAddress\": {",
                      " *     \"firstName\": \"John\",",
                      " *     \"lastName\": \"Doe\",",
                      " *     \"email\":\"john.doe@somedomain.com\",",
                      " *     \"phone\":\"5555555\",",
                      " *     \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      " *   },",
                      " *   \"buyerNote\": \"This is a note from the buyer.\",",
                      " *   \"buyerInfo\":{",
                      " *     \"firstName\": \"John\",",
                      " *     \"lastName\": \"Doe\",",
                      " *     \"email\": \"john.doe@somedomain.com\",",
                      " *     \"phone\": \"5555555555\",",
                      " *     \"identityType\": \"CONTACT\"",
                      " *   },",
                      " *   \"status\": \"INCOMPLETE\",",
                      " *   \"currency\": {",
                      " *      \"code\": \"USD\",",
                      " *      \"symbol\": \"$\"",
                      " *   },",
                      " *   \"shippingInfo\": {",
                      " *      \"deliveryOption\": \"Free Shipping\",",
                      " *      \"shippingAddress\": {",
                      " *        \"firstName\": \"John\",",
                      " *        \"lastName\": \"Doe\",",
                      " *        \"email\":\"john.doe@somedomain.com\",",
                      " *        \"phone\":\"5555555\",",
                      " *        \"address\":\"235 West 23rd Street\\nNew York, New York 10011\\nUnited States\"",
                      " *      },",
                      " *      \"pickupDetails\":null",
                      " *   },",
                      " *   \"lineItems\":[",
                      " *     {",
                      " *       \"quantity\": 1,",
                      " *       \"price\": 120,",
                      " *       \"name\": \"A product\",",
                      " *       \"productId\": \"a668ef33-f5b8-6569-d04c-1d123be68441\",",
                      " *       \"totalPrice\": 120,",
                      " *       \"lineItemType\": \"PHYSICAL\",",
                      " *       \"customTextFields\": [",
                      " *         \"title\": \"Custom Field\",",
                      " *         \"value\": \"Custom value\"",
                      " *       ],",
                      " *       \"mediaItem\": {",
                      " *         \"src\": \"wix:image://v1/a9ff3b_ed3b544c319b4fad9c222c791a997832.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      " *         \"type\": \"IMAGE\"",
                      " *       },",
                      " *       \"sku\": \"21554345656\",",
                      " *       \"options\": [ ],",
                      " *       \"weight\": 3,",
                      " *       \"id\": 1",
                      " *     },",
                      " *     {",
                      " *       \"quantity\": 1,",
                      " *       \"price\": 25,",
                      " *       \"name\": \"Another product\",",
                      " *       \"productId\": \"1a2d7e83-4bef-31d5-09e1-3326ee271c09\",",
                      " *       \"totalPrice\": 25,",
                      " *       \"lineItemType\": \"PHYSICAL\",",
                      " *       \"mediaItem\": {",
                      " *         \"src\": \"wix:image://v1/a9ff3b_c6158b4d41784ae8b08337a331e1de7f.jpg/file.jpg#originWidth=1000&originHeight=1000\",",
                      " *         \"type\": \"IMAGE\"",
                      " *       },",
                      " *       \"sku\": \"217537123517253\",",
                      " *       \"options\": [",
                      " *         {",
                      " *           \"option\": \"Size\",",
                      " *           \"selection\": \"Medium\"",
                      " *         },",
                      " *         {",
                      " *           \"option\": \"Color\",",
                      " *           \"selection\": \"Black\"",
                      " *         }",
                      " *       ],",
                      " *       \"weight\": 2,",
                      " *       \"id\": 2",
                      " *     }",
                      " *   ],",
                      " *   \"totals\": {",
                      " *      \"discount\": 0,",
                      " *      \"quantity\": 2,",
                      " *      \"shipping\": 0,",
                      " *      \"subtotal\": 145,",
                      " *      \"tax\": 0,",
                      " *      \"total\": 145,",
                      " *      \"weight\": 5",
                      " *   },",
                      " *   \"weightUnit\": \"LB\"",
                      " * }",
                      " *",
                      " */",
                      "",
                      "",
                      "// Deprecated example",
                      "",
                      "import wixStores from 'wix-stores';",
                      "",
                      "const productIdToRemove = \"3fb6a3c8-988b-8755-04bd-5c59ae0b18ea\";",
                      "",
                      "wixStores.getCurrentCart()",
                      "  .then((currentCart) => {",
                      "    // Find the cart item by productId",
                      "    const itemToRemove = currentCart.lineItems.find(lineItem => lineItem.productId = productIdToRemove);",
                      "    // If the item is found, remove it from the cart",
                      "    if (itemToRemove) {",
                      "      wixStores.removeProductFromCart(itemToRemove.id)",
                      "        .then((updatedCart) => {",
                      "          // Product successfully removed",
                      "          const cartLineItems = updatedCart.lineItems;",
                      "        })",
                      "        .catch((error) => {",
                      "          // Product not removed",
                      "          console.error(error);",
                      "        });",
                      "    } else {",
                      "      console.log(\"Item not found by productId\")",
                      "    }",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks":
    [ { "name": "CartChangedHandler",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores.CartObj",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 197,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "Function that runs when a cart changes.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "callback",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-backend.Cart",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 221,
              "filename": "stores.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCartChangedCallback",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-backend.Cart",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 221,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "Function that runs when an item is added or removed from the cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCartChangedHandler",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-backend.Cart",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 224,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "Function that runs when a cart changes.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "messages":
    [ { "name": "CartAddress",
        "locations":
          [ { "lineno": 17,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing an address.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "firstName",
              "type": "string",
              "doc": "First name." },
            { "name": "lastName",
              "type": "string",
              "doc": "Last name." },
            { "name": "email",
              "type": "string",
              "doc": "Email address." },
            { "name": "phone",
              "type": "string",
              "doc": "Phone number." },
            { "name": "address",
              "type": "string",
              "doc": "Address." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartAppliedCoupon",
        "locations":
          [ { "lineno": 28,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a coupon applied in a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "code",
              "type": "string",
              "doc": "Coupon code." },
            { "name": "couponId",
              "type": "string",
              "doc": "Coupon unique identifier." },
            { "name": "name",
              "type": "string",
              "doc": "Coupon name." },
            { "name": "couponType",
              "type": "string",
              "doc": "Type of coupon.\n One of:\n\n + `\"BuyXGetY\"`\n + `\"FixedPriceAmount\"`\n + `\"FreeShipping\"`\n + `\"MoneyOffAmount\"`\n + `\"PercentOffRate\"`" },
            { "name": "discountValue",
              "type": "string",
              "doc": "Value of the coupon discount." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartBuyerInfo",
        "locations":
          [ { "lineno": 46,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a visitor who abandoned a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Buyer's unique ID." },
            { "name": "email",
              "type": "string",
              "doc": "Buyer's email address." },
            { "name": "firstName",
              "type": "string",
              "doc": "Buyer's first name." },
            { "name": "lastName",
              "type": "string",
              "doc": "Buyer's last name." },
            { "name": "identityType",
              "type": "string",
              "doc": "Buyer's identity.\n One of:\n\n + `\"ADMIN\"`: Buyer is the site owner.\n + `\"MEMBER\"`: Buyer is a logged-in site member.\n + `\"VISITOR\"`: Buyer is not logged in.\n + `\"CONTACT\"`: A contact has been created for the buyer." },
            { "name": "phone",
              "type": "string",
              "doc": "Buyer's phone number." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartCustomTextField",
        "locations":
          [ { "lineno": 121,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a custom text field.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Field title." },
            { "name": "value",
              "type": "string",
              "doc": "Field value." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartLineItem",
        "locations":
          [ { "lineno": 80,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a line item in a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "number",
              "doc": "Cart line item ID." },
            { "name": "name",
              "type": "string",
              "doc": "Name of the line item." },
            { "name": "notes",
              "type": "string",
              "doc": "Notes about the line item." },
            { "name": "price",
              "type": "string",
              "doc": "Line item price." },
            { "name": "productId",
              "type": "string",
              "doc": "Line item product ID." },
            { "name": "quantity",
              "type": "number",
              "doc": "Line item quantity." },
            { "name": "sku",
              "type": "string",
              "doc": "Line item stock keeping unit." },
            { "name": "totalPrice",
              "type": "string",
              "doc": "Total price charged to the customer for all line items after any applicable discounts." },
            { "name": "weight",
              "type": "string",
              "doc": "Line item weight." },
            { "name": "lineItemType",
              "type": "string",
              "doc": "Type of the line item.\n One of:\n\n + `\"DIGITAL\"`: Digital item.\n + `\"PHYSICAL\"`: Physical item.\n + `\"CUSTOM_AMOUNT_ITEM\"`: Item with a custom price.\n + `\"UNSPECIFIED\"`: Type can't be classified due to an error." },
            { "name": "options",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.Option" ] },
              "doc": "Line item options." },
            { "name": "mediaItem",
              "type": "wix-stores.CartMediaItem",
              "doc": "Media item." },
            { "name": "customTextFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.CartCustomTextField" ] },
              "doc": "Custom text." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartMediaItem",
        "locations":
          [ { "lineno": 113,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a line item's primary media.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "Media item type. Currently only `\"IMAGE\"` type supported." },
            { "name": "src",
              "type": "string",
              "doc": "Media item source for media uploaded to Wix (wix:image, wix:video or external URL)." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartObj",
        "locations":
          [ { "lineno": 1,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Unique identifier of the shopping cart." },
            { "name": "appliedCoupon",
              "type": "wix-stores.CartAppliedCoupon",
              "doc": "Coupon applied in the shopping cart." },
            { "name": "billingAddress",
              "type": "wix-stores.CartAddress",
              "doc": "Cart billing address." },
            { "name": "buyerInfo",
              "type": "wix-stores.CartBuyerInfo",
              "doc": "The buyer's information." },
            { "name": "status",
              "type": "string",
              "doc": "Cart status. Either `\"INCOMPLETE\"` or `\"COMPLETE\"`." },
            { "name": "currency",
              "type": "wix-stores.Currency",
              "doc": "Currency of the shopping cart." },
            { "name": "shippingInfo",
              "type": "wix-stores.CartShippingInfo",
              "doc": "The shopping cart's shipping information." },
            { "name": "lineItems",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.CartLineItem" ] },
              "doc": "Items in the shopping cart." },
            { "name": "totals",
              "type": "wix-stores.OrderTotals",
              "doc": "The shopping cart's totals." },
            { "name": "weightUnit",
              "type": "string",
              "doc": "The order's units of weight. One of: `\"KG\"`, `\"LB\"`, or `\"UNSPECIFIED_WEIGHT_UNIT\"`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartShippingInfo",
        "locations":
          [ { "lineno": 72,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing shipping information.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "shippingAddress",
              "type": "wix-stores.CartAddress",
              "doc": "Shipment address.",
              "optional": true },
            { "name": "pickupInfo",
              "type": "wix-stores.CartAddress",
              "doc": "Pickup address.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Currency",
        "locations":
          [ { "lineno": 64,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a currency.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "The currency code." },
            { "name": "symbol",
              "type": "string",
              "doc": "The currency symbol." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "MediaItem",
        "locations":
          [ { "lineno": 278,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing a media item.",
            "description":
              [ "The `src` property of a `MediaItem` can be an image or video from the [Media Manager](https://support.wix.com/en/article/about-the-media-manager).",
                "",
                " The image source format for Media Manager images is:",
                " `wix:image://v1/<uri>/<filename>#originWidth=<width>&originHeight=<height>[&watermark=<watermark_manifest_string>]`",
                "",
                " The video source format is:",
                " `wix:video://v1/<video_uri>/<filename>#posterUri=<poster_uri>&posterWidth=<width>&posterHeight=<height>`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Media item ID." },
            { "name": "title",
              "type": "string",
              "doc": "Media item title." },
            { "name": "description",
              "type": "string",
              "doc": "Media item description." },
            { "name": "type",
              "type": "string",
              "doc": "Media items type. Can be \"image\" or \"video.\"" },
            { "name": "src",
              "type": "string",
              "doc": "Media item URL." },
            { "name": "thumbnail",
              "type": "string",
              "doc": "Thumbnail URL for videos only.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Option",
        "locations":
          [ { "lineno": 105,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a line item option.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "option",
              "type": "string",
              "doc": "Name of the product option." },
            { "name": "selection",
              "type": "string",
              "doc": "Selected option." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "OrderTotals",
        "locations":
          [ { "lineno": 129,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing an order's totals.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "subtotal",
              "type": "number",
              "doc": "The subtotal of all the order's line items, excluding tax." },
            { "name": "shipping",
              "type": "number",
              "doc": "The total shipping price, including tax." },
            { "name": "tax",
              "type": "string",
              "doc": "The total amount of tax." },
            { "name": "discount",
              "type": "number",
              "doc": "The total calculated discount amount." },
            { "name": "total",
              "type": "number",
              "doc": "The total price." },
            { "name": "weight",
              "type": "number",
              "doc": "The total weight of the order's items." },
            { "name": "quantity",
              "type": "number",
              "doc": "The total quantity of the the order's line items." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PagingOptions",
        "locations":
          [ { "lineno": 171,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing paging options.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "limit",
              "type": "number",
              "doc": "Maximum number of variants to retrieve. Defaults to 300.",
              "optional": true },
            { "name": "skip",
              "type": "number",
              "doc": "Number of variants to skip before the retrieved variants. Defaults to 0.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductChoices",
        "locations":
          [ { "lineno": 159,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing a product variant's option choices.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionKey",
              "type": "string",
              "doc": "Value of the choice. This key name is\n dependent on the product option. For example, if a product\n has a size option, this key value will be something like \"Size\" and its value\n will be something like \"Large\".\n\n `optionKey` is not case-sensitive. Therefore the values for the option keys \"`Size`\", \"`SIZE`\", and \"`size`\" are combined." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOption",
        "locations":
          [ { "lineno": 45,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing an option for a store product.",
            "links":
              [ "[getProduct( )](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionType",
              "type": "string",
              "doc": "Option type. Either `\"color\"` or `\"drop_down\"`." },
            { "name": "name",
              "type": "string",
              "doc": "Option name." },
            { "name": "choices",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.ProductOptionsChoice" ] },
              "doc": "Option choices." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptions",
        "locations":
          [ { "lineno": 33,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing all the available options for a store product, such as \"Size\" or \"Color\".",
            "description":
              [ "An option cannot be changed if it has choices and variants. To change an option, reset its variants with [`resetVariantData()`](wix-stores-backend.html#resetVariantData). For each option, you can define a maximum of six choices." ],
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionKey",
              "type": "wix-stores.ProductOption",
              "doc": "Name of the option. This key name\n is dependent on the options added to the product. For example, if a product has a size\n option, this key will be something like `\"Size\"`.\n\n `optionKey` is not case-sensitive. Therefore the values for the option keys \"`Size`\", \"`SIZE`\", and \"`size`\" are combined." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailability",
        "locations":
          [ { "lineno": 1,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object returned by the `getProductOptionsAvailability()` function representing the availability of a product.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "availableForPurchase",
              "type": "boolean",
              "doc": "Whether the product with the specified option choices is available for purchase." },
            { "name": "productOptions",
              "type": "wix-stores.ProductOptions",
              "doc": "An object representing all the available options for a store product." },
            { "name": "mainMedia",
              "type": "string",
              "doc": "Main product media item (image or video) URL." },
            { "name": "mediaItems",
              "type": "wix-stores.MediaItem",
              "doc": "List of product media items." },
            { "name": "selectedVariant",
              "type": "wix-stores.ProductOptionsAvailabilitySelectedVariant",
              "doc": "The variant of the product selected using the specified option choices if there is one." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailabilitySelectedVariant",
        "locations":
          [ { "lineno": 55,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing the product variant selected using the `getProductOptionsAvailability()` function.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sku",
              "type": "string",
              "doc": "Product variant stock keeping unit value." },
            { "name": "currency",
              "type": "string",
              "doc": "Product variant currency." },
            { "name": "price",
              "type": "number",
              "doc": "Product variant price. The variant price must be greater than its discount." },
            { "name": "discountedPrice",
              "type": "number",
              "doc": "Discounted product variant price." },
            { "name": "formattedPrice",
              "type": "string",
              "doc": "Product variant price formatted with the currency." },
            { "name": "formattedDiscountedPrice",
              "type": "string",
              "doc": "Discounted product variant price formatted with the currency." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the product variant is shown in the store." },
            { "name": "inStock",
              "type": "boolean",
              "doc": "Whether the product variant is in stock." },
            { "name": "weight",
              "type": "number",
              "doc": "Product variant weight." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsChoice",
        "locations":
          [ { "lineno": 13,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing an options choice for a store product, such as choice \"Small\" for the option \"Size.\"",
            "description":
              [ "You can define between one and thirty choices for each option." ],
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "value",
              "type": "number",
              "doc": "Choice value." },
            { "name": "description",
              "type": "number",
              "doc": "Choice description." },
            { "name": "media",
              "type": "wix-stores.ProductOptionsChoiceMedia",
              "doc": "Choice media." },
            { "name": "inStock",
              "type": "boolean",
              "doc": "Whether the product with this choice is in stock." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the product with this option is visible." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsChoiceMedia",
        "locations":
          [ { "lineno": 25,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing the choice media.",
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "mainMedia",
              "type": "string",
              "doc": "Main choice media item (image or video thumbnail) URL." },
            { "name": "mediaItems",
              "type": "wix-stores.MediaItem",
              "doc": "List of choice media items." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductVariantOptions",
        "locations":
          [ { "lineno": 150,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing the selection of specific variants of a product. Use only one of\n `choices` or `variantIds`.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "choices",
              "type": "Object",
              "doc": "Choices of the retrieved variants.",
              "optional": true },
            { "name": "variantIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of the variants to retrieve.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "QuickViewOptions",
        "locations":
          [ { "lineno": 323,
              "filename": "products.js" } ],
        "docs":
          { "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "quantity",
              "type": "number",
              "doc": "Product quantity to be displayed in the Quick View. Defaults to 1." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "VariantInfo",
        "locations":
          [ { "lineno": 197,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object containing variant information to use when creating or updating variants.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "Variant currency." },
            { "name": "price",
              "type": "number",
              "doc": "Variant price. The variant price must be greater than its discount. If the variant price has been updated, changes to the product price do not affect the variant price." },
            { "name": "discountedPrice",
              "type": "number",
              "doc": "Discounted variant price." },
            { "name": "formattedPrice",
              "type": "string",
              "doc": "Variant price formatted with the currency." },
            { "name": "formattedDiscountedPrice",
              "type": "string",
              "doc": "Discounted variant price formatted with the currency." },
            { "name": "weight",
              "type": "number",
              "doc": "Variant weight." },
            { "name": "sku",
              "type": "string",
              "doc": "Variant stock keeping unit value." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the variant is visible in the store." },
            { "name": "pricePerUnit",
              "type": "number",
              "doc": "Price per unit." },
            { "name": "formattedPricePerUnit",
              "type": "string",
              "doc": "Price per unit formatted with currency symbol." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "VariantItem",
        "locations":
          [ { "lineno": 186,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing a product variant item.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Unique variant ID." },
            { "name": "choices",
              "type": "Object",
              "doc": "Choices of the retrieved variant in the form of an object containing a key:value pair for each variant choice. For example, if a variant has a size option, this key value will be something like \"Size\" and its value will be something like \"Large\"." },
            { "name": "variant",
              "type": "wix-stores.VariantInfo",
              "doc": "Variant information." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Variants",
        "locations":
          [ { "lineno": 177,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing product variants.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "items",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.VariantItem" ] },
              "doc": "List of variant items that match the specified choices or variant IDs." },
            { "name": "length",
              "type": "number",
              "doc": "Number of items in the current results page." },
            { "name": "totalCount",
              "type": "number",
              "doc": "Total number of variants with the specified choices." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "customItem",
        "locations":
          [ { "lineno": 378,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a custom item to be added to the cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Custom item name.",
              "optional": true },
            { "name": "price",
              "type": "number",
              "doc": "Custom item price." },
            { "name": "quantity",
              "type": "number",
              "doc": "Custom item quantity." },
            { "name": "note",
              "type": "string",
              "doc": "Note about the custom item.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] } ],
  "extra":
    { "scopes":
        [ "frontend" ] },
  "menuSections": "APIs",
  "relatedContent":
    [ { "icon": "video",
        "text": "How to Add Related Products to a Wix Stores Product Page",
        "url": "https://www.youtube.com/watch?v=fFqWO_FaUnw" },
      { "icon": "video",
        "text": "How to Use a Gallery or Repeater to Fully Customize Your Online Store",
        "url": "https://www.youtube.com/watch?v=f2k2sd5y4l0&t=2s" },
      { "icon": "video",
        "text": "How to Create a Gift Quiz for Your Online Store",
        "url": "https://www.youtube.com/watch?v=1JHKZwhMquE&feature=youtu.be" },
      { "icon": "example",
        "text": "Product Configurator",
        "url": "https://www.wix.com/velo/example/Product-Configurator" },
      { "icon": "example",
        "text": "Related Items",
        "url": "https://www.wix.com/velo/example/Related-Items" },
      { "icon": "example",
        "text": "Product Reviews",
        "url": "https://www.wix.com/velo/example/Shop-Reviews" },
      { "icon": "example",
        "text": "Bulk Add to Cart",
        "url": "https://www.wix.com/velo/example/Bulk-Add-to-Cart" },
      { "icon": "example",
        "text": "Print on Demand",
        "url": "https://www.wix.com/velo/example/Bulk-Add-to-Cart" } ] }