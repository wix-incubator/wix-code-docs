{ "name": "Product",
  "memberOf": "wix-stores",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 28,
      "filename": "stores-index.js" },
  "docs":
    { "summary": "The wix-stores.product module contains functionality for working with your\n store's products from client-side code.",
      "description":
        [ "To use the Wix Stores Product API, import `{ product }` from the `wix-stores` module:",
          "",
          "   ```javascript",
          "   import { product } from 'wix-stores';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getOptionsAvailability",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "The ID of the product whose availability is being checked." },
            { "name": "choices",
              "type": "Object",
              "doc": "Option choices to use when checking the product's availability in the form of\nan object containing a key:value pair for each product option. For example, if a product has a size option, the key will be something like \"Size\" and its value will be something like \"Large\"." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores.ProductOptionsAvailability" ] },
            "doc": "Fulfilled - The availability information of the product." },
        "locations":
          [ { "lineno": 112,
              "filename": "products.js" } ],
        "docs":
          { "summary": "Gets the availability of a product based on the specified option choices.",
            "description":
              [ "The `getProductOptionsAvailability()` function returns a Promise that is resolved",
                " to a `ProductOptionsAvailability` object when the product's availability information",
                " about the product is retrieved.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `wixStores.getProductOptionsAvailability()`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                "> To keep any existing code compatible with future changes, see the",
                "> [migration instructions](wix-stores/getproductoptionsavailability#migration-instructions).",
                "",
                " The information returned in the `selectedVariant` and `availableForPurchase`",
                " properties reflects the option choices passed in the `choices` parameter.",
                "",
                " If the specified choices result in the selection of a single product variant,",
                " that variant is returned in the `selectedVariant` property and the `availableForPurchase`",
                " property indicates whether that product variant is available for purchase.",
                "",
                " If the choices specified in the `choices` parameter do not result in the selection of a single product variant,",
                " no variant is returned in the `selectedVariant` property and the `availableForPurchase`",
                " property will be `false`." ],
            "links":
              [ "[addToCart( )]($w.CartIcon.html#addToCart)",
                "[getProduct()]($w.ProductPage.html#getProduct)" ],
            "examples":
              [ { "title": "Get a product's availability information",
                  "body":
                    [ "import { product } from 'wix-stores';",
                      "",
                      "const productId = \"91f7ac8b-2baa-289c-aa50-6d64764f35d3\";",
                      "const choices = {",
                      "  \"Weight\": \"250g\",",
                      "  \"Ground for\": \"Stovetop\"",
                      "};",
                      "",
                      "product.getOptionsAvailability(productId, choices)",
                      "  .then((availability) => {",
                      "    const available = availability.availableForPurchase;",
                      "    const options = availability.productOptions;",
                      "    const mainMedia = availability.mainMedia;",
                      "    const mediaItems = availability.mediaItems;",
                      "    const selectedVariant = availability.selectedVariant;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.log(error);",
                      "  });",
                      "",
                      "",
                      "/*",
                      " * Example of returned availability object:",
                      " *",
                      " *  {",
                      " *    \"availableForPurchase\": true,",
                      " *    \"productOptions\": {",
                      " *      \"Weight\": {",
                      " *        \"optionType\": \"drop_down\",",
                      " *        \"name\": \"Weight\",",
                      " *        \"choices\": [",
                      " *          {",
                      " *            \"value\": \"250g\",",
                      " *            \"description\": \"250g\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          },",
                      " *          {",
                      " *            \"value\": \"500g\",",
                      " *            \"description\": \"500g\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          }",
                      " *        ]",
                      " *      },",
                      " *      \"Ground for\": {",
                      " *        \"optionType\": \"drop_down\",",
                      " *        \"name\": \"Ground for\",",
                      " *        \"choices\": [",
                      " *          {",
                      " *            \"value\": \"Stovetop\",",
                      " *            \"description\": \"Stovetop\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          },",
                      " *          {",
                      " *            \"value\": \"Filter\",",
                      " *            \"description\": \"Filter\",",
                      " *            \"inStock\": true,",
                      " *            \"visible\": true,",
                      " *            \"mainMedia\": \"null\",",
                      " *            \"mediaItems\": []",
                      " *          }",
                      " *        ]",
                      " *      }",
                      " *    },",
                      " *    \"mainMedia\": \"null\",",
                      " *    \"mediaItems\": [],",
                      " *    \"selectedVariant\": {",
                      " *      \"sku\": \"10001\",",
                      " *      \"currency\": \"USD\",",
                      " *      \"price\": 35,",
                      " *      \"discountedPrice\": 30,",
                      " *      \"formattedPrice\": \"$35.00\",",
                      " *      \"formattedDiscountedPrice\": \"$30.00\",",
                      " *      \"visible\": true,",
                      " *      \"inStock\": true,",
                      " *      \"weight\": 0.25",
                      " *    }",
                      " *  }",
                      " *",
                      " */" ],
                  "extra":
                    { "description": "This example gets a product's availability information by specifying an option choice.\n Since all the product's options have a corresponding choice, a variant is selected." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getVariants",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "ID of the product whose variants are being retrieved. Pass only this field to retrieve all of the specified product's variants." },
            { "name": "options",
              "type": "wix-stores.ProductVariantOptions",
              "doc": "Variant options to return. If not specified, all the product's variants are returned.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-stores.VariantItem" ] } ] },
            "doc": "Fulfilled - The variants with the specified choices." },
        "locations":
          [ { "lineno": 254,
              "filename": "products.js" } ],
        "docs":
          { "summary": "Gets a product's available variants based on the specified product ID and either option choices or variant IDs.",
            "description":
              [ "The `getProductVariants()` function returns a Promise that is resolved",
                " to an array of `VariantItem` objects when the product variants with the specified",
                " choices or variant IDs are retrieved.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `wixStores.getProductVariants()`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                "> To keep any existing code compatible with future changes, see the",
                "> [migration instructions](wix-stores/getproductvariants#migration-instructions)." ],
            "links": [],
            "examples":
              [ { "title": "Get product variants by specified choices",
                  "body":
                    [ "import { product } from 'wix-stores';",
                      "",
                      "const productId = \"91f7ac8b-2baa-289c-aa50-6d64764f35d3\";",
                      "const options = {",
                      "  choices: {",
                      "    \"Weight\": \"500g\"",
                      "  }",
                      "};",
                      "",
                      "product.getVariants(productId, options)",
                      "  .then((variants) => {",
                      "    const firstVariant = variants[0];",
                      "    const firstPrice = firstVariant.variant.price;",
                      "    const numberOfReturnedVariants = variants.length;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "/*",
                      " * Example of returned variants:",
                      " *",
                      " *  [",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-003f-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"500g\",",
                      " *        \"Ground for\": \"Stovetop\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 65,",
                      " *        \"discountedPrice\": 60,",
                      " *        \"pricePerUnit\": 0.24,",
                      " *        \"formattedPrice\": \"$65.00\",",
                      " *        \"formattedDiscountedPrice\": \"$65.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.24\",",
                      " *        \"weight\": 0.5,",
                      " *        \"sku\": \"10002\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    },",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-0040-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"500g\",",
                      " *        \"Ground for\": \"Filter\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 70,",
                      " *        \"discountedPrice\": 65,",
                      " *        \"pricePerUnit\": 0.26,",
                      " *        \"formattedPrice\": \"$70.00\",",
                      " *        \"formattedDiscountedPrice\": \"$70.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.26\",",
                      " *        \"weight\": 1,",
                      " *        \"sku\": \"10004\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    }",
                      " *  ]",
                      " *",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Get product variants by variant IDs",
                  "body":
                    [ "import { product } from 'wix-stores';",
                      "",
                      "const productId = \"91f7ac8b-2baa-289c-aa50-6d64764f35d3\";",
                      "const options = {",
                      "  variantIds: [",
                      "    \"00000000-0000-0020-0005-a316e6ba5b37\",",
                      "    \"00000000-0000-003f-0005-a316e6ba5b37\"",
                      "  ]",
                      "};",
                      "",
                      "product.getVariants(productId, options)",
                      "  .then((variants) => {",
                      "    const firstVariant = variants[0];",
                      "    const firstPrice = firstVariant.variant.price;",
                      "    const numberOfReturnedVariants = variants.length;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  })",
                      "",
                      "",
                      "/*",
                      " * Example of returned variants array:",
                      " *",
                      " *  [",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-0020-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"250g\",",
                      " *        \"Ground for\": \"Stovetop\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 35,",
                      " *        \"discountedPrice\": 30,",
                      " *        \"pricePerUnit\": 0.12,",
                      " *        \"formattedPrice\": \"$35.00\",",
                      " *        \"formattedDiscountedPrice\": \"$35.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.12\",",
                      " *        \"weight\": 0.25,",
                      " *        \"sku\": \"10001\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    },",
                      " *    {",
                      " *      \"_id\": \"00000000-0000-003f-0005-a316e6ba5b37\",",
                      " *      \"choices\": {",
                      " *        \"Weight\": \"500g\",",
                      " *        \"Ground for\": \"Stovetop\"",
                      " *      },",
                      " *      \"variant\": {",
                      " *        \"currency\": \"USD\",",
                      " *        \"price\": 65,",
                      " *        \"discountedPrice\": 60,",
                      " *        \"pricePerUnit\": 0.24,",
                      " *        \"formattedPrice\": \"$65.00\",",
                      " *        \"formattedDiscountedPrice\": \"$65.00\",",
                      " *        \"formattedPricePerUnit\": \"$0.24\",",
                      " *        \"weight\": 0.5,",
                      " *        \"sku\": \"10002\",",
                      " *        \"visible\": true",
                      " *      }",
                      " *    }",
                      " *  ]",
                      " *",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "openQuickView",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "ID of the product to be displayed in the Quick View." },
            { "name": "options",
              "type": "wix-stores.QuickViewOptions",
              "doc": "Quick View options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the Quick View modal is opened." },
        "locations":
          [ { "lineno": 299,
              "filename": "products.js" } ],
        "docs":
          { "summary": "Opens the [Quick View](https://support.wix.com/en/article/wix-stores-customizing-the-quick-view-in-the-product-gallery) modal of a specified product.",
            "description":
              [ "The `openQuickView()` function returns a Promise that is resolved",
                " when the Quick View modal is opened.",
                "",
                "The quantity input field in the Quick View will be pre-populated with 1, unless otherwise specified in the `options.quantity` field.",
                "",
                "If the product has different [options or variants](https://support.wix.com/en/article/wix-stores-adding-and-customizing-product-options#product-option-faqs),",
                "they will be displayed for selection in the opened Quick View.",
                "",
                ">**Note:**",
                "> This API will fail when viewing the site on mobile because there is no Quick View on the mobile site." ],
            "links": [],
            "examples":
              [ { "title": "Open Quick View modal",
                  "body":
                    [ "import { product } from 'wix-stores';",
                      "",
                      "// ...",
                      "",
                      "export function myButton_click(event) {",
                      "  const productId = \"c329246b-d521-feb4-85f5-539ca992d73a\";",
                      "  product.openQuickView(productId);",
                      "};" ],
                  "extra":
                    {  } },
                { "title": "Open Quick View modal with options",
                  "body":
                    [ "import { product } from 'wix-stores';",
                      "",
                      "// ...",
                      "",
                      "export function myButton_click(event) {",
                      "  const productId = \"c329246b-d521-feb4-85f5-539ca992d73a\";",
                      "  const options = {",
                      "    quantity: 13",
                      "  };",
                      "  product.openQuickView(productId, options);",
                      "};" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }