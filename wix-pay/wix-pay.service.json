{ "name": "wix-pay",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "pay.js" },
  "docs":
    { "summary": "The wix-pay module contains functionality for working with\n payments from client-side code.",
      "description":
        [ "To process payments on your site, first set up your site to accept payments",
          " as described in [About Accepting Payments](https://support.wix.com/en/article/about-accepting-payments).",
          " When setting up your site to accept payments, be sure to select the payment",
          " methods you want to offer and [set your payment currency](https://support.wix.com/en/article/setting-your-currency-for-accepting-payments). ",
          "You can also set up a list of alternative currencies to display your prices in. Use the [currency objects](wix-pay.Currencies.html) and the [currency conversion dropdown element](https://support.wix.com/en/article/adding-and-setting-up-a-currency-converter-in-wix-stores) to set up and display product prices in different currencies.",
          "",
          " ### Typical Payment Lifecycle",
          "",
          " The following list outlines the steps taken in a typical payment lifecycle:",
          "",
          " 1. A site visitor clicks a button to start the payment process.",
          " 1. The button's event handler calls a backend function.",
          " 1. A `PaymentInfo` object containing information about",
          "    the payment, such as the payment amount, is created in the backend function.",
          " 1. The backend function calls [`createPayment()`](wix-pay-backend.html#createPayment) using the",
          "    `PaymentInfo` object and returns the generated",
          "    `Payment` object to the calling client-side event handler.",
          " 1. The event handler then calls the [`startPayment()`](wix-pay.html#startPayment)",
          "    function with the id from the `Payment` object, which opens",
          "    the payment popup on your site.",
          " 1. The site visitor enters the payment information.",
          " 1. The event handler optionally handles the returned `PaymentResult`.",
          " 1. Handle additional status updates to the payment transaction using the",
          "    [`onPaymentUpdate()`](wix-pay-backend.Events.html#onPaymentUpdate) event.",
          "",
          " To use the Pay API, import `wixPay` from the `wix-pay` module:",
          "",
          "   ```javascript",
          "   import wixPay from 'wix-pay';",
          "   ```",
          "",
          "> **Note:**",
          " To work with the Pay API, you need to save and publish your site." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currencies",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-pay.Currencies",
        "locations":
          [ { "lineno": 36,
              "filename": "currencies.js" } ],
        "docs":
          { "summary": "Contains functionality for displaying prices in your store in different currencies, getting exchange rates, and converting between currencies.",
            "description":
              [ "To use the currencies functionality you must upgrade your site to a [Premium Plan](https://support.wix.com/en/article/upgrading-your-site-to-premium-3066683).",
                "",
                "Currencies objects are used to convert from one currency to another, get exchange rates, and manage the currencies you want to work with on your site. The objects can be used with the [currency conversion dropdown](https://support.wix.com/en/article/adding-and-setting-up-a-currency-converter-in-wix-stores) element on your Wix Stores page to display prices in a range of different currencies. Selecting a different currency from the dropdown on a Wix Stores page, automatically updates all of the prices displayed on your store's page to the selected currency. While the currency converter dropdown works with your Wix Stores pages, the Currencies objects can be used on any page.",
                "Currency rates are provided by [XE](https://www.xe.com/company/) and are updated on a daily basis. Rates are provided together with the timestamp when they were set.",
                "",
                " The currency API contains the following objects:",
                "",
                " + Currencies",
                "\t  - Use [`getAllCurrencies()`](wix-pay.Currencies.html#getAllCurrencies) to get a list of all the convertible currencies.",
                "",
                "",
                " + CurrencyConverter",
                "  - Use [`convertAmounts()`](wix-pay.Currencies.CurrencyConverter.html#convertAmounts) to convert amounts between two currencies.",
                "   - Use [`getConversionRate()`](wix-pay.Currencies.CurrencyConverter.html#getConversionRate) to get todayâ€™s conversion rate for a pair of currencies.  ",
                "",
                "",
                " + SiteSettings",
                "   - Set the currencies to appear in your currency conversion dropdown using the backend function [`setCurrencies()`](wix-pay-backend.Currencies.SiteSettings.html#setCurrencies).",
                "   - Use [`getCurrencies()`](wix-pay.Currencies.SiteSettings.html#getCurrencies) to see the list of the currencies that you set.",
                "",
                "   ",
                "",
                "",
                "> **Note:** ",
                "> + The currency converter changes the displayed prices in your store for different currencies but does not change the payment currency. ",
                ">   The payment is always made in the [currency set in your site's dashboard](https://support.wix.com/en/article/setting-your-currency-for-accepting-payments).",
                ">     ",
                ">",
                "> + By using these objects you agree to XE's [Terms of Use.](https://www.xe.com/en/legal/dfs.php)" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "startPayment",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "paymentId",
              "type": "string",
              "doc": "The payment ID returned by `createPayment()` or another app, such as Wix Pricing Plans' [`createOnlineOrder()`](wix-pricing-plans.html#createOnlineOrder)." },
            { "name": "options",
              "type": "wix-pay.PaymentOptions",
              "doc": "Payment process options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pay.PaymentResult" ] },
            "doc": "Fulfilled - The created payment." },
        "locations":
          [ { "lineno": 120,
              "filename": "pay.js" } ],
        "docs":
          { "summary": "Starts a payment.",
            "description":
              [ "Before using the startPayment() function, you will need to set up your site to",
                " accept payments. To learn more, see [About Accepting Payments](https://support.wix.com/en/article/about-accepting-payments).",
                " When setting up your site to accept payments, be sure to select the payment",
                " methods you want to offer and [set your payment currency](https://support.wix.com/en/article/setting-your-currency-for-accepting-payments).",
                "",
                " The `startPayment()` function returns a Promise that resolves to a `PaymentResult`",
                " object when the user completes the payment process. Only use this result for display purposes.",
                " For business decisions, such as updating collection data, use the [`onPaymentUpdate`](wix-pay-backend.Events.html#onPaymentUpdate)",
                " event.",
                "",
                " Starting a payment prompts the user to select a payment method and continue the",
                " payment process with the options specified in the `options` parameter.",
                "",
                " Before calling `startPayment()`, create a payment and generate a value for the `paymentId` parameter. You can do this by calling [`createPayment()`](wix-pay-backend.html#createPayment) from your site's backend.",
                " ",
                " <!-- + Calling [`createPayment()`](wix-pay-backend.html#createPayment) from your site's backend.",
                " + Calling a function from a different app, such as the Wix Pricing Plans' [`createOnlineOrder()`](wix-pricing-plans.html#createOnlineOrder) function.-->",
                "",
                " To understand how `startPayment()` is used in a typical payment lifecycle,",
                " see [Typical Payment Lifecycle](wix-pay/introduction#typical-payment-lifecycle).",
                "",
                " Use the `options` parameter to:",
                "",
                " + Determine whether a user info page is shown at the beginning of the process.",
                " + Determine whether a thank you page is shown at the end of the process.",
                " + Determine whether a terms and conditions affirmation checkbox and link are shown.",
                "",
                "> **Notes:**",
                "> + To work with the Pay API, you need to save and publish your site.",
                ">",
                "> + The backend [`createPayment()`](wix-pay-backend.html#createPayment) function",
                ">   takes a `PaymentInfo` parameter that defines the information for a payment.",
                ">   For security reasons you should always create the `PaymentInfo` object",
                ">   in backend code. Do not pass payment information from client-side code.",
                ">   Doing so opens a vulnerability that a malicious user can exploit to change",
                ">   payment information, such as the price of an item being purchased.",
                ">   To learn more about how to keep your payment code secure, see",
                ">   [Security Considerations When Working with Wix Code](https://support.wix.com/en/article/security-considerations-when-working-with-wix-code#code-visibility)." ],
            "links": [],
            "examples":
              [ { "title": "Start a payment on button click",
                  "body":
                    [ "/**************************",
                      " * backend code - pay.jsw *",
                      " **************************/",
                      "",
                      "import wixPayBackend from 'wix-pay-backend';",
                      "",
                      "export function createMyPayment() {",
                      "  return wixPayBackend.createPayment({",
                      "    items: [{",
                      "      name: \"Product Name\",",
                      "      price: 9.99",
                      "    }],",
                      "    amount: 9.99",
                      "  });",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {createMyPayment} from 'backend/pay';",
                      "import wixPay from 'wix-pay';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  createMyPayment()",
                      "    .then( (payment) => {",
                      "      wixPay.startPayment(payment.id);",
                      "    } );",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Start a payment on button click using quantity",
                  "body":
                    [ "/**************************",
                      " * backend code - pay.jsw *",
                      " **************************/",
                      "",
                      "import wixPayBackend from 'wix-pay-backend';",
                      "",
                      "export function createMyPayment() {",
                      "  return wixPayBackend.createPayment({",
                      "    items: [{",
                      "      name: \"Product Name\",",
                      "      price: 9.99,",
                      "      quantity: 2",
                      "    }],",
                      "    amount: 19.98",
                      "  });",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {createMyPayment} from 'backend/pay';",
                      "import wixPay from 'wix-pay';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  createMyPayment()",
                      "    .then( (payment) => {",
                      "      wixPay.startPayment(payment.id);",
                      "    } );",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Start a payment on button click and handle status possibilities",
                  "body":
                    [ "/**************************",
                      " * backend code - pay.jsw *",
                      " **************************/",
                      "",
                      "import wixPayBackend from 'wix-pay-backend';",
                      "",
                      "export function createMyPayment() {",
                      "  return wixPayBackend.createPayment( {",
                      "    items: [ {",
                      "      name: \"Product Name\",",
                      "      price: 9.99",
                      "    } ],",
                      "    amount: 9.99",
                      "  } );",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {createMyPayment} from 'backend/pay';",
                      "import wixPay from 'wix-pay';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  createMyPayment()",
                      "    .then( (payment) => {",
                      "      wixPay.startPayment(payment.id)",
                      "        .then( (result) => {",
                      "          if (result.status === \"Successful\") {",
                      "            // handle payment success",
                      "          } else if (result.status === \"Failed\") {",
                      "            // handle payment failure",
                      "          } else if (result.status === \"Pending\") {",
                      "            // handle payment pending",
                      "          } else if (result.status === \"Cancelled\") {",
                      "            // handle user closing payment panel",
                      "          }",
                      "        } );",
                      "    } );",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Start a payment on button click with a custom thank you page",
                  "body":
                    [ "/**************************",
                      " * backend code - pay.jsw *",
                      " **************************/",
                      "",
                      "import wixPayBackend from 'wix-pay-backend';",
                      "",
                      "export function createMyPayment() {",
                      "  return wixPayBackend.createPayment({",
                      "    items: [ {",
                      "      name: \"Product Name\",",
                      "      price: 9.99",
                      "    } ],",
                      "    amount: 9.99",
                      "  } );",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {createMyPayment} from 'backend/pay';",
                      "import wixPay from 'wix-pay';",
                      "import wixWindow from 'wix-window';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  createMyPayment()",
                      "    .then( (payment) => {",
                      "      wixPay.startPayment(payment.id, {\"showThankYouPage\": false})",
                      "        .then( (result) => {",
                      "          if (result.status === \"Successful\") {",
                      "            wixWindow.openLightbox(\"Success Box\");",
                      "          } else if (result.status === \"Pending\") {",
                      "            wixWindow.openLightbox(\"Pending Box\");",
                      "          }",
                      "      } );",
                      "    } );",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Start a payment on button click with a terms and conditions link",
                  "body":
                    [ "/**************************",
                      " * backend code - pay.jsw *",
                      " **************************/",
                      "",
                      "import wixPayBackend from 'wix-pay-backend';",
                      "",
                      "export function createMyPayment() {",
                      "  return wixPayBackend.createPayment({",
                      "    items: [{",
                      "      name: \"Product Name\",",
                      "      price: 9.99",
                      "    }],",
                      "    amount: 9.99",
                      "  });",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {createMyPayment} from 'backend/pay';",
                      "import wixPay from 'wix-pay';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  createMyPayment()",
                      "    .then( (payment) => {",
                      "      wixPay.startPayment(payment.id, {",
                      "        \"termsAndConditionsLink\": \"https://mysite.com/terms\"",
                      "      } );",
                      "  } );",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Start a payment on button click using collection data",
                  "body":
                    [ "/**************************",
                      " * backend code - pay.jsw *",
                      " **************************/",
                      "",
                      "import wixData from 'wix-data';",
                      "import wixPayBackend from 'wix-pay-backend';",
                      "",
                      "export async function createMyPayment(productId) {",
                      "  return wixData.get(\"productCollection\", productId)",
                      "    .then( (product) => {",
                      "      return wixPayBackend.createPayment( {",
                      "        items: [{",
                      "          name: product.name,",
                      "          price: product.price",
                      "        }],",
                      "        amount: product.price",
                      "      } );",
                      "    } );",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {createMyPayment} from 'backend/pay';",
                      "import wixPay from 'wix-pay';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  createMyPayment(event.context.itemId)",
                      "    .then( (payment) => {",
                      "      wixPay.startPayment(payment.id);",
                      "    } );",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Start a payment on button click using collection data and a quantity",
                  "body":
                    [ "/**************************",
                      " * backend code - pay.jsw *",
                      " **************************/",
                      "",
                      "import wixData from 'wix-data';",
                      "import wixPayBackend from 'wix-pay-backend';",
                      "",
                      "export async function createMyPayment(productId, quantity) {",
                      "  return wixData.get(\"productCollection\", productId)",
                      "    .then( (product) => {",
                      "      return wixPayBackend.createPayment( {",
                      "        items: [{",
                      "          name: product.name,",
                      "          price: product.price,",
                      "          quantity: quantity",
                      "        }],",
                      "        amount: product.price * quantity",
                      "      } );",
                      "    } );",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      "import {createMyPayment} from 'backend/pay';",
                      "import wixPay from 'wix-pay';",
                      "",
                      "export function myButton_click(event, $w) {",
                      "  let quantity = 2;",
                      "",
                      "  createMyPayment(event.context.itemId, quantity)",
                      "    .then( (payment) => {",
                      "      wixPay.startPayment(payment.id);",
                      "    } );",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Payment",
        "locations":
          [ { "lineno": 64,
              "filename": "pay.js" } ],
        "docs":
          { "summary": "An object representing a payment.",
            "links":
              [ "[startPayment( )](wix-pay.html#startPayment)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Payment transaction ID." },
            { "name": "amount",
              "type": "number",
              "doc": "Payment total amount." },
            { "name": "currency",
              "type": "string",
              "doc": "Payment currency. A three-letter\n [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217) currency code." },
            { "name": "items",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-pay.PaymentItem" ] },
              "doc": "Payment items." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PaymentItem",
        "locations":
          [ { "lineno": 76,
              "filename": "pay.js" } ],
        "docs":
          { "summary": "An object representing a payment item.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Payment item name." },
            { "name": "price",
              "type": "number",
              "doc": "Payment item price." },
            { "name": "quantity",
              "type": "number",
              "doc": "Payment item quantity." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PaymentOptions",
        "locations":
          [ { "lineno": 85,
              "filename": "pay.js" } ],
        "docs":
          { "summary": "An object representing the options of a payment.",
            "links":
              [ "[startPayment( )](wix-pay.html#startPayment)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "termsAndConditionsLink",
              "type": "string",
              "doc": "Absolute URL of a terms and conditions\n page. If a link is present, an agreement checkbox will be presented alongside the link.",
              "optional": true },
            { "name": "showThankYouPage",
              "type": "boolean",
              "doc": "Whether to show a thank you page. Defaults to `true`.",
              "optional": true },
            { "name": "skipUserInfoPage",
              "type": "boolean",
              "doc": "Whether to skip the user info page. Defaults to `false`.\n The page will be skipped only if user info was passed to [`createPayment()`](wix-pay-backend.html#createPayment) as\n a part of the `PaymentInfo` object.",
              "optional": true },
            { "name": "userInfo",
              "type": "wix-pay.PaymentUserInfo",
              "doc": "An object representing information about the user. It will be used to prefill\n user info form during payment process.\n\n Deprecation note: Pass user information to [`createPayment( )`](wix-pay-backend.html#createPayment) instead.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PaymentResult",
        "locations":
          [ { "lineno": 43,
              "filename": "pay.js" } ],
        "docs":
          { "summary": "An object representing a payment result.",
            "links":
              [ "[startPayment( )](wix-pay.html#startPayment)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "payment",
              "type": "wix-pay.Payment",
              "doc": "The payment." },
            { "name": "status",
              "type": "string",
              "doc": "Payment status. One of:\n\n + \"`Successful`\": Payment was successfully received.\n + \"`Pending`\": Payment is pending payment provider approval.\n + \"`Failed`\": Payment has failed.\n + \"`Chargeback`\": Payment is chargeback.\n + \"`Refunded`\": Payment was fully refunded.\n + \"`Offline`\": Payment will be executed offline.\n + \"`PartiallyRefunded`\": Payment was partially refunded.\n + \"`Cancelled`\": Payment was cancelled and was not processed.\n + \"`Undefined`\": Payment status is pending payment provider input." },
            { "name": "transactionId",
              "type": "string",
              "doc": "ID of the payment transaction." },
            { "name": "userInfo",
              "type": "wix-pay.PaymentUserInfo",
              "doc": "An object representing information about the user." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PaymentUserInfo",
        "locations":
          [ { "lineno": 102,
              "filename": "pay.js" } ],
        "docs":
          { "summary": "An object representing information about the user.",
            "links":
              [ "[startPayment( )](wix-pay.html#startPayment)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "firstName",
              "type": "string",
              "doc": "User's first name. Value is `null` if\n there is no first name information." },
            { "name": "lastName",
              "type": "string",
              "doc": "User's last name. Value is `null` if\n there is no last name information." },
            { "name": "country",
              "type": "string",
              "doc": "User's country code. A three-letter\n [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) country code. Value\n is `null` if there is no country information." },
            { "name": "phone",
              "type": "string",
              "doc": "User's phone number. Value is `null` if\n there is no phone number information." },
            { "name": "email",
              "type": "string",
              "doc": "User's email address. Value is `null` if\n there is no email address information." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }