{
  "name": "Tags",
  "memberOf": "wix-blog-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-blog-backend-tag",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "getTag",
      "params": [
        {
          "name": "tagId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.GetTagOptions"
            }
          ],
          "doc": "Options specifying which additional fields to return.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "tagId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-blog-backend.Tags.GetTagResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Gets a tag by the specified ID.",
        "description": [
          "The `getTag()` function returns a Promise that resolves to a tag whose ID matches the specified ID."
        ],
        "examples": [
          {
            "title": "Get a tag by ID ",
            "body": [
              "import { tags } from 'wix-blog-backend';",
              "",
              "/* Sample tagId value:",
              " * '32970480-e53b-46e7-b52f-fba810a0b45d'",
              " */",
              "",
              "export async function getTagFunction(tagId) {",
              "  try {",
              "    const result = await tags.getTag(tagId);",
              "    const label = result.tag.label;",
              "    const postCount = result.tag.postCount;",
              "    console.log('Retrieved result:', result);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "  };",
              "}",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"tag\": {",
              " *     \"_createdDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"_updatedDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"label\": \"my tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"slug\": \"my-tag\",",
              " *     \"translationId\": \"",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Get a tag by ID with additional fields @description:",
            "body": [
              "import { tags } from 'wix-blog-backend';",
              "",
              "/* Sample tagId value:",
              " * '32970480-e53b-46e7-b52f-fba810a0b45d'",
              " *",
              " * Sample options value:",
              " * {",
              " *   fieldsets:",
              " *   [",
              " *     'URL'",
              " *   ]",
              " * }",
              " */",
              "",
              "export async function getTagFunction(tagId, options) {",
              "  try {",
              "    const result = await tags.getTag(tagId, options);",
              "    const label = result.tag.label;",
              "    const postCount = result.tag.postCount;",
              "    const url = result.tag.url;",
              "    console.log('Retrieved result:', result);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"tag\": {",
              " *     \"_createdDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"_updatedDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"label\": \"my tag\",",
              " *     \"language\": \"en\",",
              " *     \"slug\": \"my-tag\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"translationId\": \"\",",
              " *     \"url\": \"http://https://tadasz7.wixsite.com/blog-velo-events/my-blog/tags/my-tag\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false
    },
    {
      "name": "getTagByLabel",
      "params": [
        {
          "name": "label",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag label.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.GetTagByLabelOptions"
            }
          ],
          "doc": "Options specifying which additional fields to return.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "GetTagByLabelRequest",
        "label"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-blog-backend.Tags.GetTagByLabelResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Gets a tag by the specified label.",
        "description": [
          "The `getTagByLabel()` function returns a Promise that resolves to a tag whose label matches the specified label."
        ],
        "examples": [
          {
            "title": "Get a tag by its label ",
            "body": [
              "import { tags } from 'wix-blog-backend';",
              "",
              "/* Sample label value:",
              " * 'my tag'",
              " */",
              "",
              "export async function getTagByLabelFunction(tagId) {",
              "  try {",
              "    const result = await tags.getTagByLabel(tagId);",
              "    const label = result.tag.label;",
              "    const postCount = result.tag.postCount;",
              "    console.log('Retrieved result:', result);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "  };",
              "}",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"tag\": {",
              " *     \"_createdDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"_updatedDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"label\": \"my tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"slug\": \"my-tag\",",
              " *     \"translationId\": \"\"",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Get a tag by its label with additional fields @description:",
            "body": [
              "import { tags } from 'wix-blog-backend';",
              "",
              "/* Sample label value:",
              " * 'my tag'",
              " * Sample options value:",
              " * {",
              " *   fieldsets:",
              " *   [",
              " *     'URL'",
              " *   ]",
              " * }",
              " */",
              "",
              "export async function getTagByLabelFunction(tagId, options) {",
              "  try {",
              "    const result = await tags.getTagByLabel(tagId, options);",
              "    const label = result.tag.label;",
              "    const postCount = result.tag.postCount;",
              "    const url = result.tag.url;",
              "    console.log('Retrieved result:', result);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"tag\": {",
              " *     \"_createdDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"label\": \"my tag\",",
              " *     \"slug\": \"my-tag\",",
              " *     \"_updatedDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"language\": \"en\",",
              " *     \"translationId\": \"\",",
              " *     \"url\": \"http://https://tadasz7.wixsite.com/blog-velo-events/my-blog/tags/my-tag\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false
    },
    {
      "name": "getTagBySlug",
      "params": [
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Slug of the tag to retrieve.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.GetTagBySlugOptions"
            }
          ],
          "doc": "Options specifying which additional fields to return.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "slug"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-blog-backend.Tags.GetTagBySlugResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Gets a tag by the specified slug.",
        "description": [
          "The `getTagBySlug()` function returns a Promise that resolves to a tag whose slug matches the specified slug.\n\nThe `slug` is the end of a tag's URL that refers to a specific tag. For example, if a tag's URL is `https://example.com/blog/tag/{my-tag-slug}`, the slug is `my-tag-slug`. The slug is case-sensitive and derived from the tag's `label`."
        ],
        "examples": [
          {
            "title": "Get a tag by its slug ",
            "body": [
              "import { tags } from 'wix-blog-backend';",
              "",
              "/* Sample slug value:",
              " * 'my-tag'",
              " */",
              "",
              "export async function getTagBySlugFunction(slug) {",
              "  try {",
              "    const result = await tags.getTagBySlug(slug);",
              "    const label = result.tag.label;",
              "    const postCount = result.tag.postCount;",
              "    console.log('Retrieved result:', result);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "}",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"tag\": {",
              " *     \"_createdDate\": \"2022-05-03T10:10:49.499Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"_updatedDate\": \"2022-05-03T10:10:49.499Z\",",
              " *     \"label\": \"my-tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"slug\": \"my-tag\",",
              " *     \"translationId\": \"\"",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Get a tag by its slug with additional fields @description:",
            "body": [
              "import { tags } from 'wix-blog-backend';",
              "",
              "/* Sample slug value:",
              " * 'my-tag'",
              " * Sample options value:",
              " * {",
              " *   fieldsets:",
              " *   [",
              " *     'URL'",
              " *   ]",
              " * }",
              " */",
              "",
              "export async function getTagBySlugFunction(slug, options) {",
              "  try {",
              "    const result = await tags.getTagBySlug(slug, options);",
              "    const label = result.tag.label;",
              "    const postCount = result.tag.postCount;",
              "    const url = result.tag.url;",
              "    console.log('Retrieved result:', result);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"tag\": {",
              " *     \"_createdDate\": \"2022-05-03T10:10:49.499Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"_updatedDate\": \"2022-05-03T10:10:49.499Z\",",
              " *     \"label\": \"my-tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"slug\": \"my-tag\",",
              " *     \"translationId\": \"\",",
              " *     \"url\": \"http://https://tadasz7.wixsite.com/blog-velo-events/my-blog/tags/my-tag\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false
    },
    {
      "name": "queryTags",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.QueryTagsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-blog-backend.Tags.TagsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a query to retrieve a list of tags. ",
        "description": [
          "",
          "",
          "The `queryTags()` function builds a query to retrieve a list of up to 4,000 tags per language, and returns a [`TagsQueryBuilder`](https://www.wix.com/velo/reference/wix-blog-backend/tag/tagsquerybuilder) object.",
          "",
          "The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://www.wix.com/velo/reference/wix-blog-backend/tag/tagsquerybuilder/find) function. ",
          "",
          "You can refine the query by chaining `TagsQueryBuilder` functions onto the query. `TagsQueryBuilder` functions enable you to sort, filter, and control the results that `queryTags()` returns. ",
          "",
          "`queryTags()` runs with these `TagsQueryBuilder` defaults that can be overridden: ",
          "- `limit(50)`",
          "- `ascending('_id')`",
          "",
          "The following `TagQueryBuilder` functions are supported for `queryTags()`. For a full description of the Tags object, see the object returned for the [`items`](https://www.wix.com/velo/reference/wix-blog-backend/tag/tagsqueryresult/items) property in [`TagsQueryResult`](https://www.wix.com/velo/reference/wix-blog-backend/post/queryposts).",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`id`|[`eq()`](wix-blog-backend.Tags.TagsQueryBuilder#eq),[`ne()`](wix-blog-backend.Tags.TagsQueryBuilder#ne)|",
          "|`label`|[`eq()`](wix-blog-backend.Tags.TagsQueryBuilder#eq),[`ne()`](wix-blog-backend.Tags.TagsQueryBuilder#ne),[`startsWith()`](wix-blog-backend.Tags.TagsQueryBuilder#startsWith),[`ascending()`](wix-blog-backend.Tags.TagsQueryBuilder#ascending),[`descending()`](wix-blog-backend.Tags.TagsQueryBuilder#descending)|",
          "|`slug`|[`eq()`](wix-blog-backend.Tags.TagsQueryBuilder#eq),[`ne()`](wix-blog-backend.Tags.TagsQueryBuilder#ne),[`startsWith()`](wix-blog-backend.Tags.TagsQueryBuilder#startsWith),[`ascending()`](wix-blog-backend.Tags.TagsQueryBuilder#ascending),[`descending()`](wix-blog-backend.Tags.TagsQueryBuilder#descending)|",
          "|`publicationCount`|[`eq()`](wix-blog-backend.Tags.TagsQueryBuilder#eq),[`ne()`](wix-blog-backend.Tags.TagsQueryBuilder#ne),[`lt()`](wix-blog-backend.Tags.TagsQueryBuilder#lt),[`le()`](wix-blog-backend.Tags.TagsQueryBuilder#le),[`gt()`](wix-blog-backend.Tags.TagsQueryBuilder#gt),[`ge()`](wix-blog-backend.Tags.TagsQueryBuilder#ge),[`ascending()`](wix-blog-backend.Tags.TagsQueryBuilder#ascending),[`descending()`](wix-blog-backend.Tags.TagsQueryBuilder#descending)|",
          "|`postCount`|[`eq()`](wix-blog-backend.Tags.TagsQueryBuilder#eq),[`ne()`](wix-blog-backend.Tags.TagsQueryBuilder#ne),[`lt()`](wix-blog-backend.Tags.TagsQueryBuilder#lt),[`le()`](wix-blog-backend.Tags.TagsQueryBuilder#le),[`gt()`](wix-blog-backend.Tags.TagsQueryBuilder#gt),[`ge()`](wix-blog-backend.Tags.TagsQueryBuilder#ge),[`ascending()`](wix-blog-backend.Tags.TagsQueryBuilder#ascending),[`descending()`](wix-blog-backend.Tags.TagsQueryBuilder#descending)|",
          "|`translationId`|[`eq()`](wix-blog-backend.Tags.TagsQueryBuilder#eq),[`ne()`](wix-blog-backend.Tags.TagsQueryBuilder#ne)|",
          "|`language`|[`eq()`](wix-blog-backend.Tags.TagsQueryBuilder#eq),[`ne()`](wix-blog-backend.Tags.TagsQueryBuilder#ne),[`ascending()`](wix-blog-backend.Tags.TagsQueryBuilder#ascending),[`descending()`](wix-blog-backend.Tags.TagsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "Retrieves a list of all tags ",
            "body": [
              "import { tags } from 'wix-blog-backend';",
              "",
              "export async function queryTagsFunction() {",
              "  try {",
              "    const queryTagsResults = await tags.queryTags().find();",
              "    const items = queryTagsResults.items;",
              "    const firstItem = items[0];",
              "    const pageSize = queryTagsResults.pageSize;",
              "    const hasNext = queryTagsResults.hasNext();",
              "    const hasPrev = queryTagsResults.hasPrev();",
              "    const length = queryTagsResults.length;",
              "    const query = queryTagsResults.query;",
              "    return items;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "}",
              "",
              "",
              "/* Returns:",
              " * [",
              " *   {",
              " *     \"_createdDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"_updatedDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"label\": \"my tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"slug\": \"my-tag\",",
              " *     \"translationId\": \"\"",
              " *   },",
              " *   {",
              " *     \"_createdDate\": \"2022-07-21T14:52:58.099Z\",",
              " *     \"_id\": \"6a67d2ea-b758-49f1-a2bd-cce214246809\",",
              " *     \"_updatedDate\": \"2022-07-21T14:52:58.099Z\",",
              " *     \"label\": \"your tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 2,",
              " *     \"publishedPostCount\": 2,",
              " *     \"slug\": \"your-tag\",",
              " *     \"translationId\": \"\"",
              " *   }",
              " *   {",
              " *     \"_createdDate\": \"2022-07-22T09:27:45.883Z\",",
              " *     \"_id\": \"28230621-702d-4dab-af68-7a2a9b152fae\",",
              " *     \"_updatedDate\": \"2022-07-22T09:27:45.883Z\",",
              " *     \"label\": \"their tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 3,",
              " *     \"publishedPostCount\": 3,",
              " *     \"slug\": \"their-tag\",",
              " *     \"translationId\": \"\"",
              " *   },",
              " * ]",
              " */"
            ],
            "extra": {
              "description": "This example uses the `queryTags()` function to retrieve all tags. "
            }
          },
          {
            "title": "Query for tags with filters. ",
            "body": [
              "import { tags } from wix-blog-backend;",
              "",
              "export async function queryTagsFunction() {",
              "  try {",
              "    const queryTagsResults = await tags.queryTags()",
              "    .lt('postCount', 3)",
              "    .find();",
              "    const items = queryTagsResults.items;",
              "    const firstItem = items[0];",
              "    const pageSize = queryTagsResults.pageSize;",
              "    const hasNext = queryTagsResults.hasNext();",
              "    const hasPrev = queryTagsResults.hasPrev();",
              "    const length = queryTagsResults.length;",
              "    const query = queryTagsResults.query;",
              "    return items;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "}",
              "",
              "",
              "/* Returns:",
              " * [",
              " *   {",
              " *     \"_createdDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"_id\": \"32970480-e53b-46e7-b52f-fba810a0b45d\",",
              " *     \"_updatedDate\": \"2022-07-19T10:30:03.607Z\",",
              " *     \"label\": \"my tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 1,",
              " *     \"publishedPostCount\": 1,",
              " *     \"slug\": \"my-tag\",",
              " *     \"translationId\": \"\"",
              " *   },",
              " *   {",
              " *     \"_createdDate\": \"2022-07-21T14:52:58.099Z\",",
              " *     \"_id\": \"6a67d2ea-b758-49f1-a2bd-cce214246809\",",
              " *     \"_updatedDate\": \"2022-07-21T14:52:58.099Z\",",
              " *     \"label\": \"your tag\",",
              " *     \"language\": \"en\",",
              " *     \"postCount\": 2,",
              " *     \"publishedPostCount\": 2,",
              " *     \"slug\": \"your-tag\",",
              " *     \"translationId\": \"\"",
              " *   }",
              " * ]",
              " */"
            ],
            "extra": {
              "description": "This example uses the `queryTags()` function to retrieve all tags with a `postCount` less than 3."
            }
          }
        ]
      },
      "isVeloEvent": false
    }
  ],
  "messages": [
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": ""
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateTagsOptions",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "returnFullEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full created tag entities in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateTagsRequest",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "returnFullEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full created tag entities in the response."
        },
        {
          "name": "tags",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.Tag"
                  }
                ]
              }
            }
          ],
          "doc": "Tags to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateTagsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.BulkTagResult"
                  }
                ]
              }
            }
          ],
          "doc": "Tags created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkTagResult",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Optional created tag."
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.ItemMetadata"
            }
          ],
          "doc": "Bulk actions metadata for tag."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTagOptions",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included in the response if the entities are present.\nBase default fieldset returns all core tag properties (all properties that are not a supported fieldset value).\nFor example,  when `URL` fieldset is selected, returned tag will include the set of base properties and the tag's preview url."
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language.\n\n2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Preferred tag slug. For example, 'tag-slug'."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTagRequest",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included in the response if the entities are present.\nBase default fieldset returns all core tag properties (all properties that are not a supported fieldset value).\nFor example,  when `URL` fieldset is selected, returned tag will include the set of base properties and the tag's preview url."
        },
        {
          "name": "label",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag label. Unique per blog."
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language.\n\n2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Preferred tag slug. For example, 'tag-slug'."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTagResponse",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Tag info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTagRequest",
      "members": [
        {
          "name": "tagId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTagResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateTagOptions",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateTagRequest",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "label",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag name. Unique per blog."
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateTagResponse",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Tag info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagByLabelOptions",
      "members": [
        {
          "name": "fieldsToInclude",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Reserved for internal use."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of additional tag fields to be included in the response. By default, any fields not passed are not returned.\n\nSupported Values:\n `\"URL\"`\n"
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language.\n2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagByLabelRequest",
      "members": [
        {
          "name": "fieldsToInclude",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "__Deprecated.__ Use `fieldsets` instead.\nThis parameter will be removed on June 30, 2023.\n\nList of tag fields to be included in the response.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included in the response if the entities are present.\nBase default fieldset returns all core tag properties (all properties that are not a supported fieldset value).\nFor example,  when `URL` fieldset is selected, returned tag will include the set of base properties and the tag's preview url."
        },
        {
          "name": "label",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag label."
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language.\n2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagByLabelResponse",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Tag info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagBySlugOptions",
      "members": [
        {
          "name": "fieldsToInclude",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Reserved for internal use."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of additional tag fields to be included in the response. By default, any fields not passed are not returned.\n\nSupported Values:\n `\"URL\"`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagBySlugRequest",
      "members": [
        {
          "name": "fieldsToInclude",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "__Deprecated.__ Use `fieldsets` instead.\nThis parameter will be removed on June 30, 2023.\n\nList of tag fields to be included in the response.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included in the response if the entities are present.\nBase default fieldset returns all core tag properties (all properties that are not a supported fieldset value).\nFor example,  when `URL` fieldset is selected, returned tag will include the set of base properties and the tag's preview url."
        },
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Slug of the tag to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagBySlugResponse",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Tag info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagOptions",
      "members": [
        {
          "name": "fieldsToInclude",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Reserved for internal use."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of additional tag fields to be included in the response. By default, any fields not passed are not returned.\n\nSupported Values:\n `\"URL\"`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagRequest",
      "members": [
        {
          "name": "fieldsToInclude",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "__Deprecated.__ Use `fieldsets` instead.\nThis parameter will be removed on June 30, 2023.\n\nList of tag fields to be included in the response.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included in the response if the entities are present.\nBase default fieldset returns all core tag properties (all properties that are not a supported fieldset value).\nFor example,  when `URL` fieldset is selected, returned tag will include the set of base properties and the tag's preview url."
        },
        {
          "name": "tagId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTagResponse",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Tag info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InitialTagsCopied",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of tags copied."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListTagsOptions",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `sort`."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListTagsRequest",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `sort`."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfListTagsRequestPagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListTagsRequestPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListTagsResponse",
      "members": [
        {
          "name": "metaData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.MetaData"
            }
          ],
          "doc": "Details on the paged set of results returned."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.Tag"
                  }
                ]
              }
            }
          ],
          "doc": "List of tags."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MetaData",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in this response."
        },
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Requested offset."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PlatformQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfPlatformQueryPagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PlatformQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTagsOptions",
      "members": [
        {
          "name": "fieldSet",
          "type": [
            {
              "nativeType": "undefined"
            },
            {
              "referenceType": "wix-blog-backend.Tags.TagsFieldSet"
            }
          ],
          "doc": ""
        },
        {
          "name": "fieldsToInclude",
          "type": [
            {
              "nativeType": "undefined"
            },
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Field"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "fieldsets",
          "type": [
            {
              "nativeType": "undefined"
            },
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Field"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "undefined"
            },
            {
              "nativeType": "Object"
            }
          ],
          "doc": ""
        },
        {
          "name": "paging",
          "type": [
            {
              "nativeType": "undefined"
            },
            {
              "referenceType": "wix-blog-backend.Tags.Paging"
            }
          ],
          "doc": ""
        },
        {
          "name": "sort",
          "type": [
            {
              "nativeType": "undefined"
            },
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Sorting"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTagsRequest",
      "members": [
        {
          "name": "fieldsToInclude",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "__Deprecated.__ Use `fieldsets` instead.\nThis parameter will be removed on June 30, 2023.\n\nList of tag fields to be included in the response.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included in the response if the entities are present.\nBase default fieldset returns all core tag properties (all properties that are not a supported fieldset value).\nFor example,  when `URL` fieldset is selected, returned tag will include the set of base properties and the tag's preview url."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "__Deprecated.__ Use `query` instead.\nThis parameter will be removed on June 30, 2023.\n\nFilter object.\nFor a detailed list of supported filters, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Paging"
            }
          ],
          "doc": "__Deprecated.__ Use `query` instead.\nThis parameter will be removed on June 30, 2023.\n\nPagination options.\n"
        },
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.PlatformQuery"
            }
          ],
          "doc": "Query options."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "__Deprecated.__ Use `query` instead.\nThis parameter will be removed on June 30, 2023.\n\nSorting options. For a list of sortable fields, see [Field Support for Filtering and Sorting](https://dev.wix.com/api/rest/community/blog/filter-and-sort).\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTagsResponse",
      "members": [
        {
          "name": "metaData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.MetaData"
            }
          ],
          "doc": "__Deprecated.__ Use `pagingMetadata` instead.\nThis property will be removed on June 30, 2023.\n\nDetails on the paged set of results returned.\n"
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.PagingMetadataV2"
            }
          ],
          "doc": "Details on the paged set of results returned."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-blog-backend.Tags.Tag"
                  }
                ]
              }
            }
          ],
          "doc": "List of tags."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Tag",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date the tag was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date the tag was updated."
        },
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag label.\n\nA blog cannot have two tags with the same label.\n"
        },
        {
          "name": "language",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language.\n\n2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format."
        },
        {
          "name": "postCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of posts with this tag, including unpublished draft posts."
        },
        {
          "name": "publicationCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Reserved for internal use."
        },
        {
          "name": "publishedPostCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of published posts with this tag."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Part of a tag's URL that refers to a specific tag.\n\nFor example, `'https:/example.com/tags/{my-tag-slug}'`.\n"
        },
        {
          "name": "translationId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the tag's translations when [Wix Multilingual](https://support.wix.com/en/article/wix-multilingual-translating-your-blog) is installed on a site. All translations of a single tag will share the same `translationId`."
        },
        {
          "name": "url",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag URL.\n\nThe `url` directs you to a page that lists every post with the specified tag."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TagsFieldSet",
      "members": [
        {
          "name": "includeUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Includes tag URL when TRUE. Defaults to FALSE."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTag",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date the tag was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date the tag was updated."
        },
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag label.\n\nA blog cannot have two tags with the same label.\n"
        },
        {
          "name": "language",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag language.\n\n2-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format."
        },
        {
          "name": "postCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of posts with this tag, including unpublished draft posts."
        },
        {
          "name": "publicationCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Reserved for internal use."
        },
        {
          "name": "publishedPostCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of published posts with this tag."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Part of a tag's URL that refers to a specific tag.\n\nFor example, `'https:/example.com/tags/{my-tag-slug}'`.\n"
        },
        {
          "name": "translationId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the tag's translations when [Wix Multilingual](https://support.wix.com/en/article/wix-multilingual-translating-your-blog) is installed on a site. All translations of a single tag will share the same `translationId`."
        },
        {
          "name": "url",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag URL.\n\nThe `url` directs you to a page that lists every post with the specified tag."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTagOptions",
      "members": [
        {
          "name": "fieldMask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Field mask of fields to update."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "tag",
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.UpdateTag"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTagRequest",
      "members": [
        {
          "name": "fieldMask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Field mask of fields to update."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of tag fields to be included if entities are present in the response.\nBase fieldset, which is default, will return all core tag properties.\nExample: When URL fieldset is selected, returned tag will have a set of base properties and tag url."
        },
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Tag info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTagResponse",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-blog-backend.Tags.Tag"
            }
          ],
          "doc": "Tag info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
