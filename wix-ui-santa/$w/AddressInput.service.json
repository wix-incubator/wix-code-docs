{ "name": "AddressInput",
  "memberOf": "$w",
  "mixes":
    [ "$w.LabelMixin",
      "$w.FormElement",
      "$w.DisabledMixin",
      "$w.RequiredMixin",
      "$w.ReadOnlyMixin",
      "$w.HiddenCollapsedMixin",
      "$w.FocusMixin",
      "$w.ClickableMixin" ],
  "labels": [],
  "location":
    { "lineno": 50,
      "filename": "AddressInput.js" },
  "docs":
    { "summary": "`AddressInput` is used for entering addresses. It lets users type\nan address, and suggests exact locations using Google Maps services.",
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "filter",
        "labels": [],
        "get": true,
        "set": true,
        "type": "$w.AddressInput.AddressFilter",
        "locations":
          [ { "lineno": 151,
              "filename": "AddressInput.js" },
            { "lineno": 170,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "Sets or gets the filter of the address input.",
            "description":
              [ "The `filter` property restricts address input suggestions to addresses within",
                "the country specified in the `AddressFilter` object.",
                "Countries must be specified using [ISO_3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)country codes." ],
            "links": [],
            "examples":
              [ { "title": "Get an address input's filter",
                  "body":
                    [ "let filter = $w(\"#myAddressInput\").filter;",
                      "",
                      "/*",
                      " *  {",
                      " *    \"country\": \"AUS\" // Australia",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set an address input's filter",
                  "body":
                    [ "let filter = {",
                      "  \"country\": \"AUS\" // Australia",
                      "};",
                      "",
                      "$w(\"#myAddressInput\").filter = filter;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "placeholder",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 125,
              "filename": "AddressInput.js" },
            { "lineno": 144,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "Sets or gets the placeholder of the address input.",
            "description":
              [ "Placeholder text is typically used to provide a hint to the user",
                "describing what the input is for. When the user chooses an address,",
                "the placeholder text is replaced by the `formatted` value of the address." ],
            "links": [],
            "examples":
              [ { "title": "Get an address input's placeholder",
                  "body":
                    [ "let placeholderText = $w(\"#myAddressInput\").placeholder; // \"Enter address\"" ],
                  "extra":
                    {  } },
                { "title": "Set an address input's placeholder",
                  "body":
                    [ "$w(\"#myAddressInput\").placeholder = \"Enter address\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "value",
        "labels": [],
        "get": true,
        "set": true,
        "type": "$w.AddressInput.Address",
        "locations":
          [ { "lineno": 70,
              "filename": "AddressInput.js" },
            { "lineno": 118,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "Sets or gets the value of the address input.",
            "description":
              [ "The value of an address input is an object of type `Address`.",
                "",
                " The `Address` object's data will differ depending on the site visitor's input method:",
                "",
                "   + Site visitor enters free text in the address input: Only the `Address.formatted` property will contain data.",
                "   + Site visitor selects one of the Google address suggestions: The `Address.formatted` property and all relevant `Address` properties that correspond to the selected Google address will contain data.",
                "",
                "",
                " You cannot modify the `value` object in-place. To change the value",
                " of an address input, do the following:",
                "",
                "   1. Store the `value` object's data in a variable.",
                "   1. Make changes to the object.",
                "   1. Reset the `value` property with the modified object.",
                "",
                "",
                " > **Notes:**",
                " >",
                " >",
                " > - If an address input is connected to a dataset, setting the address input's `value`",
                " >   in code does not set the value of the connected field in the dataset.",
                " >   That means if you use the dataset to perform a submit, the value changed",
                " >   in code is not reflected in the submitted item.",
                " >",
                " >",
                " > - To submit the new value using a dataset, set the field's value using the",
                " >   [`setFieldValue()`](wix-dataset.html#setFieldValue) function before",
                " >   performing the submit." ],
            "links": [],
            "examples":
              [ { "title": "Get an address input's value",
                  "body":
                    [ "let address = $w(\"#myAddressInput\").value;",
                      "",
                      "/*  {",
                      " *    \"formatted\":\"500 Terry A Francois Blvd, San Francisco, CA 94158, USA\",",
                      " *    \"location\": {",
                      " *      \"latitude\": 37.7703718,",
                      " *      \"longitude\": -122.38712479999998",
                      " *    },",
                      " *    \"streetAddress\": {",
                      " *      \"name\":  \"Terry A Francois Blvd\",",
                      " *      \"number\": \"500\"",
                      " *    },",
                      " *    \"city\": \"SF\",",
                      " *    \"subdivision\": \"CA\",",
                      " *    \"country\": \"US\",",
                      " *    \"postalCode\": \"94158\"",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set an address input's value",
                  "body":
                    [ "let address =",
                      "  {",
                      "    \"formatted\":\"500 Terry A Francois Blvd, San Francisco, CA 94158, USA\",",
                      "    \"location\": {",
                      "      \"latitude\": 37.7703718,",
                      "      \"longitude\": -122.38712479999998",
                      "      },",
                      "      \"streetAddress\": {",
                      "        \"name\":  \"Terry A Francois Blvd\",",
                      "        \"number\": \"500\"",
                      "      },",
                      "      \"city\": \"SF\",",
                      "      \"subdivision\": \"CA\",",
                      "      \"country\": \"US\",",
                      "      \"postalCode\": \"94158\"",
                      "  }",
                      "",
                      "$w(\"#myAddressInput\").value = address;" ],
                  "extra":
                    {  } },
                { "title": "Set an address input's value using the \"formatted\" property",
                  "body":
                    [ "let address =",
                      "  {",
                      "    \"formatted\": \"500 Terry A Francois Blvd, San Francisco, CA 94158, USA\"",
                      "  }",
                      "",
                      "$w(\"#myAddressInput\").value = address;" ],
                  "extra":
                    {  } },
                { "title": "Edit an address input's value",
                  "body":
                    [ "let address = $w(\"#myAddressInput\").value;",
                      "address.postalCode = \"94158\";",
                      "$w(\"#myAddressInput\").value = address;",
                      "" ],
                  "extra":
                    { "description": "This example retrieves the value of an address input, adds a postal code to the address, and then overwrites the old value." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onCustomValidation",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "validator",
              "type": "$w.AddressInput.AddressInputValidator",
              "doc": "The name of the function or\n the function expression to run when the element's custom validation is checked." },
            { "name": "override",
              "type": "boolean",
              "doc": "When `true`, overrides any existing custom validations set for the element so that only the current custom validation applies. \n\nWhen `false`, the current custom validation is added to the previously applied validations and all of them run. The order of execution follows the order the validations were set. \nIf one of the validations rejects, the rest of the validations won't run. \n\nDefaults to `true`, so that omitting the `override` property causes the current custom validation to override any other validations. \nIf multiple validations are set to override explicitly or by default, only the last applied validation will run.\n\nFor example, if you add 4 custom validations to an element and set the `override` parameter to `false`, `true`, `false`, `false` respectively, the first validation won't run\nand the remaining validations will run. This is because the second validation overrides the first.",
              "optional": true } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 176,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element's validation is checked.",
            "description":
              [ "The `onCustomValidation()` function allows you perform custom validation",
                " in addition to any basic validation that was defined in the Editor.",
                "",
                " To invalidate the element, call the `reject()` function that is passed",
                " into the `validator` callback function and pass it a validation message.",
                "",
                " The element's validity is checked when the value of the element",
                " changes either by user interaction or programmatically.",
                "",
                " Note that validations other than **required**, including custom validations,",
                " are not run on input elements when they don't have a value.",
                "",
                " You can use the `override` parameter to override previously applied custom validations." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks":
    [ { "name": "AddressInputValidator",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "value",
              "type": "$w.AddressInput.Address",
              "doc": "The value of the element being validated." },
            { "name": "reject",
              "type": "Function",
              "doc": "A function that invalidates the element with the specified message." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 214,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "Function that runs when custom validation is checked.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "messages":
    [ { "name": "Address",
        "locations":
          [ { "lineno": 21,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "An object representing a physical address.",
            "links":
              [ "[value](#value)" ],
            "examples":
              [ { "title": "Get an address input's value",
                  "body":
                    [ "let address = $w(\"#myAddressInput\").value;",
                      "",
                      "/*  {",
                      " *    \"formatted\":\"500 Terry A Francois Blvd, San Francisco, CA 94158, USA\",",
                      " *    \"location\": {",
                      " *      \"latitude\": 37.7703718,",
                      " *      \"longitude\": -122.38712479999998",
                      " *    },",
                      " *    \"streetAddress\": {",
                      " *      \"name\":  \"Terry A Francois Blvd\",",
                      " *      \"number\": \"500\"",
                      " *    },",
                      " *    \"city\": \"SF\",",
                      " *    \"subdivision\": \"CA\",",
                      " *    \"country\": \"US\",",
                      " *    \"postalCode\": \"94158\"",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set an address input's value",
                  "body":
                    [ "let address =",
                      "  {",
                      "    \"formatted\": \"500 Terry A Francois Blvd, San Francisco, CA 94158, USA\"",
                      "  }",
                      "",
                      "$w(\"#myAddressInput\").value = address;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "formatted",
              "type": "string",
              "doc": "Address in human-readable format. The formatted address is displayed in the address input element." },
            { "name": "location",
              "type": "$w.AddressInput.AddressLocation",
              "doc": "Address coordinates.",
              "optional": true },
            { "name": "streetAddress",
              "type": "$w.AddressInput.StreetAddress",
              "doc": "Address street name and number.",
              "optional": true },
            { "name": "city",
              "type": "string",
              "doc": "Address city.",
              "optional": true },
            { "name": "subdivision",
              "type": "string",
              "doc": "Address subdivision of a country, such as a state or province.",
              "optional": true },
            { "name": "country",
              "type": "string",
              "doc": "Address country.",
              "optional": true },
            { "name": "postalCode",
              "type": "string",
              "doc": "Address postal code.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddressFilter",
        "locations":
          [ { "lineno": 37,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "An object containing a filter for filtering address suggestions\nin an address input. Suggestions are restricted to addresses within\nthe specified country.\n> **Note:** Currently only filtering by country is supported.",
            "links":
              [ "[filter](#filter)" ],
            "examples":
              [ { "title": "Get an address input's filter",
                  "body":
                    [ "let filter = $w(\"#myAddressInput\").filter;",
                      "",
                      "/*",
                      " *  {",
                      " *    \"country\": \"AUS\" // Australia",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set an address input's filter",
                  "body":
                    [ "let filter = {",
                      "  \"country\": \"AUS\" // Australia",
                      "};",
                      "",
                      "$w(\"#myAddressInput\").filter = filter;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "country",
              "type": "string",
              "doc": "[ISO_3166](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddressLocation",
        "locations":
          [ { "lineno": 1,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "An object containing the coordinates of an address.",
            "links":
              [ "[value](#value)" ],
            "examples":
              [ { "title": "Get an address's location",
                  "body":
                    [ "let location = $w(\"#myAddressInput\").value.location;",
                      "",
                      "/*",
                      " *  {",
                      " *    \"latitude\": 37.7703718,",
                      " *    \"longitude\": -122.38712479999998",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "latitude",
              "type": "number",
              "doc": "Address latitude." },
            { "name": "longitude",
              "type": "number",
              "doc": "Address longitude." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "StreetAddress",
        "locations":
          [ { "lineno": 11,
              "filename": "AddressInput.js" } ],
        "docs":
          { "summary": "An object containing the street name and number of an address.",
            "links":
              [ "[value](#value)" ],
            "examples":
              [ { "title": "Get an address's street address",
                  "body":
                    [ "let street = $w(\"#myAddressInput\").value.streetAddress;",
                      "",
                      "/*",
                      " *  {",
                      " *    \"name\":  \"Terry A Francois Blvd\",",
                      " *    \"number\": \"500\"",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Street name." },
            { "name": "number",
              "type": "string",
              "doc": "Street number.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true } }