{ "name": "Switch",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.DisabledMixin",
      "$w.HiddenCollapsedMixin",
      "$w.FocusMixin",
      "$w.ClickableMixin",
      "$w.ValueMixin",
      "$w.CheckedMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "Switch.js" },
  "docs":
    { "summary": "[Switches](https://support.wix.com/en/article/adding-and-setting-up-a-switch-element) are used for a single binary choice.",
      "description":
        [ "[Switches](https://support.wix.com/en/article/adding-and-setting-up-a-switch-element) are used for a single binary choice." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "accessibility",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.Switch.Accessibility",
        "locations":
          [ { "lineno": 69,
              "filename": "Switch.js" } ],
        "docs":
          { "summary": "Sets and gets the [Accessible Rich Internet Application (ARIA) attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes) and other accessibility properties for the element.",
            "description":
              [ "ARIA attributes are a set of properties that define ways to make web content and applications more accessible to people with disabilities. The properties provide additional information about the structure, behavior, and state of elements to assistive technologies such as screen readers, braille displays, and voice control software. ",
                "",
                "Set the accessibility properties to design your elements to be more inclusive and usable for visitors with visual, auditory, motor, and or cognitive disabilities. The accessibility object primarily affects how assistive technologies read and present site content. ARIA attributes themselves do not impact SEO, but other accessibility properties, such as `lang`, can influence content indexing and discoverability.",
                "",
                ">**Note:** Incorrect use of ARIA attributes can worsen accessibility for assistive technology users. Use carefully and test with assistive technologies. ",
                "",
                "Learn more about [ARIA attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA)." ],
            "links": [],
            "examples":
              [ { "title": "Set the accessibility properties of an element",
                  "body":
                    [ "$w('#myToggleSwitch').accessibility.lang = 'en';" ],
                  "extra":
                    {  } },
                { "title": "Get the accessibility properties of an element",
                  "body":
                    [ "const myToggleSwitchAccessibility = $w('#myToggleSwitch').accessibility;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "checked",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 20,
              "filename": "Switch.js" },
            { "lineno": 40,
              "filename": "Switch.js" } ],
        "docs":
          { "summary": "Sets or gets whether a switch is on or off.",
            "description":
              [ "Setting the `checked` property to `true` toggles the switch to the on",
                " position. Setting it to `false` toggles the switch to the off position.",
                "",
                " Getting the `checked` property returns whether the switch is on or off." ],
            "links": [],
            "examples":
              [ { "title": "Get whether a switch is toggled on or off",
                  "body":
                    [ "let isChecked = $w(\"#mySwitch\").checked;  // true" ],
                  "extra":
                    {  } },
                { "title": "Set a switch to be toggled on",
                  "body":
                    [ "$w(\"#mySwitch\").checked = true;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "customClassList",
        "labels":
          [ "new" ],
        "get": true,
        "set": false,
        "type": "$w.CustomClassList",
        "locations":
          [ { "lineno": 111,
              "filename": "Switch.js" } ],
        "docs":
          { "summary": "A property that represents an element's custom CSS classes.",
            "description":
              [ "> This property is only available to Wix Studio users.",
                "",
                "The `customClassList` property allows you to manipulate the CSS classes of an element. Use it to add, remove, or check for CSS classes that were defined in the Wix Studio Styles panel." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "value",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 44,
              "filename": "Switch.js" } ],
        "docs":
          { "summary": "**Note: This standard element property is not relevant for Switch. Use [`checked`](#checked) instead.**",
            "description":
              [ "The `value` property's type depends on the element implementing it.",
                "",
                "> **Notes:**",
                "> + Changing an element's `value` in code does not trigger an `onChange` event.",
                ">",
                ">",
                "> + If an element is connected to a dataset, setting the element's `value`",
                ">   in code does not set the value of the connected field in the dataset.",
                ">   That means if you use the dataset to perform a submit, the value changed",
                ">   in code is not reflected in the submitted item.",
                ">",
                ">",
                "> + To submit the new value using a dataset, set the field's value using the",
                ">   [`setFieldValue()`](https://dev.wix.com/docs/velo/api-reference/$w/dataset/set-field-value) function before",
                ">   performing the submit." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages":
    [ { "name": "Accessibility",
        "locations":
          [ { "lineno": 98,
              "filename": "Switch.js" } ],
        "docs":
          { "summary": "An object containing attributes to make your Wix elements more accessible.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "lang",
              "type": "string",
              "doc": "Specifies the language of the element's content, enhancing pronunciation accuracy for screen readers and other assistive technologies. \n\nSetting the `lang` property improves multilingual support by ensuring that assistive technologies apply the correct linguistic rules and speech patterns. It also enables search engines to index the element's content accurately, resulting in better visibility and relevance in search results for better SEO optimization. \n\nThe `lang` property's value must be a 2-letter language code in [ISO 639-1 format](https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes). For example, `\"en\"` for english.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true },
  "relatedGuides":
    [ { "path": "./switch/guides/CSS Classes.md" } ] }