{ "name": "RatingsDisplay",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.ClickableMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "RatingsDisplay.js" },
  "docs":
    { "summary": "A [ratings display](https://support.wix.com/en/article/content-manager-adding-and-setting-up-a-ratings-display-element) \nelement allows you to display a value to your users\n using icons.",
      "description":
        [ "A [ratings display](https://support.wix.com/en/article/content-manager-adding-and-setting-up-a-ratings-display-element) element allows you to display a value to your users using icons." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "accessibility",
        "labels":
          [ "new" ],
        "get": true,
        "set": false,
        "type": "$w.RatingsDisplay.Accessibility",
        "locations":
          [ { "lineno": 88,
              "filename": "RatingsDisplay.js" } ],
        "docs":
          { "summary": "Sets and gets the [Accessible Rich Internet Application (ARIA) attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes) and other accessibility properties for the element.",
            "description":
              [ "ARIA attributes are a set of properties that define ways to make web content and applications more accessible to people with disabilities. The properties provide additional information about the structure, behavior, and state of elements to assistive technologies such as screen readers, braille displays, and voice control software. ",
                "",
                "Set the accessibility properties to design your elements to be more inclusive and usable for visitors with visual, auditory, motor, and or cognitive disabilities. The accessibility object primarily affects how assistive technologies read and present site content. ARIA attributes themselves do not impact SEO, but other accessibility properties, such as `lang`, can influence content indexing and discoverability.",
                "",
                ">**Note:** Incorrect use of ARIA attributes can worsen accessibility for assistive technology users. Use carefully and test with assistive technologies. ",
                "",
                "Learn more about [ARIA attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA)." ],
            "links": [],
            "examples":
              [ { "title": "Set the accessibility properties of an element",
                  "body":
                    [ "$w('#myRatingsDisplay').accessibility.lang = 'en';" ],
                  "extra":
                    {  } },
                { "title": "Get the accessibility properties of an element",
                  "body":
                    [ "const myRatingsDisplayAccessibility = $w('#myRatingsDisplay').accessibility;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "numRatings",
        "labels": [],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 57,
              "filename": "RatingsDisplay.js" },
            { "lineno": 80,
              "filename": "RatingsDisplay.js" } ],
        "docs":
          { "summary": "Sets or gets the displayed number of ratings.",
            "description":
              [ "Setting the `numRatings` property sets the displayed number of ratings,",
                " usually used to indicate how many ratings have been collected, if the",
                " element is set to show the number of ratings.",
                "",
                " Set the `numRatings` value to a non-negative number.",
                "",
                " Getting the `numRatings` property returns the current number of ratings." ],
            "links": [],
            "examples":
              [ { "title": "Get the displayed rating",
                  "body":
                    [ "let numRatings = $w(\"#myRatingsDisplay\").numRatings; // 97" ],
                  "extra":
                    {  } },
                { "title": "Set the displayed rating",
                  "body":
                    [ "$w(\"#myRatingsDisplay\").numRatings = 97;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "rating",
        "labels": [],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 18,
              "filename": "RatingsDisplay.js" },
            { "lineno": 50,
              "filename": "RatingsDisplay.js" } ],
        "docs":
          { "summary": "Sets or gets the displayed rating.",
            "description":
              [ "Setting the `rating` property sets how many icons are displayed in the on",
                " state and what value to show textually if the element is set to show a textual",
                " value.",
                "",
                " Set the `rating` value to a number between 1.0 and 5.0 to display a rating.",
                " The textual value, if set to show, will display the `rating` value to the",
                " nearest tenth and the rating icons will round that value to the nearest half",
                " icon. For example, if you set `rating` to 4.24, it will be shown textually as",
                " 4.2 and 4 stars will be displayed in the on state. However, if you set it to",
                " 4.25, it will be shown textually as 4.3 and 4 and a half stars will be displayed",
                " in the on state.",
                "",
                " To reset the ratings display element, restoring it to the empty state, set the `rating`",
                " property to `null` or `undefined`.",
                "",
                " Getting the `rating` property returns the current displayed rating." ],
            "links": [],
            "examples":
              [ { "title": "Get the displayed rating",
                  "body":
                    [ "let rating = $w(\"#myRatingsDisplay\").rating; // 2.5" ],
                  "extra":
                    {  } },
                { "title": "Set the displayed rating",
                  "body":
                    [ "$w(\"#myRatingsDisplay\").rating = 2.5;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages":
    [ { "name": "Accessibility",
        "locations":
          [ { "lineno": 111,
              "filename": "RatingsDisplay.js" } ],
        "docs":
          { "summary": "An object containing attributes to make your Wix elements more accessible.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "lang",
              "type": "string",
              "doc": "Specifies the language of the element's content, enhancing pronunciation accuracy for screen readers and other assistive technologies. \n\nSetting the `lang` property improves multilingual support by ensuring that assistive technologies apply the correct linguistic rules and speech patterns. It also enables search engines to index the element's content accurately, resulting in better visibility and relevance in search results for better SEO optimization. \n\nThe `lang` property's value must be a 2-letter language code in [ISO 639-1 format](https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes). For example, `\"en\"` for english.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] } ],
  "extra":
    { "queryable": true },
  "relatedGuides":
    [ { "path": "./ratingsdisplay/guides/CSS Classes.md" } ] }