{ "name": "TimePicker",
  "memberOf": "$w",
  "mixes":
    [ "$w.FocusMixin",
      "$w.DisabledMixin",
      "$w.HiddenCollapsedMixin",
      "$w.RequiredMixin",
      "$w.ReadOnlyMixin",
      "$w.FormElement" ],
  "labels": [],
  "location":
    { "lineno": 12,
      "filename": "TimePicker.js" },
  "docs":
    { "summary": "An input element for capturing the time of day.",
      "description":
        [ "Time pickers allow users to easily enter a time of day. The time format is",
          " a string representation of 24-hour time, such as `\"16:00\"`." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "step",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 140,
              "filename": "TimePicker.js" } ],
        "docs":
          { "summary": "Sets or gets the number of minutes the time picker steps.",
            "description":
              [ "Setting the `step` property defines the stepping behavior of the time picker.",
                " The stepping behavior is also dependent on the input option type chosen",
                " in the **Time Input Settings** panel in the Editor.",
                "",
                " ![TimePicker Input Options](images/time_picker_input_options.png \"TimePicker input options\")",
                "",
                " The following list enumerates the stepping behavior for each input option:",
                "",
                " + **Text only:** When input focus is on the minutes, the keyboard up and",
                "   down arrows increment and decrement the minutes by the `step` value.",
                "   When the input focus is on the hours, the hour increments and decrements",
                "   by 1 hour, regardless of the `step` value.",
                " + **Stepper:** The stepper buttons increment and decrement the minutes by",
                "   the `step` value. When the input focus is on the hours, the hour increments",
                "   and decrements by 1 hour, regardless of the `step` value. The keyboard up",
                "   and down arrows work as above.",
                " + **Dropdown:** The dropdown contains times where the difference between each",
                "   time is the `step` value in minutes. For example, if the `step` value is",
                "   `10`, the dropdown will contain `11:00`, `11:10`, `11:20`, etc.",
                "",
                " Set the `step` value to a number between 1 and 60.",
                "",
                " You can also set an element's `step` property in the Editor using the Settings panel.",
                "",
                " Getting the `step` property returns the current step value." ],
            "links": [],
            "examples":
              [ { "title": "Get a time picker's step value",
                  "body":
                    [ "let step = $w(\"#myTimeInput\").step; // 5" ],
                  "extra":
                    {  } },
                { "title": "Set a time picker's step value",
                  "body":
                    [ "$w(\"#myTimeInput\").step = 5;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "useAmPmFormat",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "lineno": 210,
              "filename": "TimePicker.js" } ],
        "docs":
          { "summary": "Sets or gets whether the time picker uses 12-hour or 24-hour format.",
            "description":
              [ "The `useAmPmFormat` only affects the display format. A time picker always",
                " uses the 24-hour format for its [`value`](#value).",
                "",
                " The `useAmPmFormat` property can be:",
                "",
                " + `true`: Displays a 12-hour time along with AM/PM indication. For example,",
                "   **04:00 PM**.",
                " + `false`: Displays a 24-hour time. For example, **16:00**.",
                "",
                " You can also set an element's `useAmPmFormat` property in the Editor using the Settings panel." ],
            "links": [],
            "examples":
              [ { "title": "Get whether a time picker is using the AM/PM format",
                  "body":
                    [ "let amPm = $w(\"#myTimeInput\").useAmPmFormat; // false" ],
                  "extra":
                    {  } },
                { "title": "Set a time picker to use the AM/PM format",
                  "body":
                    [ "$w(\"#myTimeInput\").useAmPmFormat = true;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "value",
        "labels":
          [ "removed" ],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 40,
              "filename": "TimePicker.js" } ],
        "docs":
          { "summary": "Sets or gets a time picker's value.",
            "description":
              [ "Setting the `value` property sets the time displayed in the time picker element. ",
                " The time picker displays the hours and minutes from the `value` even if the `value` ",
                " contains seconds or milliseconds information.",
                "",
                " Set `value` to a 24-hour time string in one of the following formats:",
                "",
                " + `HH:MM`",
                " + `HH:MM:SS`",
                " + `HH:MM:SS.mmm`",
                "",
                " Where `HH` is a two-digit hour value (0-23), `MM` is a two-digit minute value (0-59),",
                " `SS` is a two-digit second value (0-59), and `mmm` is a three-digit millisecond value (0-999).",
                "",
                " Getting the `value` property returns the current displayed time. The time",
                " is returned as a HH:MM:SS.mmm string in 24-hour format regardless of how it is currently being displayed." ],
            "links": [],
            "examples":
              [ { "title": "Get a time picker's value",
                  "body":
                    [ "let value = $w(\"#myTimeInput\").value; // \"16:00\"" ],
                  "extra":
                    {  } },
                { "title": "Set a time picker's value",
                  "body":
                    [ "$w(\"#myTimeInput\").value = \"16:00\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "If an element is connected to a dataset, setting the element's `value`\n in code does not set the value of the connected field in the dataset.\n That means if you use the dataset to perform a submit, the value changed\n in code is not reflected in the submitted item.\n\n To submit the new value using a dataset, set the field's value using the\n [`setFieldValue()`](wix-dataset.html#setFieldValue) function before\n performing the submit." ] } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }