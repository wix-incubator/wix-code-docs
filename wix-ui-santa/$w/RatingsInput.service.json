{ "name": "RatingsInput",
  "memberOf": "$w",
  "mixes":
    [ "$w.FormElement",
      "$w.DisabledMixin",
      "$w.RequiredMixin",
      "$w.HiddenCollapsedMixin",
      "$w.FocusMixin",
      "$w.ClickableMixin",
      "$w.ViewportMixin" ],
  "labels": [],
  "location":
    { "lineno": 8,
      "filename": "RatingsInput.js" },
  "docs":
    { "summary": "A ratings input element allows you to capture a value from your users\n using icons.",
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "value",
        "labels": [],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 60,
              "filename": "RatingsInput.js" },
            { "lineno": 97,
              "filename": "RatingsInput.js" } ],
        "docs":
          { "summary": "Sets or gets the rating value.",
            "description":
              [ "Setting the `value` property sets how many icons are displayed in the on",
                " state.",
                "",
                " Set `value` to a whole number between `1` and `5`.",
                "",
                " To reset the ratings input element, restoring it to the empty state, set",
                " the `value` property to `null` or `undefined`.",
                "",
                " Getting the `value` property returns the current displayed value." ],
            "links": [],
            "examples":
              [ { "title": "Get the rating value",
                  "body":
                    [ "let value = $w(\"#myRatingsInput\").value; // 4" ],
                  "extra":
                    {  } },
                { "title": "Set the rating value",
                  "body":
                    [ "$w(\"#myRatingsInput\").value = 4;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "If an element is connected to a dataset, setting the element's `value`\n in code does not set the value of the connected field in the dataset.\n That means if you use the dataset to perform a submit, the value changed\n in code is not reflected in the submitted item.\n\n To submit the new value using a dataset, set the field's value using the\n [`setFieldValue()`](wix-dataset.html#setFieldValue) function before\n performing the submit." ] } } ],
  "operations":
    [ { "name": "onIconMouseIn",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.IconMouseInEventHandler",
              "doc": "The name of the function or\n the function expression to run when the item is ready." } ],
        "ret":
          { "type": "$w.RatingsInput",
            "doc": "The element on which the event is now registered." },
        "locations":
          [ { "lineno": 26,
              "filename": "RatingsInput.js" } ],
        "docs":
          { "summary": "Sets the function that runs when a user's mouse enters one of the rating icons.",
            "links": [],
            "examples":
              [ { "title": "Get information about the icon that the mouse entered",
                  "body":
                    [ "$w(\"#myRatingsInput\").onIconMouseIn( (event) => {",
                      "  let label = event.label;  // \"Great\"",
                      "  let value = event.value;  // 4",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "IconMouseIn" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }