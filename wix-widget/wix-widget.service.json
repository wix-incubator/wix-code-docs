{ "name": "wix-widget",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "widget.js" },
  "docs":
    { "summary": "The wix-widget module contains functionality for working with Blocks widgets from [Blocks Panel](https://support.wix.com/en/article/creating-custom-panels-for-your-widgets-action-bar-buttons) code.",
      "description":
        [ "> **Important**:",
          "> This module is available only in Wix Blocks. [Wix Blocks](https://support.wix.com/en/article/wix-blocks-check-out-our-articles) is an editor for building Wix apps.",
          "",
          "The `wix-widget` API is used within the code of panels built with the [Blocks Panel Builder](https://support.wix.com/en/article/creating-custom-panels-for-your-widgets-action-bar-buttons).",
          "It enables your panel to interact with your Blocks widgets by controlling their properties, design presets, and more.  ",
          "To use this API, import `wixWidget` from the `wix-widget` module:",
          "",
          "```javascript",
          "import wixWidget from 'wix-widget';",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getDesignPreset",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - Current preset name." },
        "locations":
          [ { "lineno": 40,
              "filename": "widget.js" } ],
        "docs":
          { "summary": "Gets the widget's current design preset.",
            "description":
              [ "The `getDesignPreset()` function returns a Promise that resolves to the widget's current preset name. To use this function on an inner (nested) widget, use [`getNestedWidget()`](#getNestedWidget)." ],
            "links": [],
            "examples":
              [ { "title": "Get a widget's design preset",
                  "body":
                    [ "import wixWidget from 'wix-widget';",
                      "",
                      "// ...",
                      "",
                      "wixWidget.getDesignPreset()",
                      ".then ((designPreset) => {",
                      "    // Code to execute with the designPreset string ",
                      "})",
                      "",
                      "// For example, designPreset can be \"preset-1-wide\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getNestedWidget",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "Selector",
              "type": "string",
              "doc": "A string of one or more nested widget selectors, which can include a few levels of nesting from outer to inner, separated by spaces. For example: `(\"#nestedWidget1\")`, or `(\"#nestedWidget1 #nestedWidget2\")`." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "Fulfilled - The `wix-widget` module scoped to the nested widget" },
        "locations":
          [ { "lineno": 63,
              "filename": "widget.js" } ],
        "docs":
          { "summary": "Gets the `wix-widget` module scoped to an [inner (nested) widget](https://support.wix.com/en/article/wix-blocks-creating-and-managing-widgets-within-widgets).",
            "description":
              [ "The `getNestedWidget()` function lets you use `wix-widget` functions on inner (nested) widgets. It receives a selector of an inner widget and returns a promise that resolves with an object representing the scope of the inner widget." ],
            "links": [],
            "examples":
              [ { "title": "Get a nested widget's preset",
                  "body":
                    [ "import wixWidget from 'wix-widget';",
                      "",
                      "//...",
                      "",
                      "wixWidget.getNestedWidget(\"#nestedWidget1 #nestedWidget2\") //nestedWidget2 is inside nestedWidget1",
                      "    .then((nestedWixWidget) => nestedWixWidget.getDesignPreset())",
                      "    .then((nestedWidgetPreset) => {",
                      "        // do something with the design preset of nestedWidget2",
                      "    });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getProps",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "Fulfilled - Object with all of the widget's properties." },
        "locations":
          [ { "lineno": 17,
              "filename": "widget.js" } ],
        "docs":
          { "summary": "Gets the widget's [properties](https://support.wix.com/en/article/wix-blocks-widget-api-properties).",
            "description":
              [ "The `getProps()` function returns a Promise that resolves to an object with all of the widget's properties. To use this function on an inner (nested) widget, use [`getNestedWidget()`](#getNestedWidget)." ],
            "links": [],
            "examples":
              [ { "title": "Get a widget's properties",
                  "body":
                    [ "import wixWidget from 'wix-widget';",
                      "",
                      "// ...",
                      "",
                      "wixWidget.getProps()",
                      "  .then(props => {",
                      "    // Code to execute with the props object",
                      "  })",
                      "  ",
                      "// Props object can be, for example: {country: \"us\", upperLimit: 7}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setDesignPreset",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "preset",
              "type": "string",
              "doc": "Preset name." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the design preset is set." },
        "locations":
          [ { "lineno": 51,
              "filename": "widget.js" } ],
        "docs":
          { "summary": "Sets the widget's design preset.",
            "description":
              [ "The `setDesignPreset()` function returns a Promise that resolves when the design preset is set. To use this function on an inner (nested) widget, use [`getNestedWidget()`](#getNestedWidget)." ],
            "links": [],
            "examples":
              [ { "title": "Set a widget's design preset",
                  "body":
                    [ "import wixWidget from 'wix-widget';",
                      "",
                      "// ...",
                      "",
                      "wixWidget.setDesignPreset('Mobile');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setProps",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "props",
              "type": "Object",
              "doc": "Object with some or all of the widget's properties." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the properties are set." },
        "locations":
          [ { "lineno": 28,
              "filename": "widget.js" } ],
        "docs":
          { "summary": "Sets the widget's [properties](https://support.wix.com/en/article/wix-blocks-widget-api-properties). You can also assign a partial subset of the widget's properties.",
            "description":
              [ "The `setProps()` function returns a Promise that resolves when the properties are set. To use this function on an inner (nested) widget, use [`getNestedWidget()`](#getNestedWidget)." ],
            "links": [],
            "examples":
              [ { "title": "Set a widget's properties",
                  "body":
                    [ "import wixWidget from 'wix-widget';",
                      "",
                      "// ...",
                      "",
                      "wixWidget.setProps({saleIndicator: \"No Sale\"})",
                      ".then (() => {",
                      "    // Code to execture after setting the props",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "WidgetProps",
        "locations":
          [ { "lineno": 62,
              "filename": "widget.js" } ],
        "docs":
          { "summary": "An object representing a set of widget properties.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members": [],
        "extra":
          {  },
        "labels":
          [ "removed" ] } ],
  "extra":
    {  } }