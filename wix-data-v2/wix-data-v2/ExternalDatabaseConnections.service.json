{
  "name": "ExternalDatabaseConnections",
  "memberOf": "wix-data-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-data.v2-external_database_connection",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createExternalDatabaseConnection",
      "params": [
        {
          "name": "externalDatabaseConnection",
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
            }
          ],
          "doc": "External database connection details.",
          "required": true
        }
      ],
      "requiredFields": [
        "externalDatabaseConnection",
        "externalDatabaseConnection.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
                }
              ]
            }
          }
        ],
        "doc": "Details of external database connection created.\n"
      },
      "docs": {
        "summary": "Creates a new external database connection.",
        "description": [
          "The `options.externalDatabaseConnection` parameter must include a name, base URL, and configuration details for the external database.\nIf any of these are missing, the external database connection isn't created."
        ],
        "examples": [
          {
            "title": "Create an external database connection ",
            "body": [
              "import { Permissions, webMethod } from \"wix-web-module\";",
              "import { externalDatabaseConnections } from \"wix-data.v2\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "const elevatedCreateExternalDbConnection = elevate(externalDatabaseConnections.createExternalDatabaseConnection);",
              "",
              "/* Sample externalDatabaseConnection object:",
              " * ",
              " * {",
              " *   configuration: {",
              " *     <some-configuration-field>: '<some-configuration-value>'",
              " *   },",
              " *   endpoint: '<external-database-endpoint>',",
              " *   name: 'connectionOne'",
              " * }",
              " */",
              "",
              "export const myCreateExternalDbConnectionFunction = webMethod (",
              "  Permissions.Admin, ",
              "  async (externalDatabaseConnectionRequest) => {",
              "    try {",
              "      const createExternalDbConnectionResponse = await elevatedCreateExternalDbConnection(externalDatabaseConnectionRequest);",
              "",
              "      const dbConnectionStatus = createExternalDbConnectionResponse.connectionStatus; ",
              "      const dbCapabilities = createExternalDbConnectionResponse.capabilities; ",
              "",
              "      console.log('Successfully created an external database connection. Full response:', createExternalDbConnectionResponse);",
              "",
              "      return createExternalDbConnectionResponse; ",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ")",
              "",
              "/* Promise resolves to:",
              " * ",
              " * {",
              " *   \"configuration\": {",
              " *     \"<some-configuration-field>\": \"<some-configuration-value>\"",
              " *   },",
              " *   \"connectionStatus\": {",
              " *     \"causeOfFailure\": \"NONE\",",
              " *     \"hasCollections\": \"YES\"",
              " *     \"successful\": true,",
              " *   },",
              " *   \"endpoint\": \"<external-database-endpoint>\",",
              " *   \"name\": \"connectionOne\",",
              " *   \"protocolVersion\": \"<connection-protocol-version>\"",
              " * }",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createExternalDatabaseConnection",
      "isAdminMethod": true
    },
    {
      "name": "deleteExternalDatabaseConnection",
      "params": [
        {
          "name": "name",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the external database connection to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes an external database connection.",
        "description": [
          "> **Note:** Once an external database connection is deleted, it can't be restored. To reconnect the database you need to create a new external database connection."
        ],
        "examples": [
          {
            "title": "Deletes an external database connection ",
            "body": [
              "import { Permissions, webMethod } from \"wix-web-module\";",
              "import { externalDatabaseConnections } from \"wix-data.v2\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "const elevatedDeleteExternalDbConnection = elevate(externalDatabaseConnections.deleteExternalDatabaseConnection);",
              "",
              "/* ",
              " * Sample name value: 'ConnectionOne'",
              " */",
              "",
              "export const myDeleteExternalDbConnection = webMethod(",
              "  Permissions.Admin,",
              "  async (name) => {",
              "    try {",
              "      await elevatedDeleteExternalDbConnection(name);",
              "",
              "      return;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }        ",
              "  }",
              ")",
              "",
              "/* Promise resolves to void */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteExternalDatabaseConnection",
      "isAdminMethod": true
    },
    {
      "name": "getExternalDatabaseConnection",
      "params": [
        {
          "name": "name",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the external database connection to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
                }
              ]
            }
          }
        ],
        "doc": "Details of the external database connection requested.\n"
      },
      "docs": {
        "summary": "Retrieves an external database connection by name.",
        "description": [],
        "examples": [
          {
            "title": "Gets an external database connection ",
            "body": [
              "import { Permissions, webMethod } from \"wix-web-module\";",
              "import { externalDatabaseConnections } from \"wix-data.v2\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "const elevatedGetExternalDbConnection = elevate(externalDatabaseConnections.getExternalDatabaseConnection);",
              "",
              "/* ",
              " * Sample name value: 'ConnectionOne'",
              " */",
              "",
              "export const myGetExternalDbConnection = webMethod(",
              "  Permissions.Admin,",
              "  async (name) => {",
              "    try {",
              "      const getExternalDbConnectionResponse = await elevatedGetExternalDbConnection(name);",
              "",
              "      const connectionSuccessful = getExternalDbConnectionResponse.connectionStatus.successful; ",
              "      const dbEndpoint = getExternalDbConnectionResponse.endpoint;",
              "",
              "      console.log(`Retrieved the ${name} external database connection, which is ${connectionSuccessful ? 'successful' : 'unsuccessful'}`);",
              "      console.log(`It is mounted at ${dbEndpoint}`);",
              "",
              "      return getExternalDbConnectionResponse;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }        ",
              "  }",
              ")",
              "",
              "/* Promise resolves to:",
              " * ",
              " * {",
              " *   \"configuration\": {",
              " *     \"<some-configuration-field>\": \"<some-configuration-value>\"",
              " *   },",
              " *   \"connectionStatus\": {",
              " *     \"causeOfFailure\": \"NONE\",",
              " *     \"hasCollections\": \"YES\"",
              " *     \"successful\": true,",
              " *   },",
              " *   \"endpoint\": \"<external-database-endpoint>\",",
              " *   \"name\": \"connectionOne\",",
              " *   \"protocolVersion\": \"V2\"",
              " * }",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getExternalDatabaseConnection",
      "isAdminMethod": true
    },
    {
      "name": "listExternalDatabaseConnections",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ListExternalDatabaseConnectionsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-v2.ExternalDatabaseConnections.ListExternalDatabaseConnectionsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of all external database collections associated with the site or project.",
        "description": [],
        "examples": [
          {
            "title": "List existing external database connections ",
            "body": [
              "import { Permissions, webMethod } from \"wix-web-module\";",
              "import { externalDatabaseConnections } from \"wix-data.v2\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "const elevatedListExternalDbConnections = elevate(externalDatabaseConnections.listExternalDatabaseConnections);",
              "",
              "export const myListExternalDatabaseConnectionsFunction = webMethod(",
              "  Permissions.Admin,",
              "  async () => {",
              "    try {",
              "      const listExternalDbConnectionsResponse = await elevatedListExternalDbConnections();",
              "",
              "      const firstConnectionName = listExternalDbConnectionsResponse.externalDatabaseConnections[0].name;",
              "      const firstConnectionHaveCollections = listExternalDbConnectionsResponse.externalDatabaseConnections[0].connectionStatus.hasCollections;",
              "",
              "      console.log('Here is a list of all current external database connections: ', listExternalDbConnectionsResponse.externalDatabaseConnections);",
              "",
              "      return listExternalDbConnectionsResponse; ",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ")",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"externalDatabaseConnections\": [",
              " *     {",
              " *       \"configuration\": {",
              " *         \"<some-configuration-field>\": \"<some-configuration-value>\"",
              " *       },",
              " *       \"connectionStatus\": {",
              " *         \"successful\": true,",
              " *         \"causeOfFailure\": \"NONE\",",
              " *         \"hasCollections\": \"YES\"",
              " *       },",
              " *       \"endpoint\": \"<external-database-endpoint>\",",
              " *       \"name\": \"connection1\",",
              " *       \"protocolVersion\": \"V2\"",
              " *     },",
              " *     {",
              " *       \"configuration\": {",
              " *         \"<some-configuration-field>\": \"<some-configuration-value>\"",
              " *       },",
              " *       \"connectionStatus\": {",
              " *         \"successful\": true,",
              " *         \"causeOfFailure\": \"NONE\",",
              " *         \"hasCollections\": \"YES\"",
              " *       },",
              " *       \"endpoint\": \"<external-database-endpoint>\",",
              " *       \"name\": \"connection2\",",
              " *       \"protocolVersion\": \"V2\"",
              " *     },",
              " *   ],",
              " *   \"pagingMetadata\": {",
              " *     \"count\": 2,",
              " *     \"offset\": 0,",
              " *     \"total\": 2,",
              " *     \"tooManyToCount\": false",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "List existing external database connections with additional configuration ",
            "body": [
              "import { Permissions, webMethod } from \"wix-web-module\";",
              "import { externalDatabaseConnections } from \"wix-data.v2\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "const elevatedListExternalDbConnections = elevate(externalDatabaseConnections.listExternalDatabaseConnections);",
              "",
              "/* Sample options object:",
              " * ",
              " * {",
              " *   paging: {",
              " *     limit: 5,",
              " *     offset: 1",
              " *   }",
              " * }",
              " */",
              "",
              "export const myListExternalDatabaseConnectionsFunctionOptions = webMethod(",
              "  Permissions.Admin,",
              "  async (options) => {",
              "    try {",
              "      const listExternalDbConnectionsResponse = await elevatedListExternalDbConnections(options);",
              "",
              "      const firstConnectionName = listExternalDbConnectionsResponse.externalDatabaseConnections[0].name;",
              "      const firstConnectionHaveCollections = listExternalDbConnectionsResponse.externalDatabaseConnections[0].connectionStatus.hasCollections;",
              "",
              "      console.log('Here is a list of all current external database connections: ', listExternalDbConnectionsResponse.externalDatabaseConnections);",
              "",
              "      return listExternalDbConnectionsResponse; ",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ")",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"externalDatabaseConnections\": [",
              " *     {",
              " *       \"connectionStatus\": {",
              " *         \"causeOfFailure\": \"COMMUNICATION_FAILURE\",",
              " *         \"hasCollections\": \"UNKNOWN\"",
              " *         \"successful\": false,",
              " *       },",
              " *       \"name\": \"connection2\",",
              " *       \"protocolVersion\": \"V2\",",
              " *     }",
              " *   ],",
              " *   \"pagingMetadata\": {",
              " *     \"count\": 1,",
              " *     \"offset\": 1,",
              " *     \"total\": 2,",
              " *     \"tooManyToCount\": false",
              " *   }",
              " * }",
              "*/"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listExternalDatabaseConnections",
      "isAdminMethod": true
    },
    {
      "name": "updateExternalDatabaseConnection",
      "params": [
        {
          "name": "name",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the external database connection.\nAn external database connection may connect to one or more external data collections or tables.\nThese are represented as `connectionName/dataCollectionId`.",
          "required": true
        },
        {
          "name": "externalDatabaseConnection",
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.UpdateExternalDatabaseConnection"
            }
          ],
          "doc": "Updated external database connection details. The existing connection is replaced with this version.",
          "required": true
        }
      ],
      "requiredFields": [
        "externalDatabaseConnection",
        "name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
                }
              ]
            }
          }
        ],
        "doc": "Updated external database connection details.\n"
      },
      "docs": {
        "summary": "Updates an external database connection.",
        "description": [
          "An external database collection name must be provided in `name`.\nIf an existing external database connection is found with the same name, that connection's details are updated.\nIf no external database connection has that name, the request fails.\n\n> **Note:** After an external database connection is updated, it only contains the values provided in the request. All previous values are lost."
        ],
        "examples": [
          {
            "title": "Update an existing external database connection ",
            "body": [
              "import { Permissions, webMethod } from \"wix-web-module\";",
              "import { externalDatabaseConnections } from \"wix-data.v2\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "const elevatedUpdateExternalDatabaseConnection = elevate(externalDatabaseConnections.updateExternalDatabaseConnection);",
              "",
              "/* ",
              " * Sample name value: 'connectionOne'",
              " *",
              " * Sample externalDatabaseConnection object:",
              " * ",
              " * {",
              " *   configuration: {",
              " *     <some-updated-configuration-field>: '<some-updated-configuration-value>',",
              " *     <some-updated-configuration-field>: '<some-updated-configuration-value>'",
              " *   },",
              " *   endpoint: '<external-database-endpoint>'",
              " * }",
              " */",
              "",
              "export const myUpdateExternalDatabaseConnectionFunction = webMethod(",
              "  Permissions.Admin,",
              "  async (name, externalDatabaseConnection) => {",
              "    try {",
              "      const updateExternalDatabaseConnectionResponse = await elevatedUpdateExternalDatabaseConnection(name, externalDatabaseConnection);",
              "",
              "      console.log(`The ${name} connection was updated with the new values. It is currently mounted at ${updateExternalDatabaseConnectionResponse.endpoint}`);",
              "",
              "      return updateExternalDatabaseConnectionResponse; ",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ")",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"configuration\": {",
              " *     \"<some-configuration-field>\": \"<some-configuration-value>\"",
              " *   },",
              " *   \"connectionStatus\": {",
              " *     \"successful\": true,",
              " *     \"causeOfFailure\": \"NONE\",",
              " *     \"hasCollections\": \"YES\"",
              " *   },",
              " *   \"endpoint\": \"<external-database-endpoint>\",",
              " *   \"name\": \"connection1\",",
              " *   \"protocolVersion\": \"<connection-protocol-version>\"",
              " * }",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateExternalDatabaseConnection",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "Capabilities",
      "members": [
        {
          "name": "collectionModificationsSupported",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the external database supports creating and updating collections."
        },
        {
          "name": "fieldTypes",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Field types supported by the external database.\nThis option only affects collection creation and update requests."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConnectionStatus",
      "members": [
        {
          "name": "causeOfFailure",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason for the failure, if a connection isn't established successfully.\n+ `NONE`: No connection failure.\n+ `COMMUNICATION_FAILURE`: General communication failure.\n+ `DESTINATION_HOST_UNREACHABLE`: External database host is unreachable.\n+ `UNAUTHORIZED`: Unauthorized to access external database."
        },
        {
          "name": "hasCollections",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Whether the external database has existing collections. Possible values are:\n+ `UNKNOWN`: The attempt to connect to the external database failed, so status is unknown.\n+ `NO`: External database does not have any existing collections.\n+ `YES`: External database has existing collections."
        },
        {
          "name": "successful",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the connection was established successfully."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateExternalDatabaseConnectionOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateExternalDatabaseConnectionRequest",
      "members": [
        {
          "name": "externalDatabaseConnection",
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
            }
          ],
          "doc": "External database connection details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateExternalDatabaseConnectionResponse",
      "members": [
        {
          "name": "externalDatabaseConnection",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
            }
          ],
          "doc": "Details of external database connection created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteExternalDatabaseConnectionRequest",
      "members": [
        {
          "name": "name",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the external database connection to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteExternalDatabaseConnectionResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExternalDatabaseConnection",
      "members": [
        {
          "name": "capabilities",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.Capabilities"
            }
          ],
          "doc": "The external database's capabilities."
        },
        {
          "name": "configuration",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Settings passed to the external database connection as part of each request.\nThese settings can relate to authentication, tenancy, or provide any other information needed for processing a request.\nTheir content and structure depend on the specific requirements of the external database's API."
        },
        {
          "name": "connectionStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ConnectionStatus"
            }
          ],
          "doc": "Status of the external database connection. Includes whether the connection was established successfully, and if not, the reason for the failure."
        },
        {
          "name": "endpoint",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Base URL for provisioning and managing data in the external database. For example: `https://example.com/my-external-database`."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the external database connection.\nAn external database connection may connect to one or more external data collections or tables.\nThese are represented as `connectionName/dataCollectionId`."
        }
      ],
      "docs": {
        "description": [
          "An external database connection defines a connection between an external database and a Wix site or project."
        ]
      }
    },
    {
      "name": "GetExternalDatabaseConnectionRequest",
      "members": [
        {
          "name": "name",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the external database connection to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetExternalDatabaseConnectionResponse",
      "members": [
        {
          "name": "externalDatabaseConnection",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
            }
          ],
          "doc": "Details of the external database connection requested."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListExternalDatabaseConnectionsOptions",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.Paging"
            }
          ],
          "doc": "Paging"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListExternalDatabaseConnectionsRequest",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.Paging"
            }
          ],
          "doc": "Paging"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListExternalDatabaseConnectionsResponse",
      "members": [
        {
          "name": "externalDatabaseConnections",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
                  }
                ]
              }
            }
          ],
          "doc": "List of external database connections."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.PagingMetadata"
            }
          ],
          "doc": "Paging metadata"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateExternalDatabaseConnection",
      "members": [
        {
          "name": "capabilities",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.Capabilities"
            }
          ],
          "doc": "The external database's capabilities."
        },
        {
          "name": "configuration",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Settings passed to the external database connection as part of each request.\nThese settings can relate to authentication, tenancy, or provide any other information needed for processing a request.\nTheir content and structure depend on the specific requirements of the external database's API."
        },
        {
          "name": "connectionStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ConnectionStatus"
            }
          ],
          "doc": "Status of the external database connection. Includes whether the connection was established successfully, and if not, the reason for the failure."
        },
        {
          "name": "endpoint",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Base URL for provisioning and managing data in the external database. For example: `https://example.com/my-external-database`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateExternalDatabaseConnectionRequest",
      "members": [
        {
          "name": "externalDatabaseConnection",
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
            }
          ],
          "doc": "Updated external database connection details. The existing connection is replaced with this version."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateExternalDatabaseConnectionResponse",
      "members": [
        {
          "name": "externalDatabaseConnection",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-v2.ExternalDatabaseConnections.ExternalDatabaseConnection"
            }
          ],
          "doc": "Updated external database connection details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
