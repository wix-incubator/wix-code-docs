{
  "name": "Files",
  "memberOf": "wix-media-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-media.v2-file_descriptor",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkDeleteFiles",
      "params": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the files to move to the Media Manager's trash bin.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.BulkDeleteFilesOptions"
            }
          ],
          "doc": "Options to use when deleting files.",
          "required": false
        }
      ],
      "requiredFields": [
        "fileIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes the specified files from the Media Manager.",
        "description": [
          "The `bulkDeleteFiles()` function returns a Promise that resolves when the files are deleted.\n\nThe deleted files are moved to the Media Manager's trash bin (`TRASH_ROOT` folder) unless permanently deleted. To permanently delete files, pass the `permanent` parameter with the value `true`. Permanently deleting files isn't reversible, so make sure that these files aren't being used in a site or in any other way as the files will no longer be accessible.\n\n>**Notes:**\n> - The specified files can be from different folders.\n> - Moving multiple files at once is an asynchronous action, and may take time for the changes to appear in the Media Manager.\n> - Attempting to delete files that are already in the trash bin doesn't result in an error.\n> - If your site contains deleted media files, the deleted media files still appear on your site as the files are still in the Media Manager (in the trash bin).\n> - You can use `bulkRestoreFilesFromTrashBin()` to restore files from the Media Manager's trash bin."
        ],
        "examples": [
          {
            "title": "Bulk delete files (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample fileIds value: ",
              " * [",
              " *   'w8ide0_v12i2pi4549locqdfeb5yy5b8iyh39az.pdf',",
              " *   'w8ide0_ye3x8yyf5izwe01ovn682pa76bzrrcyt.pdf'",
              " * ]",
              " * ",
              " * Sample options value:",
              " * {",
              " *   permanent: true",
              " * }",
              " */",
              "",
              "async function myBulkDeleteFilesFunction(fileIds, options) {",
              "  try {",
              "    await files.bulkDeleteFiles(fileIds, options);",
              "",
              "    console.log('Permanently deleted files.');",
              "    return;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to void */",
              ""
            ]
          },
          {
            "title": "Bulk delete files (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample fileIds value: ",
              " * [",
              " *   'w8ide0_v12i2pi4549locqdfeb5yy5b8iyh39az.pdf',",
              " *   'w8ide0_ye3x8yyf5izwe01ovn682pa76bzrrcyt.pdf'",
              " * ]",
              " * ",
              " * Sample options value:",
              " * {",
              " *   permanent: true",
              " * }",
              " */",
              "",
              "export const myBulkDeleteFilesFunction = webMethod(Permissions.Anyone, async (fileIds, options) => {",
              "  try {",
              "    const elevatedBulkDeleteFiles = elevate(files.bulkDeleteFiles);",
              "    await elevatedBulkDeleteFiles(fileIds, options);",
              "",
              "    console.log('Permanently deleted files.');",
              "    return;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */"
            ]
          },
          {
            "title": "Bulk delete all files found in a chosen folder ",
            "body": [
              "/*******************************************",
              " * Backend code - bulk-delete-files.web.js *",
              " ******************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const deleteFiles = webMethod(Permissions.Anyone, async (fileIds, options) => {",
              "  try {",
              "    const elevatedBulkDeleteFiles = elevate(files.bulkDeleteFiles);",
              "    await elevatedBulkDeleteFiles(fileIds, options);",
              "",
              "    console.log(`Permanently deleted files with ids: ${fileIds.toString()}.`);",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "export const searchFileIds = webMethod(Permissions.Anyone, async (parentFolderId) => {",
              "  try {",
              "    const options = { parentFolder: parentFolderId };",
              "    const elevatedSearchFiles = elevate(files.searchFiles);",
              "    const returnedFiles = await elevatedSearchFiles(options);",
              "",
              "    const fileIds = returnedFiles.map((file) => {",
              "      return file._id;",
              "    });",
              "",
              "    return fileIds;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { deleteFiles, searchFileIds } from 'backend/bulk-delete-files.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#delete').onClick(async () => {",
              "    const isDeletePermanently = $w('#deletePermanently').checked;",
              "    const options = { permanent: isDeletePermanently };",
              "",
              "    const parentFolder = $w('#parentFolder').value;",
              "    const fileIds = await searchFileIds(parentFolder);",
              "",
              "    await deleteFiles(fileIds, options);",
              "    $w('#successMessage').show();",
              "  });",
              "});",
              ""
            ],
            "extra": {
              "description": "This code shows a page where the visitor chooses a folder by typing the folder's name in an input box, and then all the files in the chosen folder are deleted. Only visitors with permission to manage the site's media would have access to this page."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "bulkDeleteFiles",
      "isAdminMethod": true
    },
    {
      "name": "bulkImportFile",
      "params": [
        {
          "name": "importFileRequests",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.ImportFileRequest"
                  }
                ]
              }
            }
          ],
          "doc": "Information about the files to import.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.BulkImportFileOptions"
            }
          ],
          "doc": "Options to include the file descriptor in the response.",
          "required": false
        }
      ],
      "requiredFields": [
        "importFileRequests",
        "importFileRequests.url"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.BulkImportFileResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Imports a bulk of files to the Media Manager using external urls.",
        "description": [
          "The `bulkImportFile()` function returns a Promise that resolves to an object containing bulk import metadata and an array of imported files' descriptors and metadata.\n\nReturns information about the imported files. Use the `parentFolderId` parameter to specify in which folder you want each file to be imported.\nIf no folder is specified, the file is imported to the `media-root` folder.\n\nTo import files, you need to do one of the following for each file:\n- Pass its [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) in the `mimeType` field of the request. For example, `mimeType: 'image/jpeg'`.\n- Include its extension in either the `displayName` or `url` field of the request. For example, `displayName: 'Example Image.jpeg` or `url: https://www.example.com/image.jpeg`.\n- Ensure the server hosting the file supports HEAD requests. In these cases the Wix servers can retrieve the MIME type from the hosting server.\n  > **Note:** If you want to validate the media type, pass the file's expected media type in the optional `mediaType` field of the request.  For example, `mediaType: 'IMAGE'`."
        ],
        "examples": [
          {
            "title": "Bulk import file (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample importFileRequests value:",
              " * [",
              " *   {",
              " *     displayName: 'image1',",
              " *     mediaType: 'IMAGE',",
              " *     mimeType: 'image/jpeg',",
              " *     parentFolderId: 'igje5u22nij3qkltzsnol37j3dnthvvh',",
              " *     url: 'https://www.site1.com/example.jpg'",
              " *   }, ",
              " *   {",
              " *     displayName: 'vectorArt1',",
              " *     mediaType: 'VECTOR',",
              " *     labels : ['label1', 'label2'],",
              " *     url: 'https://cdn.vectorstock.com/example-vector-art.webp'",
              " *   },",
              " *   {",
              " *     displayName: 'video1',",
              " *     mediaType: 'VIDEO',",
              " *     url: 'https://cdn.pixabay.com/example-video.mp4'",
              " *   }",
              " * ]",
              " */",
              "",
              "async function mybulkImportFileFunction(importFileRequests) {",
              "  try {",
              "    const importedFiles = await files.bulkImportFile(importFileRequests);",
              "",
              "    console.log(\"Imported files:\", importedFiles);",
              "    return importedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to: ",
              " * {",
              " *   \"bulkActionMetadata\": {",
              " *     \"totalFailures\": 0,",
              " *     \"totalSuccesses\": 3,",
              " *     \"undetailedFailures\": 0",
              " *   },",
              " *   \"results\": [",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:31.000Z\",",
              " *         \"_id\": \"a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:31.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"image1.jpg\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [],",
              " *         \"mediaType\": \"IMAGE\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://www.site1.com/example.jpg\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/media/a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"url\": \"https://static.wixstatic.com/media/a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"originalIndex\": 0,",
              " *         \"success\": true",
              " *       }",
              " *     },",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"_id\": \"a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"vectorArt1.webp.svg\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [\"label1\", \"label2\"],",
              " *         \"mediaType\": \"VECTOR\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"media-root\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://cdn.vectorstock.com/example-vector-art.webp\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/shapes/a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"url\": \"https://static.wixstatic.com/shapes/a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"originalIndex\": 1,",
              " *         \"success\": true",
              " *       }",
              " *     },",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"_id\": \"a8a52b_fec67a695b474a729e3a31010afbb0af\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"video1.mp4\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [],",
              " *         \"mediaType\": \"VIDEO\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"media-root\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://cdn.pixabay.com/example-video.mp4\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/media/54ece48fa04e492fa46bd79980105f0d.png\",",
              " *         \"url\": \"https://video.wixstatic.com/video/a8a52b_fec67a695b474a729e3a31010afbb0af/file\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_fec67a695b474a729e3a31010afbb0af\",",
              " *         \"originalIndex\": 2,",
              " *         \"success\": true",
              " *       }",
              " *     }",
              " *   ]",
              " * }",
              " */"
            ]
          },
          {
            "title": "Bulk import file (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample importFileRequests value:",
              " * [",
              " *   {",
              " *     displayName: 'image1',",
              " *     mediaType: 'IMAGE',",
              " *     mimeType: 'image/jpeg',",
              " *     parentFolderId: 'igje5u22nij3qkltzsnol37j3dnthvvh',",
              " *     url: 'https://www.site1.com/example.jpg'",
              " *   }, ",
              " *   {",
              " *     displayName: 'vectorArt1',",
              " *     mediaType: 'VECTOR',",
              " *     labels : ['label1', 'label2'],",
              " *     url: 'https://cdn.vectorstock.com/example-vector-art.webp'",
              " *   },",
              " *   {",
              " *     displayName: 'video1',",
              " *     mediaType: 'VIDEO',",
              " *     url: 'https://cdn.pixabay.com/example-video.mp4'",
              " *   }",
              " * ]",
              " */",
              "",
              "export const mybulkImportFileFunction = webMethod(Permissions.Anyone, async (importFileRequests) => {",
              "  try {",
              "    const elevatedbulkImportFile = elevate(files.bulkImportFile)",
              "    const importedFiles = await elevatedbulkImportFile(importFileRequests);",
              "",
              "    console.log(\"Imported files:\", importedFiles);",
              "    return importedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to: ",
              " * {",
              " *   \"bulkActionMetadata\": {",
              " *     \"totalFailures\": 0,",
              " *     \"totalSuccesses\": 3,",
              " *     \"undetailedFailures\": 0",
              " *   },",
              " *   \"results\": [",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:31.000Z\",",
              " *         \"_id\": \"a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:31.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"image1.jpg\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [],",
              " *         \"mediaType\": \"IMAGE\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://www.site1.com/example.jpg\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/media/a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"url\": \"https://static.wixstatic.com/media/a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"originalIndex\": 0,",
              " *         \"success\": true",
              " *       }",
              " *     },",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"_id\": \"a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"vectorArt1.webp.svg\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [\"label1\", \"label2\"],",
              " *         \"mediaType\": \"VECTOR\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"media-root\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://cdn.vectorstock.com/example-vector-art.webp\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/shapes/a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"url\": \"https://static.wixstatic.com/shapes/a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"originalIndex\": 1,",
              " *         \"success\": true",
              " *       }",
              " *     },",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"_id\": \"a8a52b_fec67a695b474a729e3a31010afbb0af\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"video1.mp4\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [],",
              " *         \"mediaType\": \"VIDEO\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"media-root\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://cdn.pixabay.com/example-video.mp4\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/media/54ece48fa04e492fa46bd79980105f0d.png\",",
              " *         \"url\": \"https://video.wixstatic.com/video/a8a52b_fec67a695b474a729e3a31010afbb0af/file\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_fec67a695b474a729e3a31010afbb0af\",",
              " *         \"originalIndex\": 2,",
              " *         \"success\": true",
              " *       }",
              " *     }",
              " *   ]",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Bulk import file (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample importFileRequests value:",
              " * [",
              " *   {",
              " *     displayName: 'image1',",
              " *     mediaType: 'IMAGE',",
              " *     mimeType: 'image/jpeg',",
              " *     parentFolderId: 'igje5u22nij3qkltzsnol37j3dnthvvh',",
              " *     url: 'https://www.site1.com/example.jpg'",
              " *   }, ",
              " *   {",
              " *     displayName: 'vectorArt1',",
              " *     mediaType: 'VECTOR',",
              " *     labels : ['label1', 'label2'],",
              " *     url: 'https://cdn.vectorstock.com/example-vector-art.webp'",
              " *   },",
              " *   {",
              " *     displayName: 'video1',",
              " *     mediaType: 'VIDEO',",
              " *     url: 'https://cdn.pixabay.com/example-video.mp4'",
              " *   }",
              " * ]",
              " */",
              "",
              "export const mybulkImportFileFunction = webMethod(Permissions.Anyone, async (importFileRequests, options) => {",
              "  try {",
              "    const elevatedbulkImportFile = elevate(files.bulkImportFile)",
              "    const importedFiles = await elevatedbulkImportFile(importFileRequests, options);",
              "",
              "    console.log(\"Imported files:\", importedFiles);",
              "    return importedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to: ",
              " * {",
              " *   \"bulkActionMetadata\": {",
              " *     \"totalFailures\": 0,",
              " *     \"totalSuccesses\": 3,",
              " *     \"undetailedFailures\": 0",
              " *   },",
              " *   \"results\": [",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:31.000Z\",",
              " *         \"_id\": \"a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:31.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"image1.jpg\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [],",
              " *         \"mediaType\": \"IMAGE\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://www.site1.com/example.jpg\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/media/a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"url\": \"https://static.wixstatic.com/media/a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_f8c86723942347488316f1ab35119411~mv2.jpg\",",
              " *         \"originalIndex\": 0,",
              " *         \"success\": true",
              " *       }",
              " *     },",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"_id\": \"a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"vectorArt1.webp.svg\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [\"label1\", \"label2\"],",
              " *         \"mediaType\": \"VECTOR\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"media-root\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://cdn.vectorstock.com/example-vector-art.webp\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/shapes/a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"url\": \"https://static.wixstatic.com/shapes/a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_43eb6841371f4d738ddfcb7fa2bb62be-tmp.svg\",",
              " *         \"originalIndex\": 1,",
              " *         \"success\": true",
              " *       }",
              " *     },",
              " *     {",
              " *       \"item\": {",
              " *         \"_createdDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"_id\": \"a8a52b_fec67a695b474a729e3a31010afbb0af\",",
              " *         \"_updatedDate\": \"2023-12-26T10:22:32.000Z\",",
              " *         \"addedBy\": {",
              " *           \"identityId\": \"a8a52bb9-bac0-4bba-a55c-0611b5cdaa16\",",
              " *           \"identityType\": \"MEMBER\"",
              " *         },",
              " *         \"displayName\": \"video1.mp4\",",
              " *         \"hash\": \"\",",
              " *         \"internalTags\": [],",
              " *         \"labels\": [],",
              " *         \"mediaType\": \"VIDEO\",",
              " *         \"operationStatus\": \"PENDING\",",
              " *         \"parentFolderId\": \"media-root\",",
              " *         \"private\": false,",
              " *         \"siteId\": \"49dcb500-1081-47b0-b13b-368b9bed8fa9\",",
              " *         \"sizeInBytes\": \"-1\",",
              " *         \"sourceUrl\": \"https://cdn.pixabay.com/example-video.mp4\",",
              " *         \"state\": \"OK\",",
              " *         \"thumbnailUrl\": \"https://static.wixstatic.com/media/54ece48fa04e492fa46bd79980105f0d.png\",",
              " *         \"url\": \"https://video.wixstatic.com/video/a8a52b_fec67a695b474a729e3a31010afbb0af/file\"",
              " *       },",
              " *       \"itemMetadata\": {",
              " *         \"_id\": \"a8a52b_fec67a695b474a729e3a31010afbb0af\",",
              " *         \"originalIndex\": 2,",
              " *         \"success\": true",
              " *       }",
              " *     }",
              " *   ]",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Bulk import files from visitor input into a form ",
            "body": [
              "/****************************************",
              " * Backend code - bulk-import-files.web.js *",
              " ***************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const importFiles = webMethod(Permissions.Anyone, async (importFileRequests) => {",
              "  try {",
              "    const elevatedBulkImportFile = elevate(files.bulkImportFile)",
              "    const importedFiles = await elevatedBulkImportFile(importFileRequests);",
              "",
              "    console.log(\"Imported files:\", importedFiles);",
              "    return importedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "  ",
              "  ",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { importFiles } from 'backend/bulk-import-files.web';",
              "",
              "$w.onReady(() => {",
              "  const newMedia = [];",
              "  ",
              "  $w('#addMedia').onClick( () => {",
              "    const newMediaFile = {",
              "      displayName: $w('#displayName').value,",
              "      mediaType: $w('#mediaType').value,",
              "      parentFolderId: $w('#parentFolderId').value,",
              "      url: $w('#url').value",
              "    }",
              "    newMedia.push(newMediaFile);",
              "",
              "    // show message to remind user to submit media",
              "    // after adding all media files for 5 seconds",
              "    $w('#rememberToUploadMessage').show();",
              "    setTimeout(() => {",
              "      $w('#rememberToUploadMessage').hide();",
              "    }, 5000)",
              "  });",
              "",
              "  $w('#uploadMedia').onClick(async () => {",
              "    if (newMedia.length === 0) {",
              "      // if no media has been added then",
              "      // show message to add media",
              "      $w('#addMediaMsg').show()",
              "    } else {",
              "      await importFiles(newMedia);",
              "",
              "      $w('#successfulUploadMsg').show();",
              "      setTimeout(() => {",
              "        $w('#successfulUploadMsg').hide();",
              "      }, 10000);",
              "    }",
              "  });",
              "});",
              ""
            ],
            "extra": {
              "description": "This code shows a page where the visitor adds basic media file data to a form and then adds it to the `newMedia` array. When the visitor clicks the upload button, all added media files are uploaded using the `bulkImportFile()` function."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "bulkImportFile",
      "isAdminMethod": true
    },
    {
      "name": "bulkImportFiles",
      "params": [
        {
          "name": "importFileRequests",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.ImportFileRequest"
                  }
                ]
              }
            }
          ],
          "doc": "Information about the files to import.",
          "required": true
        }
      ],
      "requiredFields": [
        "importFileRequests",
        "importFileRequests.url"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.BulkImportFilesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "> **Deprecated.**\n> This function has been replaced with `bulkImportFile()`, and will be removed on March 31, 2024.",
        "description": [
          "The `bulkImportFiles()` function returns a Promise that resolves to an array of the imported files' descriptors.\n\nImports a bulk of files to the Media Manager using external urls.\n\nReturns information about the imported files. Use the `parentFolderId` parameter to specify in which folder you want each file to be imported.\nIf no folder is specified, the file is imported to the `media-root` folder.\n\n>**Note:** The `media` property isn't returned in the `files` response object.\n\nTo import files, you need to do one of the following for each file:\n- Pass its [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) in the `mimeType` field of the request. For example, `mimeType: 'image/jpeg'`.\n- Include its extension in either the `displayName` or `url` field of the request. For example, `displayName: 'Example Image.jpeg` or `url: https://www.example.com/image.jpeg`.\n- Ensure the server hosting the file supports HEAD requests. In these cases the Wix servers can retrieve the MIME type from the hosting server.\n  > **Note:** If you want to validate the media type, pass the file's expected media type in the optional `mediaType` field of the request.  For example, `mediaType: 'IMAGE'`."
        ],
        "examples": [
          {
            "title": "Bulk import files (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample importFileRequests value:",
              " * [",
              " *   {",
              " *     displayName: 'image1',",
              " *     mediaType: 'IMAGE',",
              " *     mimeType: 'image/jpeg',",
              " *     parentFolderId: 'igje5u22nij3qkltzsnol37j3dnthvvh',",
              " *     url: 'https://www.site1.com/example.jpg'",
              " *   }, ",
              " *   {",
              " *     displayName: 'vectorArt1',",
              " *     mediaType: 'VECTOR',",
              " *     labels : ['label1', 'label2'],",
              " *     url: 'https://cdn.vectorstock.com/example-vector-art.webp'",
              " *   },",
              " *   {",
              " *     displayName: 'video1',",
              " *     mediaType: 'VIDEO'",
              " *     url: 'https://cdn.pixabay.com/example-video.mp4',",
              " *   }",
              " * ]",
              " */",
              "",
              "async function myBulkImportFilesFunction(importFileRequests) {",
              "  try {",
              "    const importedFiles = await files.bulkImportFiles(importFileRequests);",
              "",
              "    console.log(\"Imported files:\", importedFiles);",
              "    return importedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to: ",
              " * {",
              " *  \"files\": [",
              " *    {",
              " *      \"_createdDate\": \"2023-07-23T12:15:49.000Z\",",
              " *      \"_id\": \"w8ide0_h8bpmhc3j3qhgncce0et1nnkghsfozl2~mv2.jpg\",",
              " *      \"_updatedDate\": \"2023-07-23T12:15:49.000Z\",",
              " *      \"displayName\": \"image1.jpg\",",
              " *      \"hash\": \"\",",
              " *      \"internalTags\": [],",
              " *      \"labels\": [],",
              " *      \"mediaType\": \"IMAGE\",",
              " *      \"operationStatus\": \"PENDING\",",
              " *      \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *      \"private\": false,",
              " *      \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *      \"sizeInBytes\": \"-1\",",
              " *      \"sourceUrl\": \"https://www.site1.com/example.jpg\",",
              " *      \"state\": \"OK\",",
              " *      \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_h8bpmhc3j3qhgncce0et1nnkghsfozl2~mv2.jpg\",",
              " *      \"url\": \"https://static.wixstatic.com/media/w8ide0_h8bpmhc3j3qhgncce0et1nnkghsfozl2~mv2.jpg\"",
              " *    },",
              " *    {",
              " *      \"_createdDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"_id\": \"w8ide0_e9xsr959r1ze5aavswj2978r6jt05bwl-tmp.svg\",",
              " *      \"_updatedDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"displayName\": \"vectorArt1.webp.svg\",",
              " *      \"hash\": \"\",",
              " *      \"internalTags\": [],",
              " *      \"labels\": [",
              " *        \"label1\", ",
              " *        \"label2\"",
              " *      ],",
              " *      \"mediaType\": \"VECTOR\",",
              " *      \"operationStatus\": \"PENDING\",",
              " *      \"parentFolderId\": \"media-root\",",
              " *      \"private\": false,",
              " *      \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *      \"sizeInBytes\": \"20532\",",
              " *      \"sourceUrl\": \"https://cdn.vectorstock.com/example-vector-art.webp\",",
              " *      \"state\": \"OK\",",
              " *      \"thumbnailUrl\": \"https://static.wixstatic.com/shapes/w8ide0_e9xsr959r1ze5aavswj2978r6jt05bwl-tmp.svg\",",
              " *      \"url\": \"https://static.wixstatic.com/shapes/w8ide0_e9xsr959r1ze5aavswj2978r6jt05bwl-tmp.svg\"",
              " *    },",
              " *    {",
              " *      \"_createdDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"_id\": \"w8ide0_f6e8f09e5055432286db483917ba923e\",",
              " *      \"_updatedDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"displayName\": \"video1.mp4\",",
              " *      \"hash\": \"\",",
              " *      \"internalTags\": [],",
              " *      \"labels\": [],",
              " *      \"mediaType\": \"VIDEO\",",
              " *      \"operationStatus\": \"PENDING\",",
              " *      \"parentFolderId\": \"media-root\",",
              " *      \"private\": false,",
              " *      \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *      \"sizeInBytes\": \"-1\",",
              " *      \"sourceUrl\": \"https://cdn.pixabay.com/example-video.mp4\",",
              " *      \"state\": \"OK\",",
              " *      \"thumbnailUrl\": \"https://static.wixstatic.com/media/yibv80byru0wei9ficri8fd8o1rghueu.png\",",
              " *      \"url\": \"https://video.wixstatic.com/video/w8ide0_f6e8f09e5055432286db483917ba923e/file\"",
              " *    }",
              " *  ]",
              " * }",
              " */"
            ]
          },
          {
            "title": "Bulk import files (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample importFileRequests value:",
              " * [",
              " *   {",
              " *     displayName: 'image1',",
              " *     mediaType: 'IMAGE',",
              " *     mimeType: 'image/jpeg',",
              " *     parentFolderId: 'igje5u22nij3qkltzsnol37j3dnthvvh',",
              " *     url: 'https://www.site1.com/example.jpg'",
              " *   }, ",
              " *   {",
              " *     displayName: 'vectorArt1',",
              " *     mediaType: 'VECTOR',",
              " *     labels : ['label1', 'label2'],",
              " *     url: 'https://cdn.vectorstock.com/example-vector-art.webp'",
              " *   },",
              " *   {",
              " *     displayName: 'video1',",
              " *     mediaType: 'VIDEO'",
              " *     url: 'https://cdn.pixabay.com/example-video.mp4',",
              " *   }",
              " * ]",
              " */",
              "",
              "export const myBulkImportFilesFunction = webMethod(Permissions.Anyone, async (importFileRequests) => {",
              "  try {",
              "    const elevatedBulkImportFiles = elevate(files.bulkImportFiles)",
              "    const importedFiles = await elevatedBulkImportFiles(importFileRequests);",
              "",
              "    console.log(\"Imported files:\", importedFiles);",
              "    return importedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to: ",
              " * {",
              " *  \"files\": [",
              " *    {",
              " *      \"_createdDate\": \"2023-07-23T12:15:49.000Z\",",
              " *      \"_id\": \"w8ide0_h8bpmhc3j3qhgncce0et1nnkghsfozl2~mv2.jpg\",",
              " *      \"_updatedDate\": \"2023-07-23T12:15:49.000Z\",",
              " *      \"displayName\": \"image1.jpg\",",
              " *      \"hash\": \"\",",
              " *      \"internalTags\": [],",
              " *      \"labels\": [],",
              " *      \"mediaType\": \"IMAGE\",",
              " *      \"operationStatus\": \"PENDING\",",
              " *      \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *      \"private\": false,",
              " *      \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *      \"sizeInBytes\": \"-1\",",
              " *      \"sourceUrl\": \"https://www.site1.com/example.jpg\",",
              " *      \"state\": \"OK\",",
              " *      \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_h8bpmhc3j3qhgncce0et1nnkghsfozl2~mv2.jpg\",",
              " *      \"url\": \"https://static.wixstatic.com/media/w8ide0_h8bpmhc3j3qhgncce0et1nnkghsfozl2~mv2.jpg\"",
              " *    },",
              " *    {",
              " *      \"_createdDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"_id\": \"w8ide0_e9xsr959r1ze5aavswj2978r6jt05bwl-tmp.svg\",",
              " *      \"_updatedDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"displayName\": \"vectorArt1.webp.svg\",",
              " *      \"hash\": \"\",",
              " *      \"internalTags\": [],",
              " *      \"labels\": [",
              " *        \"label1\", ",
              " *        \"label2\"",
              " *      ],",
              " *      \"mediaType\": \"VECTOR\",",
              " *      \"operationStatus\": \"PENDING\",",
              " *      \"parentFolderId\": \"media-root\",",
              " *      \"private\": false,",
              " *      \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *      \"sizeInBytes\": \"20532\",",
              " *      \"sourceUrl\": \"https://cdn.vectorstock.com/example-vector-art.webp\",",
              " *      \"state\": \"OK\",",
              " *      \"thumbnailUrl\": \"https://static.wixstatic.com/shapes/w8ide0_e9xsr959r1ze5aavswj2978r6jt05bwl-tmp.svg\",",
              " *      \"url\": \"https://static.wixstatic.com/shapes/w8ide0_e9xsr959r1ze5aavswj2978r6jt05bwl-tmp.svg\"",
              " *    },",
              " *    {",
              " *      \"_createdDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"_id\": \"w8ide0_f6e8f09e5055432286db483917ba923e\",",
              " *      \"_updatedDate\": \"2023-07-23T12:15:50.000Z\",",
              " *      \"displayName\": \"video1.mp4\",",
              " *      \"hash\": \"\",",
              " *      \"internalTags\": [],",
              " *      \"labels\": [],",
              " *      \"mediaType\": \"VIDEO\",",
              " *      \"operationStatus\": \"PENDING\",",
              " *      \"parentFolderId\": \"media-root\",",
              " *      \"private\": false,",
              " *      \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *      \"sizeInBytes\": \"-1\",",
              " *      \"sourceUrl\": \"https://cdn.pixabay.com/example-video.mp4\",",
              " *      \"state\": \"OK\",",
              " *      \"thumbnailUrl\": \"https://static.wixstatic.com/media/yibv80byru0wei9ficri8fd8o1rghueu.png\",",
              " *      \"url\": \"https://video.wixstatic.com/video/w8ide0_f6e8f09e5055432286db483917ba923e/file\"",
              " *    }",
              " *  ]",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Bulk import files from visitor input into a form ",
            "body": [
              "/****************************************",
              " * Backend code - bulk-import-files.web.js *",
              " ***************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const importFiles = webMethod(Permissions.Anyone, async (importFileRequests) => {",
              "  try {",
              "    const elevatedBulkImportFiles = elevate(files.bulkImportFiles)",
              "    const importedFiles = await elevatedBulkImportFiles(importFileRequests);",
              "",
              "    console.log(\"Imported files:\", importedFiles);",
              "    return importedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "  ",
              "  ",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { importFiles } from 'backend/bulk-import-files.web';",
              "",
              "$w.onReady(() => {",
              "  const newMedia = [];",
              "  ",
              "  $w('#addMedia').onClick( () => {",
              "    const newMediaFile = {",
              "      displayName: $w('#displayName').value,",
              "      mediaType: $w('#mediaType').value,",
              "      parentFolderId: $w('#parentFolderId').value,",
              "      url: $w('#url').value",
              "    }",
              "    newMedia.push(newMediaFile);",
              "",
              "    // show message to remind user to submit media",
              "    // after adding all media files for 5 seconds",
              "    $w('#rememberToUploadMessage').show();",
              "    setTimeout(() => {",
              "      $w('#rememberToUploadMessage').hide();",
              "    }, 5000)",
              "  });",
              "",
              "  $w('#uploadMedia').onClick(async () => {",
              "    if (newMedia.length === 0) {",
              "      // if no media has been added then",
              "      // show message to add media",
              "      $w('#addMediaMsg').show()",
              "    } else {",
              "      await importFiles(newMedia);",
              "",
              "      $w('#successfulUploadMsg').show();",
              "      setTimeout(() => {",
              "        $w('#successfulUploadMsg').hide();",
              "      }, 10000);",
              "    }",
              "  });",
              "});",
              ""
            ],
            "extra": {
              "description": "This code shows a page where the visitor adds basic media file data to a form and then adds it to the `newMedia` array. When the visitor clicks the upload button, all added media files are uploaded using the `bulkImportFiles()` function."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "bulkImportFiles",
      "isAdminMethod": true
    },
    {
      "name": "bulkRestoreFilesFromTrashBin",
      "params": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the files to restore from the Media Manager's trash bin.",
          "required": true
        }
      ],
      "requiredFields": [
        "fileIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Restores the specified files from the Media Manager's trash bin, and moves them to their original locations in the Media Manager.",
        "description": [
          "The `bulkRestoreFilesFromTrashBin()` function returns a Promise that resolves when the files have been restored."
        ],
        "examples": [
          {
            "title": "Bulk restore deleted files by IDs (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample fileIds value:",
              " * [",
              " *   'd4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg',",
              " *   'd4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png',",
              " *   'd4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg'",
              " * ]",
              " */",
              "",
              "async function myBulkRestoreFilesFromTrashBinFunction(fileIds) {",
              "  try {",
              "    const restoredFiles = await files.bulkRestoreFilesFromTrashBin(fileIds);",
              "",
              "    console.log('Restored Files:', restoredFiles);",
              "    return restoredFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "}",
              "",
              "/* Promise resolves to void */"
            ]
          },
          {
            "title": "Bulk restore deleted files by IDs (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample fileIds value:",
              " * [",
              " *   'd4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg',",
              " *   'd4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png',",
              " *   'd4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg'",
              " * ]",
              " */",
              "",
              "export const myBulkRestoreFilesFromTrashBinFunction = webMethod(Permissions.Anyone, async (fileIds) => {",
              "  try {",
              "    const elevatedBulkRestoreFilesFromTrashBin = elevate(files.bulkRestoreFilesFromTrashBin);",
              "    const restoredFiles = await elevatedBulkRestoreFilesFromTrashBin(fileIds);",
              "",
              "    console.log('Restored Files:', restoredFiles);",
              "    return restoredFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */",
              ""
            ]
          },
          {
            "title": "Bulk restores all non-permanently deleted files of chosen types ",
            "body": [
              "/********************************************",
              " * Backend code - bulk-restore-files.web.js *",
              " *******************************************/",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const restoreFiles = webMethod(Permissions.Anyone, async (mediaTypes) => {",
              "  let idList = []",
              "  try {",
              "    const options = {",
              "        mediaTypes: mediaTypes",
              "    };",
              "    const elevatedListDeletedFiles = elevate(files.listDeletedFiles)",
              "    const deletedFiles = await elevatedListDeletedFiles(options);",
              "",
              "    idList = deletedFiles.files.map((file) => {",
              "     return file._id",
              "    });",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "",
              "  try {",
              "    const elevatedBulkRestoreFilesFromTrashBin = elevate(files.bulkRestoreFilesFromTrashBin);",
              "    const restoredFiles = await elevatedBulkRestoreFilesFromTrashBin(idList);",
              "",
              "    console.log('Restored Files:', restoredFiles);",
              "    return restoredFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { restoreFiles } from 'backend/bulk-restore-files.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#restoreMedia').onClick(async () => {",
              "    const mediaTypes = []",
              "    if ($w('#image').checked) {",
              "        mediaTypes.push(\"IMAGE\")",
              "    }",
              "    if ($w('#video').checked) {",
              "        mediaTypes.push(\"VIDEO\")",
              "    }",
              "    if ($w('#audio').checked) {",
              "        mediaTypes.push(\"AUDIO\")",
              "    }",
              "    if ($w('#document').checked) {",
              "        mediaTypes.push(\"DOCUMENT\")",
              "    }",
              "    if ($w('#vector').checked) {",
              "        mediaTypes.push(\"VECTOR\")",
              "    }",
              "    if ($w('#archive').checked) {",
              "        mediaTypes.push(\"ARCHIVE\")",
              "    }",
              "    if ($w('#model3d').checked) {",
              "        mediaTypes.push(\"MODEL3D\")",
              "    }",
              "    await restoreFiles(mediaTypes);",
              "",
              "    $w('#filesRestoredMsg').show();",
              "    setTimeout(() => {",
              "      $w('#filesRestoredMsg').hide();",
              "    }, 5000);",
              "  });",
              "});"
            ],
            "extra": {
              "description": "This code is an example of a page on which a visitor chooses a media type (or types). All files of that type/those types in which have been (non-permanently) deleted are restored."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "bulkRestoreFilesFromTrashBin",
      "isAdminMethod": true
    },
    {
      "name": "generateFileDownloadUrl",
      "params": [
        {
          "name": "fileId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.GenerateFileDownloadUrlOptions"
            }
          ],
          "doc": "Options to use when generating a file's download URL.",
          "required": false
        }
      ],
      "requiredFields": [
        "fileId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.GenerateFileDownloadUrlResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Generates one or more temporary URLs for downloading a specific file in the Media Manager.",
        "description": [
          "The `generateFileDownloadUrl()` function returns a Promise that resolves to an array containing download URLs for the assets specified in the options parameter.\n\nTo download different assets of the file, use the `assetKeys` parameter which generates a download URL for each asset.\nIf no asset key is specified, it defaults to `src`, which generates one download URL in the original file's format and quality.\n\nUse this function to grant external clients access to a private media file. Use the `expirationInMinutes` parameter to set the URL expiration time, and the `expirationRedirectUrl` parameter to add a redirect URL when the URL expires.\n\nTo generate a permanent URL for downloading a compressed file that contains multiple files in the Media Manager, use the `generateFilesDownloadUrl()` function.\nSince this is a permanent URL, it is less secure. Therefore, to download private files, use the `generateFileDownloadUrl()` function for each private file that you want to generate a download URL for."
        ],
        "examples": [
          {
            "title": "Generate a file download URL (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample fileId value: 'd4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg' */",
              "",
              "async function myGenerateFileDownloadUrlFunction(fileId) {",
              "  try {",
              "    const result = await files.generateFileDownloadUrl(fileId);",
              "",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"downloadUrls\": [",
              " *     {",
              " *       \"assetKey\": \"src\",",
              " *       \"url\": \"https://download-files.wixmp.com/media/d4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1cm46YXBwOmU2NjYzMGU3MTRmMDQ5MGFhZWExZjE0OWIzYjY5ZTMyIiwic3ViIjoidXJuOmFwcDplNjY2MzBlNzE0ZjA0OTBhYWVhMWYxNDliM2I2OWUzMiIsImF1ZCI6WyJ1cm46c2VydmljZTpmaWxlLmRvd25sb2FkIl0sImlhdCI6MTY5MjAyMTMxNSwiZXhwIjoxNjkyMDU3MzI1LCJqdGkiOiJjZTA1MzUxYy1jNDA4LTRlYmMtYWI0OC04MWM0NWJlZDlkM2IiLCJvYmoiOltbeyJwYXRoIjoiL21lZGlhL2Q0ZGRlMV9kZWUxOGM5YWRhMTc0YTgxOGNjZjc1YzUwZTcyYzczOX5tdjIuanBnIn1dXSwiZGlzIjp7ImZpbGVuYW1lIjoibmVvbS1BZGtKLUxncFRyRS11bnNwbGFzaC5qcGciLCJ0eXBlIjoiYXR0YWNobWVudCJ9fQ.HfZiuG7UFavOpgh2T0lVn56oZ9NpLoV3z9Gmnqptt8Y\"",
              " *     }",
              " *   ]",
              " * }",
              " */"
            ]
          },
          {
            "title": "Generate a file download URL (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "// Sample fileId value: 'd4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg'",
              "",
              "export const myGenerateFileDownloadUrlFunction = webMethod(Permissions.Anyone, async (fileId) => {",
              "  try {",
              "    const elevatedGenerateFileDonwloadUrl = elevate(files.generateFileDownloadUrl)",
              "    const result = await elevatedGenerateFileDonwloadUrl(fileId);",
              "",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"downloadUrls\": [",
              " *     {",
              " *       \"assetKey\": \"src\",",
              " *       \"url\": \"https://download-files.wixmp.com/media/d4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1cm46YXBwOmU2NjYzMGU3MTRmMDQ5MGFhZWExZjE0OWIzYjY5ZTMyIiwic3ViIjoidXJuOmFwcDplNjY2MzBlNzE0ZjA0OTBhYWVhMWYxNDliM2I2OWUzMiIsImF1ZCI6WyJ1cm46c2VydmljZTpmaWxlLmRvd25sb2FkIl0sImlhdCI6MTY5MjAyMTMxNSwiZXhwIjoxNjkyMDU3MzI1LCJqdGkiOiJjZTA1MzUxYy1jNDA4LTRlYmMtYWI0OC04MWM0NWJlZDlkM2IiLCJvYmoiOltbeyJwYXRoIjoiL21lZGlhL2Q0ZGRlMV9kZWUxOGM5YWRhMTc0YTgxOGNjZjc1YzUwZTcyYzczOX5tdjIuanBnIn1dXSwiZGlzIjp7ImZpbGVuYW1lIjoibmVvbS1BZGtKLUxncFRyRS11bnNwbGFzaC5qcGciLCJ0eXBlIjoiYXR0YWNobWVudCJ9fQ.HfZiuG7UFavOpgh2T0lVn56oZ9NpLoV3z9Gmnqptt8Y\"",
              " *     }",
              " *   ]",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Generate a file download URL with options ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample fileId value: 'd4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg'",
              " * ",
              " * Sample options value: ",
              " * {",
              " *   assetKeys: ['320kbs.mp3'],",
              " *   downloadFileName: 'MyAudio.mp3',",
              " *   expirationInMinutes: '60',",
              " *   expirationRedirectUrl: 'www.example.com/store'",
              " * }",
              " */",
              "",
              "export const myGenerateFileDownloadUrlFunction = webMethod(Permissions.Anyone, async (fileId, options) => {",
              "  try {",
              "    const elevatedGenerateFileDonwloadUrl = elevate(files.generateFileDownloadUrl)",
              "    const result = await elevatedGenerateFileDonwloadUrl(fileId, options);",
              "",
              "    const url = result.downloadUrls[0].url;",
              "    return url;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"downloadUrls\": [",
              " *     {",
              " *       \"assetKey\": \"320kbs.mp3\",",
              " *       \"url\": \"https://download-files.wixmp.com/mp3/d4dde1_by0oqi7mrlyvhnodnhoywu6rr2egzujz-320.mp3?token=eyJhmHWBeilpRrgQGkzYAMcWQsyoISC4MSuG.eyJpc3MiOiJ1cm46YXBwOmU2NjYzMGU3MTRmMDQ5MGFhZWExZjE0OWIzYjY5ZTMyIiwic3ViIjoidXJuOmFwcDplNjY2MzBlNzE0ZjA0OTBhYWVhMWYxNDliM2I2OWUzMiIsImF1ZCI6WyJ1cm46c2VydmljZTpmaWxlLmRvd25sb2FkIl0sImlhdCI6MTY5MjI3MTQzMCwiZXhwIjoxNjkyMjcxNTYwLCJqdGkiOiJlZmZjZjdmMy1hZTdiLTQwMTUtYmIyZi00ZmE3ZDYzMGVlMTkiLCJvYmoiOltbeyJwYXRoIjoiL21wMy9kNGRkZTFfMjM2YzhlMDJmMTdlNDkyMjhlMjE3N2RjMjlkOWJkNzEtMzIwLm1wMyJ9XV0sInJlZCI6Imh0dHBzOi8vd3d3LmpodS5lZHUvIiwiZGlzIjp7ImZpbGVuYW1lIjoiR29yaWxsYXogLSBGZWVsIEdvb2QgSW5jLm1wMyIsInR5cGUiOiJhdHRhY2htZW50In19.qczf9WH3nz-tZ65D_RE8tzW-7o_cuq3b-oXX7QSYeAw\"",
              " *     }",
              " *   ]",
              " * }",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "generateFileDownloadUrl",
      "isAdminMethod": true
    },
    {
      "name": "generateFileResumableUploadUrl",
      "params": [
        {
          "name": "mimeType",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File mime type.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.GenerateFileResumableUploadUrlOptions"
            }
          ],
          "doc": "Options to use when generating a resumable upload URL.",
          "required": false
        }
      ],
      "requiredFields": [
        "mimeType"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.GenerateFileResumableUploadUrlResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Generates a resumable upload URL to allow external clients to upload large files over 10MB to the Media Manager.",
        "description": [
          "The `generateFileResumableUploadUrl()` function returns a Promise that resolves to an upload URL, token, and protocol.\n\nWhen using the resumable upload URL, any interruptions will pause the file upload process, which automatically resumes once the interruption is resolved. The resumable upload URL is also helpful when network connection is poor.\n\nTo learn how external clients can use the generated upload URL in the response to upload large files to the Media Manager, see the Resumable Upload API article."
        ],
        "examples": [
          {
            "title": "Generate a file resumable upload url (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample mimeType value: 'image/jpeg'",
              " *",
              " * Sample options value:",
              " * {",
              " *   fileName: 'image1.jpeg',",
              " *   parentFolderId: '103601562ec94214bee61f470b403dd5',",
              " *   labels: ['nature', 'outdoors']",
              " * }",
              " */",
              "",
              "async function myGenerateFileResumableUploadUrlFunction(mimeType, options) {",
              "  try {",
              "    const result = await files.generateFileResumableUploadUrl(mimeType, options);",
              "  ",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "} ",
              "  ",
              "/* Promise resolves to:",
              " * {",
              " *  \"uploadProtocol\": \"TUS\",",
              " *  \"uploadToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlMWIwNTkxYi0wMTQyLTRkOTctYjg2My1lOTQwN2ZiZjdhMDEiLCJhdWQiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJpc3MiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJleHAiOjE3MDIzNjM0NTIsImlhdCI6MTcwMTc1ODY0MiwiYnVja2V0IjoidXBsb2FkLXRtcC13aXhtcC1jZGZjMzg0ZjE1ODQxYWFhNWVhYjE2YjEiLCJwYXRoIjoibWVkaWEvYThhNTJiXzFhYTNkZDQzMTY4OTQxYjhiMDE0M2M0ZTA5MDY1M2U1fm12Mi5qcGVnIiwiY2FsbGJhY2tVcmwiOiJodHRwczovL3dpeG1wLWNkZmMzODRmMTU4NDFhYWE1ZWFiMTZiMS5hcHBzcG90LmNvbS9fYXBpL3YzL3VwbG9hZC9jYWxsYmFjaz91cGxvYWRUb2tlbj1leUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMzTWlPaUoxY200NmMyVnlkbWxqWlRwbWFXeGxMblZ3Ykc5aFpDSXNJbUYxWkNJNkluVnlianB6WlhKMmFXTmxPbVpwYkdVdWRYQnNiMkZrSWl3aWMzVmlJam9pZFhKdU9tRndjRHBsTmpZMk16QmxOekUwWmpBME9UQmhZV1ZoTVdZeE5EbGlNMkkyT1dVek1pSXNJbWxoZENJNk1UY3dNVGMxT0RZME1pd2laWGh3SWpveE56QXhPREF4T0RReUxDSnFkR2tpT2lJME5EbGxNakE0WkdZNE5XRWlMQ0ppYTNRaU9pSnpkR0YwYVdNdWQybDRjM1JoZEdsakxtTnZiU0lzSW5CMGFDSTZJaTl0WldScFlTOWhPR0UxTW1KZk1XRmhNMlJrTkRNeE5qZzVOREZpT0dJd01UUXpZelJsTURrd05qVXpaVFYtYlhZeUxtcHdaV2NpTENKaFkyd2lPaUp3ZFdKc2FXTWlMQ0pzWm1NaU9tNTFiR3dzSW1Oc1lpSTZleUoxY213aU9pSm9kSFJ3Y3pvdkwzZHBlSEJ5YVhaaGRHVnRaV1JwWVM1aGNIQnpjRzkwTG1OdmJTOTJNeTl0Y0M5bWFXeGxjeTkxY0d4dllXUXZiV1ZrYVdFdllUaGhOVEppWHpGaFlUTmtaRFF6TVRZNE9UUXhZamhpTURFME0yTTBaVEE1TURZMU0yVTFmbTEyTWk1cWNHVm5JaXdpWVhSMFlXTm9iV1Z1ZENJNmV5SndZWFJvSWpvaUwyMWxaR2xoTDJFNFlUVXlZbDh4WVdFelpHUTBNekUyT0RrME1XSTRZakF4TkROak5HVXdPVEEyTlRObE5YNXRkakl1YW5CbFp5SXNJblZ3Ykc5aFpGOTBiMnRsYmlJNklrSk1iRlp0U0MxMFZVNDNhV2hIUWpOUGJFZEtTbnBVVm1WeVZqQjBPWFp2YkhFM2MzcFZSbkZ5YWpCS1QyOWhaalJMTkZwUE9IbENNSGhrT1dka2EyZzFMWFYxZEUxalpWcFRTblZhZEVKTVYyOTJjMFpOVERSbk9IQnVPWFJwWVZCV2JrOW9MVEZvWmtVNGJqTjFPWEZZVWxKSVdVWXdSMFF5ZVVSS1RraDNlVWxUUzBkaVUydGpNVEl3WDFCTFl5MXFTV2xMT1daVFptZDZkRkpFZFhWemJubDNWa1JyZEdsalgxOHhkazVUWTJOYVFXcHBORmt5UTJaWFJ6Sm1VemxaT0cxTGVqZEZZakpHWmtaTGJVSlBYMlIzUzBweVgweGFaakJqYTIxS1pEZHZaVlIzYjJwR2JFa3dWemR6UzNoVVNFdDRWbVZoYzFKMlYySnljbEU0V0RkeU1IcDNUREYyV1c5MVNXdE1ielJRWlhFMU5VNVNSMEpRZG5OVFpXbFZWV2xFVUZRMldrbG1WMmRQZFZoUGRrcGFkVWhDVTA5Vk9EbEdjbEozU2taTVVqUk9UbTlJZDA1bGVsSlBTVnB2YmtWV2FUUlNaSE5OZDB0dVMzRTNOMUUwUW5GT1RUUnBaV1YwYWs1RFYzSmxjMnRRUXkwMVVsQllSbVp6YlVad1QwaGxRVlJXVW1NdFdqZFRZbTFIVTBGMFN6UlJRVFpSU1MxQk5IUTJVVm94T0dSWlRVbEJjMDlxTkZNdFgyZHhTakYzTmxCb2NYSmhUR1pGWDNabWFrZDROMDlKUjJWSVFuZzBYMU51T1UxeGNteExRMlJ1VWpCQlZGOTJjVnB5U2s5T1ZWbE1UM0JTVEU1bFExTlhjVzQzUzA1V2RuTjBVR2RyU3paMlZXa3pWMHMyY2xvdFNYbHhlRFZMU1ZFNFdFaDBjakkxYm1sU1p6VlNVMkYzUzFWS01FWlhNall4VDAxM1RWcGhWUzB4YUhoUk5HcFdWR2h2V1VJMU5GcEZTbUZPVFZSYVdHeHVSM2xxY2tkWWFFWTRiMVI0VTJjMFJUUlFlVFJSV1V4NVRrbGhaREkzY21zOUluMHNJbWhsWVdSbGNuTWlPbTUxYkd3c0luQmhjM04wYUhKdmRXZG9JanAwY25WbGZYMC5nN1FFMDduUk9CNTZ6MlljQ0ZLazdRUkZJaDJ6c0FnNUlXODlsSmJCejRnIiwiYWNsIjoicHVibGljIiwicHJvdG9jb2wiOiJ0dXMiLCJtaW1lVHlwZSI6ImltYWdlL2pwZWciLCJzZXNzaW9uVVJMIjoiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vdXBsb2FkL3N0b3JhZ2UvdjEvYi91cGxvYWQtdG1wLXdpeG1wLWNkZmMzODRmMTU4NDFhYWE1ZWFiMTZiMS9vP3ByZWRlZmluZWRBY2w9cHVibGljUmVhZFx1MDAyNnByb2plY3Rpb249ZnVsbFx1MDAyNnVwbG9hZFR5cGU9cmVzdW1hYmxlXHUwMDI2dXBsb2FkX2lkPUFCUHRjUHJ6QkVoaHRaTm1yM0ViZG5pOXcwUy1DVmdZZnFmYVgyUXZPT29yNEt2bFBhVUtRdGlwMkNwXzdYTndxblRWSmRaWkxOYlE3TU90M1NlTmx6R3pLOGpZRXZMNHA5QUFtbi1RTE96LThxQWQifQ.hHvZwmkHImDu4khcqyWx44TgWT_d26wIhcAbRUH37oI\",",
              " *  \"uploadUrl\": \"https://upload.wixmp.com/upload/tus\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Generate a file resumable upload url (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample mimeType value: 'image/jpeg'",
              " *",
              " * Sample options value:",
              " * {",
              " *   fileName: 'image1.jpeg',",
              " *   parentFolderId: '103601562ec94214bee61f470b403dd5',",
              " *   labels: ['nature', 'outdoors']",
              " * }",
              " */",
              "",
              "export const myGenerateFileResumableUploadUrlFunction = webMethod(Permissions.Anyone, async (mimeType, options) => {",
              "  try {",
              "    const elevatedGenerateFileResumableUploadUrl = elevate(files.generateFileResumableUploadUrl);",
              "    const result = await elevatedGenerateFileResumableUploadUrl(mimeType, options);",
              "  ",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *  \"uploadProtocol\": \"TUS\",",
              " *  \"uploadToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlMWIwNTkxYi0wMTQyLTRkOTctYjg2My1lOTQwN2ZiZjdhMDEiLCJhdWQiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJpc3MiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJleHAiOjE3MDIzNjM0NTIsImlhdCI6MTcwMTc1ODY0MiwiYnVja2V0IjoidXBsb2FkLXRtcC13aXhtcC1jZGZjMzg0ZjE1ODQxYWFhNWVhYjE2YjEiLCJwYXRoIjoibWVkaWEvYThhNTJiXzFhYTNkZDQzMTY4OTQxYjhiMDE0M2M0ZTA5MDY1M2U1fm12Mi5qcGVnIiwiY2FsbGJhY2tVcmwiOiJodHRwczovL3dpeG1wLWNkZmMzODRmMTU4NDFhYWE1ZWFiMTZiMS5hcHBzcG90LmNvbS9fYXBpL3YzL3VwbG9hZC9jYWxsYmFjaz91cGxvYWRUb2tlbj1leUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMzTWlPaUoxY200NmMyVnlkbWxqWlRwbWFXeGxMblZ3Ykc5aFpDSXNJbUYxWkNJNkluVnlianB6WlhKMmFXTmxPbVpwYkdVdWRYQnNiMkZrSWl3aWMzVmlJam9pZFhKdU9tRndjRHBsTmpZMk16QmxOekUwWmpBME9UQmhZV1ZoTVdZeE5EbGlNMkkyT1dVek1pSXNJbWxoZENJNk1UY3dNVGMxT0RZME1pd2laWGh3SWpveE56QXhPREF4T0RReUxDSnFkR2tpT2lJME5EbGxNakE0WkdZNE5XRWlMQ0ppYTNRaU9pSnpkR0YwYVdNdWQybDRjM1JoZEdsakxtTnZiU0lzSW5CMGFDSTZJaTl0WldScFlTOWhPR0UxTW1KZk1XRmhNMlJrTkRNeE5qZzVOREZpT0dJd01UUXpZelJsTURrd05qVXpaVFYtYlhZeUxtcHdaV2NpTENKaFkyd2lPaUp3ZFdKc2FXTWlMQ0pzWm1NaU9tNTFiR3dzSW1Oc1lpSTZleUoxY213aU9pSm9kSFJ3Y3pvdkwzZHBlSEJ5YVhaaGRHVnRaV1JwWVM1aGNIQnpjRzkwTG1OdmJTOTJNeTl0Y0M5bWFXeGxjeTkxY0d4dllXUXZiV1ZrYVdFdllUaGhOVEppWHpGaFlUTmtaRFF6TVRZNE9UUXhZamhpTURFME0yTTBaVEE1TURZMU0yVTFmbTEyTWk1cWNHVm5JaXdpWVhSMFlXTm9iV1Z1ZENJNmV5SndZWFJvSWpvaUwyMWxaR2xoTDJFNFlUVXlZbDh4WVdFelpHUTBNekUyT0RrME1XSTRZakF4TkROak5HVXdPVEEyTlRObE5YNXRkakl1YW5CbFp5SXNJblZ3Ykc5aFpGOTBiMnRsYmlJNklrSk1iRlp0U0MxMFZVNDNhV2hIUWpOUGJFZEtTbnBVVm1WeVZqQjBPWFp2YkhFM2MzcFZSbkZ5YWpCS1QyOWhaalJMTkZwUE9IbENNSGhrT1dka2EyZzFMWFYxZEUxalpWcFRTblZhZEVKTVYyOTJjMFpOVERSbk9IQnVPWFJwWVZCV2JrOW9MVEZvWmtVNGJqTjFPWEZZVWxKSVdVWXdSMFF5ZVVSS1RraDNlVWxUUzBkaVUydGpNVEl3WDFCTFl5MXFTV2xMT1daVFptZDZkRkpFZFhWemJubDNWa1JyZEdsalgxOHhkazVUWTJOYVFXcHBORmt5UTJaWFJ6Sm1VemxaT0cxTGVqZEZZakpHWmtaTGJVSlBYMlIzUzBweVgweGFaakJqYTIxS1pEZHZaVlIzYjJwR2JFa3dWemR6UzNoVVNFdDRWbVZoYzFKMlYySnljbEU0V0RkeU1IcDNUREYyV1c5MVNXdE1ielJRWlhFMU5VNVNSMEpRZG5OVFpXbFZWV2xFVUZRMldrbG1WMmRQZFZoUGRrcGFkVWhDVTA5Vk9EbEdjbEozU2taTVVqUk9UbTlJZDA1bGVsSlBTVnB2YmtWV2FUUlNaSE5OZDB0dVMzRTNOMUUwUW5GT1RUUnBaV1YwYWs1RFYzSmxjMnRRUXkwMVVsQllSbVp6YlVad1QwaGxRVlJXVW1NdFdqZFRZbTFIVTBGMFN6UlJRVFpSU1MxQk5IUTJVVm94T0dSWlRVbEJjMDlxTkZNdFgyZHhTakYzTmxCb2NYSmhUR1pGWDNabWFrZDROMDlKUjJWSVFuZzBYMU51T1UxeGNteExRMlJ1VWpCQlZGOTJjVnB5U2s5T1ZWbE1UM0JTVEU1bFExTlhjVzQzUzA1V2RuTjBVR2RyU3paMlZXa3pWMHMyY2xvdFNYbHhlRFZMU1ZFNFdFaDBjakkxYm1sU1p6VlNVMkYzUzFWS01FWlhNall4VDAxM1RWcGhWUzB4YUhoUk5HcFdWR2h2V1VJMU5GcEZTbUZPVFZSYVdHeHVSM2xxY2tkWWFFWTRiMVI0VTJjMFJUUlFlVFJSV1V4NVRrbGhaREkzY21zOUluMHNJbWhsWVdSbGNuTWlPbTUxYkd3c0luQmhjM04wYUhKdmRXZG9JanAwY25WbGZYMC5nN1FFMDduUk9CNTZ6MlljQ0ZLazdRUkZJaDJ6c0FnNUlXODlsSmJCejRnIiwiYWNsIjoicHVibGljIiwicHJvdG9jb2wiOiJ0dXMiLCJtaW1lVHlwZSI6ImltYWdlL2pwZWciLCJzZXNzaW9uVVJMIjoiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vdXBsb2FkL3N0b3JhZ2UvdjEvYi91cGxvYWQtdG1wLXdpeG1wLWNkZmMzODRmMTU4NDFhYWE1ZWFiMTZiMS9vP3ByZWRlZmluZWRBY2w9cHVibGljUmVhZFx1MDAyNnByb2plY3Rpb249ZnVsbFx1MDAyNnVwbG9hZFR5cGU9cmVzdW1hYmxlXHUwMDI2dXBsb2FkX2lkPUFCUHRjUHJ6QkVoaHRaTm1yM0ViZG5pOXcwUy1DVmdZZnFmYVgyUXZPT29yNEt2bFBhVUtRdGlwMkNwXzdYTndxblRWSmRaWkxOYlE3TU90M1NlTmx6R3pLOGpZRXZMNHA5QUFtbi1RTE96LThxQWQifQ.hHvZwmkHImDu4khcqyWx44TgWT_d26wIhcAbRUH37oI\",",
              " *  \"uploadUrl\": \"https://upload.wixmp.com/upload/tus\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Use a file upload url in an external node.js application",
            "body": [
              "/********************************",
              " * External Node.js application *",
              " *******************************/",
              "",
              "import axios from 'axios';",
              "",
              "/* Sample fileName value: 'video1.mp4'",
              " * Sample contentType value: 'video/mp4'",
              " * Sample videoToUpload value: 'path/to/yourVideo.mp4'",
              " */",
              "",
              "async function myUploadVideoFunction(generatedUploadUrl, videoToUpload, fileName, contentType) {",
              "  const response = await axios.put(generatedUploadUrl, videoToUpload, {",
              "    headers: {",
              "      'Content-Type': contentType",
              "    },",
              "    params: {",
              "      filename: fileName",
              "    }",
              "  });",
              "",
              "  return `${response[0].uploadUrl}`;",
              "}"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "generateFileResumableUploadUrl",
      "isAdminMethod": true
    },
    {
      "name": "generateFileUploadUrl",
      "params": [
        {
          "name": "mimeType",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File mime type.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.GenerateFileUploadUrlOptions"
            }
          ],
          "doc": "Options to use when generating a file's upload URL.",
          "required": false
        }
      ],
      "requiredFields": [
        "mimeType"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.GenerateFileUploadUrlResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Generates an upload URL to allow external clients to upload a file to the Media Manager.",
        "description": [
          "The `generateFileUploadUrl()` function returns a Promise that resolves to an upload URL.\n\nTo learn how external clients can use the generated upload URL in the response to upload a file to the Media Manager, see the Upload API article.\n\n> **Note:** Any interruption in the upload process stops the file upload. For files larger than 10MB, or when network connection is poor, use `generateFileResumableUploadUrl()` instead. With the resumable upload URL, any interruption in the upload process pauses the file upload, and resumes the file upload process after the interruption."
        ],
        "examples": [
          {
            "title": "Generate a file upload url (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample mimeType value: 'image/jpeg'",
              " * Sample options value:",
              " * {",
              " *   fileName: 'image1.jpeg',",
              " *   parentFolderId: '103601562ec94214bee61f470b403dd5',",
              " *   labels: ['nature', 'outdoors']",
              " * }",
              " */",
              "",
              "async function myGenerateFileUploadUrlFunction(mimeType, options) {",
              "  try {",
              "    const result = await files.generateFileUploadUrl(mimeType, options);",
              "  ",
              "    const url = result.uploadUrl;",
              "    return url;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "} ",
              "  ",
              "/* Promise resolves to:",
              " * {",
              " *   \"uploadUrl\": \"https://upload.wixmp.com/upload/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzYTk0N2E5Ni01ZmFiLTQ0NjAtODVkNS1hNTIxNWRjNzRiMjEiLCJhdWQiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJpc3MiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJleHAiOjE2OTM5MTk3MjksImlhdCI6MTY5MzgzMzMxOSwiYnVja2V0IjoidXBsb2FkLXRtcC13aXhtcC1jZGZjMzg0ZjE1ODQxYWFhNWVhYjE2YjEiLCJwYXRoIjoibWVkaWEvZDRkZGUxXzE4Nzk3M2ZhYWRmNjQ3MGM4OTRhN2JjNmMyNjA2Yjkzfm12Mi5qcGVnIiwiY2FsbGJhY2tVcmwiOiJodHRwczovL3dpeG1wLWNkZmMzODRmMTU4NDFhYWE1ZWFiMTZiMS5hcHBzcG90LmNvbS9fYXBpL3YzL3VwbG9hZC9jYWxsYmFjaz91cGxvYWRUb2tlbj1leUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMzTWlPaUoxY200NmMyVnlkbWxqWlRwbWFXeGxMblZ3Ykc5aFpDSXNJbUYxWkNJNkluVnlianB6WlhKMmFXTmxPbVpwYkdVdWRYQnNiMkZrSWl3aWMzVmlJam9pZFhKdU9tRndjRHBsTmpZMk16QmxOekUwWmpBME9UQmhZV1ZoTVdZeE5EbGlNMkkyT1dVek1pSXNJbWxoZENJNk1UWTVNemd6TXpNeE9Td2laWGh3SWpveE5qa3pPRGMyTlRFNUxDSnFkR2tpT2lJeU9ERXpaR013T1dJNU9EQWlMQ0ppYTNRaU9pSnpkR0YwYVdNdWQybDRjM1JoZEdsakxtTnZiU0lzSW5CMGFDSTZJaTl0WldScFlTOWtOR1JrWlRGZk1UZzNPVGN6Wm1GaFpHWTJORGN3WXpnNU5HRTNZbU0yWXpJMk1EWmlPVE4tYlhZeUxtcHdaV2NpTENKaFkyd2lPaUp3ZFdKc2FXTWlMQ0pzWm1NaU9tNTFiR3dzSW1Oc1lpSTZleUoxY213aU9pSm9kSFJ3Y3pvdkwzZHBlSEJ5YVhaaGRHVnRaV1JwWVM1aGNIQnpjRzkwTG1OdmJTOTJNeTl0Y0M5bWFXeGxjeTkxY0d4dllXUXZiV1ZrYVdFdlpEUmtaR1V4WHpFNE56azNNMlpoWVdSbU5qUTNNR000T1RSaE4ySmpObU15TmpBMllqa3pmbTEyTWk1cWNHVm5JaXdpWVhSMFlXTm9iV1Z1ZENJNmV5SndZWFJvSWpvaUwyMWxaR2xoTDJRMFpHUmxNVjh4T0RjNU56Tm1ZV0ZrWmpZME56QmpPRGswWVRkaVl6WmpNall3Tm1JNU0zNXRkakl1YW5CbFp5SXNJblZ3Ykc5aFpGOTBiMnRsYmlJNklrSk1iRlp0U0MxMFZVNDNhV2hIUWpOUGJFZEtTbnBVVm1WeVZqQjBPWFp2YkhFM2MzcFZSbkZ5YWpCS1QyOWhaalJMTkZwUE9IbENNSGhrT1dka2EyZzFMWFYxZEUxalpWcFRTblZhZEVKTVYyOTJjMFpOVERSbk9IQnVPWFJwWVZCV2JrOW9MVEZvWmtVNGJqTjFPWEZZVWxKSVdVWXdSMFF5ZVVSS1RraDNlVWxUUzBkaVUydGpNVEl3WDFCTFl5MXFTV2xMT1daVFptZDZkRkpFZFhWemJubDNWa1JyZEdsalgxOHhkazVUWTJOYVFXcHBORmt5UTJaWFJ6Sm1VemxaT0cxTGVqZEZZakpHWmtaTGJVSlBYMlIzUzBweVgweGFaakJqYTIxS1pEZHZaVlIzYjJwR2JFa3dWemR6UzNoVVNFdDRWbVZoYzFKMlYySnljbEU0V0RkeU1IcDNUREYyV1c5MVNXdE1ielJRWlhFMU5VNVNSMEpRZG5OVFpXbFZWV2xFVUZRMldrbG1WMmRQZFZoUGRrcGFkVWhDVTA5Vk9EbEdjbEozTm14R00xcFNRVkZST0RKWVpXRktRMmRWU1U1bFNHeFlkVTlzZWtNelVtSTFUQzFoTWtKRlVsQlpSRlpXWVRReWJEWTBiMnhzZUVKMk5qZG9lRjloU2tad1QwaGxRVlJXVW1NdFdqZFRZbTFIVTBGMFN6ZG1ZWEV4VlhOaFpsSnZVRWx5UzBwVWEydE5NREZOUkMwNFUzVTFVR1l4WWpWTWVsRXhNV0ZpYWt4M1pVWXdVMnRmV2xKZldHSTVja3Q1U0hadWRVSkxRMlJ1VWpCQlZGOTJjVnB5U2s5T1ZWbE1UM0JTVEU1bFExTlhjVzQzUzA1V2RuTjBVR2RyU3paMllXTnVjbTlRWDA5MGFTMUdOamRrU2tWelpWZFJhM0I2VW5WUGNIQkpTa1ZUUTJkMVpERkZRa2xOYlUxM1RWcGhWUzB4YUhoUk5HcFdWR2h2V1VJMU5FRnFhSGRpWlZSemRVbEVSRGxFT1dWWGVtaG5VVGhQZUV3MWVHdElORXN3UTFOWE5qSkRRazlQUlVrOUluMHNJbWhsWVdSbGNuTWlPbTUxYkd3c0luQmhjM04wYUhKdmRXZG9JanAwY25WbGZYMC5iRWJSTzdnYkQxaXR0TW9Hb29QUTBsbDZrbW5jSEdfc05pRjRXZzFZWTc0IiwiYWNsIjoicHVibGljIiwibWltZVR5cGUiOiJpbWFnZS9qcGVnIn0.pd9ZssMw0NOTIxmNm0gm3r5WP6ySCy4vBxlT8ufU_Vw\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Generate a file upload url (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample mimeType value: 'image/jpeg'",
              " * Sample options value:",
              " * {",
              " *   fileName: 'image1.jpeg',",
              " *   parentFolderId: '103601562ec94214bee61f470b403dd5',",
              " *   labels: ['nature', 'outdoors']",
              " * }",
              " */",
              "",
              "export const myGenerateFileUploadUrlFunction = webMethod(Permissions.Anyone, async (mimeType, options) => {",
              "  try {",
              "    const elevatedGenerateFileUploadUrl = elevate(files.generateFileUploadUrl);",
              "    const result = await elevatedGenerateFileUploadUrl(mimeType, options);",
              "  ",
              "    const url = result.uploadUrl;",
              "    return url;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "  ",
              "/* Promise resolves to:",
              " * {",
              " *   \"uploadUrl\": \"https://upload.wixmp.com/upload/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzYTk0N2E5Ni01ZmFiLTQ0NjAtODVkNS1hNTIxNWRjNzRiMjEiLCJhdWQiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJpc3MiOiJ1cm46c2VydmljZTp1cGxvYWQiLCJleHAiOjE2OTM5MTk3MjksImlhdCI6MTY5MzgzMzMxOSwiYnVja2V0IjoidXBsb2FkLXRtcC13aXhtcC1jZGZjMzg0ZjE1ODQxYWFhNWVhYjE2YjEiLCJwYXRoIjoibWVkaWEvZDRkZGUxXzE4Nzk3M2ZhYWRmNjQ3MGM4OTRhN2JjNmMyNjA2Yjkzfm12Mi5qcGVnIiwiY2FsbGJhY2tVcmwiOiJodHRwczovL3dpeG1wLWNkZmMzODRmMTU4NDFhYWE1ZWFiMTZiMS5hcHBzcG90LmNvbS9fYXBpL3YzL3VwbG9hZC9jYWxsYmFjaz91cGxvYWRUb2tlbj1leUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMzTWlPaUoxY200NmMyVnlkbWxqWlRwbWFXeGxMblZ3Ykc5aFpDSXNJbUYxWkNJNkluVnlianB6WlhKMmFXTmxPbVpwYkdVdWRYQnNiMkZrSWl3aWMzVmlJam9pZFhKdU9tRndjRHBsTmpZMk16QmxOekUwWmpBME9UQmhZV1ZoTVdZeE5EbGlNMkkyT1dVek1pSXNJbWxoZENJNk1UWTVNemd6TXpNeE9Td2laWGh3SWpveE5qa3pPRGMyTlRFNUxDSnFkR2tpT2lJeU9ERXpaR013T1dJNU9EQWlMQ0ppYTNRaU9pSnpkR0YwYVdNdWQybDRjM1JoZEdsakxtTnZiU0lzSW5CMGFDSTZJaTl0WldScFlTOWtOR1JrWlRGZk1UZzNPVGN6Wm1GaFpHWTJORGN3WXpnNU5HRTNZbU0yWXpJMk1EWmlPVE4tYlhZeUxtcHdaV2NpTENKaFkyd2lPaUp3ZFdKc2FXTWlMQ0pzWm1NaU9tNTFiR3dzSW1Oc1lpSTZleUoxY213aU9pSm9kSFJ3Y3pvdkwzZHBlSEJ5YVhaaGRHVnRaV1JwWVM1aGNIQnpjRzkwTG1OdmJTOTJNeTl0Y0M5bWFXeGxjeTkxY0d4dllXUXZiV1ZrYVdFdlpEUmtaR1V4WHpFNE56azNNMlpoWVdSbU5qUTNNR000T1RSaE4ySmpObU15TmpBMllqa3pmbTEyTWk1cWNHVm5JaXdpWVhSMFlXTm9iV1Z1ZENJNmV5SndZWFJvSWpvaUwyMWxaR2xoTDJRMFpHUmxNVjh4T0RjNU56Tm1ZV0ZrWmpZME56QmpPRGswWVRkaVl6WmpNall3Tm1JNU0zNXRkakl1YW5CbFp5SXNJblZ3Ykc5aFpGOTBiMnRsYmlJNklrSk1iRlp0U0MxMFZVNDNhV2hIUWpOUGJFZEtTbnBVVm1WeVZqQjBPWFp2YkhFM2MzcFZSbkZ5YWpCS1QyOWhaalJMTkZwUE9IbENNSGhrT1dka2EyZzFMWFYxZEUxalpWcFRTblZhZEVKTVYyOTJjMFpOVERSbk9IQnVPWFJwWVZCV2JrOW9MVEZvWmtVNGJqTjFPWEZZVWxKSVdVWXdSMFF5ZVVSS1RraDNlVWxUUzBkaVUydGpNVEl3WDFCTFl5MXFTV2xMT1daVFptZDZkRkpFZFhWemJubDNWa1JyZEdsalgxOHhkazVUWTJOYVFXcHBORmt5UTJaWFJ6Sm1VemxaT0cxTGVqZEZZakpHWmtaTGJVSlBYMlIzUzBweVgweGFaakJqYTIxS1pEZHZaVlIzYjJwR2JFa3dWemR6UzNoVVNFdDRWbVZoYzFKMlYySnljbEU0V0RkeU1IcDNUREYyV1c5MVNXdE1ielJRWlhFMU5VNVNSMEpRZG5OVFpXbFZWV2xFVUZRMldrbG1WMmRQZFZoUGRrcGFkVWhDVTA5Vk9EbEdjbEozTm14R00xcFNRVkZST0RKWVpXRktRMmRWU1U1bFNHeFlkVTlzZWtNelVtSTFUQzFoTWtKRlVsQlpSRlpXWVRReWJEWTBiMnhzZUVKMk5qZG9lRjloU2tad1QwaGxRVlJXVW1NdFdqZFRZbTFIVTBGMFN6ZG1ZWEV4VlhOaFpsSnZVRWx5UzBwVWEydE5NREZOUkMwNFUzVTFVR1l4WWpWTWVsRXhNV0ZpYWt4M1pVWXdVMnRmV2xKZldHSTVja3Q1U0hadWRVSkxRMlJ1VWpCQlZGOTJjVnB5U2s5T1ZWbE1UM0JTVEU1bFExTlhjVzQzUzA1V2RuTjBVR2RyU3paMllXTnVjbTlRWDA5MGFTMUdOamRrU2tWelpWZFJhM0I2VW5WUGNIQkpTa1ZUUTJkMVpERkZRa2xOYlUxM1RWcGhWUzB4YUhoUk5HcFdWR2h2V1VJMU5FRnFhSGRpWlZSemRVbEVSRGxFT1dWWGVtaG5VVGhQZUV3MWVHdElORXN3UTFOWE5qSkRRazlQUlVrOUluMHNJbWhsWVdSbGNuTWlPbTUxYkd3c0luQmhjM04wYUhKdmRXZG9JanAwY25WbGZYMC5iRWJSTzdnYkQxaXR0TW9Hb29QUTBsbDZrbW5jSEdfc05pRjRXZzFZWTc0IiwiYWNsIjoicHVibGljIiwibWltZVR5cGUiOiJpbWFnZS9qcGVnIn0.pd9ZssMw0NOTIxmNm0gm3r5WP6ySCy4vBxlT8ufU_Vw\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Use a file upload url in an external node.js application",
            "body": [
              "/********************************",
              " * External Node.js application *",
              " *******************************/",
              "",
              "import axios from 'axios';",
              "",
              "/* Sample fileName value: 'video1.mp4'",
              " * Sample contentType value: 'video/mp4'",
              " * Sample videoToUpload value: 'path/to/yourVideo.mp4'",
              " */",
              "",
              "async function myUploadVideoFunction(generatedUploadUrl, videoToUpload, fileName, contentType) {",
              "  const response = await axios.put(generatedUploadUrl, videoToUpload, {",
              "    headers: {",
              "      'Content-Type': contentType",
              "    },",
              "    params: {",
              "      filename: fileName",
              "    }",
              "  });",
              "",
              "  return `${response[0].uploadUrl}`;",
              "}"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "generateFileUploadUrl",
      "isAdminMethod": true
    },
    {
      "name": "generateFilesDownloadUrl",
      "params": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the files to download.",
          "required": true
        }
      ],
      "requiredFields": [
        "fileIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.GenerateFilesDownloadUrlResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Generates a URL for downloading a compressed file containing specific files in the Media Manager.",
        "description": [
          "The `generateFilesDownloadUrl()` function returns a Promise that resolves to a download URL.\n\nThe compressed file can contain up to 1000 files.\n\nTo generate one or more temporary URLs for downloading a specific file in the Media Manager, use the `generateFileDownloadUrl()` function.\nYou can use the `expirationInMinutes` parameter to set the URL expiration time, making it more secure than the `generateFilesDownloadUrl()` function.\nTherefore, to download private files, use the `generateFileDownloadUrl` function for each private file that you want to generate a download URL for."
        ],
        "examples": [
          {
            "title": "Generate a download url for multiple files (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample fileIds value:",
              " * [",
              " *   'd4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg',",
              " *   'd4dde1_84a62b7aeb874f73a7b736cad663d6f2.pdf',",
              " *   'd4dde1_e26da94b5cb440649ede0c433425449c~mv2.jpg'",
              " * ]",
              " */",
              "",
              "async function myGenerateFilesDownloadUrlFunction(fileIds) {",
              "  try {",
              "    const generatedUrl = await files.generateFilesDownloadUrl(fileIds);",
              "",
              "    const url = generatedUrl.downloadUrl;",
              "    return url;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"downloadUrl\": \"https://archive.wixmp.com/archive/wix/38f69e35c283495187e85be0c8c06caf\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Generate a download url for multiple files (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample fileIds value:",
              " * [",
              " *   'd4dde1_dee18c9ada174a818ccf75c50e72c739~mv2.jpg',",
              " *   'd4dde1_84a62b7aeb874f73a7b736cad663d6f2.pdf',",
              " *   'd4dde1_e26da94b5cb440649ede0c433425449c~mv2.jpg'",
              " * ]",
              " */",
              "",
              "export const myGenerateFilesDownloadUrlFunction = webMethod(Permissions.Anyone, async (fileIds) => {",
              "  try {",
              "    const elevatedGenerateFilesDownloadUrl = elevate(files.generateFilesDownloadUrl)",
              "    const generatedUrl = await elevatedGenerateFilesDownloadUrl(fileIds);",
              "",
              "    const url = generatedUrl.downloadUrl;",
              "    return url;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"downloadUrl\": \"https://archive.wixmp.com/archive/wix/38f69e35c283495187e85be0c8c06caf\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Generate a download url for all images in media ",
            "body": [
              "/********************************************",
              " * Backend code - download-files-url.web.js *",
              " *******************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const generateDownloadUrl = webMethod(Permissions.Anyone, async (fileIds) => {",
              "  try {",
              "    const elevatedGenerateFilesDownloadUrl = elevate(files.generateFilesDownloadUrl)",
              "    const generatedUrl = await elevatedGenerateFilesDownloadUrl(fileIds);",
              "",
              "    return generatedUrl.downloadUrl;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "  ",
              "export const listImages = webMethod(Permissions.Anyone, async () => {",
              "  const listOptions = {",
              "    mediaTypes: [\"IMAGE\"]",
              "  }",
              "",
              "  try {",
              "    const elevatedListFiles = elevate(files.listFiles)",
              "    const images = await elevatedListFiles(listOptions);",
              "",
              "    return images.files;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { listImages, generateDownloadUrl } from 'backend/download-files-url.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#downloadFiles').disable();",
              "  getDownloadUrl();",
              "});",
              "",
              "async function getDownloadUrl() {",
              "  const images = await listImages();",
              "",
              "  const imageIds = images.map((image) => {",
              "    return image._id;",
              "  });",
              "  const downloadUrl = await generateDownloadUrl(imageIds);",
              "",
              "  $w('#downloadFiles').link = downloadUrl;",
              "  await $w('#downloadFiles').enable();",
              "}"
            ],
            "extra": {
              "description": "This is an example of a function running on page ready. The function lists all the images from media, and then uses their IDs to create a download url."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "generateFilesDownloadUrl",
      "isAdminMethod": true
    },
    {
      "name": "generateVideoStreamingUrl",
      "params": [
        {
          "name": "fileId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.GenerateVideoStreamingUrlOptions"
            }
          ],
          "doc": "Options to use when generating a video file's streaming URL.",
          "required": false
        }
      ],
      "requiredFields": [
        "fileId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.GenerateVideoStreamingUrlResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Generates a URL for streaming a specific video file in the Media Manager.",
        "description": [
          "The `generateVideoStreamingUrl()` function returns a Promise that resolves to a download URL and its asset key.\n\nTo stream different assets of the file, use the `assetKeys` parameter which generates a video streaming URL for each asset. If no asset key is specified, it defaults to `src`, which generates one video streaming URL in the original file's format and quality."
        ],
        "examples": [
          {
            "title": "Generate a video streaming url (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample ID value: 'd4dde1_6ce66a7e99db49f5964ef9f3ef97eefc'",
              " * ",
              " * Sample options value:",
              " * {",
              " *   format: 'HLS'",
              " * }",
              " */",
              "",
              "async function myGenerateVideoStreamingUrlFunction(fileId, options) {",
              "  try {",
              "    const streamingUrl = await files.generateVideoStreamingUrl(fileId, options);",
              "",
              "    return streamingUrl;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"downloadUrl\": {",
              " *     \"assetKey\": \"HLS\",",
              " *     \"url\": \"https://repackager.wixmp.com/video.wixstatic.com/video/d4dde1_6ce66a7e99db49f5964ef9f3ef97eefc/,720p,360p,1080p,480p,/mp4/file.mp4.urlset/master.m3u8\"",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Generate a video streaming url (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample ID value: 'd4dde1_6ce66a7e99db49f5964ef9f3ef97eefc'",
              " * ",
              " * Sample options value:",
              " * {",
              " *   format: 'HLS'",
              " * }",
              " */",
              "",
              "export const myGenerateVideoStreamingUrlFunction = webMethod(Permissions.Anyone, async (fileId, options) => {",
              "  try {",
              "    const elevatedGenerateVideoStreamingUrl = elevate(files.generateVideoStreamingUrl);",
              "    const streamingUrl = await elevatedGenerateVideoStreamingUrl(fileId, options);",
              "",
              "    return streamingUrl;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"downloadUrl\": {",
              " *     \"assetKey\": \"HLS\",",
              " *     \"url\": \"https://repackager.wixmp.com/video.wixstatic.com/video/d4dde1_6ce66a7e99db49f5964ef9f3ef97eefc/,720p,360p,1080p,480p,/mp4/file.mp4.urlset/master.m3u8\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "generateVideoStreamingUrl",
      "isAdminMethod": true
    },
    {
      "name": "getFileDescriptor",
      "params": [
        {
          "name": "fileId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID.",
          "required": true
        }
      ],
      "requiredFields": [
        "fileId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.FileDescriptor"
                }
              ]
            }
          }
        ],
        "doc": "Information about the file.\n"
      },
      "docs": {
        "summary": "Gets information about the specified file in the Media Manager.",
        "description": [
          "The `getFileDescriptor()` function returns a Promise that resolves to the specified file's descriptor.\n\nUse `getFileDescriptors()` to get multiple file descriptors at once."
        ],
        "examples": [
          {
            "title": "Get a file descriptor (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample fileId value: 'w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg' */",
              "",
              "async function myGetFileDescriptorFunction(fileId) {",
              "  try {",
              "    const descriptor = await files.getFileDescriptor(fileId);",
              "",
              "    console.log('Retrieved descriptor:', descriptor);",
              "    return descriptor;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *  \"_createdDate\": \"2023-07-23T10:33:00.000Z\",",
              " *  \"_id\": \"w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg\",",
              " *  \"_updatedDate\": \"2023-07-23T10:33:00.000Z\",",
              " *  \"displayName\": \"example.jpg\",",
              " *  \"hash\": \"x5bq2o4p8fj68xqt25v49wdnasys04xe\",",
              " *  \"internalTags\": [],",
              " *  \"labels\": [],",
              " *  \"media\": {",
              " *    \"image\": {",
              " *      \"faces\": [],",
              " *      \"image\": \"wix:image://v1/w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg/example.jpg\"",
              " *    }",
              " *  },",
              " *  \"mediaType\": \"IMAGE\",",
              " *  \"operationStatus\": \"READY\",",
              " *  \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *  \"private\": false,",
              " *  \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *  \"sizeInBytes\": \"47177\",",
              " *  \"sourceUrl\": \"https://example.org/filename.jpg\",",
              " *  \"state\": \"OK\",",
              " *  \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg\",",
              " *  \"url\": \"https://static.wixstatic.com/media/w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Get a file descriptor (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "// Sample fileId value: 'w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg'",
              "",
              "export const myGetFileDescriptorFunction = webMethod(Permissions.Anyone, async (fileId) => {",
              "  try {",
              "    const elevatedGetFileDescriptor = elevate(files.getFileDescriptor);",
              "    const descriptor = await elevatedGetFileDescriptor(fileId);",
              "",
              "    console.log('Retrieved descriptor:', descriptor);",
              "    return descriptor;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *  \"_createdDate\": \"2023-07-23T10:33:00.000Z\",",
              " *  \"_id\": \"w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg\",",
              " *  \"_updatedDate\": \"2023-07-23T10:33:00.000Z\",",
              " *  \"displayName\": \"example.jpg\",",
              " *  \"hash\": \"x5bq2o4p8fj68xqt25v49wdnasys04xe\",",
              " *  \"internalTags\": [],",
              " *  \"labels\": [],",
              " *  \"media\": {",
              " *    \"image\": {",
              " *      \"faces\": [],",
              " *      \"image\": \"wix:image://v1/w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg/example.jpg\"",
              " *    }",
              " *  },",
              " *  \"mediaType\": \"IMAGE\",",
              " *  \"operationStatus\": \"READY\",",
              " *  \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *  \"private\": false,",
              " *  \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *  \"sizeInBytes\": \"47177\",",
              " *  \"sourceUrl\": \"https://example.org/filename.jpg\",",
              " *  \"state\": \"OK\",",
              " *  \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg\",",
              " *  \"url\": \"https://static.wixstatic.com/media/w8ide0_989yy3iic89mi8880kq9jkr9x7nxiz7l~mv2.jpg\"",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getFileDescriptor",
      "isAdminMethod": true
    },
    {
      "name": "getFileDescriptors",
      "params": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "File IDs.",
          "required": true
        }
      ],
      "requiredFields": [
        "fileIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.GetFileDescriptorsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Gets information about the specified files in the Media Manager.",
        "description": [
          "The `getFileDescriptors()` function returns a Promise that resolves to an array containing the specified files' descriptors.\n\nUse `getFileDescriptor()` to get a single file descriptor."
        ],
        "examples": [
          {
            "title": "Get file descriptors (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample fileIds value:",
              " * [ ",
              " *   'w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q', ",
              " *   'w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg', ",
              " *   'w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip'",
              " * ]",
              " */",
              "",
              "async function myGetFileDescriptorsFunction(fileIds) {",
              "  try {",
              "    const descriptors = await files.getFileDescriptors(fileIds);",
              "",
              "    console.log('Retrieved descriptors:', descriptors);",
              "    return descriptors;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " *  {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-07-23T09:05:12.000Z\",",
              " *       \"_id\": \"w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg\",",
              " *       \"_updatedDate\": \"2023-07-23T09:05:12.000Z\",",
              " *       \"displayName\": \"image1.jpg\",",
              " *       \"hash\": \"d7ltmbrrmdspiyrw3db29bpi1g8lsacz\",",
              " *       \"internalTags\": [],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg/image1.jpg#originWidth=1000&originHeight=714\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"112689\",",
              " *       \"sourceUrl\": \"https://website.org/image1.jpg\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg\",",
              " *       \"url\": \"https://static.wixstatic.com/media/w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:10.000Z\",",
              " *       \"_id\": \"w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\",",
              " *       \"_updatedDate\": \"2023-07-20T07:16:55.000Z\",",
              " *       \"displayName\": \"pics\",",
              " *       \"hash\": \"tmk0uafvzzgkddrgwgl6od1h9jsp1j9e\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"archive\": {",
              " *           \"_id\": \"w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\",",
              " *           \"filename\": \"riverpics\",",
              " *           \"sizeInBytes\": \"49546083\",",
              " *           \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"ARCHIVE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"49546083\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/48c4fbc47d7298cd4406936294b4c532.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-23T12:15:55.000Z\",",
              " *       \"_id\": \"w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q\",",
              " *       \"_updatedDate\": \"2023-07-23T12:16:14.000Z\",",
              " *       \"displayName\": \"video1.mp4\",",
              " *       \"hash\": \"pdrepnjy3cdjq8bt2lzmpdvuc47mm921\",",
              " *       \"internalTags\": [],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"video\": \"wix:video://v1/w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q/video1.mp4#posterUri=w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2qf001.jpg&posterWidth=1280&posterHeight=720\"",
              " *       },",
              " *       \"mediaType\": \"VIDEO\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"4384468\",",
              " *       \"sourceUrl\": \"https://cdn.pixabay.com/example.mp4\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2qf002.jpg\",",
              " *       \"url\": \"https://video.wixstatic.com/video/w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q/file\"",
              " *     }",
              " *   ]",
              " * }",
              " */"
            ]
          },
          {
            "title": "Get file descriptors (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample fileIds value:",
              " * [ ",
              " *   'w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q', ",
              " *   'w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg', ",
              " *   'w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip'",
              " * ]",
              " */",
              "",
              "export const myGetFileDescriptorsFunction = webMethod(Permissions.Anyone, async (fileIds) => {",
              "  try {",
              "    const elevatedGetFileDescriptors = elevate(files.getFileDescriptors);",
              "    const descriptors = await elevatedGetFileDescriptors(fileIds);",
              "",
              "    console.log('Retrieved descriptors:', descriptors);",
              "    return descriptors;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " *  {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-07-23T09:05:12.000Z\",",
              " *       \"_id\": \"w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg\",",
              " *       \"_updatedDate\": \"2023-07-23T09:05:12.000Z\",",
              " *       \"displayName\": \"image1.jpg\",",
              " *       \"hash\": \"d7ltmbrrmdspiyrw3db29bpi1g8lsacz\",",
              " *       \"internalTags\": [],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg/image1.jpg#originWidth=1000&originHeight=714\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"112689\",",
              " *       \"sourceUrl\": \"https://website.org/image1.jpg\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg\",",
              " *       \"url\": \"https://static.wixstatic.com/media/w8ide0_mnk3lozhxu0w4f1g5wuusmwqedox2w1p~mv2.jpg\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:10.000Z\",",
              " *       \"_id\": \"w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\",",
              " *       \"_updatedDate\": \"2023-07-20T07:16:55.000Z\",",
              " *       \"displayName\": \"pics\",",
              " *       \"hash\": \"tmk0uafvzzgkddrgwgl6od1h9jsp1j9e\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"archive\": {",
              " *           \"_id\": \"w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\",",
              " *           \"filename\": \"riverpics\",",
              " *           \"sizeInBytes\": \"49546083\",",
              " *           \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"ARCHIVE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"49546083\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/48c4fbc47d7298cd4406936294b4c532.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_578uul37zvr7b6d7ji3cbm91rlf5dvjy.zip\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-23T12:15:55.000Z\",",
              " *       \"_id\": \"w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q\",",
              " *       \"_updatedDate\": \"2023-07-23T12:16:14.000Z\",",
              " *       \"displayName\": \"video1.mp4\",",
              " *       \"hash\": \"pdrepnjy3cdjq8bt2lzmpdvuc47mm921\",",
              " *       \"internalTags\": [],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"video\": \"wix:video://v1/w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q/video1.mp4#posterUri=w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2qf001.jpg&posterWidth=1280&posterHeight=720\"",
              " *       },",
              " *       \"mediaType\": \"VIDEO\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"4384468\",",
              " *       \"sourceUrl\": \"https://cdn.pixabay.com/example.mp4\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2qf002.jpg\",",
              " *       \"url\": \"https://video.wixstatic.com/video/w8ide0_87051wjiadg6qj2ywxb07vn5snqxxp2q/file\"",
              " *     }",
              " *   ]",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getFileDescriptors",
      "isAdminMethod": true
    },
    {
      "name": "importFile",
      "params": [
        {
          "name": "url",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Publicly accessible external file URL.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ImportFileOptions"
            }
          ],
          "doc": "Options to use when importing a single file.",
          "required": false
        }
      ],
      "requiredFields": [
        "url"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.ImportFileResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Imports a file to the Media Manager using an external URL.",
        "description": [
          "The `importFile()` function returns a Promise that resolves to the imported file's descriptor.\n\nThis function returns information about the imported file. Importing a file is the method through which you can add files to the Media Manager.\nUse the `parentFolderId` parameter to specify which folder you want the file to be imported to.\nIf no folder is specified, the file is imported to the `media-root` folder.\n\nTo import a file, you need to do one of the following:\n- Pass its [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) in the `mimeType` field of the request. For example, `mimeType: 'image/jpeg'`.\n- Include its extension in either the `displayName` or `url` field of the request. For example, `displayName: 'Example Image.jpeg` or `url: https://www.example.com/image.jpeg`.\n- Ensure the server hosting the file supports HEAD requests. In these cases the Wix servers can retrieve the MIME type from the hosting server.\n  > **Note:** If you want to validate the media type, pass the file's expected media type in the optional `mediaType` field of the request.  For example, `mediaType: 'IMAGE'`."
        ],
        "examples": [
          {
            "title": "Import a file (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample url value: 'https://example.org/filename.jpg' */",
              "",
              "async function myImportFileFunction(url) {",
              "  try {",
              "    const importedFile = await files.importFile(url);",
              "",
              "    console.log('Imported file successfully:', importedFile);",
              "    return importedFile;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"file\": {",
              " *     \"_createdDate\": \"2023-07-23T09:19:05.000Z\",",
              " *     \"_id\": \"w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\",",
              " *     \"_updatedDate\": \"2023-07-23T09:19:05.000Z\",",
              " *     \"displayName\": \"image1.jpg\",",
              " *     \"hash\": \"\",",
              " *     \"internalTags\": [],",
              " *     \"labels\": [],",
              " *     \"mediaType\": \"IMAGE\",",
              " *     \"operationStatus\": \"PENDING\",",
              " *     \"parentFolderId\": \"media-root\",",
              " *     \"private\": false,",
              " *     \"sizeInBytes\": \"20167\",",
              " *     \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *     \"sourceUrl\": \"https://example.org/filename.jpg\",",
              " *     \"state\": \"OK\",",
              " *     \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\",",
              " *     \"url\": \"https://static.wixstatic.com/media/w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\"",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Import a file (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "// Sample url value: 'https://example.org/filename.jpg'",
              "",
              "export const myImportFileFunction = webMethod(Permissions.Anyone, async (url) => {",
              "  try {",
              "    const elevatedImportFile = elevate(files.importFile);",
              "    const importedFile = await elevatedImportFile(url);",
              "",
              "    console.log('Imported file successfully:', importedFile);",
              "    return importedFile;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"file\": {",
              " *     \"_createdDate\": \"2023-07-23T09:19:05.000Z\",",
              " *     \"_id\": \"w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\",",
              " *     \"_updatedDate\": \"2023-07-23T09:19:05.000Z\",",
              " *     \"displayName\": \"image1.jpg\",",
              " *     \"hash\": \"\",",
              " *     \"internalTags\": [],",
              " *     \"labels\": [],",
              " *     \"mediaType\": \"IMAGE\",",
              " *     \"operationStatus\": \"PENDING\",",
              " *     \"parentFolderId\": \"media-root\",",
              " *     \"private\": false,",
              " *     \"sizeInBytes\": \"20167\",",
              " *     \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *     \"sourceUrl\": \"https://example.org/filename.jpg\",",
              " *     \"state\": \"OK\",",
              " *     \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\",",
              " *     \"url\": \"https://static.wixstatic.com/media/w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Import a file with options",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "// Sample url value: 'https://example.org/filename.jpg'",
              "",
              "export const myImportFileFunction = webMethod(Permissions.Anyone, async (url, importOptions) => {",
              "  try {",
              "    const elevatedImportFile = elevate(files.importFile);",
              "    const importedFile = await elevatedImportFile(url, importOptions);",
              "",
              "    console.log('Imported file successfully:', importedFile);",
              "    return importedFile;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"file\": {",
              " *     \"_createdDate\": \"2023-07-23T09:19:05.000Z\",",
              " *     \"_id\": \"w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\",",
              " *     \"_updatedDate\": \"2023-07-23T09:19:05.000Z\",",
              " *     \"displayName\": \"image1.jpg\",",
              " *     \"hash\": \"\",",
              " *     \"internalTags\": [],",
              " *     \"labels\": [],",
              " *     \"mediaType\": \"IMAGE\",",
              " *     \"operationStatus\": \"PENDING\",",
              " *     \"parentFolderId\": \"media-root\",",
              " *     \"private\": false,",
              " *     \"sizeInBytes\": \"20167\",",
              " *     \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *     \"sourceUrl\": \"https://example.org/filename.jpg\",",
              " *     \"state\": \"OK\",",
              " *     \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\",",
              " *     \"url\": \"https://static.wixstatic.com/media/w8ide0_leac4pwk8o11v8725j9ugcbe70x3alc0~mv2.jpg\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "importFile",
      "isAdminMethod": true
    },
    {
      "name": "listDeletedFiles",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ListDeletedFilesOptions"
            }
          ],
          "doc": "Options to use when listing deleted files from the trash bin.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.ListDeletedFilesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of files in the Media Manager's trash bin.",
        "description": [
          "The `listDeletedFiles()` function returns a Promise that resolves to an array of the specified deleted files' descriptors and cursor information.\n\n>**Note:** The Media Manager's trash bin (`TRASH_ROOT` folder) only contains temporarily deleted files, not permanently deleted files.\n\nTo retrieve a list of non-deleted files, use the `listFiles()` function."
        ],
        "examples": [
          {
            "title": "List deleted files (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "async function myListDeletedFilesFunction() {",
              "  try {",
              "    const deletedFiles = await files.listDeletedFiles();",
              "",
              "    console.log('Files in trash:', deletedFiles)",
              "    return deletedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-08-09T08:45:42.000Z\",",
              " *       \"_id\": \"d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png\",",
              " *       \"_updatedDate\": \"2023-08-09T08:45:42.000Z\",",
              " *       \"displayName\": \"image1.png\",",
              " *       \"hash\": \"864d607a1ea270efbac32def181f039f\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"colors\": {",
              " *             \"palette\": [",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 247,",
              " *                   \"g\": 247,",
              " *                   \"r\": 247",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 142,",
              " *                   \"g\": 140,",
              " *                   \"r\": 140",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 192,",
              " *                   \"g\": 218,",
              " *                   \"r\": 141",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 195,",
              " *                   \"g\": 137,",
              " *                   \"r\": 149",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 228,",
              " *                   \"g\": 143,",
              " *                   \"r\": 183",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 250,",
              " *                   \"g\": 62,",
              " *                   \"r\": 152",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 16,",
              " *                   \"g\": 16,",
              " *                   \"r\": 16",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 140,",
              " *                   \"g\": 199,",
              " *                   \"r\": 60",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 120,",
              " *                   \"g\": 194,",
              " *                   \"r\": 242",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 158,",
              " *                   \"g\": 203,",
              " *                   \"r\": 103",
              " *                 }",
              " *               }",
              " *             ],",
              " *             \"prominent\": {",
              " *               \"rgb\": {",
              " *                 \"b\": 247,",
              " *                 \"g\": 247,",
              " *                 \"r\": 247",
              " *               }",
              " *             }",
              " *           },",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png/image1.png#originWidth=1170&originHeight=2532\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"trash-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"394945\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png\",",
              " *       \"url\": \"https://static.wixstatic.com/media/d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-08-09T08:45:37.000Z\",",
              " *       \"_id\": \"d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg\",",
              " *       \"_updatedDate\": \"2023-08-09T08:45:37.000Z\",",
              " *       \"displayName\": \"vectorArt1.svg\",",
              " *       \"hash\": \"e379083c3675d7f7891da00c0708539c\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg/vectorArt1.svg#originWidth=1177&originHeight=2501\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"VECTOR\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"trash-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"119475\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/shapes/d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg\",",
              " *       \"url\": \"https://static.wixstatic.com/shapes/d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg\"",
              " *     }",
              " *   ],",
              " *   \"nextCursor\": {",
              " *     \"cursors\": {",
              " *       \"next\": \"\"",
              " *     },",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "List deleted files (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const myListDeletedFilesFunction = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedListDeletedFiles = elevate(files.listDeletedFiles)",
              "    const deletedFiles = await elevatedListDeletedFiles();",
              "",
              "    console.log('Files in trash:', deletedFiles)",
              "    return deletedFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-08-09T08:45:42.000Z\",",
              " *       \"_id\": \"d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png\",",
              " *       \"_updatedDate\": \"2023-08-09T08:45:42.000Z\",",
              " *       \"displayName\": \"image1.png\",",
              " *       \"hash\": \"864d607a1ea270efbac32def181f039f\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"colors\": {",
              " *             \"palette\": [",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 247,",
              " *                   \"g\": 247,",
              " *                   \"r\": 247",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 142,",
              " *                   \"g\": 140,",
              " *                   \"r\": 140",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 192,",
              " *                   \"g\": 218,",
              " *                   \"r\": 141",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 195,",
              " *                   \"g\": 137,",
              " *                   \"r\": 149",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 228,",
              " *                   \"g\": 143,",
              " *                   \"r\": 183",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 250,",
              " *                   \"g\": 62,",
              " *                   \"r\": 152",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 16,",
              " *                   \"g\": 16,",
              " *                   \"r\": 16",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 140,",
              " *                   \"g\": 199,",
              " *                   \"r\": 60",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 120,",
              " *                   \"g\": 194,",
              " *                   \"r\": 242",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 158,",
              " *                   \"g\": 203,",
              " *                   \"r\": 103",
              " *                 }",
              " *               }",
              " *             ],",
              " *             \"prominent\": {",
              " *               \"rgb\": {",
              " *                 \"b\": 247,",
              " *                 \"g\": 247,",
              " *                 \"r\": 247",
              " *               }",
              " *             }",
              " *           },",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png/image1.png#originWidth=1170&originHeight=2532\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"trash-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"394945\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png\",",
              " *       \"url\": \"https://static.wixstatic.com/media/d4dde1_32288e20a5aa4213a52b15426fb27c9f~mv2.png\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-08-09T08:45:37.000Z\",",
              " *       \"_id\": \"d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg\",",
              " *       \"_updatedDate\": \"2023-08-09T08:45:37.000Z\",",
              " *       \"displayName\": \"vectorArt1.svg\",",
              " *       \"hash\": \"e379083c3675d7f7891da00c0708539c\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg/vectorArt1.svg#originWidth=1177&originHeight=2501\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"VECTOR\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"trash-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"119475\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/shapes/d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg\",",
              " *       \"url\": \"https://static.wixstatic.com/shapes/d4dde1_8dd2bfe6121f43b29ebeaa63988abf54.svg\"",
              " *     }",
              " *   ],",
              " *   \"nextCursor\": {",
              " *     \"cursors\": {",
              " *       \"next\": \"\"",
              " *     },",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Bulk restores all non-permanently deleted files of chosen types ",
            "body": [
              "/********************************************",
              " * Backend code - bulk-restore-files.web.js *",
              " *******************************************/",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const restoreFiles = webMethod(Permissions.Anyone, async (mediaTypes) => {",
              "  let idList = []",
              "  try {",
              "    const options = {",
              "        mediaTypes: mediaTypes",
              "    };",
              "    const elevatedListDeletedFiles = elevate(files.listDeletedFiles)",
              "    const deletedFiles = await elevatedListDeletedFiles(options);",
              "",
              "    idList = deletedFiles.files.map((file) => {",
              "     return file._id",
              "    });",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "",
              "  try {",
              "    const elevatedBulkRestoreFilesFromTrashBin = elevate(files.bulkRestoreFilesFromTrashBin);",
              "    const restoredFiles = await elevatedBulkRestoreFilesFromTrashBin(idList);",
              "",
              "    console.log('Restored Files:', restoredFiles);",
              "    return restoredFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { restoreFiles } from 'backend/bulk-restore-files.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#restoreMedia').onClick(async () => {",
              "    const mediaTypes = []",
              "    if ($w('#image').checked) {",
              "        mediaTypes.push(\"IMAGE\")",
              "    }",
              "    if ($w('#video').checked) {",
              "        mediaTypes.push(\"VIDEO\")",
              "    }",
              "    if ($w('#audio').checked) {",
              "        mediaTypes.push(\"AUDIO\")",
              "    }",
              "    if ($w('#document').checked) {",
              "        mediaTypes.push(\"DOCUMENT\")",
              "    }",
              "    if ($w('#vector').checked) {",
              "        mediaTypes.push(\"VECTOR\")",
              "    }",
              "    if ($w('#archive').checked) {",
              "        mediaTypes.push(\"ARCHIVE\")",
              "    }",
              "    if ($w('#model3d').checked) {",
              "        mediaTypes.push(\"MODEL3D\")",
              "    }",
              "    await restoreFiles(mediaTypes);",
              "",
              "    $w('#filesRestoredMsg').show();",
              "    setTimeout(() => {",
              "      $w('#filesRestoredMsg').hide();",
              "    }, 5000);",
              "  });",
              "});"
            ],
            "extra": {
              "description": "This code is an example of a page on which a visitor chooses a media type (or types). All files of that type/those types in which have been (non-permanently) deleted are restored."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listDeletedFiles",
      "isAdminMethod": true
    },
    {
      "name": "listFiles",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ListFilesOptions"
            }
          ],
          "doc": "Options to use when listing media files.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.ListFilesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of files in the Media Manager.",
        "description": [
          "The `listFiles()` function returns a Promise that resolves to an array of the specified files' descriptors and cursor information.\n\nTo retrieve a list of files within a specific folder in the Media Manager, pass the folder's ID in the `parentFolderId` parameter. If no folder is specified, the function retrieves only the list of files in the root folder of the Media Manager.\n\nTo retrieve a list of (non-permanently) deleted files, use the `listDeletedFiles()` function."
        ],
        "examples": [
          {
            "title": "List files in a specific folder (backend page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample listOptions value:",
              " * {",
              " *   parentFolderId : 'igje5u22nij3qkltzsnol37j3dnthvvh'",
              " * }",
              " */",
              "",
              "async function myListFilesFunction(listOptions) {",
              "  try {",
              "    const elevatedListFiles = elevate(files.listFiles);",
              "    const fileList = await elevatedListFiles(listOptions);",
              "",
              "    console.log('Files in folder:', fileList);",
              "    return fileList;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"_id\": \"w8ide0_f4dRFF610cKd7zkjVbaNddXgb181lXfg.pdf\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"displayName\": \"file1.pdf\",",
              " *       \"hash\": \"z3bxokp79p04ok6iiu9ao8srx5lrynfh\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"document\": \"wix:document://v1/w8ide0_f4dRFF610cKd7zkjVbaNddXgb181lXfg.pdf/file1.pdf\"",
              " *       },",
              " *       \"mediaType\": \"DOCUMENT\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"187199\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/it7ucst133nc8d9e0ff4d0nay1ucksc6.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/ugd/w8ide0_f4dRFF610cKd7zkjVbaNddXgb181lXfg.pdf\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"_id\": \"w8ide0_170y03n3akmstnpt5jmsju89wvgs9tg4.pdf\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"displayName\": \"file2.pdf\",",
              " *       \"hash\": \"g6x41coggaystn596ndb09q1ecg036gk\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"document\": \"wix:document://v1/w8ide0_170y03n3akmstnpt5jmsju89wvgs9tg4.pdf/file2.pdf\"",
              " *       },",
              " *       \"mediaType\": \"DOCUMENT\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"81624\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/it7ucst133nc8d9e0ff4d0nay1ucksc6.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/ugd/w8ide0_170y03n3akmstnpt5jmsju89wvgs9tg4.pdf\"",
              " *     }",
              " *   ],",
              " *   \"nextCursor\": {",
              " *     \"cursors\": {",
              " *       \"next\": \"\"",
              " *     },",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "List files in a specific folder (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample listOptions value:",
              " * {",
              " *   parentFolderId : 'igje5u22nij3qkltzsnol37j3dnthvvh'",
              " * }",
              " */",
              "",
              "export const myListFilesFunction = webMethod(Permissions.Anyone, async (listOptions) => {",
              "  try {",
              "    const elevatedListFiles = elevate(files.listFiles);",
              "    const fileList = await elevatedListFiles(listOptions);",
              "",
              "    console.log('Files in folder:', fileList);",
              "    return fileList;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"_id\": \"w8ide0_f4dRFF610cKd7zkjVbaNddXgb181lXfg.pdf\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"displayName\": \"file1.pdf\",",
              " *       \"hash\": \"z3bxokp79p04ok6iiu9ao8srx5lrynfh\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"document\": \"wix:document://v1/w8ide0_f4dRFF610cKd7zkjVbaNddXgb181lXfg.pdf/file1.pdf\"",
              " *       },",
              " *       \"mediaType\": \"DOCUMENT\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"187199\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/it7ucst133nc8d9e0ff4d0nay1ucksc6.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/ugd/w8ide0_f4dRFF610cKd7zkjVbaNddXgb181lXfg.pdf\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"_id\": \"w8ide0_170y03n3akmstnpt5jmsju89wvgs9tg4.pdf\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"displayName\": \"file2.pdf\",",
              " *       \"hash\": \"g6x41coggaystn596ndb09q1ecg036gk\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"document\": \"wix:document://v1/w8ide0_170y03n3akmstnpt5jmsju89wvgs9tg4.pdf/file2.pdf\"",
              " *       },",
              " *       \"mediaType\": \"DOCUMENT\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"igje5u22nij3qkltzsnol37j3dnthvvh\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"81624\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/it7ucst133nc8d9e0ff4d0nay1ucksc6.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/ugd/w8ide0_170y03n3akmstnpt5jmsju89wvgs9tg4.pdf\"",
              " *     }",
              " *   ],",
              " *   \"nextCursor\": {",
              " *     \"cursors\": {",
              " *       \"next\": \"\"",
              " *     },",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Generate a download url for all images in media ",
            "body": [
              "/********************************************",
              " * Backend code - download-files-url.web.js *",
              " *******************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const generateDownloadUrl = webMethod(Permissions.Anyone, async (fileIds) => {",
              "  try {",
              "    const elevatedGenerateFilesDownloadUrl = elevate(files.generateFilesDownloadUrl)",
              "    const generatedUrl = await elevatedGenerateFilesDownloadUrl(fileIds);",
              "",
              "    return generatedUrl.downloadUrl;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "  ",
              "export const listImages = webMethod(Permissions.Anyone, async () => {",
              "  const listOptions = {",
              "    mediaTypes: [\"IMAGE\"]",
              "  }",
              "",
              "  try {",
              "    const elevatedListFiles = elevate(files.listFiles)",
              "    const images = await elevatedListFiles(listOptions);",
              "",
              "    return images.files;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { listImages, generateDownloadUrl } from 'backend/download-files-url.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#downloadFiles').disable();",
              "  getDownloadUrl();",
              "});",
              "",
              "async function getDownloadUrl() {",
              "  const images = await listImages();",
              "",
              "  const imageIds = images.map((image) => {",
              "    return image._id;",
              "  });",
              "  const downloadUrl = await generateDownloadUrl(imageIds);",
              "",
              "  $w('#downloadFiles').link = downloadUrl;",
              "  await $w('#downloadFiles').enable();",
              "}"
            ],
            "extra": {
              "description": "This is an example of a function running on page ready. The function lists all the images from media, and then uses their IDs to create a download url."
            }
          },
          {
            "title": "Update a file's display name from visitor input ",
            "body": [
              "/*************************************",
              " * Backend code - update-file.web.js *",
              " ************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const updateFile = webMethod(Permissions.Anyone, async (fileId, file) => {",
              "  try {",
              "    const elevatedUpdateFileDescriptor = elevate(files.updateFileDescriptor);",
              "    const updatedDescriptor = await elevatedUpdateFileDescriptor(fileId, file);",
              "",
              "    return updatedDescriptor;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "export const listImages = webMethod(Permissions.Anyone, async () => {",
              "  const listOptions = {",
              "    mediaTypes: [\"IMAGE\"]",
              "  }",
              "",
              "  try {",
              "    const elevatedListFiles = elevate(files.listFiles)",
              "    const images = await elevatedListFiles(listOptions);",
              "",
              "    return images.files;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { updateFile, listImages } from 'backend/update-file.web';",
              "",
              "$w.onReady(async () => {",
              "  await populateImagesDropdown();",
              "",
              "  $w('#update').onClick(async () => {",
              "    const imageId = $w('#imagesDropdown').value;",
              "",
              "    const fileUpdates = {",
              "      displayName: $w('#newDisplayName').value",
              "    }",
              "",
              "    const updatedLocation = await updateFile(imageId, fileUpdates);",
              "    console.log('Display name successfully updated to:', updatedLocation.displayName)",
              "    $w('#updateSuccessMsg').show();",
              "  });",
              "});",
              "",
              "async function populateImagesDropdown() {",
              "  const images = await listImages();",
              "  const dropdownOptions = images.map((image) => {",
              "    return {",
              "      label: image.displayName,",
              "      value: image._id",
              "    };",
              "  });",
              "",
              "  $w('#imagesDropdown').options = dropdownOptions;",
              "};"
            ],
            "extra": {
              "description": "This code uses the visitor's input on the page to update the display name of an image which they choose from a dropdown list on the page."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listFiles",
      "isAdminMethod": true
    },
    {
      "name": "searchFiles",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.SearchFilesOptions"
            }
          ],
          "doc": "Options to specify which folders to search.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.SearchFilesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Searches all folders in the Media Manager and returns a list of files that match the terms specified in the optional parameters.",
        "description": [
          "The `searchFiles()` function returns a Promise that resolves to an array of the specified files' descriptors and cursor information.\n\nIf no parameters are specified, the function returns all files in the `MEDIA_ROOT` folder."
        ],
        "examples": [
          {
            "title": "Search files (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "async function mySearchFilesFunction() {",
              "  try {",
              "    const rootFiles = await files.searchFiles();",
              "",
              "    console.log('Files in MEDIA_ROOT', rootFiles);",
              "    return rootFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:54:05.000Z\",",
              " *       \"_id\": \"w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg\",",
              " *       \"_updatedDate\": \"2023-07-16T08:54:05.000Z\",",
              " *       \"displayName\": \"image2.jpg\",",
              " *       \"hash\": \"800fae3e0cb7908518a391c25864436c\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [",
              " *         \"label1\",",
              " *         \"label2\",",
              " *         \"label3\",",
              " *         \"label4\"",
              " *       ],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"colors\": {",
              " *             \"palette\": [",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 47,",
              " *                   \"g\": 36,",
              " *                   \"r\": 31",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 155,",
              " *                   \"g\": 153,",
              " *                   \"r\": 195",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 141,",
              " *                   \"g\": 123,",
              " *                   \"r\": 138",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 177,",
              " *                   \"g\": 161,",
              " *                   \"r\": 190",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 179,",
              " *                   \"g\": 178,",
              " *                   \"r\": 217",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 160,",
              " *                   \"g\": 176,",
              " *                   \"r\": 229",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 176,",
              " *                   \"g\": 151,",
              " *                   \"r\": 162",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 93,",
              " *                   \"g\": 78,",
              " *                   \"r\": 71",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 45,",
              " *                   \"g\": 63,",
              " *                   \"r\": 107",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 104,",
              " *                   \"g\": 88,",
              " *                   \"r\": 82",
              " *                 }",
              " *               }",
              " *             ],",
              " *             \"prominent\": {",
              " *               \"rgb\": {",
              " *                 \"b\": 26,",
              " *                 \"g\": 36,",
              " *                 \"r\": 39",
              " *               }",
              " *             }",
              " *           },",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg/image2.jpg#originWidth=5833&originHeight=3894\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"3013886\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg\",",
              " *       \"url\": \"https://static.wixstatic.com/media/w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"_id\": \"w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"displayName\": \"image1.jpg\",",
              " *       \"hash\": \"fef0ylitxcnlyzxf0nahu8rh3k0i5t85\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [",
              " *         \"label1\"",
              " *       ],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"colors\": {",
              " *             \"palette\": [",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 26,",
              " *                   \"g\": 36,",
              " *                   \"r\": 39",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 135,",
              " *                   \"g\": 125,",
              " *                   \"r\": 119",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 208,",
              " *                   \"g\": 209,",
              " *                   \"r\": 208",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 40,",
              " *                   \"g\": 108,",
              " *                   \"r\": 130",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 133,",
              " *                   \"g\": 101,",
              " *                   \"r\": 75",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 36,",
              " *                   \"g\": 78,",
              " *                   \"r\": 94",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 178,",
              " *                   \"g\": 161,",
              " *                   \"r\": 148",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 192,",
              " *                   \"g\": 177,",
              " *                   \"r\": 163",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 159,",
              " *                   \"g\": 184,",
              " *                   \"r\": 208",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 137,",
              " *                   \"g\": 159,",
              " *                   \"r\": 183",
              " *                 }",
              " *               }",
              " *             ],",
              " *             \"prominent\": {",
              " *               \"rgb\": {",
              " *                 \"b\": 26,",
              " *                 \"g\": 36,",
              " *                 \"r\": 39",
              " *               }",
              " *             }",
              " *           },",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg/image1.jpg#originWidth=5616&originHeight=3744\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"6312959\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg\",",
              " *       \"url\": \"https://static.wixstatic.com/media/w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:10.000Z\",",
              " *       \"_id\": \"w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:10.000Z\",",
              " *       \"displayName\": \"file1.zip\",",
              " *       \"hash\": \"urm9iak1w39pk381ucb9kqjphya8loro\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"archive\": {",
              " *           \"_id\": \"w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\",",
              " *           \"filename\": \"file1.zip\",",
              " *           \"sizeInBytes\": \"49546083\",",
              " *           \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"ARCHIVE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"49546083\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/48c4fbc47d7298cd4406936294b4c532.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\"",
              " *     }",
              " *   ],",
              " *   \"nextCursor\": {",
              " *     \"cursors\": {",
              " *       \"next\": \"\"",
              " *     },",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Search files (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const mySearchFilesFunction = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedSearchFiles = elevate(files.searchFiles);",
              "    const rootFiles = await elevatedSearchFiles();",
              "",
              "    console.log('Files in MEDIA_ROOT', rootFiles);",
              "    return rootFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:54:05.000Z\",",
              " *       \"_id\": \"w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg\",",
              " *       \"_updatedDate\": \"2023-07-16T08:54:05.000Z\",",
              " *       \"displayName\": \"image2.jpg\",",
              " *       \"hash\": \"800fae3e0cb7908518a391c25864436c\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [",
              " *         \"label1\",",
              " *         \"label2\",",
              " *         \"label3\",",
              " *         \"label4\"",
              " *       ],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"colors\": {",
              " *             \"palette\": [",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 47,",
              " *                   \"g\": 36,",
              " *                   \"r\": 31",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 155,",
              " *                   \"g\": 153,",
              " *                   \"r\": 195",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 141,",
              " *                   \"g\": 123,",
              " *                   \"r\": 138",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 177,",
              " *                   \"g\": 161,",
              " *                   \"r\": 190",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 179,",
              " *                   \"g\": 178,",
              " *                   \"r\": 217",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 160,",
              " *                   \"g\": 176,",
              " *                   \"r\": 229",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 176,",
              " *                   \"g\": 151,",
              " *                   \"r\": 162",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 93,",
              " *                   \"g\": 78,",
              " *                   \"r\": 71",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 45,",
              " *                   \"g\": 63,",
              " *                   \"r\": 107",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 104,",
              " *                   \"g\": 88,",
              " *                   \"r\": 82",
              " *                 }",
              " *               }",
              " *             ],",
              " *             \"prominent\": {",
              " *               \"rgb\": {",
              " *                 \"b\": 26,",
              " *                 \"g\": 36,",
              " *                 \"r\": 39",
              " *               }",
              " *             }",
              " *           },",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg/image2.jpg#originWidth=5833&originHeight=3894\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"3013886\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg\",",
              " *       \"url\": \"https://static.wixstatic.com/media/w8ide0_ouulk5w0mdr9omjkwsfyn71g4mb1olcf~mv2.jpg\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"_id\": \"w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:07.000Z\",",
              " *       \"displayName\": \"image1.jpg\",",
              " *       \"hash\": \"fef0ylitxcnlyzxf0nahu8rh3k0i5t85\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [",
              " *         \"label1\"",
              " *       ],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"colors\": {",
              " *             \"palette\": [",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 26,",
              " *                   \"g\": 36,",
              " *                   \"r\": 39",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 135,",
              " *                   \"g\": 125,",
              " *                   \"r\": 119",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 208,",
              " *                   \"g\": 209,",
              " *                   \"r\": 208",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 40,",
              " *                   \"g\": 108,",
              " *                   \"r\": 130",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 133,",
              " *                   \"g\": 101,",
              " *                   \"r\": 75",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 36,",
              " *                   \"g\": 78,",
              " *                   \"r\": 94",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 178,",
              " *                   \"g\": 161,",
              " *                   \"r\": 148",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 192,",
              " *                   \"g\": 177,",
              " *                   \"r\": 163",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 159,",
              " *                   \"g\": 184,",
              " *                   \"r\": 208",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 137,",
              " *                   \"g\": 159,",
              " *                   \"r\": 183",
              " *                 }",
              " *               }",
              " *             ],",
              " *             \"prominent\": {",
              " *               \"rgb\": {",
              " *                 \"b\": 26,",
              " *                 \"g\": 36,",
              " *                 \"r\": 39",
              " *               }",
              " *             }",
              " *           },",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg/image1.jpg#originWidth=5616&originHeight=3744\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"6312959\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg\",",
              " *       \"url\": \"https://static.wixstatic.com/media/w8ide0_suuti24j47vesffndm8hkd651u72vp3f~mv2.jpg\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:10.000Z\",",
              " *       \"_id\": \"w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\",",
              " *       \"_updatedDate\": \"2023-07-16T08:56:10.000Z\",",
              " *       \"displayName\": \"file1.zip\",",
              " *       \"hash\": \"urm9iak1w39pk381ucb9kqjphya8loro\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"archive\": {",
              " *           \"_id\": \"w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\",",
              " *           \"filename\": \"file1.zip\",",
              " *           \"sizeInBytes\": \"49546083\",",
              " *           \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"ARCHIVE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"49546083\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/48c4fbc47d7298cd4406936294b4c532.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_9yvsg5vv40flojo0120h0rz6ki4g0tur.zip\"",
              " *     }",
              " *   ],",
              " *   \"nextCursor\": {",
              " *     \"cursors\": {",
              " *       \"next\": \"\"",
              " *     },",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */"
            ]
          },
          {
            "title": "Search files with options ",
            "body": [
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample searchOptions value:",
              " * {",
              " *   mediaTypes: ['IMAGE', 'ARCHIVE'],",
              " *   search: 'river'",
              " * }",
              " */",
              "",
              "async function mySearchFilesFunction(searchOptions) {",
              "  try {",
              "    const elevatedSearchFiles = elevate(files.searchFiles);",
              "    const searchFiles = await elevatedSearchFiles(searchOptions);",
              "",
              "    console.log('Search files result:', searchFiles);",
              "    return searchFiles;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to: ",
              " * {",
              " *   \"files\": [",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:54:05.000Z\",",
              " *       \"_id\": \"w8ide0_j18vyi43l4adwd81tpioxumkojv3dg78~mv2.jpg\",",
              " *       \"_updatedDate\": \"2023-07-19T08:43:58.000Z\",",
              " *       \"displayName\": \"river\",",
              " *       \"hash\": \"xa8k1btltmtn0nimi7a2diwdxd4aujku\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [",
              " *         \"mountain stream\",",
              " *         \"fresh water\",",
              " *         \"river bank\",",
              " *         \"natural scenery\"",
              " *       ],",
              " *       \"media\": {",
              " *         \"image\": {",
              " *           \"colors\": {",
              " *             \"palette\": [",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 41,",
              " *                   \"g\": 41,",
              " *                   \"r\": 24",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 135,",
              " *                   \"g\": 105,",
              " *                   \"r\": 62",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 195,",
              " *                   \"g\": 154,",
              " *                   \"r\": 105",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 230,",
              " *                   \"g\": 190,",
              " *                   \"r\": 141",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 96,",
              " *                   \"g\": 77,",
              " *                   \"r\": 44",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 144,",
              " *                   \"g\": 135,",
              " *                   \"r\": 99",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 64,",
              " *                   \"g\": 106,",
              " *                   \"r\": 64",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 178,",
              " *                   \"g\": 131,",
              " *                   \"r\": 80",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 247,",
              " *                   \"g\": 230,",
              " *                   \"r\": 185",
              " *                 }",
              " *               },",
              " *               {",
              " *                 \"rgb\": {",
              " *                   \"b\": 75,",
              " *                   \"g\": 145,",
              " *                   \"r\": 97",
              " *                 }",
              " *               }",
              " *             ],",
              " *             \"prominent\": {",
              " *               \"rgb\": {",
              " *                 \"b\": 41,",
              " *                 \"g\": 41,",
              " *                 \"r\": 24",
              " *               }",
              " *             }",
              " *           },",
              " *           \"faces\": [],",
              " *           \"image\": \"wix:image://v1/w8ide0_j18vyi43l4adwd81tpioxumkojv3dg78~mv2.jpg/river#originWidth=5760&originHeight=3840\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"IMAGE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"3677628\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/w8ide0_j18vyi43l4adwd81tpioxumkojv3dg78~mv2.jpg\",",
              " *       \"url\": \"https://static.wixstatic.com/media/w8ide0_j18vyi43l4adwd81tpioxumkojv3dg78~mv2.jpg\"",
              " *     },",
              " *     {",
              " *       \"_createdDate\": \"2023-07-16T08:56:10.000Z\",",
              " *       \"_id\": \"w8ide0_r047t3x8bm46vlx5n1aeha1bdd7g4u1y.zip\",",
              " *       \"_updatedDate\": \"2023-07-20T07:16:55.000Z\",",
              " *       \"displayName\": \"riverpics\",",
              " *       \"hash\": \"3vx3d37vf3j2ttxp61ax7wlt0iox58nh\",",
              " *       \"internalTags\": [",
              " *         \"_fileOrigin_uploaded\"",
              " *       ],",
              " *       \"labels\": [],",
              " *       \"media\": {",
              " *         \"archive\": {",
              " *           \"_id\": \"w8ide0_r047t3x8bm46vlx5n1aeha1bdd7g4u1y.zip\",",
              " *           \"filename\": \"riverpics\",",
              " *           \"sizeInBytes\": \"49546083\",",
              " *           \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_r047t3x8bm46vlx5n1aeha1bdd7g4u1y.zip\"",
              " *         }",
              " *       },",
              " *       \"mediaType\": \"ARCHIVE\",",
              " *       \"operationStatus\": \"READY\",",
              " *       \"parentFolderId\": \"media-root\",",
              " *       \"private\": false,",
              " *       \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *       \"sizeInBytes\": \"49546083\",",
              " *       \"state\": \"OK\",",
              " *       \"thumbnailUrl\": \"https://static.wixstatic.com/media/48c4fbc47d7298cd4406936294b4c532.png\",",
              " *       \"url\": \"https://3ecba886-4267-11ee-be56-0242ac120002.usrfiles.com/archives/w8ide0_r047t3x8bm46vlx5n1aeha1bdd7g4u1y.zip\"",
              " *     }",
              " *   ],",
              " *   \"nextCursor\": {",
              " *     \"cursors\": {",
              " *       \"next\": \"\"",
              " *     },",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */"
            ],
            "extra": {
              "description": "When no `rootFolder` is specified in the options parameter, the search returns results from the 'MEDIA_ROOT' folder."
            }
          },
          {
            "title": "Bulk delete all files found in a chosen folder ",
            "body": [
              "/*******************************************",
              " * Backend code - bulk-delete-files.web.js *",
              " ******************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const deleteFiles = webMethod(Permissions.Anyone, async (fileIds, options) => {",
              "  try {",
              "    const elevatedBulkDeleteFiles = elevate(files.bulkDeleteFiles);",
              "    await elevatedBulkDeleteFiles(fileIds, options);",
              "",
              "    console.log(`Permanently deleted files with ids: ${fileIds.toString()}.`);",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "export const searchFileIds = webMethod(Permissions.Anyone, async (parentFolderId) => {",
              "  try {",
              "    const options = { parentFolder: parentFolderId };",
              "    const elevatedSearchFiles = elevate(files.searchFiles);",
              "    const returnedFiles = await elevatedSearchFiles(options);",
              "",
              "    const fileIds = returnedFiles.map((file) => {",
              "      return file._id;",
              "    });",
              "",
              "    return fileIds;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { deleteFiles, searchFileIds } from 'backend/bulk-delete-files.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#delete').onClick(async () => {",
              "    const isDeletePermanently = $w('#deletePermanently').checked;",
              "    const options = { permanent: isDeletePermanently };",
              "",
              "    const parentFolder = $w('#parentFolder').value;",
              "    const fileIds = await searchFileIds(parentFolder);",
              "",
              "    await deleteFiles(fileIds, options);",
              "    $w('#successMessage').show();",
              "  });",
              "});",
              ""
            ],
            "extra": {
              "description": "This code shows a page where the visitor chooses a folder by typing the folder's name in an input box, and then all the files in the chosen folder are deleted. Only visitors with permission to manage the site's media would have access to this page."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "searchFiles",
      "isAdminMethod": true
    },
    {
      "name": "updateFileDescriptor",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID. Generated when a file is uploaded to the Media Manager.",
          "required": true
        },
        {
          "name": "file",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.UpdateFileDescriptorFile"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "file"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-media-v2.Files.FileDescriptor"
                }
              ]
            }
          }
        ],
        "doc": "Information about the updated file.\n"
      },
      "docs": {
        "summary": "Updates a file.",
        "description": [
          "The `updateFileDescriptor()` function returns a Promise that resolves to the updated file's descriptor.\n\nYou can use the `parentFolderId` parameter to move a file from its current folder to a different folder."
        ],
        "examples": [
          {
            "title": "Update a file's location (dashboard page code)",
            "body": [
              "import { files } from 'wix-media.v2';",
              "",
              "/* Sample id value: 'd4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg'",
              " *",
              " * Sample file value:",
              " * {",
              " *   parentFolderId: 'b2bc72834460412494c93617d88b8c89'",
              " * }",
              " */",
              "",
              "async function myUpdateFileDescriptorFunction(id, file) {",
              "  try {",
              "    const updatedDescriptor = await files.updateFileDescriptor(id, file);",
              "",
              "    console.log(\"Updated:\", updatedDescriptor);",
              "    return updatedDescriptor;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_createdDate\": \"2023-08-09T08:45:50.000Z\",",
              " *   \"_id\": \"d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\",",
              " *   \"_updatedDate\": \"2023-09-10T09:53:50.000Z\",",
              " *   \"displayName\": \"river.jpg\",",
              " *   \"hash\": \"2f2a61275002b90e6e8fa1be4674c4a7\",",
              " *   \"internalTags\": [",
              " *     \"_fileOrigin_uploaded\"",
              " *   ],",
              " *   \"labels\": [",
              " *     \"mountain stream\",",
              " *     \"clear stream\",",
              " *     \"flowing water\",",
              " *     \"mountain torrent\",",
              " *     \"free-flowing\",",
              " *     \"streams\",",
              " *     \"running water\",",
              " *     \"downstream\",",
              " *     \"watercourse\",",
              " *     \"stream\",",
              " *     \"riverbed\",",
              " *     \"freshwater\",",
              " *     \"landscape photograph\",",
              " *     \"motion blur\",",
              " *     \"fresh water\",",
              " *     \"river bank\",",
              " *     \"torrent\",",
              " *     \"flow into\",",
              " *     \"landscape photography\",",
              " *     \"natural scenery\"",
              " *   ],",
              " *   \"media\": {",
              " *     \"image\": {",
              " *       \"colors\": {",
              " *         \"palette\": [",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 41,",
              " *               \"g\": 41,",
              " *               \"r\": 24",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 135,",
              " *               \"g\": 105,",
              " *               \"r\": 62",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 195,",
              " *               \"g\": 154,",
              " *               \"r\": 105",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 230,",
              " *               \"g\": 190,",
              " *               \"r\": 141",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 96,",
              " *               \"g\": 77,",
              " *               \"r\": 44",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 144,",
              " *               \"g\": 135,",
              " *               \"r\": 99",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 64,",
              " *               \"g\": 106,",
              " *               \"r\": 64",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 178,",
              " *               \"g\": 131,",
              " *               \"r\": 80",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 247,",
              " *               \"g\": 230,",
              " *               \"r\": 185",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 75,",
              " *               \"g\": 145,",
              " *               \"r\": 97",
              " *             }",
              " *           }",
              " *         ],",
              " *         \"prominent\": {",
              " *           \"rgb\": {",
              " *             \"b\": 41,",
              " *             \"g\": 41,",
              " *             \"r\": 24",
              " *           }",
              " *         }",
              " *       },",
              " *       \"faces\": [],",
              " *       \"image\": \"wix:image://v1/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg/river.jpg#originWidth=5760&originHeight=3840\"",
              " *     }",
              " *   },",
              " *   \"mediaType\": \"IMAGE\",",
              " *   \"operationStatus\": \"READY\",",
              " *   \"parentFolderId\": \"b2bc72834460412494c93617d88b8c89\",",
              " *   \"private\": false,",
              " *   \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *   \"sizeInBytes\": \"3677628\",",
              " *   \"state\": \"OK\",",
              " *   \"thumbnailUrl\": \"https://static.wixstatic.com/media/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\",",
              " *   \"url\": \"https://static.wixstatic.com/media/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Update a file's location (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample id value: 'd4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg'",
              " *",
              " * Sample file value:",
              " * {",
              " *   parentFolderId: 'b2bc72834460412494c93617d88b8c89'",
              " * }",
              " */",
              "",
              "export const myUpdateFileDescriptorFunction = webMethod(Permissions.Anyone, async (id, file) => {",
              "  try {",
              "    const elevatedUpdateFileDescriptor = elevate(files.updateFileDescriptor);",
              "    const updatedDescriptor = await elevatedUpdateFileDescriptor(id, file);",
              "",
              "    console.log(\"Updated:\", updatedDescriptor);",
              "    return updatedDescriptor;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_createdDate\": \"2023-08-09T08:45:50.000Z\",",
              " *   \"_id\": \"d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\",",
              " *   \"_updatedDate\": \"2023-09-10T09:53:50.000Z\",",
              " *   \"displayName\": \"river.jpg\",",
              " *   \"hash\": \"2f2a61275002b90e6e8fa1be4674c4a7\",",
              " *   \"internalTags\": [",
              " *     \"_fileOrigin_uploaded\"",
              " *   ],",
              " *   \"labels\": [",
              " *     \"mountain stream\",",
              " *     \"clear stream\",",
              " *     \"flowing water\",",
              " *     \"mountain torrent\",",
              " *     \"free-flowing\",",
              " *     \"streams\",",
              " *     \"running water\",",
              " *     \"downstream\",",
              " *     \"watercourse\",",
              " *     \"stream\",",
              " *     \"riverbed\",",
              " *     \"freshwater\",",
              " *     \"landscape photograph\",",
              " *     \"motion blur\",",
              " *     \"fresh water\",",
              " *     \"river bank\",",
              " *     \"torrent\",",
              " *     \"flow into\",",
              " *     \"landscape photography\",",
              " *     \"natural scenery\"",
              " *   ],",
              " *   \"media\": {",
              " *     \"image\": {",
              " *       \"colors\": {",
              " *         \"palette\": [",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 41,",
              " *               \"g\": 41,",
              " *               \"r\": 24",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 135,",
              " *               \"g\": 105,",
              " *               \"r\": 62",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 195,",
              " *               \"g\": 154,",
              " *               \"r\": 105",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 230,",
              " *               \"g\": 190,",
              " *               \"r\": 141",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 96,",
              " *               \"g\": 77,",
              " *               \"r\": 44",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 144,",
              " *               \"g\": 135,",
              " *               \"r\": 99",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 64,",
              " *               \"g\": 106,",
              " *               \"r\": 64",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 178,",
              " *               \"g\": 131,",
              " *               \"r\": 80",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 247,",
              " *               \"g\": 230,",
              " *               \"r\": 185",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 75,",
              " *               \"g\": 145,",
              " *               \"r\": 97",
              " *             }",
              " *           }",
              " *         ],",
              " *         \"prominent\": {",
              " *           \"rgb\": {",
              " *             \"b\": 41,",
              " *             \"g\": 41,",
              " *             \"r\": 24",
              " *           }",
              " *         }",
              " *       },",
              " *       \"faces\": [],",
              " *       \"image\": \"wix:image://v1/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg/river.jpg#originWidth=5760&originHeight=3840\"",
              " *     }",
              " *   },",
              " *   \"mediaType\": \"IMAGE\",",
              " *   \"operationStatus\": \"READY\",",
              " *   \"parentFolderId\": \"b2bc72834460412494c93617d88b8c89\",",
              " *   \"private\": false,",
              " *   \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *   \"sizeInBytes\": \"3677628\",",
              " *   \"state\": \"OK\",",
              " *   \"thumbnailUrl\": \"https://static.wixstatic.com/media/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\",",
              " *   \"url\": \"https://static.wixstatic.com/media/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Update a file's display name and labels",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample id value: 'd4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg'",
              " *",
              " * Sample file value:",
              " * {",
              " *   displayName: 'river',",
              " *   labels: ['water', 'flowing', 'nature']",
              " * }",
              " */",
              "",
              "export const myUpdateFileDescriptorFunction = webMethod(Permissions.Anyone, async (id, file) => {",
              "  try {",
              "    const elevatedUpdateFileDescriptor = elevate(files.updateFileDescriptor);",
              "    const updatedDescriptor = await elevatedUpdateFileDescriptor(id, file);",
              "",
              "    console.log(\"Updated:\", updatedDescriptor);",
              "    return updatedDescriptor;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_createdDate\": \"2023-08-09T08:45:50.000Z\",",
              " *   \"_id\": \"d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\",",
              " *   \"_updatedDate\": \"2023-08-14T09:48:28.000Z\",",
              " *   \"displayName\": \"river\",",
              " *   \"hash\": \"2f2a61275002b90e6e8fa1be4674c4a7\",",
              " *   \"internalTags\": [",
              " *     \"_fileOrigin_uploaded\"",
              " *   ],",
              " *   \"labels\": [",
              " *     \"water\",",
              " *     \"flowing\",",
              " *     \"nature\"",
              " *   ],",
              " *   \"media\": {",
              " *     \"image\": {",
              " *       \"colors\": {",
              " *         \"palette\": [",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 41,",
              " *               \"g\": 41,",
              " *               \"r\": 24",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 135,",
              " *               \"g\": 105,",
              " *               \"r\": 62",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 195,",
              " *               \"g\": 154,",
              " *               \"r\": 105",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 230,",
              " *               \"g\": 190,",
              " *               \"r\": 141",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 96,",
              " *               \"g\": 77,",
              " *               \"r\": 44",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 144,",
              " *               \"g\": 135,",
              " *               \"r\": 99",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 64,",
              " *               \"g\": 106,",
              " *               \"r\": 64",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 178,",
              " *               \"g\": 131,",
              " *               \"r\": 80",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 247,",
              " *               \"g\": 230,",
              " *               \"r\": 185",
              " *             }",
              " *           },",
              " *           {",
              " *             \"rgb\": {",
              " *               \"b\": 75,",
              " *               \"g\": 145,",
              " *               \"r\": 97",
              " *             }",
              " *           }",
              " *         ],",
              " *         \"prominent\": {",
              " *           \"rgb\": {",
              " *             \"b\": 41,",
              " *             \"g\": 41,",
              " *             \"r\": 24",
              " *           }",
              " *         }",
              " *       },",
              " *       \"faces\": [],",
              " *       \"image\": \"wix:image://v1/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg/river#originWidth=5760&originHeight=3840\"",
              " *     }",
              " *   },",
              " *   \"mediaType\": \"IMAGE\",",
              " *   \"operationStatus\": \"READY\",",
              " *   \"parentFolderId\": \"b2bc72834460412494c93617d88b8c89\",",
              " *   \"private\": false,",
              " *   \"siteId\": \"3ecba886-4267-11ee-be56-0242ac120002\",",
              " *   \"sizeInBytes\": \"3677628\",",
              " *   \"state\": \"OK\",",
              " *   \"thumbnailUrl\": \"https://static.wixstatic.com/media/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\",",
              " *   \"url\": \"https://static.wixstatic.com/media/d4dde1_0c8b26126ba94f3daee16d9e9be04f0c~mv2.jpg\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Update a file's display name from visitor input ",
            "body": [
              "/*************************************",
              " * Backend code - update-file.web.js *",
              " ************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { files } from 'wix-media.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const updateFile = webMethod(Permissions.Anyone, async (fileId, file) => {",
              "  try {",
              "    const elevatedUpdateFileDescriptor = elevate(files.updateFileDescriptor);",
              "    const updatedDescriptor = await elevatedUpdateFileDescriptor(fileId, file);",
              "",
              "    return updatedDescriptor;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "export const listImages = webMethod(Permissions.Anyone, async () => {",
              "  const listOptions = {",
              "    mediaTypes: [\"IMAGE\"]",
              "  }",
              "",
              "  try {",
              "    const elevatedListFiles = elevate(files.listFiles)",
              "    const images = await elevatedListFiles(listOptions);",
              "",
              "    return images.files;",
              "  } catch (error) {",
              "    console.error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { updateFile, listImages } from 'backend/update-file.web';",
              "",
              "$w.onReady(async () => {",
              "  await populateImagesDropdown();",
              "",
              "  $w('#update').onClick(async () => {",
              "    const imageId = $w('#imagesDropdown').value;",
              "",
              "    const fileUpdates = {",
              "      displayName: $w('#newDisplayName').value",
              "    }",
              "",
              "    const updatedLocation = await updateFile(imageId, fileUpdates);",
              "    console.log('Display name successfully updated to:', updatedLocation.displayName)",
              "    $w('#updateSuccessMsg').show();",
              "  });",
              "});",
              "",
              "async function populateImagesDropdown() {",
              "  const images = await listImages();",
              "  const dropdownOptions = images.map((image) => {",
              "    return {",
              "      label: image.displayName,",
              "      value: image._id",
              "    };",
              "  });",
              "",
              "  $w('#imagesDropdown').options = dropdownOptions;",
              "};"
            ],
            "extra": {
              "description": "This code uses the visitor's input on the page to update the display name of an image which they choose from a dropdown list on the page."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "updateFileDescriptor",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Archive",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "WixMedia ID."
        },
        {
          "name": "filename",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Archive filename."
        },
        {
          "name": "sizeInBytes",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Archive size in bytes."
        },
        {
          "name": "url",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Archive URL."
        },
        {
          "name": "urlExpirationDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Archive URL expiration date (when relevant)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AudioV2",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "WixMedia ID."
        },
        {
          "name": "assets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Audio formats available for this file."
        },
        {
          "name": "bitrate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Audio bitrate."
        },
        {
          "name": "duration",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Audio duration in seconds."
        },
        {
          "name": "format",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Audio format."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Audio size in bytes."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteFilesOptions",
      "members": [
        {
          "name": "permanent",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the specified files are permanently deleted. <br />\nDefault: `false`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteFilesRequest",
      "members": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the files to move to the Media Manager's trash bin."
        },
        {
          "name": "permanent",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the specified files are permanently deleted. <br />\nDefault: `false`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteFilesResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkImportFileOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to include the imported File Descriptor in the response. Set to `false` to exclude the File Descriptor from the returned object.\n\nDefault: `true`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkImportFileRequest",
      "members": [
        {
          "name": "importFileRequests",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.ImportFileRequest"
                  }
                ]
              }
            }
          ],
          "doc": "Information about the files to import."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to include the imported File Descriptor in the response. Set to `false` to exclude the File Descriptor from the returned object.\n\nDefault: `true`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkImportFileResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.BulkImportFileResult"
                  }
                ]
              }
            }
          ],
          "doc": "Items created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkImportFileResult",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileDescriptor"
            }
          ],
          "doc": "Imported file. This field is returned if the operation was successful and `returnEntity` is not set to `false`."
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ItemMetadata"
            }
          ],
          "doc": "Item metadata."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkImportFilesRequest",
      "members": [
        {
          "name": "importFileRequests",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.ImportFileRequest"
                  }
                ]
              }
            }
          ],
          "doc": "Information about the files to import."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkImportFilesResponse",
      "members": [
        {
          "name": "files",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.FileDescriptor"
                  }
                ]
              }
            }
          ],
          "doc": "Information about the imported files."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRestoreFilesFromTrashBinRequest",
      "members": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the files to restore from the Media Manager's trash bin."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRestoreFilesFromTrashBinResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Color",
      "members": [
        {
          "name": "hex",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "HEX color."
        },
        {
          "name": "rgb",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ColorRGB"
            }
          ],
          "doc": "RGB color."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ColorRGB",
      "members": [
        {
          "name": "b",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Blue channel."
        },
        {
          "name": "g",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Green channel."
        },
        {
          "name": "r",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Red channel."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Colors",
      "members": [
        {
          "name": "palette",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.Color"
                  }
                ]
              }
            }
          ],
          "doc": "Color palette of the image."
        },
        {
          "name": "prominent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Color"
            }
          ],
          "doc": "Main color of the image."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of items to return in the results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DownloadUrl",
      "members": [
        {
          "name": "assetKey",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Key for downloading a different asset (format and quality) of a file.\nDefault: `src`, key representing the original file's format and quality."
        },
        {
          "name": "url",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The file download URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExternalInfo",
      "members": [
        {
          "name": "externalIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "External IDs to pass in the File Ready or File Failed events."
        },
        {
          "name": "origin",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "External information to pass in the File Ready or File Failed events."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FaceRecognition",
      "members": [
        {
          "name": "confidence",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The accuracy percentage of the face recognition. The likelihood that a face is detected."
        },
        {
          "name": "height",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Face pixel height."
        },
        {
          "name": "width",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Face pixel width."
        },
        {
          "name": "x",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Top left x pixel coordinate of the face."
        },
        {
          "name": "y",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Top left y pixel coordinate of the face."
        }
      ],
      "docs": {
        "description": [
          "Using this object you can crop images while centering on faces\n------------------------\n|                      |\n|    x,y               |\n|    *--------         |\n|    |  .  . |         |\n|    |   |   | height  |\n|    |  \\ /  |         |\n|    |       |         |\n|    ---------         |\n|     width            |\n|                      |\n|______________________|"
        ]
      }
    },
    {
      "name": "FileDescriptor",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the file was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID. Generated when a file is uploaded to the Media Manager."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the file was updated."
        },
        {
          "name": "displayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File name as it appears in the Media Manager."
        },
        {
          "name": "hash",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File hash."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "media",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileMedia"
            }
          ],
          "doc": "Media file content."
        },
        {
          "name": "mediaType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Media file type.\n\nSupported values: `\"IMAGE\"`, `\"VIDEO\"`, `\"AUDIO\"`, `\"DOCUMENT\"`, `\"VECTOR\"`, `\"ARCHIVE\"`, `\"MODEL3D\"`"
        },
        {
          "name": "operationStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of the file that was uploaded.\n\nSupported values: `\"FAILED\"`, `\"READY\"`, `\"PENDING\"`\n* `FAILED`: The file failed to upload, for example, during media post processing.\n* `READY`: The file uploaded, finished all processing, and is ready for use.\n* `PENDING`: The file is processing and the URLs are not yet available. This response is returned when importing a file."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder."
        },
        {
          "name": "private",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the uploaded file is public or private. Private links require a token."
        },
        {
          "name": "siteId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The Wix site ID where the media file is stored."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Size of the uploaded file in bytes."
        },
        {
          "name": "sourceUrl",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL where the file was uploaded from."
        },
        {
          "name": "state",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "State of the file.\n\nSupported values: `\"OK\"`, `\"DELETED\"`"
        },
        {
          "name": "thumbnailUrl",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL of the file's thumbnail."
        },
        {
          "name": "url",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Static URL of the file."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FileFailed",
      "members": [
        {
          "name": "externalInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ExternalInfo"
            }
          ],
          "doc": "External information passed in the file import or upload."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FileMedia",
      "members": [
        {
          "name": "archive",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Archive"
            }
          ],
          "doc": "Information about the archive."
        },
        {
          "name": "audio",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.AudioV2"
            }
          ],
          "doc": "Information about the audio."
        },
        {
          "name": "document",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Information about the document."
        },
        {
          "name": "image",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ImageMedia"
            }
          ],
          "doc": "Information about the image."
        },
        {
          "name": "model3d",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Model3D"
            }
          ],
          "doc": "Information about the 3D Model."
        },
        {
          "name": "vector",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ImageMedia"
            }
          ],
          "doc": "Information about the vector."
        },
        {
          "name": "video",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Information about the video."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfFileMediaMediaOneOf",
            "members": [
              "archive",
              "audio",
              "document",
              "image",
              "model3d",
              "other",
              "vector",
              "video"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FileMediaMediaOneOf",
      "members": [
        {
          "name": "archive",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Archive"
            }
          ],
          "doc": "Information about the archive."
        },
        {
          "name": "audio",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.AudioV2"
            }
          ],
          "doc": "Information about the audio."
        },
        {
          "name": "document",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Information about the document."
        },
        {
          "name": "image",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ImageMedia"
            }
          ],
          "doc": "Information about the image."
        },
        {
          "name": "model3d",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Model3D"
            }
          ],
          "doc": "Information about the 3D Model."
        },
        {
          "name": "vector",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ImageMedia"
            }
          ],
          "doc": "Information about the vector."
        },
        {
          "name": "video",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Information about the video."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FileReady",
      "members": [
        {
          "name": "externalInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ExternalInfo"
            }
          ],
          "doc": "External information passed in the file import or upload."
        },
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileDescriptor"
            }
          ],
          "doc": "File entity that is ready with full information"
        },
        {
          "name": "triggeredByUndelete",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "The File was restored from the trash-bin"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileDownloadUrlOptions",
      "members": [
        {
          "name": "assetKeys",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Keys for downloading different assets (format and quality) of a file.\nDefault: `src`, key representing the original file's format and quality."
        },
        {
          "name": "contentDisposition",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Whether the link downloads the file or opens the file in the browser.\n\n- `ATTACHMENT`: The link downloads the file.\n- `INLINE`: The link opens the file in the browser.\n\nDefault: `ATTACHMENT`\n"
        },
        {
          "name": "downloadFileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Temporary file name used to identify the file type. For example, a file named \"myFile.jpeg\" identifies as an \"image/jpeg\" file type. <br />\n\n**Note:** The name that appears in the Media Manager is taken from the `filename` query parameter in the upload request.\n"
        },
        {
          "name": "expirationInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The time that it takes in minutes for the download URL to expire. <br />\nDefault: `600`. <br />\nLimit: `525600` (1 year)."
        },
        {
          "name": "expirationRedirectUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The redirect URL for when the temporary download URL with a token expires. <br />\nDefault: A 403 Forbidden response page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileDownloadUrlRequest",
      "members": [
        {
          "name": "assetKeys",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Keys for downloading different assets (format and quality) of a file.\nDefault: `src`, key representing the original file's format and quality."
        },
        {
          "name": "contentDisposition",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Whether the link downloads the file or opens the file in the browser.\n\n- `ATTACHMENT`: The link downloads the file.\n- `INLINE`: The link opens the file in the browser.\n\nDefault: `ATTACHMENT`\n"
        },
        {
          "name": "downloadFileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Temporary file name used to identify the file type. For example, a file named \"myFile.jpeg\" identifies as an \"image/jpeg\" file type. <br />\n\n**Note:** The name that appears in the Media Manager is taken from the `filename` query parameter in the upload request.\n"
        },
        {
          "name": "expirationInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The time that it takes in minutes for the download URL to expire. <br />\nDefault: `600`. <br />\nLimit: `525600` (1 year)."
        },
        {
          "name": "expirationRedirectUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The redirect URL for when the temporary download URL with a token expires. <br />\nDefault: A 403 Forbidden response page."
        },
        {
          "name": "fileId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileDownloadUrlResponse",
      "members": [
        {
          "name": "downloadUrls",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.DownloadUrl"
                  }
                ]
              }
            }
          ],
          "doc": "URL for downloading a specific file in the Media Manager."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileResumableUploadUrlOptions",
      "members": [
        {
          "name": "fileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Temporary file name used to identify the file type. For example, a file named \"myFile.jpeg\" identifies as an \"image/jpeg\" file type.\n<br /> **Note:** The name that appears in the Media Manager is taken from the `filename` query parameter in the upload request."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private. See `Private Files` in terminology."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File size in bytes."
        },
        {
          "name": "uploadProtocol",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The upload protocol to use for implementing the resumable upload.\n\nSupported values: `\"TUS\"`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileResumableUploadUrlRequest",
      "members": [
        {
          "name": "fileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Temporary file name used to identify the file type. For example, a file named \"myFile.jpeg\" identifies as an \"image/jpeg\" file type.\n<br /> **Note:** The name that appears in the Media Manager is taken from the `filename` query parameter in the upload request."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "mimeType",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File mime type."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private. See `Private Files` in terminology."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File size in bytes."
        },
        {
          "name": "uploadProtocol",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The upload protocol to use for implementing the resumable upload."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileResumableUploadUrlResponse",
      "members": [
        {
          "name": "uploadProtocol",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The upload protocol to use for implementing the resumable upload.\n\nSupported values: `\"TUS\"`\n"
        },
        {
          "name": "uploadToken",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Single-use upload token."
        },
        {
          "name": "uploadUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The URL for uploading a file to the Media Manager."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileUploadUrlOptions",
      "members": [
        {
          "name": "externalInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ExternalInfo"
            }
          ],
          "doc": "A place to map an external entity to an uploaded file in the Wix Media Manager."
        },
        {
          "name": "fileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Temporary file name used to identify the file type. For example, a file named \"myFile.jpeg\" identifies as an \"image/jpeg\" file type.\n<br /> **Note:** The name that appears in the Media Manager is taken from the `filename` query parameter in the upload request."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the uploaded file is public or private. See `Private Files` in terminology."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File size in bytes."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileUploadUrlRequest",
      "members": [
        {
          "name": "externalInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ExternalInfo"
            }
          ],
          "doc": "A place to map an external entity to an uploaded file in the Wix Media Manager."
        },
        {
          "name": "fileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Temporary file name used to identify the file type. For example, a file named \"myFile.jpeg\" identifies as an \"image/jpeg\" file type.\n<br /> **Note:** The name that appears in the Media Manager is taken from the `filename` query parameter in the upload request."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "mimeType",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File mime type."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the uploaded file is public or private. See `Private Files` in terminology."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File size in bytes."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFileUploadUrlResponse",
      "members": [
        {
          "name": "uploadUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The URL for uploading a file to the Media Manager."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFilesDownloadUrlRequest",
      "members": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the files to download."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateFilesDownloadUrlResponse",
      "members": [
        {
          "name": "downloadUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL for downloading the compressed file containing the specified files in the Media Manager."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateVideoStreamingUrlOptions",
      "members": [
        {
          "name": "format",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Video stream format.\n\nSupported values: `\"UNKNOWN\"`, `\"HLS\"`, `\"DASH\"`\n\n\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateVideoStreamingUrlRequest",
      "members": [
        {
          "name": "fileId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID."
        },
        {
          "name": "format",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Video stream format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateVideoStreamingUrlResponse",
      "members": [
        {
          "name": "downloadUrl",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.DownloadUrl"
            }
          ],
          "doc": "URL for streaming a specific file in the Media Manager."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateWebSocketTokenRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GenerateWebSocketTokenResponse",
      "members": [
        {
          "name": "token",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The web socket token for the identity in the request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetFileDescriptorRequest",
      "members": [
        {
          "name": "fileId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetFileDescriptorResponse",
      "members": [
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileDescriptor"
            }
          ],
          "doc": "Information about the file."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetFileDescriptorsRequest",
      "members": [
        {
          "name": "fileIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "File IDs."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetFileDescriptorsResponse",
      "members": [
        {
          "name": "files",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.FileDescriptor"
                  }
                ]
              }
            }
          ],
          "doc": "Information about the requested files."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentityInfo",
      "members": [
        {
          "name": "identityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "User Id. empty when UNKNOWN"
        },
        {
          "name": "identityType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The type of the user that uploaded the file"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ImageMedia",
      "members": [
        {
          "name": "caption",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Optional, An AI generated description of the image"
        },
        {
          "name": "colors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Colors"
            }
          ],
          "doc": "Image colors."
        },
        {
          "name": "faces",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.FaceRecognition"
                  }
                ]
              }
            }
          ],
          "doc": "Information about faces in the image. Use to crop images without cutting out faces."
        },
        {
          "name": "image",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Image data."
        },
        {
          "name": "previewImage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Information about the image preview.\nYou can use this to display a preview for private images."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ImportFileOptions",
      "members": [
        {
          "name": "displayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File name that appears in the Media Manager."
        },
        {
          "name": "externalInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ExternalInfo"
            }
          ],
          "doc": "A place to map an external entity to an imported file in the Wix Media Manager."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "mediaType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Media type of the file to import.\n\nSupported values: `\"IMAGE\"`, `\"VIDEO\"`, `\"AUDIO\"`, `\"DOCUMENT\"`, `\"VECTOR\"`, `\"ARCHIVE\"`, `\"MODEL3D\"`\n"
        },
        {
          "name": "mimeType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File mime type."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private."
        },
        {
          "name": "urlHeaders",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Optional headers that should be sent with the external URL."
        },
        {
          "name": "urlParams",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Optional parameters that should be sent with the external URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ImportFileRequest",
      "members": [
        {
          "name": "displayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File name that appears in the Media Manager."
        },
        {
          "name": "externalInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ExternalInfo"
            }
          ],
          "doc": "A place to map an external entity to an imported file in the Wix Media Manager."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "mediaType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Media type of the file to import.\n\nSupported values: `\"IMAGE\"`, `\"VIDEO\"`, `\"AUDIO\"`, `\"DOCUMENT\"`, `\"VECTOR\"`, `\"ARCHIVE\"`, `\"MODEL3D\"`\n"
        },
        {
          "name": "mimeType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File mime type."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private."
        },
        {
          "name": "url",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Publicly accessible external file URL."
        },
        {
          "name": "urlHeaders",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Optional headers that should be sent with the external URL."
        },
        {
          "name": "urlParams",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Optional parameters that should be sent with the external URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ImportFileResponse",
      "members": [
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileDescriptor"
            }
          ],
          "doc": "Information about the imported file."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListDeletedFilesOptions",
      "members": [
        {
          "name": "mediaTypes",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Media file type.\n\nSupported values: `\"IMAGE\"`, `\"VIDEO\"`, `\"AUDIO\"`, `\"DOCUMENT\"`, `\"VECTOR\"`, `\"ARCHIVE\"`, `\"MODEL3D\"`\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.CursorPaging"
            }
          ],
          "doc": "Cursor and paging information."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Sorting"
            }
          ],
          "doc": "Field name and order to sort by. One of:\n\n- `displayName`\n- `_updatedDate`\n- `sizeInBytes`\n\nDefault: `_updatedDate` in `\"DESC\"` order.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListDeletedFilesRequest",
      "members": [
        {
          "name": "mediaTypes",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "File media type.\nexcluding: OTHER media type"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.CursorPaging"
            }
          ],
          "doc": "Cursor and paging information."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Sorting"
            }
          ],
          "doc": "Field name and order to sort by. One of:\n\n- `displayName`\n- `_updatedDate`\n- `sizeInBytes`\n\nDefault: `_updatedDate` in `\"DESC\"` order.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListDeletedFilesResponse",
      "members": [
        {
          "name": "files",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.FileDescriptor"
                  }
                ]
              }
            }
          ],
          "doc": "List of files in the Media Manager's trash bin."
        },
        {
          "name": "nextCursor",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.PagingMetadataV2"
            }
          ],
          "doc": "The next cursor if it exists."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListFilesOptions",
      "members": [
        {
          "name": "mediaTypes",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Media file type.\n\nSupported values: `\"IMAGE\"`, `\"VIDEO\"`, `\"AUDIO\"`, `\"DOCUMENT\"`, `\"VECTOR\"`, `\"ARCHIVE\"`, `\"MODEL3D\"`\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.CursorPaging"
            }
          ],
          "doc": "Cursor and paging information."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault:`media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Sorting"
            }
          ],
          "doc": "Field name and order to sort by. One of:\n\n- `displayName`\n- `_updatedDate`\n- `sizeInBytes`\n\nDefault: `_updatedDate` in `\"DESC\"` order.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListFilesRequest",
      "members": [
        {
          "name": "mediaTypes",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "File media type.\nexcluding: OTHER media type"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.CursorPaging"
            }
          ],
          "doc": "Cursor and paging information."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault:`media-root`."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Sorting"
            }
          ],
          "doc": "Field name and order to sort by. One of:\n\n- `displayName`\n- `_updatedDate`\n- `sizeInBytes`\n\nDefault: `_updatedDate` in `\"DESC\"` order.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListFilesResponse",
      "members": [
        {
          "name": "files",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.FileDescriptor"
                  }
                ]
              }
            }
          ],
          "doc": "List of files in the Media Manager."
        },
        {
          "name": "nextCursor",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.PagingMetadataV2"
            }
          ],
          "doc": "The next cursor if it exists."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Model3D",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "WixMedia 3D ID."
        },
        {
          "name": "altText",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "3D alt text."
        },
        {
          "name": "filename",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "3D filename."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "3D size in bytes."
        },
        {
          "name": "thumbnail",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "3D thumbnail Image"
        },
        {
          "name": "url",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "3D URL."
        },
        {
          "name": "urlExpirationDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "3D URL expiration date (when relevant)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "OtherMedia",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "WixMedia ID. for use with Site Media APIs only"
        },
        {
          "name": "internalMediaType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The media type of the file: 'site_icon', 'swf', 'package', 'ufont'"
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "size in bytes. Optional."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchFilesOptions",
      "members": [
        {
          "name": "mediaTypes",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Media file type.\n\nSupported values: `\"IMAGE\"`, `\"VIDEO\"`, `\"AUDIO\"`, `\"DOCUMENT\"`, `\"VECTOR\"`, `\"ARCHIVE\"`, `\"MODEL3D\"`\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.CursorPaging"
            }
          ],
          "doc": "Cursor and paging information."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private.\n\nDefault: `false`.\n"
        },
        {
          "name": "rootFolder",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A root folder in the media manager to search in. <br />\n\nSupported values: `\"MEDIA_ROOT\"`, `\"TRASH_ROOT\"`, `\"VISITOR_UPLOADS_ROOT\"`\n\nDefault: `MEDIA_ROOT`.\n"
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Term to search for. Possible terms include the value of a file's\n`displayName`, `mimeType`, and `label`. <br />\nFor example, if a file's label is cat, the search term is 'cat'."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Sorting"
            }
          ],
          "doc": "Field name and order to sort by. One of:\n\n- `displayName`\n- `_updatedDate`\n- `sizeInBytes`\n\nDefault: `_updatedDate` in `\"DESC\"` order.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchFilesRequest",
      "members": [
        {
          "name": "mediaTypes",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "File media type.\nexcluding: OTHER media type"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.CursorPaging"
            }
          ],
          "doc": "Cursor and paging information."
        },
        {
          "name": "private",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the imported file is public or private."
        },
        {
          "name": "rootFolder",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A root folder in the media manager to search in. <br />\nDefault: `MEDIA_ROOT`."
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Term to search for. Possible terms include the value of a file's\n`displayName`, `mimeType`, and `label`. <br />\nFor example, if a file's label is cat, the search term is 'cat'."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.Sorting"
            }
          ],
          "doc": "Field name and order to sort by. One of:\n\n- `displayName`\n- `_updatedDate`\n- `sizeInBytes`\n\nDefault: `_updatedDate` in `\"DESC\"` order.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchFilesResponse",
      "members": [
        {
          "name": "files",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-media-v2.Files.FileDescriptor"
                  }
                ]
              }
            }
          ],
          "doc": "Files matching the query."
        },
        {
          "name": "nextCursor",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.PagingMetadataV2"
            }
          ],
          "doc": "The next cursor if it exists."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order\n\nSupported values: `\"ASC\"`, `\"DESC\"`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateFileDescriptorFile",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the file was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File ID. Generated when a file is uploaded to the Media Manager."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the file was updated."
        },
        {
          "name": "displayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File name as it appears in the Media Manager."
        },
        {
          "name": "hash",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File hash."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "media",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileMedia"
            }
          ],
          "doc": "Media file content."
        },
        {
          "name": "mediaType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Media file type.\n\nSupported values: `\"IMAGE\"`, `\"VIDEO\"`, `\"AUDIO\"`, `\"DOCUMENT\"`, `\"VECTOR\"`, `\"ARCHIVE\"`, `\"MODEL3D\"`"
        },
        {
          "name": "operationStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of the file that was uploaded.\n\nSupported values: `\"FAILED\"`, `\"READY\"`, `\"PENDING\"`\n* `FAILED`: The file failed to upload, for example, during media post processing.\n* `READY`: The file uploaded, finished all processing, and is ready for use.\n* `PENDING`: The file is processing and the URLs are not yet available. This response is returned when importing a file."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder."
        },
        {
          "name": "private",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the link to the uploaded file is public or private. Private links require a token."
        },
        {
          "name": "siteId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The Wix site ID where the media file is stored."
        },
        {
          "name": "sizeInBytes",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Size of the uploaded file in bytes."
        },
        {
          "name": "sourceUrl",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL where the file was uploaded from."
        },
        {
          "name": "state",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "State of the file.\n\nSupported values: `\"OK\"`, `\"DELETED\"`"
        },
        {
          "name": "thumbnailUrl",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL of the file's thumbnail."
        },
        {
          "name": "url",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Static URL of the file."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateFileDescriptorOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateFileDescriptorRequest",
      "members": [
        {
          "name": "file",
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileDescriptor"
            }
          ],
          "doc": "The file to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateFileDescriptorResponse",
      "members": [
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileDescriptor"
            }
          ],
          "doc": "Information about the updated file."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateFileOptions",
      "members": [
        {
          "name": "displayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File name that appears in the Media Manager."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateFileRequest",
      "members": [
        {
          "name": "displayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "File name that appears in the Media Manager."
        },
        {
          "name": "fileId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file to update."
        },
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Labels assigned to media files that describe and categorize them. Provided by the user, or generated by [Google Vision API](https://cloud.google.com/vision/docs/drag-and-drop) for images."
        },
        {
          "name": "parentFolderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the file's parent folder. <br />\nDefault: `media-root`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateFileResponse",
      "members": [
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-media-v2.Files.FileDescriptor"
            }
          ],
          "doc": "Information about the updated file."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "VideoResolution",
      "members": [
        {
          "name": "format",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Video format\nPossible values: ['144p.mp4' '144p.webm' '240p.mp4' '240p.webm' '360p.mp4' '360p.webm' '480p.mp4' '480p.webm'\n'720p.mp4' '720p.webm' '1080p.mp4' '1080p.webm', 'hls' ]"
        },
        {
          "name": "height",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Video height."
        },
        {
          "name": "url",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Video URL."
        },
        {
          "name": "width",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Video width."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
