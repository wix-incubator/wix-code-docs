{
  "name": "Reservations",
  "memberOf": "wix-table-reservations-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-table-reservations.v2-reservation",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "cancelReservation",
      "params": [
        {
          "name": "reservationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID.",
          "required": true
        },
        {
          "name": "revision",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number.\n\nInclude the existing `revision` to prevent conflicting updates to reservations.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CancelReservationOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "reservationId",
        "revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-table-reservations-v2.Reservations.CancelReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Cancels a reservation.",
        "description": [
          "Sets the reservation status to `CANCELED`."
        ],
        "examples": [
          {
            "title": "cancelReservation example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function cancelReservation(reservationId, revision, options) {",
              "   try {",
              "     const result = await reservations.cancelReservation(reservationId, revision, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "cancelReservation"
    },
    {
      "name": "createHeldReservation",
      "params": [
        {
          "name": "reservationDetails",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.HeldReservationDetails"
            }
          ],
          "doc": "`HELD` reservation information to update.",
          "required": true
        }
      ],
      "requiredFields": [
        "reservationDetails",
        "reservationDetails.partySize",
        "reservationDetails.reservationLocationId",
        "reservationDetails.startDate"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-table-reservations-v2.Reservations.CreateHeldReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a new reservation with the `HELD` status.",
        "description": [
          "Reservations with the `HELD` status are only valid for 10 minutes. Trying to change a `HELD` reservation’s status after 10 minutes returns an error.\n\nYou cannot call [`Update Reservation`](#update-reservation) to change a reservation’s status from `HELD`. Trying to do so will return an error."
        ],
        "examples": [
          {
            "title": "createHeldReservation example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function createHeldReservation(reservationDetails) {",
              "   try {",
              "     const result = await reservations.createHeldReservation(reservationDetails);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createHeldReservation"
    },
    {
      "name": "createReservation",
      "params": [
        {
          "name": "reservation",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation details.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CreateReservationOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "reservation",
        "reservation.details",
        "reservation.details.partySize",
        "reservation.details.reservationLocationId",
        "reservation.details.startDate"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-table-reservations-v2.Reservations.CreateReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a new reservation.",
        "description": [
          "If a `status` is not provided, the reservation is created with the `RESERVED` status or the `REQUESTED` status if manual approval is required for confirmation.\n\nThe fields `status`, `source`, `reservation.details.tableIds`, `reservation.details.endDate`, `ignoreReservationLocationConflicts`, and `ignoreTableCombinationConflicts` should only be included in the request if the call is made by a user with `TABLE_RESERVATIONS.RESERVATION_CREATE_FORCE` permissions.\nIncluding these fields in the request without the required permissions will result in an application error."
        ],
        "examples": [
          {
            "title": "createReservation example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function createReservation(reservation, options) {",
              "   try {",
              "     const result = await reservations.createReservation(reservation, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createReservation"
    },
    {
      "name": "getReservation",
      "params": [
        {
          "name": "reservationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.GetReservationOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "reservationId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-table-reservations-v2.Reservations.GetReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a reservation.",
        "description": [],
        "examples": [
          {
            "title": "getReservation example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function getReservation(reservationId, options) {",
              "   try {",
              "     const result = await reservations.getReservation(reservationId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getReservation"
    },
    {
      "name": "listReservations",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.ListReservationsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-table-reservations-v2.Reservations.ListReservationsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of up to 100 reservations.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "listReservations example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function listReservations(options) {",
              "   try {",
              "     const result = await reservations.listReservations(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listReservations",
      "isAdminMethod": true
    },
    {
      "name": "queryReservations",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-table-reservations-v2.Reservations.ReservationsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "For a detailed list of supported operations, see the [Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-restaurants/reservations/reservations/sorting-and-filtering) article.\nTo learn how to query reservations, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "queryReservations example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function queryReservations() {",
              "   const { items } = reservations.queryReservations().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryReservations",
      "isAdminMethod": true
    },
    {
      "name": "reserveReservation",
      "params": [
        {
          "name": "reservationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID.",
          "required": true
        },
        {
          "name": "reservee",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservee"
            }
          ],
          "doc": "Reservee details.",
          "required": true
        },
        {
          "name": "revision",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number.\n\nInclude the existing `revision` to prevent conflicting updates to reservations.",
          "required": true
        }
      ],
      "requiredFields": [
        "reservationId",
        "reservee",
        "reservee.firstName",
        "reservee.phone",
        "revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-table-reservations-v2.Reservations.ReserveReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Reserves or requests a `HELD` reservation.",
        "description": [
          "`Reserve Reservation` changes a reservation's `HELD` status to `RESERVED`, or to `REQUESTED` if the reservation's reservation location requires manual approval."
        ],
        "examples": [
          {
            "title": "reserveReservation example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function reserveReservation(reservationId, reservee, revision) {",
              "   try {",
              "     const result = await reservations.reserveReservation(reservationId, reservee, revision);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "reserveReservation"
    },
    {
      "name": "updateReservation",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID. Read-Only.",
          "required": true
        },
        {
          "name": "reservation",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.UpdateReservation"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.UpdateReservationOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id",
        "reservation",
        "reservation.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-table-reservations-v2.Reservations.UpdateReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a reservation.",
        "description": [
          "Each time the reservation is updated, revision increments by 1. The existing revision must be included when updating the reservation. This ensures you're working with the latest reservation information, and it prevents unintended overwrites.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "updateReservation example",
            "body": [
              "import { reservations } from 'wix-table-reservations.v2';",
              "  ",
              " async function updateReservation(id, reservation, options) {",
              "   try {",
              "     const result = await reservations.updateReservation(id, reservation, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateReservation",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelReservationOptions",
      "members": [
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone number that was used when the reservation was created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelReservationRequest",
      "members": [
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone number that was used when the reservation was created."
        },
        {
          "name": "reservationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID."
        },
        {
          "name": "revision",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number.\n\nInclude the existing `revision` to prevent conflicting updates to reservations.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelReservationResponse",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateHeldReservationRequest",
      "members": [
        {
          "name": "reservationDetails",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.HeldReservationDetails"
            }
          ],
          "doc": "`HELD` reservation information to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateHeldReservationResponse",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateReservationOptions",
      "members": [
        {
          "name": "ignoreReservationLocationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignore reservation location conflicts. This will ensure that the reservation is created even if the required seats or tables are unavailable according to the reservation location's business schedule or its pacing settings."
        },
        {
          "name": "ignoreTableCombinationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignore table combination conflicts. This will ensure that the reservation is created even if the required tables are already reserved."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateReservationRequest",
      "members": [
        {
          "name": "ignoreReservationLocationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignore reservation location conflicts. This will ensure that the reservation is created even if the required seats or tables are unavailable according to the reservation location's business schedule or its pacing settings."
        },
        {
          "name": "ignoreTableCombinationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignore table combination conflicts. This will ensure that the reservation is created even if the required tables are already reserved."
        },
        {
          "name": "reservation",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateReservationResponse",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-table-reservations-v2.Reservations.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteReservationRequest",
      "members": [
        {
          "name": "reservationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteReservationResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Details",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "End date and time of the reservation."
        },
        {
          "name": "partySize",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Party size."
        },
        {
          "name": "reservationLocationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the reservation location at which this reservation will be made."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Start date and time of the reservation."
        },
        {
          "name": "tableIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Table IDs of tables used for this reservation."
        }
      ],
      "docs": {
        "description": [
          "Reservation details."
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetReservationOptions",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields to be returned.\n\nSupported values: `PUBLIC`, `FULL`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetReservationRequest",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields to be returned.\n\nSupported values: `PUBLIC`, `FULL`.\n"
        },
        {
          "name": "reservationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetReservationResponse",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "HeldReservationDetails",
      "members": [
        {
          "name": "partySize",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Party size."
        },
        {
          "name": "reservationLocationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the reservation location where the reservation is made."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Start date and time of the reservation."
        }
      ],
      "docs": {
        "description": [
          "Reservation details when create reservation in status HELD."
        ]
      }
    },
    {
      "name": "ListReservationsOptions",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Sorting"
            }
          ],
          "doc": "The way how reservations in response should be sorted."
        },
        {
          "name": "startDateFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Start date from."
        },
        {
          "name": "startDateTo",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Start date to."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Only reservations with this status should be returned."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListReservationsRequest",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Sorting"
            }
          ],
          "doc": "The way how reservations in response should be sorted."
        },
        {
          "name": "startDateFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Start date from."
        },
        {
          "name": "startDateTo",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Start date to."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Only reservations with this status should be returned."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListReservationsResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CursorPagingMetadata"
            }
          ],
          "doc": "Metadata for the paginated results."
        },
        {
          "name": "reservations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
                  }
                ]
              }
            }
          ],
          "doc": "List of reservations."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryReservationsRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CursorQuery"
            }
          ],
          "doc": "Query to select reservations."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryReservationsResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.CursorPagingMetadata"
            }
          ],
          "doc": "Metadata for the paginated results."
        },
        {
          "name": "reservations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
                  }
                ]
              }
            }
          ],
          "doc": "List of reservations."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Reservation",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the reservation was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID. Read-Only."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the reservation was changed."
        },
        {
          "name": "declineReason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The reason the reservation was declined."
        },
        {
          "name": "details",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Details"
            }
          ],
          "doc": "Reservation details."
        },
        {
          "name": "reservedBy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.ReservedBy"
            }
          ],
          "doc": "Information about the person making the reservation."
        },
        {
          "name": "reservee",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservee"
            }
          ],
          "doc": "Information about the person the reservation is being made for."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the reservation is updated.\nTo prevent conflicting changes, the current revision must be passed when updating the reservation.\n\nIgnored when creating a reservation."
        },
        {
          "name": "source",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation source.\n\nThis indicates how the reservation was made.\n`ONLINE` indicates that the customer made the reservation through a website or app.\n`OFFLINE` indicates that the reservation was made by a restaurant employee, for example when a customer calls to make a reservation.\n`WALK-IN` indicates that the customer did not make a reservation beforehand, and the reservation was entered into the system by a restaurant employee when the customer arrived at the restaurant.\n"
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of the reservation. See the [Reservation Lifecycle article]() for more details on each of the statuses, and an explanations of the reservation lifecycle."
        },
        {
          "name": "teamMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Team message.\n\nA message for the restaurant staff containing any additional information regarding the reservation, such as special requirements for the guests.\n"
        }
      ],
      "docs": {
        "description": [
          "The reservation domain object."
        ]
      }
    },
    {
      "name": "ReservationCanceled",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reserved reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReservationDataUpdated",
      "members": [
        {
          "name": "oldReservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Old reservation."
        },
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reserved reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReservationDetailsConflicts",
      "members": [
        {
          "name": "reservationLocationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-table-reservations-v2.Reservations.ReservationLocationConflict"
                  }
                ]
              }
            }
          ],
          "doc": "Reservation location conflicts."
        },
        {
          "name": "tableCombinationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-table-reservations-v2.Reservations.TableCombinationConflict"
                  }
                ]
              }
            }
          ],
          "doc": "Table combinations conflicts."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReservationLocationConflict",
      "members": [
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation location conflict type."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReservationReserved",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reserved reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReserveReservationRequest",
      "members": [
        {
          "name": "reservationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID."
        },
        {
          "name": "reservee",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservee"
            }
          ],
          "doc": "Reservee details."
        },
        {
          "name": "revision",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number.\n\nInclude the existing `revision` to prevent conflicting updates to reservations.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReserveReservationResponse",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReservedBy",
      "members": [
        {
          "name": "contactId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID for the person who made the reservation. If a contact with this ID does not exist on the site, one will be created."
        }
      ],
      "docs": {
        "description": [
          "A person making reservation."
        ]
      }
    },
    {
      "name": "Reservee",
      "members": [
        {
          "name": "contactId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID. If a contact with this ID does not exist on the site, one will be created."
        },
        {
          "name": "customFields",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Custom fields for the reservee in key-value pairs.\n\nThe key is the custom field's ID, and the value is the custom field's value.\n\nEmpty fields are not returned.\n"
        },
        {
          "name": "email",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email address."
        },
        {
          "name": "firstName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "First name."
        },
        {
          "name": "lastName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Last name."
        },
        {
          "name": "marketingConsent",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the reserve has given marketing consent."
        },
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone number."
        }
      ],
      "docs": {
        "description": [
          "A person the reservation is being made for."
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order.\n\nUse `ASC` for ascending order or `DESC` for descending order. Defaults to `ASC`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TableCombinationConflict",
      "members": [
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Conflict type."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateReservation",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the reservation was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation ID. Read-Only."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the reservation was changed."
        },
        {
          "name": "declineReason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The reason the reservation was declined."
        },
        {
          "name": "details",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Details"
            }
          ],
          "doc": "Reservation details."
        },
        {
          "name": "reservedBy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.ReservedBy"
            }
          ],
          "doc": "Information about the person making the reservation."
        },
        {
          "name": "reservee",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservee"
            }
          ],
          "doc": "Information about the person the reservation is being made for."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the reservation is updated.\nTo prevent conflicting changes, the current revision must be passed when updating the reservation.\n\nIgnored when creating a reservation."
        },
        {
          "name": "source",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reservation source.\n\nThis indicates how the reservation was made.\n`ONLINE` indicates that the customer made the reservation through a website or app.\n`OFFLINE` indicates that the reservation was made by a restaurant employee, for example when a customer calls to make a reservation.\n`WALK-IN` indicates that the customer did not make a reservation beforehand, and the reservation was entered into the system by a restaurant employee when the customer arrived at the restaurant.\n"
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of the reservation. See the [Reservation Lifecycle article]() for more details on each of the statuses, and an explanations of the reservation lifecycle."
        },
        {
          "name": "teamMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Team message.\n\nA message for the restaurant staff containing any additional information regarding the reservation, such as special requirements for the guests.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateReservationOptions",
      "members": [
        {
          "name": "ignoreReservationLocationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignored reservation location conflicts. This will ensure that the reservation is updated even if the required seats or tables are unavailable according to the reservation location's business schedule or its pacing settings."
        },
        {
          "name": "ignoreTableCombinationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignored table combination conflicts. This will ensure that the reservation is updated even if the required tables are already reserved."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateReservationRequest",
      "members": [
        {
          "name": "ignoreReservationLocationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignored reservation location conflicts. This will ensure that the reservation is updated even if the required seats or tables are unavailable according to the reservation location's business schedule or its pacing settings."
        },
        {
          "name": "ignoreTableCombinationConflicts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ignored table combination conflicts. This will ensure that the reservation is updated even if the required tables are already reserved."
        },
        {
          "name": "reservation",
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation information to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateReservationResponse",
      "members": [
        {
          "name": "reservation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-table-reservations-v2.Reservations.Reservation"
            }
          ],
          "doc": "Reservation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
