{ "name": "ecom-recommendations",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "recommendations-index.js" },
  "docs":
    { "summary": "The eCommerce Recommendations Service Plugin.",
      "description":
        [ "The Recommendations service plugin (formerly SPI) provides functionality for integrating advanced recommendation algorithms into your Wix site. This allows you to offer personalized product suggestions, thereby enhancing user engagement and overall shopping experience. You can implement custom or external recommendation algorithms that don't come natively with Wix in your eCommerce purchase flows.",
          "",
          "For example, you can provide recommendations based on user behavior, related products, or other custom logic, enriching how Wix apps such as Wix Stores and Wix Bookings display suggestions to users.",
          "",
          "Wix eCommerce calls the service plugin endpoint [`getRecommendations()`](https://dev.wix.com/docs/velo/api-reference/wix-ecom-backend/recommendations/get-recommendation) to retrieve the relevant product suggestions.",
          "",
          "Learn more:",
          "   + [Tutorial: Recommendations Service Plugin](https://dev.wix.com/docs/develop-websites/articles/code-tutorials/wix-e-commerce-stores/tutorial-e-commerce-recommendations-service-plugin)",
          "   + [Velo: Custom App Extensions Using Service Plugins](https://support.wix.com/en/article/velo-custom-business-app-extensions-using-spis-beta)",
          "",
          "### To add a service plugin",
          "1. [Add the plugin to your site](https://dev.wix.com/docs/develop-websites/articles/coding-with-velo/integrations/custom-extensions-spis/custom-app-extensions-using-sp-is#step-1-create-a-new-extension-on-your-wix-site).",
          "2. Update the [`getConfig()`](https://www.wix.com/velo/reference/spis/ecom-recommendations/getconfig) function in the **-config.js** file that is added to your site during step 1.",
          "3. Update the [`getRecommendations()`](https://www.wix.com/velo/reference/spis/ecom-recommendations/getrecommendations) function in the **.js** file that is added to your site during step 1." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getConfig",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "ecom-recommendations.RecommendationsConfigResponse" ] },
            "doc": "Fulfilled - The configuration settings." },
        "locations":
          [ { "lineno": 1,
              "filename": "recomendations.js" } ],
        "docs":
          { "summary": "Retrieves the configuration of your recommendations plugin.",
            "description":
              [ "Set your recommendations configuration in the `return` of the `getConfig()` function. Wix calls this function when you publish your site.",
                "Changes to the configuration don't take effect until you publish your site.",
                "",
                "`getConfig()` returns an object containing the values used to display the recommendations algorithms in the Related Products gallery settings.",
                "",
                "### Where to find `getConfig()`",
                "When you [add the Recommendations service plugin](https://dev.wix.com/docs/develop-websites/articles/coding-with-velo/integrations/custom-extensions-spis/custom-app-extensions-using-spis),",
                "a folder is automatically added to your site. Use the `<my-plugin-name>-config.js` file in the folder to set the default configuration for your",
                "implementation of the service plugin.",
                "",
                "For more information on setting your configuration, see [Tutorial: Recommendations Service Plugin](https://dev.wix.com/docs/develop-websites/articles/code-tutorials/wix-e-commerce-stores/tutorial-e-commerce-recommendations-service-plugin)." ],
            "links": [],
            "examples":
              [ { "title": "Example of a configuration file",
                  "body":
                    [ "// Place this code in the <my-plugin-name>-config.js file",
                      "// in the 'ecom-recommendations-provider' folder of the",
                      "// Custom Extensions section on your site.",
                      "",
                      "export function getConfig() {",
                      "  return {",
                      "    catalogAppIds: [\"215238eb-22a5-4c36-9e7b-e7c08025e04e\"],",
                      "    supportedAlgorithms: [",
                      "      {",
                      "        algorithmId: \"945a457f-0a57-4cf4-95a1-95991b545119\",",
                      "        name: \"In stock from the same category\",",
                      "        description: \"If selected product is out of stock, suggest in-stock products from the same category.\",",
                      "        additionalInfo: \"Works best on product page.\",",
                      "        algorithmType: \"RELATED_ITEMS\"",
                      "      },",
                      "      {",
                      "        algorithmId: \"97f48eb2-4d42-4296-b620-13862dd0353e\",",
                      "        name: \"Cheapest in the store\",",
                      "        description: \"The cheapest products in the store\",",
                      "        algorithmType: \"GLOBAL\"",
                      "      }",
                      "    ]",
                      "  };",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "getRecommendations",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "ecom-recommendations.Options",
              "doc": "Recommendation options." },
            { "name": "context",
              "type": "ecom-recommendations.Context",
              "doc": "Metadata about the request." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "ecom-recommendations.GetRecommendationsResponse" ] },
            "doc": "Fulfilled - The recommended items." },
        "locations":
          [ { "lineno": 42,
              "filename": "recomendations.js" } ],
        "docs":
          { "summary": "Retrieves the recommended items provided by your plugin.",
            "description":
              [ "The `getRecommendations()` function is called by Wix to gather the recommended items based on the selected algorithm. It returns recommendations determined by the specified options.",
                "",
                "### Where to find `getRecommendations()`",
                "When you [add the Recommendations service plugin](https://dev.wix.com/docs/develop-websites/articles/code-tutorials/wix-e-commerce-stores/tutorial-e-commerce-recommendations-service-plugin),",
                "a folder is automatically added to your site. Use the `<my-plugin-name>.js` file in the folder to write the code to determine which recommended items to retrieve.",
                "",
                "For more information on customizing your recommendations plugin, see [Tutorial: Recommendations Service Plugin](https://dev.wix.com/docs/develop-websites/articles/code-tutorials/wix-e-commerce-stores/tutorial-e-commerce-recommendations-service-plugin)." ],
            "links": [],
            "examples":
              [ { "title": "Get Recommendations",
                  "body":
                    [ "import wixData from \"wix-data\";",
                      "/**",
                      " * Returns lists of items recommended by each requested algorithm.",
                      " *",
                      " * If the algorithm's type is `RELATED_ITEMS` then the `items` field is required in the request, and the response will contain items related to those submitted.",
                      " * How the related items are selected based on the requested items depends on the algorithm. Some examples include items related by category or those frequently bought or watched together.",
                      " * @param {import('interfaces-ecom-v1-recommendations-provider').GetRecommendationsOptions} options",
                      " * @param {import('interfaces-ecom-v1-recommendations-provider').Context} context",
                      " * @returns {Promise<import('interfaces-ecom-v1-recommendations-provider').GetRecommendationsResponse | import('interfaces-ecom-v1-recommendations-provider').BusinessError>}",
                      " */",
                      "export const getRecommendations = async (options, context) => {",
                      "  const recommendations = await Promise.all(",
                      "    options.algorithmIds.map((algorithmId) => {",
                      "      if (algorithmId == \"97f48eb2-4d42-4296-b620-13862dd0353e\") {",
                      "        return wixData",
                      "          .query(\"Stores/Products\")",
                      "          .ascending(\"price\")",
                      "          .limit(10)",
                      "          .find()",
                      "          .then((results) => {",
                      "            return {",
                      "              algorithmId: algorithmId,",
                      "              recommendedItems: results.items.map((item) => {",
                      "                return {",
                      "                  catalogItemId: item._id,",
                      "                  appId: \"215238eb-22a5-4c36-9e7b-e7c08025e04e\",",
                      "                };",
                      "              }),",
                      "            };",
                      "          });",
                      "      }",
                      "    }),",
                      "  );",
                      "  return {",
                      "    recommendationPerAlgorithm: recommendations,",
                      "  };",
                      "};",
                      "" ],
                  "extra":
                    { "description": "This example retrieves recommended items based on the selected algorithm." } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "CatalogReference",
        "locations":
          [ { "lineno": 69,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "appId",
              "type": "string",
              "doc": "ID of the app providing the catalog.\n\nYou can get your app's ID from its page in the app dashboard.\n\nFor items from Wix catalogs, the following values always apply:\n- Wix Stores: \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n- Wix Bookings: \"13d21c63-b5ec-5912-8397-c3a5ddb27a97\"\n- Wix Restaurants: \"9a5d83fd-8570-482e-81ab-cfa88942ee60\"" },
            { "name": "catalogItemId",
              "type": "string",
              "doc": "ID of the item within the catalog it belongs to." },
            { "name": "options",
              "type": "Object",
              "doc": "Additional item details in key:value pairs. Use this optional field to provide more specificity with item selection. The options field values differ depending on which catalog is providing the items.\n\nFor products and variants from a Wix Stores catalog, learn more about eCommerce integration." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Context",
        "locations":
          [ { "lineno": 85,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-letter currency code representing the currency used in the request sent from Wix." },
            { "name": "identity",
              "type": "ecom-recommendations.Identity",
              "doc": "The identity that describes the entity triggering this request." },
            { "name": "languages",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Array of languages in which the response should be returned." },
            { "name": "requestId",
              "type": "string",
              "doc": "A unique identifier for the request." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetRecommendationsResponse",
        "locations":
          [ { "lineno": 111,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "recommendationPerAlgorithm",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-recommendations.Recommendation" ] },
              "doc": "Related items returned by each algorithm. Each object in the array contains an `algorithmId` and a list of the item recommendations provided by that algorithm." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Identity",
        "locations":
          [ { "lineno": 94,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "identityType",
              "type": "string",
              "doc": "Type of identity triggering the request.\n\nSupported values:\n+ `\"UNKNOWN\"`\n+ `\"ANONYMOUS_VISITOR\"`\n+ `\"MEMBER\"`\n+ `\"WIX_USER\"`\n+ `\"APP\"`" },
            { "name": "anonymousVisitorId",
              "type": "string",
              "doc": "ID of a site visitor who has not logged in, only if `identityType` is `ANONYMOUS_VISITOR`.",
              "optional": true },
            { "name": "memberId",
              "type": "string",
              "doc": "ID of a site visitor who has logged in, only if `identityType` is `MEMBER`.",
              "optional": true },
            { "name": "wixUserId",
              "type": "string",
              "doc": "ID of a Wix user, only if `identityType` is `WIX_USER`.",
              "optional": true },
            { "name": "appId",
              "type": "string",
              "doc": "ID of an app, only if `identityType` is `APP`.",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "id",
                  "members":
                    [ "anonymousVisitorId",
                      "memberId",
                      "wixUserId",
                      "appId" ] } ] },
        "labels": [] },
      { "name": "Options",
        "locations":
          [ { "lineno": 63,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "algorithmIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of algorithms used to find recommended items. Items must be returned in a separate object for each algorithm." },
            { "name": "items",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-recommendations.CatalogReference" ] },
              "doc": "The set of items used by algorithms with the `RELATED_ITEMS` `algorithmType` to determine related item recommendations." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Recommendation",
        "locations":
          [ { "lineno": 116,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "algorithmId",
              "type": "string",
              "doc": "Id of the algorithm that provided the recommendation." },
            { "name": "recommendedItems",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-recommendations.RecommendedItem" ] },
              "doc": "Item recommendations provided by the algorithm. Depending on the algorithm, these recommendations may be influenced by the items provided in the request." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RecommendationAlgorithm",
        "locations":
          [ { "lineno": 29,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "algorithmId",
              "type": "string",
              "doc": "Algorithm ID. This must be unique for a specific app but does not have to be unique across all apps on the site or in the project." },
            { "name": "name",
              "type": "string",
              "doc": "Algorithm name. This value is not translatable." },
            { "name": "description",
              "type": "string",
              "doc": "Algorithm description. This describes how the algorithm works and if it has any limitations regarding site content, number of items in the catalog, site traffic, and so on. This value is not translatable." },
            { "name": "additionalInfo",
              "type": "string",
              "doc": "A supplemental `description`. It can be used to help break up and organize information. You can, for example, display this information as a tooltip or as an additional section that is collapsed by default." },
            { "name": "algorithmType",
              "type": "string",
              "doc": "Algorithms may have the following types:\n\nSupported values:\n+ `\"RELATED_ITEMS\"` - This type of algorithm provides recommendations based on 1 or more other provided items. For example, when an item is added to a cart, the algorithm can suggest other items frequently bought together with that item.\n+ `\"GLOBAL\"` - This type of algorithm provides general recommendations based on site or project statistics. For example, bestsellers or new arrivals." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RecommendationsConfigResponse",
        "locations":
          [ { "lineno": 23,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "catalogAppIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Array of catalog application IDs supported by the recommendations plugin." },
            { "name": "supportedAlgorithms",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-recommendations.RecommendationAlgorithm" ] },
              "doc": "List of recommendation algorithms supported by the plugin." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RecommendedItem",
        "locations":
          [ { "lineno": 122,
              "filename": "recomendations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "catalogItemId",
              "type": "string",
              "doc": "ID of the item within the catalog it belongs to." },
            { "name": "appId",
              "type": "string",
              "doc": "ID of the app providing the catalog.\n\nYou can get your app's ID from its page in the app dashboard.\n\nFor items from Wix catalogs, the following values always apply:\n- Wix Stores: \"215238eb-22a5-4c36-9e7b-e7c08025e04e\"\n- Wix Bookings: \"13d21c63-b5ec-5912-8397-c3a5ddb27a97\"\n- Wix Restaurants: \"9a5d83fd-8570-482e-81ab-cfa88942ee60\"" },
            { "name": "options",
              "type": "Object",
              "doc": "Additional item details in key:value pairs. Use this optional field to provide more specificity with item selection. The options field values differ depending on which catalog is providing the items.\n\nFor products and variants from a Wix Stores catalog, learn more about eCommerce integration." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] } ],
  "extra":
    {  } }