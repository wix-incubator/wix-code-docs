{
  "name": "Members",
  "memberOf": "wix-members-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-members.v2-member",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createMember",
      "params": [
        {
          "name": "member",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Member to create.",
          "required": true
        }
      ],
      "requiredFields": [
        "member",
        "member.loginEmail"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.CreateMemberResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a site member.",
        "description": [
          "<!--ONLY:REST-->\nAfter creation, you can use\n[Send Set Password Email](https://dev.wix.com/api/rest/members/member-authentication/send-set-password-email)\nto email the member with a link to set their password.\nThe member can log in to the site\nwhen they set their password for the first time.\n\n> **Note:**\n> When creating multiple members,\n> set your requests at least 1 second apart to keep below rate limits.\n<!--END:ONLY:REST-->\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "createMember example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function createMember(member) {",
              "   try {",
              "     const result = await members.createMember(member);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createMember"
    },
    {
      "name": "deleteMember",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a member.",
        "description": [
          "<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object\nwhen the specified member is deleted.\n\n> **Note:**\n> This function replaces the deprecated\n> `wix-users-backend.deleteUser()`.\n> The deprecated function will continue to work, but it will not receive updates.\n> To keep any existing code compatible with future changes, see the\n> [migration instructions](.wix-users-backend/deleteuser#migration-instructions).\n<!--END:ONLY:VELO-->\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "deleteMember example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function deleteMember(id, options) {",
              "   try {",
              "     const result = await members.deleteMember(id, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteMember"
    },
    {
      "name": "deleteMemberAddresses",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member whose street addresses will be deleted.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.DeleteMemberAddressesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a member's street addresses.",
        "description": [
          "<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object\nwhen the specified member's addresses are cleared.\n<!--END:ONLY:VELO-->\n\n`deleteMemberAddresses()` clears the `addresses` array under the `contact` property."
        ],
        "examples": [
          {
            "title": "deleteMemberAddresses example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function deleteMemberAddresses(id) {",
              "   try {",
              "     const result = await members.deleteMemberAddresses(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteMemberAddresses"
    },
    {
      "name": "deleteMemberEmails",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member whose email addresses will be deleted.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.DeleteMemberEmailsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Clears a member's email addresses.",
        "description": [
          "<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object\nwhen the specified member's email addresses are cleared.\n\n`deleteMemberEmails()` clears the `emails` array under the `contact` property.\nOther member\n[`updatedMember()`](.wix-members-backend/members-obj/updatemember)\n\n> **Note:**\n> The member can still log in with their `loginEmail`,\n> which is not cleared when this function is called.\n<!--END:ONLY:VELO-->"
        ],
        "examples": [
          {
            "title": "deleteMemberEmails example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function deleteMemberEmails(id) {",
              "   try {",
              "     const result = await members.deleteMemberEmails(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteMemberEmails"
    },
    {
      "name": "deleteMemberPhones",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member whose phone numbers will be deleted.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.DeleteMemberPhonesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Clears a member's phone numbers.",
        "description": [
          "<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object\nwhen the specified member's phone numbers are cleared.\n\n`deleteMemberPhones()` clears the `phones` array under the `contact` property.\n<!--END:ONLY:VELO-->"
        ],
        "examples": [
          {
            "title": "deleteMemberPhones example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function deleteMemberPhones(id) {",
              "   try {",
              "     const result = await members.deleteMemberPhones(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteMemberPhones"
    },
    {
      "name": "getMember",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.GetMemberOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.Member"
                }
              ]
            }
          }
        ],
        "doc": "The requested member.\n"
      },
      "docs": {
        "summary": "Retrieves a member by ID.",
        "description": [
          "- `PUBLIC` fieldset returns `id`, `contactId`, and the `profile` object. `status`, `privacyStatus` and `activityStatus` are returned as `UNKNOWN`.\n- `EXTENDED` fieldset returns `id`, `loginEmail`, `status`, `contactId`, `privacyStatus`, `activityStatus`, and the `profile` object.\n- `FULL` fieldset returns all fields."
        ],
        "examples": [
          {
            "title": "getMember example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function getMember(id, options) {",
              "   try {",
              "     const result = await members.getMember(id, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getMember"
    },
    {
      "name": "getMyMember",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.GetMyMemberOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.GetMyMemberResponse"
                }
              ]
            }
          }
        ],
        "doc": "Member profile.\n"
      },
      "docs": {
        "summary": "Retrieves the currently logged-in member.",
        "description": [
          "<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object.\n\n> **Note:**\n> This function replaces the deprecated\n> `wixUsersBackend.currentUser`.\n> The deprecated object will continue to work, but it will not receive updates.\n> To keep any existing code compatible with future changes, see the\n> [migration instructions](.wix-users-backend/currentuser#wix-users-backend_currentuser_migration-instructions).\n<!--END:ONLY:VELO-->"
        ],
        "examples": [
          {
            "title": "getMyMember example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function getMyMember(options) {",
              "   try {",
              "     const result = await members.getMyMember(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getMyMember"
    },
    {
      "name": "joinCommunity",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.JoinCommunityResponse"
                }
              ]
            }
          }
        ],
        "doc": "Member profile.\n"
      },
      "docs": {
        "summary": "Joins the currently logged-in member to the site community and their profile to public.",
        "description": [
          "<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object\nwhen the member's profile privacy is updated.\n<!--END:ONLY:VELO-->\n\nWhen a member's profile is public,\nthey have access to the site's\n[Members Area](https://support.wix.com/en/article/about-members-area)\nfeatures — such as chat, forum, and followers —\nand their profile is visible to other members and site visitors."
        ],
        "examples": [
          {
            "title": "joinCommunity example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function joinCommunity() {",
              "   try {",
              "     const result = await members.joinCommunity();",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "joinCommunity"
    },
    {
      "name": "leaveCommunity",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.LeaveCommunityResponse"
                }
              ]
            }
          }
        ],
        "doc": "Member profile.\n"
      },
      "docs": {
        "summary": "Removes the currently logged-in member from the site community and sets their profile to private.",
        "description": [
          "<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object\nwhen the member's profile privacy is updated.\n<!--END:ONLY:VELO-->\n\nWhen a member's profile is private,\nthey do not have access to the site's\n[Members Area](https://support.wix.com/en/article/about-members-area)\nfeatures — such as chat, forum, and followers —\nand their profile is hidden from other members and site visitors.\n\n> **Note:**\n> If a public member profile changes to private —\n> in other words, if a member leaves the site's community —\n> their content such as forum posts and blog comments remain publicly visible."
        ],
        "examples": [
          {
            "title": "leaveCommunity example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function leaveCommunity() {",
              "   try {",
              "     const result = await members.leaveCommunity();",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "leaveCommunity"
    },
    {
      "name": "listMembers",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.ListMembersOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.ListMembersResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Lists site members, given the provided paging and fieldsets.",
        "description": [
          "- `PUBLIC` fieldset returns `id` and `profile` object. `status`, `privacyStatus` and `activityStatus` are returned as `UNKNOWN`.\n- `FULL` fieldset returns all fields."
        ],
        "examples": [
          {
            "title": "listMembers example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function listMembers(options) {",
              "   try {",
              "     const result = await members.listMembers(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listMembers"
    },
    {
      "name": "queryMembers",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.QueryMembersOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-members-v2.Members.MembersQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of up to 100 members, given the provided filters, fieldsets, sorting and paging.",
        "description": [
          "",
          "- `PUBLIC` fieldset returns `id` and `profile` object. `status`, `privacyStatus` and `activityStatus` are returned as `UNKNOWN`.",
          "- `FULL` fieldset returns all fields.",
          "",
          "Currently supported fields for filtering:",
          "",
          "- `id`",
          "- `profile.nickname`",
          "- `profile.slug`",
          "- `contact.firstName`",
          "- `contact.lastName`",
          "- `privacyStatus`",
          "- `loginEmail`",
          "- `createdDate`",
          "- `status`",
          "- `userId`",
          "",
          "Currently supported fields for sorting:",
          "",
          "- `profile.nickname`",
          "- `contact.firstName`",
          "- `contact.lastName`",
          "- `createdDate`",
          "- `lastLoginDate`",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-members-v2.Members.MembersQueryBuilder#eq),[`ne()`](wix-members-v2.Members.MembersQueryBuilder#ne),[`exists()`](wix-members-v2.Members.MembersQueryBuilder#exists),[`in()`](wix-members-v2.Members.MembersQueryBuilder#in),[`hasSome()`](wix-members-v2.Members.MembersQueryBuilder#hasSome),[`startsWith()`](wix-members-v2.Members.MembersQueryBuilder#startsWith)|",
          "|`loginEmail`|[`eq()`](wix-members-v2.Members.MembersQueryBuilder#eq),[`ne()`](wix-members-v2.Members.MembersQueryBuilder#ne),[`exists()`](wix-members-v2.Members.MembersQueryBuilder#exists),[`in()`](wix-members-v2.Members.MembersQueryBuilder#in),[`hasSome()`](wix-members-v2.Members.MembersQueryBuilder#hasSome),[`startsWith()`](wix-members-v2.Members.MembersQueryBuilder#startsWith)|",
          "|`contact.firstName`|[`eq()`](wix-members-v2.Members.MembersQueryBuilder#eq),[`ne()`](wix-members-v2.Members.MembersQueryBuilder#ne),[`exists()`](wix-members-v2.Members.MembersQueryBuilder#exists),[`in()`](wix-members-v2.Members.MembersQueryBuilder#in),[`hasSome()`](wix-members-v2.Members.MembersQueryBuilder#hasSome),[`startsWith()`](wix-members-v2.Members.MembersQueryBuilder#startsWith)|",
          "|`contact.lastName`|[`eq()`](wix-members-v2.Members.MembersQueryBuilder#eq),[`ne()`](wix-members-v2.Members.MembersQueryBuilder#ne),[`exists()`](wix-members-v2.Members.MembersQueryBuilder#exists),[`in()`](wix-members-v2.Members.MembersQueryBuilder#in),[`hasSome()`](wix-members-v2.Members.MembersQueryBuilder#hasSome),[`startsWith()`](wix-members-v2.Members.MembersQueryBuilder#startsWith)|",
          "|`profile.nickname`|[`eq()`](wix-members-v2.Members.MembersQueryBuilder#eq),[`ne()`](wix-members-v2.Members.MembersQueryBuilder#ne),[`exists()`](wix-members-v2.Members.MembersQueryBuilder#exists),[`in()`](wix-members-v2.Members.MembersQueryBuilder#in),[`hasSome()`](wix-members-v2.Members.MembersQueryBuilder#hasSome),[`startsWith()`](wix-members-v2.Members.MembersQueryBuilder#startsWith)|",
          "|`profile.slug`|[`eq()`](wix-members-v2.Members.MembersQueryBuilder#eq),[`ne()`](wix-members-v2.Members.MembersQueryBuilder#ne),[`exists()`](wix-members-v2.Members.MembersQueryBuilder#exists),[`in()`](wix-members-v2.Members.MembersQueryBuilder#in),[`hasSome()`](wix-members-v2.Members.MembersQueryBuilder#hasSome),[`startsWith()`](wix-members-v2.Members.MembersQueryBuilder#startsWith)|",
          "|`privacyStatus`|[`eq()`](wix-members-v2.Members.MembersQueryBuilder#eq),[`ne()`](wix-members-v2.Members.MembersQueryBuilder#ne),[`exists()`](wix-members-v2.Members.MembersQueryBuilder#exists),[`in()`](wix-members-v2.Members.MembersQueryBuilder#in),[`hasSome()`](wix-members-v2.Members.MembersQueryBuilder#hasSome)|"
        ],
        "examples": [
          {
            "title": "queryMembers example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function queryMembers() {",
              "   const { items } = members.queryMembers().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryMembers"
    },
    {
      "name": "updateMember",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.UpdateMemberOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.Member"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a member's properties.",
        "description": [
          "<!--ONLY:REST-->\nTo clear a field's value, set an empty value with an empty string `\"\"`.\n\nTo clear the member's addresses, emails, or phone numbers,\nuse these endpoints:\n\n- To clear `contact.addresses`, use [`Delete Member Addresses`](https://dev.wix.com/api/rest/members/members/delete-member-addresses).\n- To clear `contact.emails`, use [`Delete Member Emails`](https://dev.wix.com/api/rest/members/members/delete-member-emails).\n- To clear `contact.phones`, use [`Delete Member Phones`](https://dev.wix.com/api/rest/members/members/delete-member-phones).\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nThis function returns a Promise that resolves to a member object\nwhen the specified member is updated.\n\n> **Note:**\n> This function replaces the deprecated\n> `wixUsersBackend.updateUserFields()`.\n> The deprecated function will continue to work, but it will not receive updates.\n> To keep any existing code compatible with future changes, see the\n> [migration instructions](.wix-users-backend/updateuserfields#migration-instructions).\n\nOnly the requested fields are updated.\n\nTo clear the member's addresses, emails, or phone numbers,\nuse these functions:\n\n- To clear `contact.addresses`, use [`deleteMemberAddresses()`](.wix-members-backend/members-obj/deletememberaddresses).\n- To clear `contact.emails`, use [`deleteMemberEmails()`](.wix-members-backend/members-obj/deletememberemails).\n- To clear `contact.phones`, use [`deleteMemberPhones()`](.wix-members-backend/members-obj/deletememberphones).\n<!--END:ONLY:VELO-->"
        ],
        "examples": [
          {
            "title": "updateMember example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function updateMember(id, options) {",
              "   try {",
              "     const result = await members.updateMember(id, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateMember"
    },
    {
      "name": "updateMySlug",
      "params": [
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "New slug.",
          "required": true
        }
      ],
      "requiredFields": [
        "slug"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-v2.Members.UpdateMySlugResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Change the currently logged in member slug.",
        "description": [],
        "examples": [
          {
            "title": "updateMySlug example",
            "body": [
              "import { members } from 'wix-members.v2';",
              "  ",
              " async function updateMySlug(slug) {",
              "   try {",
              "     const result = await members.updateMySlug(slug);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateMySlug"
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ActiveSubscriptionMemberBlockForbiddenPayload",
      "members": [
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Active subscription member ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Address",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street address ID."
        },
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number, as free text."
        },
        {
          "name": "addressLine2",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Free text providing more detailed address information,\nsuch as apartment, suite, or floor."
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "City name."
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "2-letter country code in an\n[ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format."
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Postal code."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.StreetAddress"
            }
          ],
          "doc": "Street address object, with number and name in separate fields."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Code for a subdivision (such as state, prefecture, or province) in an\n[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Street address."
        ]
      }
    },
    {
      "name": "AddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number, as free text."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.StreetAddress"
            }
          ],
          "doc": "Street address object, with number and name in separate fields."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "App",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The AppDefId"
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The instance Id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApproveMemberRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApproveMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Asset",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "state",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'DEMO'`\n- `'DISABLED'`\n- `'ENABLED'`\n- `'PENDING'`\n- `'UNKNOWN'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BlockMemberRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BlockMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkApproveMembersRequest",
      "members": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkApproveMembersResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Token to be used to query an \"async jobs service\""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkBlockMembersRequest",
      "members": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkBlockMembersResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Token to be used to query an \"async jobs service\""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteMembersOptions",
      "members": [
        {
          "name": "contentAssigneeId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a member receiving deleted members' content."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteMembersRequest",
      "members": [
        {
          "name": "contentAssigneeId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a member receiving deleted members' content."
        },
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteMembersResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Token to be used to query an \"async jobs service\""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Contact",
      "members": [
        {
          "name": "addresses",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-v2.Members.Address"
                  }
                ]
              }
            }
          ],
          "doc": "List of street addresses."
        },
        {
          "name": "birthdate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's birthdate, formatted as `\"YYYY-MM-DD\"`.\n\nExample: `\"2020-03-15\"` for March 15, 2020.\n"
        },
        {
          "name": "company",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's company name."
        },
        {
          "name": "contactId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID.\n\n> **Deprecation notice:**\n> This property has been replaced with `member.contactId`\n> and will be removed on June 11, 2021."
        },
        {
          "name": "customFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "referenceType": "wix-members-v2.Members.CustomField"
                  }
                ]
              }
            }
          ],
          "doc": "Custom fields,\nwhere each key is the field key,\nand each value is the field's value for the member."
        },
        {
          "name": "emails",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of email addresses."
        },
        {
          "name": "firstName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's first name."
        },
        {
          "name": "jobTitle",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's job title."
        },
        {
          "name": "lastName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's last name."
        },
        {
          "name": "phones",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of phone numbers."
        }
      ],
      "docs": {
        "description": [
          "Contact info associated with the member."
        ]
      }
    },
    {
      "name": "ContentDeletionRequested",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContentReassignmentRequested",
      "members": [
        {
          "name": "fromMember",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        },
        {
          "name": "toMember",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateMemberRequest",
      "members": [
        {
          "name": "member",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Member to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "New member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CustomField",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Custom field name."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Custom field value."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteContext",
      "members": [
        {
          "name": "dateDeleted",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": ""
        },
        {
          "name": "deleteOrigin",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "deleteStatus",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'DELETED'`\n- `'PENDING_PURGE'`\n- `'TRASH'`\n- `'UNKNOWN'`"
        },
        {
          "name": "initiatorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberAddressesRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member whose street addresses will be deleted."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberAddressesResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Updated member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberEmailsRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member whose email addresses will be deleted."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberEmailsResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Updated member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberPhonesRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member whose phone numbers will be deleted."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberPhonesResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Updated member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMemberResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMyMemberOptions",
      "members": [
        {
          "name": "contentAssigneeId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a member receiving deleted member's content"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMyMemberRequest",
      "members": [
        {
          "name": "contentAssigneeId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a member receiving deleted member's content"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteMyMemberResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DisconnectMemberRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DisconnectMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFields",
      "members": [
        {
          "name": "namespaces",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "Object"
                  }
                ]
              }
            }
          ],
          "doc": "Extended field data. Each key corresponds to the namespace of the app that created the extended fields.\nThe value of each key is structured according to the schema defined when the extended fields were configured.\n\nYou can only access fields for which you have the appropriate permissions.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMemberOptions",
      "members": [
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined set of fields to return.\n\nDefaults to `PUBLIC`.\n\n__Deprecated.__ Use `fieldsets` instead.\nThis property will be removed on March 31, 2023.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined set of fields to return.\n\nDefaults to `PUBLIC`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMemberRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        },
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined set of fields to return.\n\nDefaults to `PUBLIC`.\n\n__Deprecated.__ Use `fieldsets` instead.\nThis property will be removed on March 31, 2023.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined set of fields to return.\n\nDefaults to `PUBLIC`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "The requested member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMyMemberOptions",
      "members": [
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined set of fields to return.\n\n<!--ONLY:VELO\nOne of:\n\n- `\"FULL\"`: Returns all fields.\n- `\"PUBLIC\"`: Returns `_id` and all fields under `profile`.\n\n> **Note:**\n> When returning the `\"PUBLIC\"` fieldset,\n> `profile.status`, `profile.privacyStatus`, and `profile.activityStatus`\n> are returned as `\"UNKNOWN\"`.\n<!--END:ONLY:VELO-->\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported values:\n- `'EXTENDED'`\n- `'FULL'`\n- `'PUBLIC'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMyMemberRequest",
      "members": [
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined set of fields to return.\n\n<!--ONLY:VELO\nOne of:\n\n- `\"FULL\"`: Returns all fields.\n- `\"PUBLIC\"`: Returns `_id` and all fields under `profile`.\n\n> **Note:**\n> When returning the `\"PUBLIC\"` fieldset,\n> `profile.status`, `profile.privacyStatus`, and `profile.activityStatus`\n> are returned as `\"UNKNOWN\"`.\n<!--END:ONLY:VELO-->\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported values:\n- `'EXTENDED'`\n- `'FULL'`\n- `'PUBLIC'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMyMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "The requested member."
        }
      ],
      "docs": {
        "description": [
          "Member profile."
        ]
      }
    },
    {
      "name": "Image",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Wix Media image ID,\nset when the member selects an image from Wix Media."
        },
        {
          "name": "height",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Original image width."
        },
        {
          "name": "offsetX",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "X-axis offset.\n\nDefaults to `0`.\n"
        },
        {
          "name": "offsetY",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Y-axis offset.\n\nDefaults to `0`.\n"
        },
        {
          "name": "url",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Image URL."
        },
        {
          "name": "width",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Original image height."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCache",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "localDc",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Is local DS"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "tell us why you're invalidating the cache. You don't need to add your app name"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInvalidateCacheGetByOneOf",
            "members": [
              "app",
              "metaSiteId",
              "page",
              "siteId",
              "uri"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheGetByOneOf",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "JoinCommunityRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "JoinCommunityResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "The updated member."
        }
      ],
      "docs": {
        "description": [
          "Member profile."
        ]
      }
    },
    {
      "name": "LeaveCommunityRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LeaveCommunityResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "The updated member."
        }
      ],
      "docs": {
        "description": [
          "Member profile."
        ]
      }
    },
    {
      "name": "ListMembersOptions",
      "members": [
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n\n__Deprecated.__ Use `fieldsets` instead.\nThis property will be removed on March 31, 2023.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Paging"
            }
          ],
          "doc": ""
        },
        {
          "name": "sorting",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-v2.Members.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMembersRequest",
      "members": [
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n\n__Deprecated.__ Use `fieldsets` instead.\nThis property will be removed on March 31, 2023.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Paging"
            }
          ],
          "doc": ""
        },
        {
          "name": "sorting",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-v2.Members.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMembersResponse",
      "members": [
        {
          "name": "members",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-v2.Members.Member"
                  }
                ]
              }
            }
          ],
          "doc": "List of members."
        },
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.PagingMetadata"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Member",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the member was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the member was updated."
        },
        {
          "name": "activityStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member activity status.\n\n<!--ONLY:REST-->\n- `ACTIVE`: Member can write forum posts and blog comments.\n- `MUTED`: Member cannot write forum posts or blog comments.\n- `UNKNOWN`: Insufficient permissions to get the status.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nOne of:\n\n- `\"ACTIVE\"`: Member can write forum posts and blog comments.\n- `\"MUTED\"`: Member cannot write forum posts or blog comments.\n- `\"UNKNOWN\"`: Insufficient permissions to get the status.\n<!--END:ONLY:VELO-->"
        },
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Contact"
            }
          ],
          "doc": "Member's contact information. Contact information is stored in the\n[Contact List](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcontacts).\n\n<!--ONLY:REST-->\nThe full set of contact data can be accessed and managed with the\n[Contacts API](https://dev.wix.com/api/rest/contacts/contacts).\n<!--END:ONLY:REST-->\n"
        },
        {
          "name": "contactId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        },
        {
          "name": "lastLoginDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the member last logged in to the site."
        },
        {
          "name": "loginEmail",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email used by the member to log in to the site."
        },
        {
          "name": "loginEmailVerified",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the email used by the member has been verified."
        },
        {
          "name": "privacyStatus",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member privacy status.\n\n<!--ONLY:REST-->\n- `PUBLIC`: Member is visible to everyone.\n- `PRIVATE`: Member is hidden from site visitors and other site members. Member is returned only to site contributors and apps with the appropriate permissions.\n- `UNKNOWN`: Insufficient permissions to get the status.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nOne of:\n\n- `\"PUBLIC\"`: Member is visible to everyone.\n- `\"PRIVATE\"`: Member is hidden from site visitors and other site members. Member is returned only to site contributors and apps with the appropriate permissions.\n- `\"UNKNOWN\"`: Insufficient permissions to get the status.\n<!--END:ONLY:VELO-->\n"
        },
        {
          "name": "profile",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Profile"
            }
          ],
          "doc": "Profile display info."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member site access status.\n<!--ONLY:REST-->\n- `PENDING`: Member created and is waiting for approval by site owner.\n- `APPROVED`: Member can log in to the site.\n- `OFFLINE`: Member is a [guest author](https://support.wix.com/en/article/wix-blog-adding-guest-authors-to-your-blog) for the site blog and cannot log in to the site.\n- `BLOCKED`: Member is blocked and cannot log in to the site.\n- `UNKNOWN`: Insufficient permissions to get the status.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nOne of:\n\n- `\"PENDING\"`: Member created and is waiting for approval by site owner.\n- `\"APPROVED\"`: Member can log in to the site.\n- `\"OFFLINE\"`: Member is a [guest author](https://support.wix.com/en/article/wix-blog-adding-guest-authors-to-your-blog) for the site blog and cannot log in to the site.\n- `\"BLOCKED\"`: Member is blocked and cannot log in to the site.\n- `\"UNKNOWN\"`: Insufficient permissions to get the status.\n<!--END:ONLY:VELO-->"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberApproved",
      "members": [
        {
          "name": "memberId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member id who got approved"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberBlocked",
      "members": [
        {
          "name": "memberId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member id who got blocked"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberJoinedCommunity",
      "members": [
        {
          "name": "memberId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member id who joined the community"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberLeftCommunity",
      "members": [
        {
          "name": "memberId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member id who left the community"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberMuted",
      "members": [
        {
          "name": "memberId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member id who got muted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberOwnershipTransferred",
      "members": [
        {
          "name": "fromMember",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        },
        {
          "name": "toMember",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberSelfBlockForbiddenPayload",
      "members": [
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Target's member ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberToMemberBlockedPayload",
      "members": [
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberUnmuted",
      "members": [
        {
          "name": "memberId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member id who got unmuted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MetaSiteSpecialEvent",
      "members": [
        {
          "name": "assets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-v2.Members.Asset"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "hardDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteHardDeleted"
            }
          ],
          "doc": ""
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "namespaceChanged",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.NamespaceChanged"
            }
          ],
          "doc": ""
        },
        {
          "name": "serviceProvisioned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.ServiceProvisioned"
            }
          ],
          "doc": ""
        },
        {
          "name": "serviceRemoved",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.ServiceRemoved"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteCreated",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteCreated"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteDeleted"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteMarkedAsTemplate",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteMarkedAsTemplate"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteMarkedAsWixSite",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteMarkedAsWixSite"
            }
          ],
          "doc": ""
        },
        {
          "name": "sitePublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SitePublished"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteRenamedPayload",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteRenamed"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteTransferred",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteTransferred"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteUndeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteUndeleted"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteUnpublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteUnpublished"
            }
          ],
          "doc": ""
        },
        {
          "name": "studioAssigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.StudioAssigned"
            }
          ],
          "doc": ""
        },
        {
          "name": "studioUnassigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.StudioUnassigned"
            }
          ],
          "doc": ""
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfMetaSiteSpecialEventPayloadOneOf",
            "members": [
              "hardDeleted",
              "namespaceChanged",
              "serviceProvisioned",
              "serviceRemoved",
              "siteCreated",
              "siteDeleted",
              "siteMarkedAsTemplate",
              "siteMarkedAsWixSite",
              "sitePublished",
              "siteRenamedPayload",
              "siteTransferred",
              "siteUndeleted",
              "siteUnpublished",
              "studioAssigned",
              "studioUnassigned"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MetaSiteSpecialEventPayloadOneOf",
      "members": [
        {
          "name": "hardDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteHardDeleted"
            }
          ],
          "doc": ""
        },
        {
          "name": "namespaceChanged",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.NamespaceChanged"
            }
          ],
          "doc": ""
        },
        {
          "name": "serviceProvisioned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.ServiceProvisioned"
            }
          ],
          "doc": ""
        },
        {
          "name": "serviceRemoved",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.ServiceRemoved"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteCreated",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteCreated"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteDeleted"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteMarkedAsTemplate",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteMarkedAsTemplate"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteMarkedAsWixSite",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteMarkedAsWixSite"
            }
          ],
          "doc": ""
        },
        {
          "name": "sitePublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SitePublished"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteRenamedPayload",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteRenamed"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteTransferred",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteTransferred"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteUndeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteUndeleted"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteUnpublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.SiteUnpublished"
            }
          ],
          "doc": ""
        },
        {
          "name": "studioAssigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.StudioAssigned"
            }
          ],
          "doc": ""
        },
        {
          "name": "studioUnassigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.StudioUnassigned"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MuteMemberRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MuteMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "NamespaceChanged",
      "members": [
        {
          "name": "newNamespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ACCOUNT_MASTER_CMS'`\n- `'ALBUMS'`\n- `'ANYWHERE'`\n- `'CLUBS'`\n- `'CREATOR_ECONOMY'`\n- `'DASHBOARD_FIRST'`\n- `'DEV_CENTER_COMPANY'`\n- `'DEV_SITE'`\n- `'HEADLESS'`\n- `'HOTELS'`\n- `'HTML_DRAFT'`\n- `'LOGOS'`\n- `'ONBOARDING_DRAFT'`\n- `'PARTNER_DASHBOARD'`\n- `'SHOUT_OUT'`\n- `'SITELESS_BUSINESS'`\n- `'UNKNOWN_NAMESPACE'`\n- `'VIDEO_MAKER'`\n- `'WIX'`\n- `'WIX_STORES_TEST_DRIVE'`"
        },
        {
          "name": "oldNamespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ACCOUNT_MASTER_CMS'`\n- `'ALBUMS'`\n- `'ANYWHERE'`\n- `'CLUBS'`\n- `'CREATOR_ECONOMY'`\n- `'DASHBOARD_FIRST'`\n- `'DEV_CENTER_COMPANY'`\n- `'DEV_SITE'`\n- `'HEADLESS'`\n- `'HOTELS'`\n- `'HTML_DRAFT'`\n- `'LOGOS'`\n- `'ONBOARDING_DRAFT'`\n- `'PARTNER_DASHBOARD'`\n- `'SHOUT_OUT'`\n- `'SITELESS_BUSINESS'`\n- `'UNKNOWN_NAMESPACE'`\n- `'VIDEO_MAKER'`\n- `'WIX'`\n- `'WIX_STORES_TEST_DRIVE'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "OwnerMemberBlockForbiddenPayload",
      "members": [
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Owner's member ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Page",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the page is on"
        },
        {
          "name": "pageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Page ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Profile",
      "members": [
        {
          "name": "cover",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Image"
            }
          ],
          "doc": "Member's cover photo,\nused as a background picture in members profile page.\n\nCover positioning can be altered with `cover.offsetX` and `cover.offsetY`.\nWhen left empty, the values default to `0`.\n"
        },
        {
          "name": "nickname",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name that identifies the member to other members.\nDisplayed on the member's profile page\nand interactions in the forum or blog."
        },
        {
          "name": "photo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Image"
            }
          ],
          "doc": "Member's profile photo."
        },
        {
          "name": "slug",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Slug that determines the member's profile page URL."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member title.\n\n<!--ONLY:REST-->\nCurrently available through the API only.\n<!--END:ONLY:REST-->\n"
        }
      ],
      "docs": {
        "description": [
          "Member Profile"
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Paging"
            }
          ],
          "doc": "Limit number of results"
        },
        {
          "name": "sorting",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-v2.Members.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort the results"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryMembersOptions",
      "members": [
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n\n__Deprecated.__ Use `fieldsets` instead.\nThis property will be removed on March 31, 2023.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n"
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Search"
            }
          ],
          "doc": "Plain text search."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryMembersRequest",
      "members": [
        {
          "name": "fieldSet",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n\n__Deprecated.__ Use `fieldsets` instead.\nThis property will be removed on March 31, 2023.\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `PUBLIC`.\n"
        },
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Query"
            }
          ],
          "doc": "Query options."
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Search"
            }
          ],
          "doc": "Plain text search."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryMembersResponse",
      "members": [
        {
          "name": "members",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-v2.Members.Member"
                  }
                ]
              }
            }
          ],
          "doc": "List of members that met the query filter criteria."
        },
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.PagingMetadata"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Search",
      "members": [
        {
          "name": "expression",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Search term or expression"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Currently supported fields for search:\n\n- `loginEmail`\n- `contact.firstName`\n- `contact.lastName`\n- `profile.title`\n- `profile.nickname`\n- `profile.slug`\n\nDefault is `profile.nickname`\n"
        }
      ],
      "docs": {
        "description": [
          "Free text to match in searchable fields"
        ]
      }
    },
    {
      "name": "ServiceProvisioned",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Either UUID or EmbeddedServiceType."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Not only UUID. Something here could be something weird."
        },
        {
          "name": "originInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ServiceRemoved",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteCreated",
      "members": [
        {
          "name": "context",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'DUPLICATE'`\n- `'DUPLICATE_BY_SITE_TRANSFER'`\n- `'FLASH'`\n- `'FROM_TEMPLATE'`\n- `'OLD_SITE_TRANSFER'`\n- `'OTHER'`"
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ACCOUNT_MASTER_CMS'`\n- `'ALBUMS'`\n- `'ANYWHERE'`\n- `'CLUBS'`\n- `'CREATOR_ECONOMY'`\n- `'DASHBOARD_FIRST'`\n- `'DEV_CENTER_COMPANY'`\n- `'DEV_SITE'`\n- `'HEADLESS'`\n- `'HOTELS'`\n- `'HTML_DRAFT'`\n- `'LOGOS'`\n- `'ONBOARDING_DRAFT'`\n- `'PARTNER_DASHBOARD'`\n- `'SHOUT_OUT'`\n- `'SITELESS_BUSINESS'`\n- `'UNKNOWN_NAMESPACE'`\n- `'VIDEO_MAKER'`\n- `'WIX'`\n- `'WIX_STORES_TEST_DRIVE'`"
        },
        {
          "name": "originMetaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A meta site id from which this site was created.\n\nIn case of a creation from a template it's a template id.\nIn case of a site duplication (\"Save As\" in dashboard or duplicate in UM) it's an id of a source site.\n"
        },
        {
          "name": "originTemplateId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "ownerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "siteName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteDeleted",
      "members": [
        {
          "name": "deleteContext",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.DeleteContext"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          "Soft deletion of the meta site. Could be restored."
        ]
      }
    },
    {
      "name": "SiteHardDeleted",
      "members": [
        {
          "name": "deleteContext",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.DeleteContext"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          "Hard deletion of the meta site."
        ]
      }
    },
    {
      "name": "SiteMarkedAsTemplate",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteMarkedAsWixSite",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SitePublished",
      "members": [],
      "docs": {
        "description": [
          "First publish of a meta site. Or subsequent publish after unpublish."
        ]
      }
    },
    {
      "name": "SiteRenamed",
      "members": [
        {
          "name": "newSiteName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "oldSiteName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          "Rename of the site. Meaning, free public url has been changed as well."
        ]
      }
    },
    {
      "name": "SiteTransferred",
      "members": [
        {
          "name": "newOwnerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A new owner id (user that accepts meta site)."
        },
        {
          "name": "oldOwnerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A previous owner id (user that transfers meta site)."
        }
      ],
      "docs": {
        "description": [
          "Site transferred to another user."
        ]
      }
    },
    {
      "name": "SiteUndeleted",
      "members": [],
      "docs": {
        "description": [
          "Restoration of the meta site."
        ]
      }
    },
    {
      "name": "SiteUnpublished",
      "members": [
        {
          "name": "urls",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SlugAlreadyExistsPayload",
      "members": [
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street name."
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street number."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StudioAssigned",
      "members": [],
      "docs": {
        "description": [
          "Assigned Studio editor"
        ]
      }
    },
    {
      "name": "StudioUnassigned",
      "members": [],
      "docs": {
        "description": [
          "Unassigned Studio editor"
        ]
      }
    },
    {
      "name": "URI",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the URI is on"
        },
        {
          "name": "uriPath",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnmuteMemberRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnmuteMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMember",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the member was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the member was updated."
        },
        {
          "name": "activityStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member activity status.\n\n<!--ONLY:REST-->\n- `ACTIVE`: Member can write forum posts and blog comments.\n- `MUTED`: Member cannot write forum posts or blog comments.\n- `UNKNOWN`: Insufficient permissions to get the status.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nOne of:\n\n- `\"ACTIVE\"`: Member can write forum posts and blog comments.\n- `\"MUTED\"`: Member cannot write forum posts or blog comments.\n- `\"UNKNOWN\"`: Insufficient permissions to get the status.\n<!--END:ONLY:VELO-->"
        },
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Contact"
            }
          ],
          "doc": "Member's contact information. Contact information is stored in the\n[Contact List](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcontacts).\n\n<!--ONLY:REST-->\nThe full set of contact data can be accessed and managed with the\n[Contacts API](https://dev.wix.com/api/rest/contacts/contacts).\n<!--END:ONLY:REST-->\n"
        },
        {
          "name": "contactId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        },
        {
          "name": "lastLoginDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the member last logged in to the site."
        },
        {
          "name": "loginEmail",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email used by the member to log in to the site."
        },
        {
          "name": "loginEmailVerified",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the email used by the member has been verified."
        },
        {
          "name": "privacyStatus",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member privacy status.\n\n<!--ONLY:REST-->\n- `PUBLIC`: Member is visible to everyone.\n- `PRIVATE`: Member is hidden from site visitors and other site members. Member is returned only to site contributors and apps with the appropriate permissions.\n- `UNKNOWN`: Insufficient permissions to get the status.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nOne of:\n\n- `\"PUBLIC\"`: Member is visible to everyone.\n- `\"PRIVATE\"`: Member is hidden from site visitors and other site members. Member is returned only to site contributors and apps with the appropriate permissions.\n- `\"UNKNOWN\"`: Insufficient permissions to get the status.\n<!--END:ONLY:VELO-->\n"
        },
        {
          "name": "profile",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Profile"
            }
          ],
          "doc": "Profile display info."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member site access status.\n<!--ONLY:REST-->\n- `PENDING`: Member created and is waiting for approval by site owner.\n- `APPROVED`: Member can log in to the site.\n- `OFFLINE`: Member is a [guest author](https://support.wix.com/en/article/wix-blog-adding-guest-authors-to-your-blog) for the site blog and cannot log in to the site.\n- `BLOCKED`: Member is blocked and cannot log in to the site.\n- `UNKNOWN`: Insufficient permissions to get the status.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nOne of:\n\n- `\"PENDING\"`: Member created and is waiting for approval by site owner.\n- `\"APPROVED\"`: Member can log in to the site.\n- `\"OFFLINE\"`: Member is a [guest author](https://support.wix.com/en/article/wix-blog-adding-guest-authors-to-your-blog) for the site blog and cannot log in to the site.\n- `\"BLOCKED\"`: Member is blocked and cannot log in to the site.\n- `\"UNKNOWN\"`: Insufficient permissions to get the status.\n<!--END:ONLY:VELO-->"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMemberOptions",
      "members": [
        {
          "name": "member",
          "type": [
            {
              "referenceType": "wix-members-v2.Members.UpdateMember"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMemberRequest",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Member details to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMemberResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMemberSlugRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member whose slug will be updated."
        },
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "New slug."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMemberSlugResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Updated member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMySlugRequest",
      "members": [
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "New slug."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateMySlugResponse",
      "members": [
        {
          "name": "member",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-v2.Members.Member"
            }
          ],
          "doc": "Updated member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
