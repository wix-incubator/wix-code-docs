{ "name": "wix-users",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 13,
      "filename": "users.js" },
  "docs":
    { "summary": "The wix-users module contains functionality for working with your\n site's users from client-side code.",
      "description":
        [ "There are three types of users:",
          "",
          " + Visitor - A user who is not logged into your site.",
          " + Member - A user who is logged into your site.",
          " + Admin - The owner of the site.",
          "",
          "",
          " To use the Users API, import `wixUsers` from the `wix-users` module:",
          "",
          "   ```javascript",
          "   import wixUsers from 'wix-users';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentUser",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-users.User",
        "locations":
          [ { "lineno": 298,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Gets the current user viewing the site.",
            "description":
              [ "Gets a [`User`](wix-users.User.html) object containing information about",
                " the user currently viewing the site." ],
            "links": [],
            "examples":
              [ { "title": "Get the current user's information",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let user = wixUsers.currentUser;",
                      "",
                      "let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "let isLoggedIn = user.loggedIn; // true",
                      "",
                      "user.getEmail()",
                      "  .then( (email) => {",
                      "    let userEmail = email;      // \"user@something.com\"",
                      "  } );",
                      "",
                      "user.getRoles()",
                      "  .then( (roles) => {",
                      "    let firstRole = roles[0];",
                      "    let roleName = firstRole.name;                // \"Role Name\"",
                      "    let roleDescription = firstRole.description;  // \"Role Description\"",
                      "  } );",
                      "",
                      "user.getPricingPlans()",
                      "  .then( (pricingPlans) => {",
                      "    let firstPlan = pricingPlans[0];",
                      "    let planName = firstPlan.name;          // \"Gold\"",
                      "    let startDate = firstPlan.startDate;    // Wed Aug 29 2018 09:39:41 GMT-0500 (Eastern Standard Time)",
                      "    let expiryDate = firstPlan.expiryDate;  // Thu Nov 29 2018 08:39:41 GMT-0400 (Eastern Daylight Time)",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality.\n\n The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n you must use them in code that is contained in or is called from the\n [onReady()]($w.html#onReady) event handler or any element event handler." ] } } ],
  "operations":
    [ { "name": "applySessionToken",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "sessionToken",
              "type": "string",
              "doc": "The session token to apply." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the token has been applied." },
        "locations":
          [ { "lineno": 702,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Logs the current user into the site using the given session token.",
            "description":
              [ "The `applySessionToken()` function returns a Promise that resolves when the",
                " given session token is applied and the current user is logged into the site.",
                "",
                " You receive a session token from the following functions called from backend",
                " code:",
                "",
                " + [`approveByEmail()`](wix-users-backend.html#approveByEmail)",
                " + [`approveByToken()`](wix-users-backend.html#approveByToken)",
                " + [`register()`](wix-users-backend.html#register)",
                "",
                "",
                " Pass the returned session token to your client-side code and apply it by",
                " calling `applySessionToken()` to complete the process started by one of the",
                " above functions." ],
            "links": [],
            "examples":
              [ { "title": "Log in the current user by applying a session token",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.applySessionToken(sessionToken)",
                      "  .then( () => {",
                      "    console.log(\"User logged in.\");",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Register a user using a 3rd party for approval",
                  "body":
                    [ "/*******************************",
                      " * backend code - register.jsw *",
                      " *******************************/",
                      "import wixUsers from 'wix-users-backend';",
                      "import {approveBy3rdParty} from 'some-backend-module';",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // call a 3rd party API to check if the user is approved",
                      "  return approveBy3rdParty(email, password)",
                      "    .then( (isApproved) => {",
                      "      // if approved by 3rd party",
                      "      if (isApproved) {",
                      "        // register the user",
                      "        return wixUsers.register(email, password, {",
                      "          \"contactInfo\": {",
                      "            \"firstName\": firstName,",
                      "            \"lastName\": lastName",
                      "          }",
                      "        } )",
                      "        // user is now registered and pending approval",
                      "        // approve the user",
                      "          .then( (result) => wixUsers.approveByToken(result.approvalToken) )",
                      "          // user is now active, but not logged in",
                      "          // return the session token to log in the user client-side",
                      "          .then( (sessionToken) => {",
                      "            return {sessionToken, \"approved\": true};",
                      "          } );",
                      "      }",
                      "      // if not approved by 3rd party",
                      "      else {",
                      "        return {\"approved\": false};",
                      "      }",
                      "    } )",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "import wixUsers from 'wix-users';",
                      "import {doRegistration} from 'backend/register';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "let firstName = // the user's first name",
                      "let lastName = // the user's last name",
                      "",
                      "doRegistration(email, password, firstName, lastName)",
                      "  .then( (result) => {",
                      "    if (result.approved)",
                      "    // log the user in",
                      "      wixUsers.applySessionToken(result.sessionToken);",
                      "    else {",
                      "      console.log(\"Not approved!\");",
                      "    }",
                      "  } );",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common 3rd party approval flow. The backend code\n calls a 3rd party function that determines whether the user is approved\n or not. If approved, the `register()` function is called, the registration\n is approved programmatically, and a session token is returned to the calling\n client-side code. If rejected, the `blockByEmail()` function is called." } },
                { "title": "Log a user in after 3rd party authentication",
                  "body":
                    [ "/*******************************",
                      " * backend code - login.jsw *",
                      " *******************************/",
                      "import wixUsers from 'wix-users-backend';",
                      "import {authBy3rdParty} from 'backend/authentications';",
                      "",
                      "export function getLoginToken(email, password) {",
                      "  // authenticate using 3rd party",
                      "  return authBy3rdParty(email, password)",
                      "    .then( (isAuthenticated) => {",
                      "      // if authenticated generate and return session token",
                      "      if(isAuthenticated){",
                      "        return wixUsers.generateSessionToken(email)",
                      "          .then( (sessionToken) => {",
                      "            return {\"sessionToken\": sessionToken, \"approved\": true};",
                      "          } );",
                      "      }",
                      "      // if not authenticated return non-approval",
                      "      return {\"approved\": false};",
                      "    } );",
                      "}",
                      "",
                      "/*********************************",
                      " * client-side login code *",
                      " *********************************/",
                      "import {getLoginToken} from 'backend/login';",
                      "import wixUsers from 'wix-users';",
                      "",
                      "export async function button_onClick(event) {",
                      "  // call backend function",
                      "  getLoginToken($w(\"#email\").value, $w(\"#password\").value)",
                      "    .then( (loginResult) => {",
                      "      // if approved log the user in with the session token",
                      "      if (loginResult.approved) {",
                      "        wixUsers.applySessionToken(loginResult.sessionToken);",
                      "      }",
                      "      // if not approved log a message",
                      "      else {",
                      "        console.log(\"User not approved.\");",
                      "      }",
                      "    } );",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example contains a backend function which uses a 3rd party authentication\n service to authenticate a user. If the authentication is successful, a session\n session token is returned to the client-side and used to log in the authenticated user." } },
                { "title": "Register a user sending an email for confirmation",
                  "body":
                    [ "/*******************************",
                      " * backend code - register.jsw *",
                      " *******************************/",
                      "import wixUsers from 'wix-users-backend';",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // register the user",
                      "  return wixUsers.register(email, password, {",
                      "    \"contactInfo\": {",
                      "      \"firstName\": firstName,",
                      "      \"lastName\": lastName",
                      "    }",
                      "  } )",
                      "  .then( (results) => {",
                      "    // user is now registered and pending approval",
                      "    // send a registration verification email",
                      "    wixUsers.emailUser('verifyRegistration', results.user.id, {",
                      "      \"variables\": {",
                      "        \"name\": firstName,",
                      "        \"verifyLink\": `http://yourdomain.com/post-register?token=${results.approvalToken}`",
                      "      }",
                      "    } );",
                      "  } );",
                      "}",
                      "",
                      "export function doApproval(token) {",
                      "  // approve the user",
                      "  return wixUsers.approveByToken(token)",
                      "  // user is now active, but not logged in",
                      "  // return the session token to log in the user client-side",
                      "    .then( (sessionToken) => {",
                      "      return {sessionToken, \"approved\": true};",
                      "    } )",
                      "    .catch( (error) => {",
                      "      return {\"approved\": false, \"reason\": error};",
                      "    } );",
                      "}",
                      "",
                      "/*********************************",
                      " * client-side registration code *",
                      " *********************************/",
                      "import wixUsers from 'wix-users';",
                      "import {doRegistration} from 'backend/register';",
                      "",
                      "export function button_click(event) {",
                      "  let email = // the user's email address",
                      "  let password = // the user's password",
                      "  let firstName = // the user's first name",
                      "  let lastName = // the user's last name",
                      "",
                      "  doRegistration(email, password, firstName, lastName)",
                      "    .then( () => {",
                      "      console.log(\"Confirmation email sent.\");",
                      "    } );",
                      "}",
                      "",
                      "/**************************************",
                      " * client-side post-registration code *",
                      " **************************************/",
                      "import wixLocation from 'wix-location';",
                      "import wixUsers from 'wix-users';",
                      "import {doApproval} from 'backend/register';",
                      "",
                      "$w.onReady( () => {",
                      "  // get the token from the URL",
                      "  let token = wixLocation.query.token;",
                      "",
                      "  doApproval(token)",
                      "    .then( (result) => {",
                      "      if (result.approved){",
                      "        // log the user in",
                      "        wixUsers.applySessionToken(result.sessionToken);",
                      "          console.log(\"Approved\");",
                      "      }",
                      "      else {",
                      "        console.log(\"Not approved!\");",
                      "      }",
                      "    } );",
                      "} );",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common email verification flow. A user is initially\n registered but not yet approved. At registration, a verification email is\n sent with a link to a verification page. When a user goes to the verification\n page, the approval is granted and the user is logged into the site.\n\n The code is split between three locations:\n\n + A backend web module named **register.jsw**.\n + The page code for the page where users register.\n + The page code for the page where users confirm their registration." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "emailUser",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "emailId",
              "type": "string",
              "doc": "The Email ID of the Triggered Email to send." },
            { "name": "toUser",
              "type": "string",
              "doc": "The User ID of the currently signed-in member." },
            { "name": "options",
              "type": "wix-users.TriggeredEmailOptions",
              "doc": "Variable values to insert into the email.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the email is sent.\nRejected - Error message." },
        "locations":
          [ { "lineno": 498,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Sends a Triggered Email to the currently logged-in site member.",
            "description":
              [ "To learn more about Triggered Emails, see:",
                "",
                " + <a href=\"https://support.wix.com/en/article/about-triggered-emails\" target=\"_blank\">About Triggered Emails</a>",
                " + <a href=\"https://support.wix.com/en/article/creating-a-triggered-email\" target=\"_blank\">Creating a Triggered Email</a>",
                " + <a href=\"https://support.wix.com/en/article/how-to-send-a-triggered-email-to-members-with-code\" target=\"_blank\">How to Send a Triggered Email to Members with Code</a>",
                "",
                "",
                " Before using the `emailUser()` function, you need to set up at least one",
                " Triggered Email.",
                "",
                " Specify which email to send by passing the email's ID in the `emailId` parameter.",
                "",
                " Specify which member the email is sent to by passing the member's user ID in the `toUser`",
                " parameter. You can only send the email to the currently logged-in",
                " member. You can get that member's ID using the [`id`](wix-users.User.html#id) property",
                " of the [`currentUser`](#currentUser).",
                "",
                " If the specified Triggered Email contains",
                " <a href=\"https://support.wix.com/en/article/using-variables-to-add-personalized-text\" target=\"_blank\">variables</a>,",
                " you can pass values for those variables using the optional `options` parameter.",
                " You pass a [`TriggeredEmailOptions`](#TriggeredEmailOptions) object",
                " which contains the values to be inserted into your email in place of the variables",
                " defined in that email. The values passed must be strings. If the object you",
                " pass to the `options` parameter does not contain a `key:value` pair for a",
                " variable in your Triggered Email, the fallback value defined when creating",
                " your Triggered Email is inserted in place of the variable.",
                "",
                " Note that Triggered Emails generates a code snippet for each of your email",
                " templates. The generated code includes the email's ID and keys for all the",
                " email's variable names. You can copy and paste the snippet into your code.",
                " Then, you need to define values for the `toUser` property and for each",
                " variable key. To learn how to use the generated snippet in your code, see",
                " <a href=\"https://support.wix.com/en/article/how-to-send-a-triggered-email-with-code\" target=\"_blank\">How to Send a Triggered Email with Code</a>." ],
            "links": [],
            "examples":
              [ { "title": "Send a Triggered Email to the currently logged-in member",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let userId = wixUsers.currentUser.id;",
                      "",
                      "wixUsers.emailUser(\"emailID\", userId)",
                      "  .then( () => {",
                      "    console.log(\"Triggered email sent\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Send a Triggered Email to the currently logged-in member with variable values",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let userId = wixUsers.currentUser.id;",
                      "let value1 = // value for variable1",
                      "",
                      "wixUsers.emailUser(\"emailID\", userId, {",
                      "    \"variables\": {",
                      "      \"variable1\": value1,",
                      "      \"variable2\": \"value for variable2\"",
                      "    }",
                      "  } )",
                      "  .then( () => {",
                      "    console.log(\"Triggered email sent\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality." ] } },
      { "name": "login",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "The email address to use when logging the user." },
            { "name": "password",
              "type": "string",
              "doc": "The password to use when logging the user." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the user has been logged in.\nRejected - Error message." },
        "locations":
          [ { "lineno": 667,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Logs a user in based on email and password.",
            "description":
              [ "The `login()` function returns a Promise that resolves when the user with",
                " the specified email address and password is logged in." ],
            "links": [],
            "examples":
              [ { "title": "Logs a user in",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "let email = // email address of user to log in",
                      "let password = // password of user to log in",
                      "",
                      "wixUsers.login(email, password)",
                      "  .then( () => {",
                      "    console.log(\"User is logged in\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Logs a user in using data from input elements",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "let email = $w(\"#email\");",
                      "let password = $w(\"#password\");",
                      "",
                      "wixUsers.login(email, password)",
                      "  .then( () => {",
                      "    console.log(\"User is logged in\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality." ] } },
      { "name": "logout",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 378,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Logs the current user out of the site.",
            "description":
              [ "The `logout()` function logs the current user out of the site." ],
            "links": [],
            "examples":
              [ { "title": "Log out the current user",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.logout();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality.\n\n The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n you must use them in code that is contained in or is called from the\n [onReady()]($w.html#onReady) event handler or any element event handler." ] } },
      { "name": "onLogin",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "wix-users.LoginHandler",
              "doc": "The name of the function or the function expression to run when a user has logged in." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 446,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Sets the function that runs when a user logs in.",
            "description":
              [ "Use the `onLogin()` function for code you want to run after a user successfully",
                " logs into your site.",
                "",
                " Usually, you want to call the `onLogin()` function in the **Site** tab of the",
                " code panel so that the `onLogin()` event handler runs no matter which",
                " page on your site a user uses to log in." ],
            "links": [],
            "examples":
              [ { "title": "Run code when a user logs in",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.onLogin( (user) => {",
                      "  let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "  let isLoggedIn = user.loggedIn; // true",
                      "  let userRole = user.role;       // \"Member\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality.\n\n The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n you must use them in code that is contained in or is called from the\n [onReady()]($w.html#onReady) event handler or any element event handler." ] } },
      { "name": "promptForgotPassword",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "language",
              "type": "string",
              "doc": "The language of the reset password form. Defaults to `\"English\"` if not passed or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Rejected - Message that the dialog was canceled, user is already logged in, or any other reason the password reset failed." },
        "locations":
          [ { "lineno": 399,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Prompts the current site visitor with a password reset.",
            "description":
              [ "The `promptForgotPassword()` function returns a Promise that resolves when",
                " the user has sumbitted the forgot password form.",
                "",
                " The `promptForgotPassword()` function cannot be called before the page is ready." ],
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the user with a password reset",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptForgotPassword();" ],
                  "extra":
                    {  } },
                { "title": "Prompt the current user to login with given language",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptForgotPassword()",
                      "  .then( ( ) => {",
                      "    console.log(\"Password reset submitted\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err; // \"The user closed the forgot password dialog\"",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality.\n\n The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n you must use them in code that is contained in or is called from the\n [onReady()]($w.html#onReady) event handler or any element event handler." ] } },
      { "name": "promptLogin",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-users.LoginOptions",
              "doc": "The options that determine how the login dialog box appears." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-users.User" ] },
            "doc": "Fulfilled - Information about the newly logged in user.\nRejected - Message that the dialog was canceled, or any other reason the user failed to log in." },
        "locations":
          [ { "lineno": 336,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Prompts the current site visitor to log in as a site member.",
            "description":
              [ "The `promptLogin()` function returns a Promise that resolves to the newly",
                " logged in user when the login has completed.",
                "",
                " The `promptLogin()` function cannot be called before the page is ready." ],
            "links":
              [ "[promptForgotPassword( )](#promptForgotPassword)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptLogin()",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;          // \"The user closed the login dialog\"",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Prompt the current user to login with given options",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let options = {\"mode\": \"login\", \"lang\": \"es\"};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality.\n\n The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n you must use them in code that is contained in or is called from the\n [onReady()]($w.html#onReady) event handler or any element event handler." ] } },
      { "name": "register",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "The email address to use when registering the user as a site member." },
            { "name": "password",
              "type": "string",
              "doc": "The password the newly added site member will use to log in." },
            { "name": "options",
              "type": "wix-users.RegistrationOptions",
              "doc": "Registration options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-users.RegistrationResult" ] },
            "doc": "Fulfilled - When the user has been registered.\nRejected - Error message." },
        "locations":
          [ { "lineno": 593,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Registers a new site member.",
            "description":
              [ "The `register()` function returns a Promise that resolves to a [`RegistrationResult`](#RegistrationResult)",
                " object when the user is either registered or is pending registration.",
                "",
                " The specified `password` must be between 4 and 15 characters.",
                "",
                " If Site Members is <a href=\"https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members\" target=\"_blank\">configured for automatic approval</a>,",
                " the `register()` function returns a status of `\"Active\"` and the user",
                " becomes an active member of the site.",
                "",
                " If Site Members is <a href=\"https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members\" target=\"_blank\">configured for manual approval</a>,",
                " the `register()` function returns a status of `\"Pending\"` and the user",
                " becomes a pending member of the site. In order to activate a pending user, the",
                " site owner can <a href=\"https://support.wix.com/en/article/approving-a-site-member\" target=\"_blank\">approve the user manually</a>,",
                " using the Contacts application or you can call the [approveByToken()](wix-users-backend.html#approveByToken)",
                " or [approveByEmail()](wix-users-backend.html#approveByEmail) functions." ],
            "links": [],
            "examples":
              [ { "title": "Register a user as a site member with manual approval",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "",
                      "wixUsers.register(email, password)",
                      "  .then( (result) => {",
                      "    let status = result.status; // \"Pending\"",
                      "    let approvalToken = result.approvalToken;",
                      "    let user = result.user;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Register a user as a site member with auto approval",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "",
                      "wixUsers.register(email, password)",
                      "  .then( (result) => {",
                      "    let status = result.status; // \"Active\"",
                      "    let user = result.user;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Register a user as a site member with registration options",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "let firstName = // the user's first name",
                      "let lastName = // the user's last name",
                      "let phone =  // the user's phone number",
                      "let nickname = // the user's nickname",
                      "",
                      "wixUsers.register(email, password, {",
                      "    contactInfo: {",
                      "        \"firstName\": firstName,",
                      "        \"lastName\": lastName,",
                      "        \"phone\": phone,",
                      "        \"nickname\": nickname",
                      "    }",
                      "  } )",
                      "  .then( (result) => {",
                      "    let resultStatus = result.status;",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality.\n\n When member registration is set to auto approve, calling the `register()`\n function client-side is equally as secure as calling it from backend code.\n However, when member approval is set to manual, calling the [backend version\n of the `register()` function](wix-users-backend.html#register) allows you\n to construct more secure approval flows." ] } } ],
  "callbacks":
    [ { "name": "LoginHandler",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "user",
              "type": "wix-users.User",
              "doc": "The user that has logged in." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 440,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Function that runs when a user has logged in.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "messages":
    [ { "name": "LoginOptions",
        "locations":
          [ { "lineno": 327,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object used by the `promptLogin()` function to determine how the login dialog box appears.",
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let options = {\"mode\": \"login\", \"lang\": \"es\"};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "mode",
              "type": "string",
              "doc": "What type of login experience to present: `\"login\"` or `\"signup\"`. Defaults to the option chosen in the Member Signup Settings panel in the Editor.",
              "optional": true },
            { "name": "lang",
              "type": "string",
              "doc": "The two letter language code of the language to show the login form in. Defaults to `\"en\"` if the property doesn't exist or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegistrationOptions",
        "locations":
          [ { "lineno": 572,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object that contains information about a site registration.",
            "links":
              [ "[register](#register)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactInfo",
              "type": "wix-crm.ContactInfo",
              "doc": "Contact information." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegistrationResult",
        "locations":
          [ { "lineno": 580,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object that contains information about the results of a site registration.",
            "links":
              [ "[register](#register)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "status",
              "type": "string",
              "doc": "Registration status. Either \"Pending\" or \"Active\"." },
            { "name": "approvalToken",
              "type": "string",
              "doc": "A token for approving the user as\n a site member using the [approveByToken()](wix-users-backend.html#approveByToken)\n function. The token is safe to pass via email or from client-side code to\n backend code. The token is only available when `status` is \"Pending\".",
              "optional": true },
            { "name": "user",
              "type": "wix-users.User",
              "doc": "The user that has been registered." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TriggeredEmailOptions",
        "locations":
          [ { "lineno": 487,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object used when sending a Triggered Email.",
            "links":
              [ "[emailUser( )](#emailUser)" ],
            "examples":
              [ { "title": "Send a Triggered Email to the currently logged-in member",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let userId = wixUsers.currentUser.id;",
                      "let value1 = // value for variable1",
                      "",
                      "wixUsers.emailUser(\"emailID\", userId, {",
                      "    \"variables\": {",
                      "      \"variable1\": value1,",
                      "      \"variable2\": \"value for variable2\"",
                      "    }",
                      "  } )",
                      "  .then( () => {",
                      "    console.log(\"Triggered email sent\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "variables",
              "type": "Object",
              "doc": "An object with `key:value` pairs where each\n `key` is a variable in the email template created in Triggered Emails and its\n corresponding `value` is the value to insert into the template in place of\n variable. The values must be strings." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "notes":
        [ "The APIs in `wix-users` are only partially functional when previewing your site.\n View a published version of your site to see their complete functionality.\n\n The APIs in `wix-users` can only be used once the page has loaded. Therefore,\n you must use them in code that is contained in or is called from the\n [onReady()]($w.html#onReady) event handler or any element event handler." ] },
  "menuSections": "APIs",
  "relatedContent":
    [ { "icon": "article",
        "text": "Sending a Triggered Email to Members",
        "url": "https://support.wix.com/en/article/wix-code-tutorial-sending-a-triggered-email-to-members" },
      { "icon": "article",
        "text": "Building Your Own Members Area",
        "url": "https://support.wix.com/en/article/wix-code-tutorial-building-your-own-members-area" },
      { "icon": "article",
        "text": "Creating a Custom Registration Form with Code",
        "url": "https://support.wix.com/en/article/wix-code-tutorial-creating-a-custom-registration-form-with-code" } ],
  "FAQs":
    [ { "title": "What's the difference between wix-users and wix-crm?",
        "markdown": "The Users API contains functionality for working with users who are logged-in members. The CRM API contains functionality for working with your site's contacts. Note that all members are also contacts, but contacts are not necessarily members." },
      { "title": "How do I create a custom member registration form?",
        "markdown": "Follow [this tutorial](https://support.wix.com/en/article/wix-code-tutorial-creating-a-custom-registration-form-with-code) to create a custom member registration form." },
      { "title": "How do I send an email to a user who is not the currently logged-in user?",
        "markdown": "Using the [`emailUser()`](https://www.wix.com/code/reference/wix-users.html#emailUser) function of [`wix-users`](https://www.wix.com/code/reference/wix-users.html) you can only send emails to the currently logged-in user. However, from the backend, using the [`emailUser()`](https://www.wix.com/code/reference/wix-users-backend.html#emailUser) function of [`wix-users-backend`](https://www.wix.com/code/reference/wix-users-backend.html) you can send emails to any site member." },
      { "title": "How can I get the current user's name?",
        "markdown": "Use the [`currentUser`](https://www.wix.com/code/reference/wix-users.html#currentUser) property to get the current user's `id`. Then query the Members/PrivateMembersData collection for the item with that `_id`.\n\n```javascript\n\nwixData.query(\"Members/PrivateMembersData\") \\\n  .eq(\"_id\", wixUsers.currentUser.id) \\\n  .find() \\\n  .then( (results) => { \\\n    lastName = results.items[0].lastName; \\\n  } );\n\n``` " },
      { "title": "Why is the wix-users API not functioning properly when I test my code in preview?",
        "markdown": "The wix-users API is only partially functional when previewing your site. You need to view a published version of your site to see its full functionality." } ] }