{ "name": "wix-users",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "users.js" },
  "docs":
    { "summary": "**Deprecated.**\nThe wix-users module will continue to work, but a newer version is available at\n[wix-members](https://www.wix.com/velo/reference/wix-members).",
      "description":
        [ "The wix-users module contains functionality for working with your",
          "site's users from client-side code.",
          "",
          "> **Note:**",
          "> The wix-users module is deprecated.",
          "> If you're already using this module in your code, it will continue to work.",
          "> To stay compatible with future changes, update your code",
          "> with the migration instructions in this module's functions.",
          "",
          " There are three types of users:",
          "",
          " + Visitor - A user who is not logged into your site.",
          " + Member - A user who is logged into your site.",
          " + Admin - The owner of the site.",
          "",
          "",
          " To use the Users API, import `wixUsers` from the `wix-users` module:",
          "",
          "   ```javascript",
          "   import wixUsers from 'wix-users';",
          "   ```",
          "",
          "> **Notes:**",
          "> + The APIs in `wix-users` are only partially functional when previewing your site. View a published version of your site to see their complete functionality.",
          ">",
          "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore, you must use them in code that is contained in or is called from the [onReady()]($w.html#onReady) event handler or any element event handler." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentUser",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-users.User",
        "locations":
          [ { "lineno": 359,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis object will continue to work, but a newer version is available at\n[wix-members.currentMember.getMember()](https://www.wix.com/velo/reference/wix-members/currentmember/getmember).",
            "description":
              [ "Gets the current user viewing the site.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this object is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.currentMember.getMember()`](wix-members/currentmember/getMember).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { currentMember } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.currentUser`,",
                ">    and replace it with `currentMember.getMember()`.",
                ">    Update your code to work with the new `getMember()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " Gets a [`User`](wix-users.User.html) object containing information about",
                " the user currently viewing the site.",
                "",
                "> **Notes:**",
                "> + The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [onReady()]($w.html#onReady) event handler or any element event handler." ],
            "links": [],
            "examples":
              [ { "title": "Get the current member's information",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.currentMember.getMember()",
                      "//       function, which replaces wix-users.currentUser.",
                      "//       See the function description for more information, and",
                      "//       line 36 for the deprecated example.",
                      "",
                      "import { currentMember } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "currentMember.getMember('FULL')",
                      "  .then((member) => {",
                      "    // Replaces currentUser.id",
                      "    const id = member._id;",
                      "",
                      "    // Replaces currentUser.loggedIn",
                      "    const loggedIn = member ? true : false;",
                      "",
                      "    // Replaces currentUser.getEmail()",
                      "    const loginEmail = member.loginEmail;",
                      "    const contactEmails = member.contactDetails.emails;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "currentMember.getRoles()",
                      "  .then((roles) => {",
                      "    // Replaces currentUser.role and currentUser.getRoles()",
                      "    return roles;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.currentUser object.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let user = wixUsers.currentUser;",
                      "",
                      "let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "let isLoggedIn = user.loggedIn; // true",
                      "",
                      "user.getEmail()",
                      "  .then( (email) => {",
                      "    let userEmail = email;      // \"user@something.com\"",
                      "  } );",
                      "",
                      "user.getRoles()",
                      "  .then( (roles) => {",
                      "    let firstRole = roles[0];",
                      "    let roleName = firstRole.name;                // \"Role Name\"",
                      "    let roleDescription = firstRole.description;  // \"Role Description\"",
                      "  } );",
                      "",
                      "user.getPricingPlans()",
                      "  .then( (pricingPlans) => {",
                      "    let firstPlan = pricingPlans[0];",
                      "    let planName = firstPlan.name;          // \"Gold\"",
                      "    let startDate = firstPlan.startDate;    // Wed Aug 29 2018 09:39:41 GMT-0500 (Eastern Standard Time)",
                      "    let expiryDate = firstPlan.expiryDate;  // Thu Nov 29 2018 08:39:41 GMT-0400 (Eastern Daylight Time)",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "applySessionToken",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionToken",
              "type": "string",
              "doc": "The session token to apply." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the token has been applied." },
        "locations":
          [ { "lineno": 884,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-members.authentication.applySessionToken()](https://www.wix.com/velo/reference/wix-members/authentication/applysessiontoken).",
            "description":
              [ "Logs the current user into the site using the given session token.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.authentication.applySessionToken()`](wix-members/authentication/applySessionToken).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { authentication } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.applySessionToken()`,",
                ">    and replace it with `authentication.applySessionToken()`.",
                ">    Update your code to work with the new `applySessionToken()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " The `applySessionToken()` function returns a Promise that resolves when the",
                " given session token is applied and the current user is logged into the site.",
                "",
                " You receive a session token from the following functions called from backend",
                " code:",
                "",
                " + [`approveByEmail()`](wix-users-backend.html#approveByEmail)",
                " + [`approveByToken()`](wix-users-backend.html#approveByToken)",
                " + [`register()`](wix-users-backend.html#register)",
                "",
                " Pass the returned session token to your client-side code and apply it by",
                " calling `applySessionToken()` to complete the process started by one of the",
                " above functions." ],
            "links": [],
            "examples":
              [ { "title": "Log in the current user by applying a session token",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.applySessionToken()",
                      "//       function, which replaces wix-users.applySessionToken().",
                      "//       See the function description for more information, and",
                      "//       line 17 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "authentication.applySessionToken(sessionToken)",
                      "  .then(() => {",
                      "    console.log('Member logged in.');",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.applySessionToken() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.applySessionToken(sessionToken)",
                      "  .then( () => {",
                      "    console.log(\"User logged in.\");",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Register a user using a 3rd party for approval",
                  "body":
                    [ "// NOTE: This code example uses deprecated functions.",
                      "",
                      "/*******************************",
                      " * backend code - register.jsw *",
                      " *******************************/",
                      "import wixUsers from 'wix-users-backend';",
                      "import {approveBy3rdParty} from 'some-backend-module';",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // call a 3rd party API to check if the user is approved",
                      "  return approveBy3rdParty(email, password)",
                      "    .then( (isApproved) => {",
                      "      // if approved by 3rd party",
                      "      if (isApproved) {",
                      "        // register the user",
                      "        return wixUsers.register(email, password, {",
                      "          \"contactInfo\": {",
                      "            \"firstName\": firstName,",
                      "            \"lastName\": lastName",
                      "          }",
                      "        } )",
                      "        // user is now registered and pending approval",
                      "        // approve the user",
                      "          .then( (result) => wixUsers.approveByToken(result.approvalToken) )",
                      "          // user is now active, but not logged in",
                      "          // return the session token to log in the user client-side",
                      "          .then( (sessionToken) => {",
                      "            return {sessionToken, \"approved\": true};",
                      "          } );",
                      "      }",
                      "      // if not approved by 3rd party",
                      "      else {",
                      "        return {\"approved\": false};",
                      "      }",
                      "    } )",
                      "}",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "import wixUsers from 'wix-users';",
                      "import {doRegistration} from 'backend/register';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "let firstName = // the user's first name",
                      "let lastName = // the user's last name",
                      "",
                      "doRegistration(email, password, firstName, lastName)",
                      "  .then( (result) => {",
                      "    if (result.approved)",
                      "    // log the user in",
                      "      wixUsers.applySessionToken(result.sessionToken);",
                      "    else {",
                      "      console.log(\"Not approved!\");",
                      "    }",
                      "  } );",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common 3rd party approval flow. The backend code\n calls a 3rd party function that determines whether the user is approved\n or not. If approved, the `register()` function is called, the registration\n is approved programmatically, and a session token is returned to the calling\n client-side code. If rejected, the `blockByEmail()` function is called." } },
                { "title": "Log a user in after 3rd party authentication",
                  "body":
                    [ "// NOTE: This code example uses deprecated functions.",
                      "",
                      "/*******************************",
                      " * backend code - login.jsw *",
                      " *******************************/",
                      "import wixUsers from 'wix-users-backend';",
                      "import {authBy3rdParty} from 'backend/authentications';",
                      "",
                      "export function getLoginToken(email, password) {",
                      "  // authenticate using 3rd party",
                      "  return authBy3rdParty(email, password)",
                      "    .then( (isAuthenticated) => {",
                      "      // if authenticated generate and return session token",
                      "      if(isAuthenticated){",
                      "        return wixUsers.generateSessionToken(email)",
                      "          .then( (sessionToken) => {",
                      "            return {\"sessionToken\": sessionToken, \"approved\": true};",
                      "          } );",
                      "      }",
                      "      // if not authenticated return non-approval",
                      "      return {\"approved\": false};",
                      "    } );",
                      "}",
                      "",
                      "/*********************************",
                      " * client-side login code *",
                      " *********************************/",
                      "import {getLoginToken} from 'backend/login';",
                      "import wixUsers from 'wix-users';",
                      "",
                      "export async function button_onClick(event) {",
                      "  // call backend function",
                      "  getLoginToken($w(\"#email\").value, $w(\"#password\").value)",
                      "    .then( (loginResult) => {",
                      "      // if approved log the user in with the session token",
                      "      if (loginResult.approved) {",
                      "        wixUsers.applySessionToken(loginResult.sessionToken);",
                      "      }",
                      "      // if not approved log a message",
                      "      else {",
                      "        console.log(\"User not approved.\");",
                      "      }",
                      "    } );",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example contains a backend function which uses a 3rd party authentication\n service to authenticate a user. If the authentication is successful, a session\n session token is returned to the client-side and used to log in the authenticated user." } },
                { "title": "Register a user sending an email for confirmation",
                  "body":
                    [ "// NOTE: This code example uses deprecated functions.",
                      "",
                      "/*******************************",
                      " * backend code - register.jsw *",
                      " *******************************/",
                      "import wixUsers from 'wix-users-backend';",
                      "",
                      "export function doRegistration(email, password, firstName, lastName) {",
                      "  // register the user",
                      "  return wixUsers.register(email, password, {",
                      "    \"contactInfo\": {",
                      "      \"firstName\": firstName,",
                      "      \"lastName\": lastName",
                      "    }",
                      "  } )",
                      "  .then( (results) => {",
                      "    // user is now registered and pending approval",
                      "    // send a registration verification email",
                      "    wixUsers.emailUser('verifyRegistration', results.user.id, {",
                      "      \"variables\": {",
                      "        \"name\": firstName,",
                      "        \"verifyLink\": `http://yourdomain.com/post-register?token=${results.approvalToken}`",
                      "      }",
                      "    } );",
                      "  } );",
                      "}",
                      "",
                      "export function doApproval(token) {",
                      "  // approve the user",
                      "  return wixUsers.approveByToken(token)",
                      "  // user is now active, but not logged in",
                      "  // return the session token to log in the user client-side",
                      "    .then( (sessionToken) => {",
                      "      return {sessionToken, \"approved\": true};",
                      "    } )",
                      "    .catch( (error) => {",
                      "      return {\"approved\": false, \"reason\": error};",
                      "    } );",
                      "}",
                      "",
                      "/*********************************",
                      " * client-side registration code *",
                      " *********************************/",
                      "import wixUsers from 'wix-users';",
                      "import {doRegistration} from 'backend/register';",
                      "",
                      "export function button_click(event) {",
                      "  let email = // the user's email address",
                      "  let password = // the user's password",
                      "  let firstName = // the user's first name",
                      "  let lastName = // the user's last name",
                      "",
                      "  doRegistration(email, password, firstName, lastName)",
                      "    .then( () => {",
                      "      console.log(\"Confirmation email sent.\");",
                      "    } );",
                      "}",
                      "",
                      "/**************************************",
                      " * client-side post-registration code *",
                      " **************************************/",
                      "import wixLocation from 'wix-location';",
                      "import wixUsers from 'wix-users';",
                      "import {doApproval} from 'backend/register';",
                      "",
                      "$w.onReady( () => {",
                      "  // get the token from the URL",
                      "  let token = wixLocation.query.token;",
                      "",
                      "  doApproval(token)",
                      "    .then( (result) => {",
                      "      if (result.approved){",
                      "        // log the user in",
                      "        wixUsers.applySessionToken(result.sessionToken);",
                      "          console.log(\"Approved\");",
                      "      }",
                      "      else {",
                      "        console.log(\"Not approved!\");",
                      "      }",
                      "    } );",
                      "} );",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates a common email verification flow. A user is initially\n registered but not yet approved. At registration, a verification email is\n sent with a link to a verification page. When a user goes to the verification\n page, the approval is granted and the user is logged into the site.\n\n The code is split between three locations:\n\n + A backend web module named **register.jsw**.\n + The page code for the page where users register.\n + The page code for the page where users confirm their registration." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "emailUser",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "emailId",
              "type": "string",
              "doc": "The Email ID of the Triggered Email to send." },
            { "name": "toUser",
              "type": "string",
              "doc": "The User ID of the currently signed-in member." },
            { "name": "options",
              "type": "wix-users.TriggeredEmailOptions",
              "doc": "Variable values to insert into the email.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the email is sent.\nRejected - Error message." },
        "locations":
          [ { "lineno": 650,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-crm.triggeredEmails.emailMember()](https://www.wix.com/velo/reference/wix-crm/triggeredemails/emailmember).",
            "description":
              [ "Sends a Triggered Email to the currently logged-in site member.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-crm.triggeredEmails.emailMember()`](wix-crm/triggeredemails/emailMember).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { triggeredEmails } from 'wix-crm'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all contact functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.emailUser()`,",
                ">    and replace it with with `triggeredEmails.emailMember()`.",
                ">    Update your code to work with the new `emailMember()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " To learn more about Triggered Emails, see:",
                "",
                " + [About Triggered Emails](https://support.wix.com/en/article/about-triggered-emails)",
                " + [Creating a Triggered Email](https://support.wix.com/en/article/creating-a-triggered-email)",
                " + [How to Send a Triggered Email to Members with Code](https://support.wix.com/en/article/how-to-send-a-triggered-email-to-members-with-code)",
                "",
                "",
                " Before using the `emailUser()` function, you need to set up at least one",
                " Triggered Email.",
                "",
                " Specify which email to send by passing the email's ID in the `emailId` parameter.",
                "",
                " Specify which member the email is sent to by passing the member's user ID in the `toUser`",
                " parameter. You can only send the email to the currently logged-in",
                " member. You can get that member's ID using the [`id`](wix-users.User.html#id) property",
                " of the [`currentUser`](#currentUser).",
                "",
                " If the specified Triggered Email contains",
                " [variables](https://support.wix.com/en/article/using-variables-to-add-personalized-text),",
                " you can pass values for those variables using the optional `options` parameter.",
                " You pass a `TriggeredEmailOptions` object",
                " which contains the values to be inserted into your email in place of the variables",
                " defined in that email. The values passed must be strings. If the object you",
                " pass to the `options` parameter does not contain a `key:value` pair for a",
                " variable in your Triggered Email, the fallback value defined when creating",
                " your Triggered Email is inserted in place of the variable.",
                "",
                " Note that Triggered Emails generates a code snippet for each of your email",
                " templates. The generated code includes the email's ID and keys for all the",
                " email's variable names. You can copy and paste the snippet into your code.",
                " Then, you need to define values for the `toUser` property and for each",
                " variable key. To learn how to use the generated snippet in your code, see",
                " [How to Send a Triggered Email with Code](https://support.wix.com/en/article/how-to-send-a-triggered-email-with-code).",
                "> **Note:**",
                " The APIs in `wix-users` are only partially functional when previewing your site.",
                " View a published version of your site to see their complete functionality." ],
            "links": [],
            "examples":
              [ { "title": "Send a Triggered Email to the currently logged-in member",
                  "body":
                    [ "// NOTE: This example uses the new wix-crm.triggeredEmails.emailMember()",
                      "//       function, which replaces wix-users.emailUser().",
                      "//       See the function description for more information, and",
                      "//       line 29 for the deprecated example.",
                      "",
                      "import { triggeredEmails } from 'wix-crm';",
                      "",
                      "// ...",
                      "",
                      "// Sample emailId value: 'thanks_for_joining'",
                      "//",
                      "// Sample memberId value: '72751428-2743-4bda-acf5-4218a4279cd3'",
                      "//",
                      "// Sample options value:",
                      "// {",
                      "//   variables: {",
                      "//     firstName: 'Johnny',",
                      "//     lastName: 'Appleseed'",
                      "//   }",
                      "// }",
                      "",
                      "triggeredEmails.emailMember(emailId, memberId, options)",
                      "  .then(() => {",
                      "    console.log('Email was sent to member');",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.emailUser() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let userId = wixUsers.currentUser.id;",
                      "",
                      "wixUsers.emailUser(\"emailID\", userId)",
                      "  .then( () => {",
                      "    console.log(\"Triggered email sent\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getCurrentConsentPolicy",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-users.PolicyDetails" },
        "locations":
          [ { "lineno": 958,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-window.consentPolicy.getCurrentConsentPolicy()](https://www.wix.com/velo/reference/wix-window/consentPolicy-obj/getcurrentconsentpolicy).",
            "description":
              [ "Gets the visitor's consent policy regarding allowed cookies and 3rd-party data transfer, such as for GDPR or CCPA purposes.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-window.consentPolicy.getCurrentConsentPolicy()`](wix-window/consentPolicy-obj/getCurrentConsentPolicy).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { consentPolicy } from 'wix-window'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all contact functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.getCurrentConsentPolicy()`,",
                ">    and replace it with `consentPolicy.getCurrentConsentPolicy()`.",
                ">    Update your code to work with the new `getCurrentConsentPolicy()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                "The `getCurrentConsentPolicy()` function returns the",
                "consent policy details of the visitor, meaning, which cookies the visitor allows and whether data transfer",
                "to 3rd parties is allowed.",
                "",
                "The consent policy helps you comply with [GDPR](https://support.wix.com/en/article/preparing-your-wix-site-for-the-gdpr) and [CCPA](https://support.wix.com/en/article/preparing-your-wix-site-for-ccpa) regulations and lets your users ",
                "control their information. The site owner sets up the site consent policy and cookie consent banners in ",
                "the site's [Privacy Center](https://www.wix.com/my-account/site-selector/?buttonText=Open%20Privacy%20Center&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcookie-consent-settings-app?referralInfo=corvid-docs).",
                "",
                "> **Notes:**",
                "> + The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [onReady()]($w.html#onReady) event handler or any element event handler.",
                "> ",
                "> + Cookie consent banners are only available on the published version of your site." ],
            "links": [],
            "examples":
              [ { "title": "Get a user's consent policy",
                  "body":
                    [ "// NOTE: This example uses the new wix-window.consentPolicy.getCurrentConsentPolicy()",
                      "//       function, which replaces wixUsers.getCurrentConsentPolicy().",
                      "//       See the function description for more information, and",
                      "//       line 15 for the deprecated example.",
                      "",
                      "import { consentPolicy } from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "const policyDetails = consentPolicy.getCurrentConsentPolicy();",
                      "const policy = policyDetails.policy;",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wixUsers.getCurrentConsentPolicy() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "const policyDetails = wixUsers.getCurrentConsentPolicy();",
                      "const policy = policyDetails.policy;",
                      "",
                      "/* policyDetails value:",
                      " * {",
                      " *   \"defaultPolicy\" : true,",
                      " *   \"policy\" : {",
                      " *     \"essential\" : true,",
                      " *     \"functional\" : true,",
                      " *     \"analytics\" : true,",
                      " *     \"advertising\" : true,",
                      " *     \"dataToThirdParty\" : true",
                      " *   },",
                      " *   \"createdDate\" : 2020-07-20T12:33:09.775Z",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "login",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "The email address to use when logging the user." },
            { "name": "password",
              "type": "string",
              "doc": "The password to use when logging the user." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the user has been logged in.\nRejected - Error message." },
        "locations":
          [ { "lineno": 835,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-members.authentication.login()](https://www.wix.com/velo/reference/wix-members/authentication/login).",
            "description":
              [ "Logs a user in based on email and password.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.authentication.login()`](wix-members/authentication/login).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { authentication } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.login()`,",
                ">    and replace it with `authentication.login()`.",
                ">    Update your code to work with the new `login()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " The `login()` function returns a Promise that resolves when the user with",
                " the specified email address and password is logged in.",
                "",
                "> **Note:**",
                "> The APIs in `wix-users` are only partially functional when previewing your site.",
                "> View a published version of your site to see their complete functionality." ],
            "links": [],
            "examples":
              [ { "title": "Logs a user in",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.login()",
                      "//       function, which replaces wix-users.login().",
                      "//       See the function description for more information, and",
                      "//       line 20 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "authentication.login(email, password)",
                      "  .then(() => {",
                      "    console.log('Member is logged in');",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.login() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "let email = // email address of user to log in",
                      "let password = // password of user to log in",
                      "",
                      "wixUsers.login(email, password)",
                      "  .then( () => {",
                      "    console.log(\"User is logged in\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Logs a user in using data from input elements",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.login()",
                      "//       function, which replaces wix-users.login().",
                      "//       See the function description for more information, and",
                      "//       line 24 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "$w('#login').onClick(async () => {",
                      "  const email = $w('#email').value;",
                      "  const password = $w('#password').value;",
                      "",
                      "  try {",
                      "    await authentication.login(email, password);",
                      "    console.log('Member is logged in');",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  }",
                      "});",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.login() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "let email = $w(\"#email\").value;",
                      "let password = $w(\"#password\").value;",
                      "",
                      "wixUsers.login(email, password)",
                      "  .then( () => {",
                      "    console.log(\"User is logged in\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    console.log(err);",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "logout",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 477,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-members.authentication.logout()](https://www.wix.com/velo/reference/wix-members/authentication/logout).",
            "description":
              [ "Logs the current user out of the site.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.authentication.logout()`](wix-members/authentication/logout).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { authentication } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.logout()`,",
                ">    and replace it with `authentication.logout()`.",
                ">    Update your code to work with the new `logout()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " The `logout()` function logs the current user out of the site.",
                "",
                "> **Notes:**",
                ">",
                "> + The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [onReady()]($w.html#onReady) event handler or any element event handler." ],
            "links": [],
            "examples":
              [ { "title": "Log out the current user",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.logout()",
                      "//       function, which replaces wix-users.logout().",
                      "//       See the function description for more information, and",
                      "//       line 17 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "authentication.logout();",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.logout() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.logout();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onConsentPolicyChanged",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "wix-users.ConsentPolicyChangedHandler",
              "doc": "The name of the function or\n the function expression to run when the consent policy is changed." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 1150,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-window.consentPolicy.onConsentPolicyChanged()](https://www.wix.com/velo/reference/wix-window/consentPolicy-obj/onconsentpolicychanged).",
            "description":
              [ "Sets the function that runs when a visitor's consent policy was changed using [`setConsentPolicy()`](#setConsentPolicy) or if it was reset using [`resetConsentPolicy()`](#resetConsentPolicy).",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-window.consentPolicy.onConsentPolicyChanged()`](wix-window/consentPolicy-obj/onConsentPolicyChanged).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { consentPolicy } from 'wix-window'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all contact functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.getCurrentConsentPolicy()`,",
                ">    and replace it with `consentPolicy.onConsentPolicyChanged()`.",
                ">    Update your code to work with the new `onConsentPolicyChanged()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " Use the `onConsentPolicyChanged()` function for code you want to run after ",
                " the visitor's current consent policy was changed using [`setConsentPolicy()`](#setConsentPolicy) or if it was reset using [`resetConsentPolicy()`](#resetConsentPolicy). ",
                "",
                " Usually, you want to call the `onConsentPolicyChanged()` function in the **masterpage.js** file in the",
                " code panel so that the `onConsentPolicyChanged()` event handler runs no matter which",
                " page on your site is used to change the policy.",
                "> **Notes:**",
                "> + The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [onReady()]($w.html#onReady) event handler or any element event handler.",
                ">",
                "> + Cookie consent banners are only available on the published version of your site." ],
            "links": [],
            "examples":
              [ { "title": "Run code when a visitor's consent policy changed",
                  "body":
                    [ "// NOTE: This example uses the new wix-window.consentPolicy.onConsentPolicyChanged()",
                      "//       function, which replaces wixUsers.onConsentPolicyChanged().",
                      "//       See the function description for more information, and",
                      "//       line 17 for the deprecated example.",
                      "",
                      "import { consentPolicy } from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "consentPolicy.onConsentPolicyChanged((event) => {",
                      "  const policy = event.policy();",
                      "  console.log(event);",
                      "});",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wixUsers.onConsentPolicyChanged() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.onConsentPolicyChanged((event) => {",
                      "  const policy = event.policy();",
                      "  console.log(event);",
                      "});",
                      "",
                      "/* Full event object:",
                      " * {",
                      " *   \"defaultPolicy\": false,",
                      " *   \"policy\": {",
                      " *     \"functional\": false,",
                      " *     \"analytics\": true,",
                      " *     \"advertising\": false,",
                      " *     \"dataToThirdParty\": false,",
                      " *     \"essential\": true",
                      " *   },",
                      " *   \"createdDate\": \"2021-07-04T23:36:00.000Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onLogin",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "wix-users.LoginHandler",
              "doc": "The name of the function or the function expression to run when a user has logged in." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 587,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-members.authentication.onLogin()](https://www.wix.com/velo/reference/wix-members/authentication/onlogin).",
            "description":
              [ "Sets the function that runs when a user logs in.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.authentication.onLogin()`](wix-members/authentication/onLogin).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { authentication } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.onLogin()`,",
                ">    and replace it with `authentication.onLogin()`.",
                ">    Update your code to work with the new `onLogin()`",
                ">    event properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " Use the `onLogin()` function for code you want to run after a user successfully",
                " logs into your site.",
                "",
                " Usually, you want to call the `onLogin()` function in the **masterpage.js** file in the",
                " code panel so that the `onLogin()` event handler runs no matter which",
                " page on your site a user uses to log in.",
                "> **Notes:**",
                "> + The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [onReady()]($w.html#onReady) event handler or any element event handler." ],
            "links": [],
            "examples":
              [ { "title": "Run code when a user logs in",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.onLogin()",
                      "//       function, which replaces wix-users.onLogin().",
                      "//       See the function description for more information, and",
                      "//       line 17 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "authentication.onLogin((memberInfo) => {",
                      "  const memberId = memberInfo.id;",
                      "  console.log('Member logged in');",
                      "});",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.onLogin() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.onLogin( (user) => {",
                      "  let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "  let isLoggedIn = user.loggedIn; // true",
                      "  let userRole = user.role;       // \"Member\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "promptForgotPassword",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "language",
              "type": "string",
              "doc": "Deprecated.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Rejected - Message that the dialog was canceled, user is already logged in, or any other reason the password reset failed." },
        "locations":
          [ { "lineno": 524,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-members.authentication.promptForgotPassword()](https://www.wix.com/velo/reference/wix-members/authentication/promptforgotpassword).",
            "description":
              [ "Prompts the current site visitor with a password reset.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.authentication.promptForgotPassword()`](wix-members/authentication/promptForgotPassword).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { authentication } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.promptForgotPassword()`,",
                ">    and replace it with `authentication.promptForgotPassword()`.",
                ">    Update your code to work with the new `promptForgotPassword()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " The `promptForgotPassword()` function returns a Promise that resolves when",
                " the user has submitted the forgot password form.",
                "",
                " The `promptForgotPassword()` function cannot be called before the page is ready.",
                "> **Notes:**",
                "> - The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> - The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [`onReady()`]($w.html#onReady) event handler or any element event handler.",
                ">",
                "> - If you `return` or `await` the `promptForgotPassword()` function",
                ">   when calling from `onReady()`, the page will be prevented from loading.",
                ">   To handle the resolved promise, use `.then()` and `.catch()`." ],
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the user with a password reset",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.promptForgotPassword()",
                      "//       function, which replaces wix-users.promptForgotPassword().",
                      "//       See the function description for more information, and",
                      "//       line 20 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "authentication.promptForgotPassword()",
                      "  .then(() => {",
                      "    console.log('Sending \"forgot password\" email');",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.promptForgotPassword() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptForgotPassword();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "promptLogin",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-users.LoginOptions",
              "doc": "The options that determine how the login dialog box appears.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-users.User" ] },
            "doc": "Fulfilled - Information about the newly logged in user.\nRejected - Message that the dialog was canceled, or any other reason the user failed to log in." },
        "locations":
          [ { "lineno": 419,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-members.authentication.promptLogin()](https://www.wix.com/velo/reference/wix-members/authentication/promptlogin).",
            "description":
              [ "Prompts the current site visitor to log in as a site member.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.authentication.promptLogin()`](wix-members/authentication/promptLogin).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { authentication } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.promptLogin()`,",
                ">    and replace it with `authentication.promptLogin()`.",
                ">    Update your code to work with the new `promptLogin()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " The `promptLogin()` function returns a Promise that resolves to the newly",
                " logged in user when the login has completed.",
                "",
                " The `promptLogin()` function cannot be called before the page is ready.",
                "> **Notes:**",
                "> - The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> - The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [`onReady()`]($w.html#onReady) event handler or any element event handler.",
                ">",
                "> - If you `return` or `await` the `promptLogin()` function",
                ">   when calling from `onReady()`, the page will be prevented from loading.",
                ">   To handle the resolved promise, use `.then()` and `.catch()`." ],
            "links":
              [ "[promptForgotPassword( )](#promptForgotPassword)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.promptLogin()",
                      "//       function, which replaces wix-users.promptLogin().",
                      "//       See the function description for more information, and",
                      "//       line 27 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "// Sample options value:",
                      "// {",
                      "//    mode: 'login',",
                      "//    lang: 'en',",
                      "//    modal: true",
                      "// }",
                      "",
                      "authentication.promptLogin(options)",
                      "  .then(() => {",
                      "    console.log('Member is logged in');",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.promptLogin() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptLogin()",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Prompt the current user to login with given options",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.promptLogin()",
                      "//       function, which replaces wix-users.promptLogin().",
                      "//       See the function description for more information, and",
                      "//       line 27 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "// Sample options value:",
                      "// {",
                      "//    mode: 'login',",
                      "//    modal: true",
                      "// }",
                      "",
                      "authentication.promptLogin(options)",
                      "  .then(() => {",
                      "    console.log('Member is logged in');",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.promptLogin() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "// The `modal` option is not yet available to all users.",
                      "let options = {\"mode\": \"login\", \"modal\": true};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "register",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "The email address to use when registering the user as a site member." },
            { "name": "password",
              "type": "string",
              "doc": "The password the newly added site member will use to log in." },
            { "name": "options",
              "type": "wix-users.RegistrationOptions",
              "doc": "Registration options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-users.RegistrationResult" ] },
            "doc": "Fulfilled - When the user has been registered.\nRejected - Error message." },
        "locations":
          [ { "lineno": 756,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-members.authentication.register()](https://www.wix.com/velo/reference/wix-members/authentication/register).",
            "description":
              [ "Registers a new site member.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-members.authentication.register()`](wix-members/authentication/register).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { authentication } from 'wix-members'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.register()`,",
                ">    and replace it with `authentication.register()`.",
                ">    Update your code to work with the new `register()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                " The `register()` function returns a Promise that resolves to a `RegistrationResult`",
                " object when the user is either registered or is pending registration.",
                "",
                " The specified `password` must be between 4 and 100 ASCII characters.",
                "",
                " If Site Members is [configured for automatic approval](https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members),",
                " the `register()` function returns a status of `\"Active\"` and the user",
                " becomes an active member of the site.",
                "",
                " If Site Members is [configured for manual approval](https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members),",
                " the `register()` function returns a status of `\"Pending\"` and the user",
                " becomes a pending member of the site. In order to activate a pending user, the",
                " site owner can [approve the user manually](https://support.wix.com/en/article/approving-a-site-member),",
                " using the Contacts application or you can call the [approveByToken()](wix-users-backend.html#approveByToken)",
                " or [approveByEmail()](wix-users-backend.html#approveByEmail) functions.",
                "",
                "> **Notes:**",
                ">",
                "> - The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> - A notification is displayed",
                ">   and a confirmation email is sent to new members",
                ">   when they sign up using an email address",
                ">   that's already in your site's Contact List.",
                ">   To register a member without displaying the notification,",
                ">   use [`wix-users-backend.register()`](wix-users-backend/register)",
                ">   (this does not suppress the confirmation email).",
                ">",
                "> - When member registration is set to auto approve, calling the `register()`",
                ">   function client-side is equally as secure as calling it from backend code.",
                ">   However, when member approval is set to manual, calling the [backend version",
                ">   of the `register()` function](wix-users-backend.html#register) allows you",
                ">   to construct more secure approval flows." ],
            "links": [],
            "examples":
              [ { "title": "Register a user as a site member with manual approval",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.register()",
                      "//       function, which replaces wix-users.register().",
                      "//       See the function description for more information, and",
                      "//       line 54 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "// Sample options value:",
                      "// {",
                      "//   contactInfo: {",
                      "//     firstName: 'Juan',",
                      "//     lastName: 'Doe',",
                      "//     picture: 'https://static.parastorage.com/unpkg-semver/communities-blog-statics/assets/wix-logo.png',",
                      "//     emails: [",
                      "//       'juan.doe.at.work@example.com',",
                      "//       'juan.doe.at.home@example.com'",
                      "//     ],",
                      "//     phones: [",
                      "//       '978-555-5555',",
                      "//       '+1 (413) 555-5555'",
                      "//     ],",
                      "//     labels: [",
                      "//       'custom.emea-region'",
                      "//     ]",
                      "//   },",
                      "//   privacyStatus: \"PRIVATE\"",
                      "// }",
                      "",
                      "authentication.register(email, password, options)",
                      "  .then((registrationResult) => {",
                      "    const status = registrationResult.status;",
                      "",
                      "    if (status === \"Pending\") {",
                      "      // When the site is configured for manual approval,",
                      "      // status is \"Pending\" and approvalToken is returned.",
                      "      const approvalToken = registrationResult.approvalToken;",
                      "      console.log('Member registered and waiting for approval:', registrationResult);",
                      "    } else {",
                      "      // When the site is configured for automatic approval,",
                      "      // status is \"Active\" and the member is approved and logged in.",
                      "      // To prevent logging in the member automatically,",
                      "      // use the backendend function: wix-members-backend.authentication.register()",
                      "      console.log('Member registered and logged in:', registrationResult);",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.register() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "",
                      "wixUsers.register(email, password)",
                      "  .then( (result) => {",
                      "    let status = result.status; // \"Pending\"",
                      "    let approvalToken = result.approvalToken;",
                      "    let user = result.user;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Register a user as a site member with auto approval",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.register()",
                      "//       function, which replaces wix-users.register().",
                      "//       See the function description for more information, and",
                      "//       line 54 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "// Sample options value:",
                      "// {",
                      "//   contactInfo: {",
                      "//     firstName: 'Juan',",
                      "//     lastName: 'Doe',",
                      "//     picture: 'https://static.parastorage.com/unpkg-semver/communities-blog-statics/assets/wix-logo.png',",
                      "//     emails: [",
                      "//       'juan.doe.at.work@example.com',",
                      "//       'juan.doe.at.home@example.com'",
                      "//     ],",
                      "//     phones: [",
                      "//       '978-555-5555',",
                      "//       '+1 (413) 555-5555'",
                      "//     ],",
                      "//     labels: [",
                      "//       'custom.emea-region'",
                      "//     ]",
                      "//   },",
                      "//   privacyStatus: \"PRIVATE\"",
                      "// }",
                      "",
                      "authentication.register(email, password, options)",
                      "  .then((registrationResult) => {",
                      "    const status = registrationResult.status;",
                      "",
                      "    if (status === \"Pending\") {",
                      "      // When the site is configured for manual approval,",
                      "      // status is \"Pending\" and approvalToken is returned.",
                      "      const approvalToken = registrationResult.approvalToken;",
                      "      console.log('Member registered and waiting for approval:', registrationResult);",
                      "    } else {",
                      "      // When the site is configured for automatic approval,",
                      "      // status is \"Active\" and the member is approved and logged in.",
                      "      // To prevent logging in the member automatically,",
                      "      // use the backendend function: wix-members-backend.authentication.register()",
                      "      console.log('Member registered and logged in:', registrationResult);",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "",
                      "wixUsers.register(email, password)",
                      "  .then( (result) => {",
                      "    let status = result.status; // \"Active\"",
                      "    let user = result.user;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Register a user as a site member with registration options",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.register()",
                      "//       function, which replaces wix-users.register().",
                      "//       See the function description for more information, and",
                      "//       line 54 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "// Sample options value:",
                      "// {",
                      "//   contactInfo: {",
                      "//     firstName: 'Juan',",
                      "//     lastName: 'Doe',",
                      "//     picture: 'https://static.parastorage.com/unpkg-semver/communities-blog-statics/assets/wix-logo.png',",
                      "//     emails: [",
                      "//       'juan.doe.at.work@example.com',",
                      "//       'juan.doe.at.home@example.com'",
                      "//     ],",
                      "//     phones: [",
                      "//       '978-555-5555',",
                      "//       '+1 (413) 555-5555'",
                      "//     ],",
                      "//     labels: [",
                      "//       'custom.emea-region'",
                      "//     ]",
                      "//   },",
                      "//   privacyStatus: \"PRIVATE\"",
                      "// }",
                      "",
                      "authentication.register(email, password, options)",
                      "  .then((registrationResult) => {",
                      "    const status = registrationResult.status;",
                      "",
                      "    if (status === \"Pending\") {",
                      "      // When the site is configured for manual approval,",
                      "      // status is \"Pending\" and approvalToken is returned.",
                      "      const approvalToken = registrationResult.approvalToken;",
                      "      console.log('Member registered and waiting for approval:', registrationResult);",
                      "    } else {",
                      "      // When the site is configured for automatic approval,",
                      "      // status is \"Active\" and the member is approved and logged in.",
                      "      // To prevent logging in the member automatically,",
                      "      // use the backendend function: wix-members-backend.authentication.register()",
                      "      console.log('Member registered and logged in:', registrationResult);",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let email = // the user's email addresses",
                      "let password = // the user's password",
                      "let firstName = // the user's first name",
                      "let lastName = // the user's last name",
                      "let phone =  // the user's phone number",
                      "",
                      "wixUsers.register(email, password, {",
                      "    contactInfo: {",
                      "        \"firstName\": firstName,",
                      "        \"lastName\": lastName,",
                      "        \"phones\": [phone]",
                      "    }",
                      "  } )",
                      "  .then( (result) => {",
                      "    let resultStatus = result.status;",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "resetConsentPolicy",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the reset is complete.\nRejected - Error message." },
        "locations":
          [ { "lineno": 1014,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-window.consentPolicy.resetConsentPolicy()](https://www.wix.com/velo/reference/wix-window/consentPolicy-obj/resetconsentpolicy).",
            "description":
              [ "Removes the current policy from the visitor's browser and resets the visitor's",
                "consent policy to the default policy for the site.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-window.consentPolicy.resetConsentPolicy()`](wix-window/consentPolicy-obj/resetConsentPolicy).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { consentPolicy } from 'wix-window'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all contact functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.resetConsentPolicy()`,",
                ">    and replace it with `consentPolicy.resetConsentPolicy()`.",
                ">    Update your code to work with the new `resetConsentPolicy()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                "The `resetConsentPolicy()` function returns a Promise that resolves when the policy is reset.",
                "",
                "The consent policy helps you comply with [GDPR](https://support.wix.com/en/article/preparing-your-wix-site-for-the-gdpr) and [CCPA](https://support.wix.com/en/article/preparing-your-wix-site-for-ccpa) regulations and lets your visitors",
                "control their information. The site owner sets up the site consent policy and cookie consent banners in ",
                "the site's [Privacy Center](https://www.wix.com/my-account/site-selector/?buttonText=Open%20Privacy%20Center&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcookie-consent-settings-app?referralInfo=corvid-docs).",
                "",
                "> **Notes:**",
                "> + The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [onReady()]($w.html#onReady) event handler or any element event handler.",
                "> ",
                "> + Cookie consent banners are only available on the published version of your site." ],
            "links": [],
            "examples":
              [ { "title": "Reset a visitor's consent policy",
                  "body":
                    [ "// NOTE: This example uses the new wix-window.consentPolicy.resetConsentPolicy()",
                      "//       function, which replaces wixUsers.resetConsentPolicy().",
                      "//       See the function description for more information, and",
                      "//       line 21 for the deprecated example.",
                      "",
                      "import { consentPolicy } from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "consentPolicy.resetConsentPolicy()",
                      "  .then((policy) => {",
                      "    console.log(\"The policy is now set to the default site policy.\");",
                      "    return policy;",
                      "  } )",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wixUsers.resetConsentPolicy() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.resetConsentPolicy()",
                      "  .then((policy) => {",
                      "    console.log(\"The policy is now set to the default site policy.\");",
                      "  } )",
                      "  .catch((error) => {",
                      "    return {",
                      "      reset: false,",
                      "      reason: error",
                      "    };",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setConsentPolicy",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "policy",
              "type": "wix-users.Policy",
              "doc": "An object representing the cookies of the visitor's consent policy." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-users.PolicyDetails" ] },
            "doc": "Fulfilled - All the details of the visitor's consent policy, including if the the current policy is the default site policy and the policy's allowed cookies.\nRejected - Error message." },
        "locations":
          [ { "lineno": 1071,
              "filename": "users.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-window.consentPolicy.setConsentPolicy()](https://www.wix.com/velo/reference/wix-window/consentPolicy-obj/setconsentpolicy).",
            "description":
              [ "Sets the current visitor's consent policy regarding allowed cookies and data transfer ",
                " to 3rd parties, such as for GDPR or CCPA purposes.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-window.consentPolicy.setConsentPolicy()`](wix-window/consentPolicy-obj/setConsentPolicy).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { consentPolicy } from 'wix-window'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all contact functions that use `wixUsers`,",
                ">    remove the original `import wixUsers` statement.",
                ">",
                "> 3. Look for any code that uses `wixUsers.setConsentPolicy()`,",
                ">    and replace it with `consentPolicy.setConsentPolicy()`.",
                ">    Update your code to work with the new `setConsentPolicy()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected.",
                "",
                "The `setConsentPolicy()` function returns a Promise that resolves to the",
                "consent policy details of the visitor.",
                "",
                "You can use the [`onConsentPolicyChanged()`](#onConsentPolicyChanged) event to listen for ",
                "changes made when a visitor changes their consent policy with `setConsentPolicy()`. Handle ",
                "the policy change accordingly in the event handler's [ConsentPolicyChangedHandler callback function](#ConsentPolicyChangedHandler). ",
                "Changes to the consent policy take affect after the page is refreshed.  ",
                "",
                "The consent policy helps you comply with [GDPR](https://support.wix.com/en/article/preparing-your-wix-site-for-the-gdpr) and [CCPA](https://support.wix.com/en/article/preparing-your-wix-site-for-ccpa) regulations and lets your users ",
                "control their information. You set up the site consent policy and cookie consent banner in ",
                "the site's [Privacy Center](https://www.wix.com/my-account/site-selector/?buttonText=Open%20Privacy%20Center&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcookie-consent-settings-app?referralInfo=corvid-docs).",
                " ",
                "> **Notes:**",
                "> + The APIs in `wix-users` are only partially functional when previewing your site.",
                ">   View a published version of your site to see their complete functionality.",
                ">",
                "> + The APIs in `wix-users` can only be used once the page has loaded. Therefore,",
                ">   you must use them in code that is contained in or is called from the",
                ">   [onReady()]($w.html#onReady) event handler or any element event handler.",
                "> ",
                "> + Cookie consent banners are only available on the published version of your site." ],
            "links": [],
            "examples":
              [ { "title": "Set a visitor's consent policy",
                  "body":
                    [ "// NOTE: This example uses the new wix-window.consentPolicy.setConsentPolicy()",
                      "//       function, which replaces wixUsers.setConsentPolicy().",
                      "//       See the function description for more information, and",
                      "//       line 29 for the deprecated example.",
                      "",
                      "import { consentPolicy } from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "const myPolicy = {",
                      "\t\tessential: $w('#essentialCheckbox').checked,",
                      "\t\tanalytics: $w('#analyticsCheckbox').checked,",
                      "\t\tfunctional: $w('#functionalCheckbox').checked,",
                      "\t\tadvertising: $w('#advertisingCheckbox').checked,",
                      "\t\tdataToThirdParty: $w('#dataToThirdPartyCheckbox').checked",
                      "};",
                      "",
                      "consentPolicy.setConsentPolicy(myPolicy)",
                      "\t.then((policyDetails) => {",
                      "\t\tconst newPolicy = policyDetails.policy;",
                      "\t\treturn policyDetails;",
                      "\t})",
                      "\t.catch((error) => {",
                      "\t\tconsole.error(error);",
                      "\t});",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wixUsers.setConsentPolicy() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "$w.onReady(function () {",
                      "\tconst myPolicy = {",
                      "\t\t\tessential: true,",
                      "\t\t\tanalytics: false,",
                      "\t\t\tfunctional: false,",
                      "\t\t\tadvertising: false,",
                      "\t\t\tdataToThirdParty: false",
                      "\t};",
                      "",
                      "\twixUsers.setConsentPolicy(myPolicy)",
                      "\t\t.then( (policyDetails) => {",
                      "\t\t\tconst matchesSitePolicy = policyDetails.defaultPolicy;",
                      "\t\t} )",
                      "\t\t.catch( (error) => {",
                      "\t\t  return {set: false, reason: error};",
                      "\t\t});",
                      "});",
                      "",
                      "/* policyDetails value:",
                      " * {",
                      " *   \"defaultPolicy\" : false,",
                      " *   \"policy\" : {",
                      " *     \"essential\" : true,",
                      " *     \"functional\" : false,",
                      " *     \"analytics\" : false,",
                      " *     \"advertising\" : false,",
                      " *     \"dataToThirdParty\" : false",
                      " *   },",
                      " *   \"createdDate\" : 2020-12-20T12:33:09.775Z",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks":
    [ { "name": "ConsentPolicyChangedHandler",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "event",
              "type": "wix-users.ConsentPolicyChangedEvent",
              "doc": "The event that occurred when the consent policy changed." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 1135,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Function that runs when a visitor's consent policy was changed using [`setConsentPolicy()`](#setConsentPolicy).",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "LoginHandler",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "user",
              "type": "wix-users.User",
              "doc": "The user that has logged in." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 581,
              "filename": "users.js" } ],
        "docs":
          { "summary": "Function that runs when a user has logged in.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "messages":
    [ { "name": "ConsentPolicyChangedEvent",
        "locations":
          [ { "lineno": 1142,
              "filename": "users.js" } ],
        "docs":
          { "summary": "The event that occurred when the consent policy changed.",
            "links":
              [ "[onConsentPolicyChanged( )](#onConsentPolicyChanged)" ],
            "examples":
              [ { "title": "Run code when a a visitor's consent policy changed",
                  "body":
                    [ "// NOTE: This example uses the new wix-window.consentPolicy.onConsentPolicyChanged()",
                      "//       function, which replaces wixUsers.onConsentPolicyChanged().",
                      "//       See the function description for more information, and",
                      "//       line 17 for the deprecated example.",
                      "",
                      "import { consentPolicy } from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "consentPolicy.onConsentPolicyChanged((event) => {",
                      "  const policy = event.policy();",
                      "  console.log(event);",
                      "});",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wixUsers.onConsentPolicyChanged() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.onConsentPolicyChanged((event) => {",
                      "  const policy = event.policy();",
                      "  console.log(event);",
                      "});",
                      "",
                      "/* Full event object:",
                      " * {",
                      " *   \"defaultPolicy\": false,",
                      " *   \"policy\": {",
                      " *     \"functional\": false,",
                      " *     \"analytics\": true,",
                      " *     \"advertising\": false,",
                      " *     \"dataToThirdParty\": false,",
                      " *     \"essential\": true",
                      " *   },",
                      " *   \"createdDate\": \"2021-07-04T23:36:00.000Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members": [],
        "extra":
          {  },
        "labels": [] },
      { "name": "LoginOptions",
        "locations":
          [ { "lineno": 409,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object used by the `promptLogin()` function to determine how the login dialog box appears.",
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "// NOTE: This example uses the new wix-members.authentication.promptLogin()",
                      "//       function, which replaces wix-users.promptLogin().",
                      "//       See the function description for more information, and",
                      "//       line 27 for the deprecated example.",
                      "",
                      "import { authentication } from 'wix-members';",
                      "",
                      "// ...",
                      "",
                      "// Sample options value:",
                      "// {",
                      "//    mode: 'login',",
                      "//    modal: true",
                      "// }",
                      "",
                      "authentication.promptLogin(options)",
                      "  .then(() => {",
                      "    console.log('Member is logged in');",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wix-users.promptLogin() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "// The `modal` option is not yet available to all users.",
                      "let options = {\"mode\": \"login\", \"modal\": true};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "mode",
              "type": "string",
              "doc": "What type of login experience to present: `\"login\"` or `\"signup\"`. Defaults to the option chosen in the Member Signup Settings panel in the Editor.",
              "optional": true },
            { "name": "lang",
              "type": "string",
              "doc": "Deprecated.",
              "optional": true },
            { "name": "modal",
              "type": "boolean",
              "doc": "Whether the login form should be modal (`true`) or full screen (`false`). Defaults to `false` if the property doesn't exist.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Policy",
        "locations":
          [ { "lineno": 1219,
              "filename": "users.js" } ],
        "docs":
          { "summary": "The current visitor's  consent policy settings.",
            "description":
              [ "An object containing the consent policy cookie settings, by type, of the visitor ",
                " currently viewing the site." ],
            "links": [],
            "examples":
              [ { "title": "Get the current visitor's consent policy",
                  "body":
                    [ "// NOTE: This example uses the new wix-window.consentPolicy.getCurrentConsentPolicy()",
                      "//       function, which replaces wixUsers.getCurrentConsentPolicy().",
                      "//       See the function description for more information, and",
                      "//       line 15 for the deprecated example.",
                      "",
                      "import { consentPolicy } from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "const policyDetails = consentPolicy.getCurrentConsentPolicy();",
                      "const policy = policyDetails.policy;",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wixUsers.getCurrentConsentPolicy() function.",
                      "",
                      "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "const policyDetails = wixUsers.getCurrentConsentPolicy();",
                      "const policy = policyDetails.policy;",
                      "",
                      "/* policyDetails value:",
                      " * {",
                      " *   \"defaultPolicy\" : true,",
                      " *   \"policy\" : {",
                      " *     \"essential\" : true,",
                      " *     \"functional\" : true,",
                      " *     \"analytics\" : true,",
                      " *     \"advertising\" : true,",
                      " *     \"dataToThirdParty\" : true",
                      " *   },",
                      " *   \"createdDate\" : 2020-07-20T12:33:09.775Z",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "essential",
              "type": "boolean",
              "doc": "Consent for mandatory cookies for Wix websites, such as for security cookies. Wix places these cookies on your device and these cookies do not require visitor consent. Always `true`." },
            { "name": "functional",
              "type": "boolean",
              "doc": "Consent for cookies placed on the visitor's device that \"remember\" visitor settings to improve visitor experience. For example, an indication that the visitor dismissed a popup. The default is `true`." },
            { "name": "analytics",
              "type": "boolean",
              "doc": "Consent for cookies used for analytics, such as Wix analytics, Google Analytics, Yandex Metrica, and so on. The default is `true`." },
            { "name": "advertising",
              "type": "boolean",
              "doc": "Consent for cookies used for advertising purposes. This includes 3rd-party scripts and pixels that may potentially place advertising cookies on the device (such as Twitter page view and Facebook Pixel). The default is `true`." },
            { "name": "dataToThirdParty",
              "type": "boolean",
              "doc": "Consent for a visitor's personal data to be transferred to a 3rd party (such as Google Analytics, Facebook Pixel, and FullStory). The default is `true`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PolicyDetails",
        "locations":
          [ { "lineno": 1207,
              "filename": "users.js" } ],
        "docs":
          { "summary": "The complete details of the current user's consent policy.",
            "description":
              [ "An object containing all the details about the consent policy of the visitor ",
                " currently viewing the site. This is returned in the Promise of the `setConsentPolicy()` function." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "defaultPolicy",
              "type": "boolean",
              "doc": "Whether the policy is the default consent policy set by the site owner. If `true`, either the user has not set a policy or the site owner has reset the policy." },
            { "name": "policy",
              "type": "wix-users.Policy",
              "doc": "An object representing the visitor's current consent policy." },
            { "name": "createdDate",
              "type": "Date",
              "doc": "If a cookie exists in the browser defining the current consent policy, the date the policy was set. Otherwise, undefined.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegistrationOptions",
        "locations":
          [ { "lineno": 729,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object that contains information about a site registration.",
            "links":
              [ "[register](#register)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactInfo",
              "type": "wix-crm.ContactInfo",
              "doc": "Contact information.",
              "optional": true },
            { "name": "privacyStatus",
              "type": "string",
              "doc": "Sets the [privacy status](https://support.wix.com/en/article/member-privacy-settings-for-groups) of a new member upon registration. \nOne of: \n\n + `\"PUBLIC\"`: Sets the new member status to public. A member whose status is public is a member of the site's community.\n + `\"PRIVATE\"`: Sets the new member status to private. A member whose status is private is not a member of the site's community. The default is set to private.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegistrationResult",
        "locations":
          [ { "lineno": 743,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object that contains information about the results of a site registration.",
            "links":
              [ "[register](#register)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "status",
              "type": "string",
              "doc": "Registration status. Either \"Pending\" or \"Active\"." },
            { "name": "approvalToken",
              "type": "string",
              "doc": "A token for approving the user as\n a site member using the [approveByToken()](wix-users-backend.html#approveByToken)\n function. The token is safe to pass via email or from client-side code to\n backend code. The token is only available when `status` is \"Pending\".",
              "optional": true },
            { "name": "user",
              "type": "wix-users.User",
              "doc": "The user that has been registered." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TriggeredEmailOptions",
        "locations":
          [ { "lineno": 640,
              "filename": "users.js" } ],
        "docs":
          { "summary": "An object used when sending a Triggered Email.",
            "links":
              [ "[emailUser( )](#emailUser)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "variables",
              "type": "Object",
              "doc": "An object with `key:value` pairs where each\n `key` is a variable in the email template created in Triggered Emails and its\n corresponding `value` is the value to insert into the template in place of\n variable. The values must be strings." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  },
  "menuSections": "APIs",
  "relatedContent":
    [ { "icon": "article",
        "text": "Sending a Triggered Email to Members",
        "url": "https://support.wix.com/en/article/wix-code-tutorial-sending-a-triggered-email-to-members" },
      { "icon": "article",
        "text": "Building Your Own Members Area",
        "url": "https://support.wix.com/en/article/wix-code-tutorial-building-your-own-members-area" },
      { "icon": "article",
        "text": "Creating a Custom Registration Form with Code",
        "url": "https://support.wix.com/en/article/wix-code-tutorial-creating-a-custom-registration-form-with-code" },
      { "icon": "example",
        "text": "Members Area",
        "url": "https://www.wix.com/velo/example/members-area" } ],
  "FAQs":
    [ { "title": "What's the difference between wix-users and wix-crm?",
        "markdown": "The Users API contains functionality for working with users who are logged-in members. The CRM API contains functionality for working with your site's contacts. Note that all members are also contacts, but contacts are not necessarily members." },
      { "title": "How do I create a custom member registration form?",
        "markdown": "Follow [this tutorial](https://support.wix.com/en/article/wix-code-tutorial-creating-a-custom-registration-form-with-code) to create a custom member registration form." },
      { "title": "How do I send an email to a user who is not the currently logged-in user?",
        "markdown": "Using the [`emailUser()`](https://www.wix.com/velo/reference/wix-users.html#emailUser) function of [`wix-users`](https://www.wix.com/velo/reference/wix-users.html) you can only send emails to the currently logged-in user. However, from the backend, using the [`emailUser()`](https://www.wix.com/velo/reference/wix-users-backend.html#emailUser) function of [`wix-users-backend`](https://www.wix.com/velo/reference/wix-users-backend.html) you can send emails to any site member." },
      { "title": "How can I get the current user's name?",
        "markdown": "Use the [`currentUser`](https://www.wix.com/velo/reference/wix-users.html#currentUser) property to get the current user's `id`. Then query the Members/PrivateMembersData collection for the item with that `_id`.\n\n```javascript\n\nwixData.query(\"Members/PrivateMembersData\") \\\n  .eq(\"_id\", wixUsers.currentUser.id) \\\n  .find() \\\n  .then( (results) => { \\\n    lastName = results.items[0].lastName; \\\n  } );\n\n``` " },
      { "title": "Why is the wix-users API not functioning properly when I test my code in preview?",
        "markdown": "The wix-users API is only partially functional when previewing your site. You need to view a published version of your site to see its full functionality." } ] }