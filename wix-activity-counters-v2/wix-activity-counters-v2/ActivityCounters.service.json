{
  "name": "ActivityCounters",
  "memberOf": "wix-activity-counters-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-activity-counters.v2-activity_counter",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "getActivityCounters",
      "params": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member to retrieve activity counters for.",
          "required": true
        }
      ],
      "requiredFields": [
        "memberId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-activity-counters-v2.ActivityCounters.GetActivityCountersResponse"
                }
              ]
            }
          }
        ],
        "doc": "Retrieved activity counter.\n"
      },
      "docs": {
        "summary": "Retrieves activity counters.",
        "description": [],
        "examples": [
          {
            "title": "getActivityCounters example",
            "body": [
              "import { activityCounters } from 'wix-activity-counters.v2';",
              "  ",
              " async function getActivityCounters(memberId) {",
              "   try {",
              "     const result = await activityCounters.getActivityCounters(memberId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getActivityCounters"
    },
    {
      "name": "queryActivityCounters",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-activity-counters-v2.ActivityCounters.ActivityCountersQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns up to 100 activity counters for the provided filter and paging.",
        "description": [
          "",
          "Service will return only counters that are marked as public, or private counters from apps created by the requesting third party.",
          "",
          "Supported fields for filtering:",
          "- memberId",
          "",
          "Supported operations:",
          "Comparison:",
          "- $eq",
          "- $ne",
          "- $in",
          "Logical:",
          "- $and",
          "- $not",
          "- $or",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`memberId`|[`eq()`](wix-activity-counters-v2.ActivityCounters.ActivityCountersQueryBuilder#eq),[`ne()`](wix-activity-counters-v2.ActivityCounters.ActivityCountersQueryBuilder#ne),[`in()`](wix-activity-counters-v2.ActivityCounters.ActivityCountersQueryBuilder#in)|"
        ],
        "examples": [
          {
            "title": "queryActivityCounters example",
            "body": [
              "import { activityCounters } from 'wix-activity-counters.v2';",
              "  ",
              " async function queryActivityCounters() {",
              "   const { items } = activityCounters.queryActivityCounters().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryActivityCounters"
    },
    {
      "name": "setActivityCounters",
      "params": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member to upsert an activity counter for.",
          "required": true
        },
        {
          "name": "counter",
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.Counter"
            }
          ],
          "doc": "Details of the counter to be set.",
          "required": true
        }
      ],
      "requiredFields": [
        "counter",
        "memberId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-activity-counters-v2.ActivityCounters.SetActivityCountersResponse"
                }
              ]
            }
          }
        ],
        "doc": "Upserted activity counter.\n"
      },
      "docs": {
        "summary": "Sets activity counters for a member.",
        "description": [
          "If a counter doesn't exist, it's created.\n\nCounters are set under a custom key, which is an ID for the counter, and is unique per app."
        ],
        "examples": [
          {
            "title": "setActivityCounters example",
            "body": [
              "import { activityCounters } from 'wix-activity-counters.v2';",
              "  ",
              " async function setActivityCounters(memberId, counter) {",
              "   try {",
              "     const result = await activityCounters.setActivityCounters(memberId, counter);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "setActivityCounters"
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ActivityCounter",
      "members": [
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App ID."
        },
        {
          "name": "counters",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-activity-counters-v2.ActivityCounters.Counter"
                  }
                ]
              }
            }
          ],
          "doc": "Counters for this member and this app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Counter",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Count of activity."
        },
        {
          "name": "key",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Key of the counter. Must be unique within a given app."
        },
        {
          "name": "public",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether count is available to all (if `public` is false, the counter is only available to the data owner; the site member, or the third party app that created the counter)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "extendedFieldsUpdatedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFieldsUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetActivityCountersRequest",
      "members": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member to retrieve activity counters for."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetActivityCountersResponse",
      "members": [
        {
          "name": "activityCounters",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-activity-counters-v2.ActivityCounters.ActivityCounter"
                  }
                ]
              }
            }
          ],
          "doc": "Information about a member's activity counters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IncrementActivityCountersRequest",
      "members": [
        {
          "name": "counter",
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.Counter"
            }
          ],
          "doc": "Site member ID whose counter will be increment."
        },
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IncrementActivityCountersResponse",
      "members": [
        {
          "name": "activityCounter",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.ActivityCounter"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "A filter object."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.Paging"
            }
          ],
          "doc": "Limit number of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryActivityCountersRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.Query"
            }
          ],
          "doc": "Information about the activity counters to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryActivityCountersResponse",
      "members": [
        {
          "name": "activityCounters",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-activity-counters-v2.ActivityCounters.ActivityCounter"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved activity counters."
        },
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.PagingMetadata"
            }
          ],
          "doc": "Retrieved activity counters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SetActivityCountersRequest",
      "members": [
        {
          "name": "counter",
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.Counter"
            }
          ],
          "doc": "Site member ID whose counter will be set."
        },
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the member to count activities for."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SetActivityCountersResponse",
      "members": [
        {
          "name": "activityCounter",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-activity-counters-v2.ActivityCounters.ActivityCounter"
            }
          ],
          "doc": "Information about a member's activity counter."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
