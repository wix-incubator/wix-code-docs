{ "name": "WixSearchFilterBuilder",
  "memberOf": "wix-search",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 33,
      "filename": "filterBuilder.js" },
  "docs":
    { "summary": "Contains functionality for creating filters to use in a site search.",
      "description":
        [ "The `WixSearchFilterBuilder` functions enable you to create filters which can be used to refine search results. Specifically,",
          " you need `WixSearchFilterBuilders` to create compound filters for filtering a search with",
          " the `and()`, `or()`, and `not()` functions.",
          "",
          " You do not need `WixSearchFilterBuilders` for applying most filtering functions to a search. Instead you can",
          " chain [`WixSearchBuilder`](wix-search.WixSearchBuilder.html) filtering functions directly to your search.",
          "",
          " The following describes a typical filter builder flow:",
          "",
          "",
          " 1. Create a `WixSearchFilterBuilder` using the [`filter()`](#wix-search.html#filter) function.",
          " 1. Create a `WixSearchFilter` by applying a single `WixSearchFilterBuilder` filter function, such as `eq()` or `gt()`, to the filter builder. You cannot chain more than 1 filtering function to a `WixSearchFilterBuilder`.",
          " 1. You can use `WixSearchFilters` in one of 2 scenarios:",
          "   + Create more filters: Pass one or more `WixSearchFilters` as parameters to an `and()`, `or()`, or `not()` `WixSearchFilterBuilder` function to create a new `WixSearchFilter`. For example, `newFilter = wixSearch.filter().or(filter1, filter2)`. ",
          "   + Refine a search: Pass one or more `WixSearchFilters` as parameters to an `and()`, `or()`, or `not()` `WixSearchBuilder` function to refine a search. For example, `newSearchBuilder = wixSearch.search().or(filter1, filter2)`.",
          "",
          "",
          " **Scenario 1: Create More Filters**",
          "",
          " In the following example we create filters and then join them to create an additional filter.",
          " The final filter contains functionality for searching for",
          " popular forum posts that have either more than 20 likes or more than 100 views.",
          "",
          " ```javascript",
          "import wixSearch from 'wix-search';",
          "",
          "const filterBuilder = wixSearch.filter();",
          "",
          "const gtLikeFilter = filterBuilder.gt(\"likeCount\", 20);",
          "",
          "const gtViewFilter = filterBuilder.gt(\"viewCount\", 100);",
          "",
          "const orFilter = filterBuilder.or(geLikeFilter, gtViewFilter)",
          " ```",
          "",
          " At this point you can use the `orFilter` to either create additional filters or to refine a search.",
          "",
          " **Scenario 2: Refine a Search**",
          "",
          " In the following example we create filters and them pass them to an `or()` function appended to a search.",
          " We run a search for popular forum posts that have either more than 20 likes or more than 100 views:",
          "",
          " ```javascript",
          "import wixSearch from 'wix-search';",
          "",
          "const filterBuilder = wixSearch.filter();",
          "",
          "const gtLikeFilter = filterBuilder.gt(\"likeCount\", 20);",
          "",
          "const gtViewFilter = filterBuilder.gt(\"viewCount\", 100);",
          "",
          "wixSearch.search()",
          " .documentType(\"Forum/Content\")",
          " .or(geLikeFilter, geViewFilter)",
          " .find()",
          "   .then( (results) => {",
          "     console.log(results.documents);",
          "   } );",
          " ```",
          "",
          "Note that only some fields can be filtered. Check which fields can be filtered in the supported schemas for each [`documentType`](wix-search.WixSearchBuilder.html#documentType):",
          "",
          "",
          " - <a href=\"https://support.wix.com/en/article/corvid-wix-blog-schema-for-wix-search\" target=\"_blank\">Blog/Posts schema</a>",
          " - <a href=\"https://support.wix.com/en/article/corvid-wix-bookings-schema-for-wix-search\" target=\"_blank\">Bookings/Services schema</a>",
          " - <a href=\"https://support.wix.com/en/article/corvid-wix-forum-schema-for-wix-search\" target=\"_blank\">Forum/Content schema</a>",
          " - <a href=\"https://support.wix.com/en/article/corvid-wix-stores-schema-for-wix-search\" target=\"_blank\">Stores/Products schema</a>" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "and",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "filters",
              "type": "wix-search.WixSearchFilter",
              "doc": "One or more search filters.",
              "spread": true } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 128,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents that meet the conditions of all of the specified filters.",
            "description":
              [ "The `add()` function joins `WixSearchFilters` with an inclusive `and` condition",
                " and creates another `WixSearchFilter`. A search with an `and()` returns all the documents that match the conditions of all of the filters." ],
            "links": [],
            "examples":
              [ { "title": "Create an `and()` search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const andFilter = wixSearch",
                      "  .filter()",
                      "  .and(myFilter1, myFilter2);" ],
                  "extra":
                    {  } },
                { "title": "Create filters and combine them with an `and()` filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const geLikeFilter = filterBuilder.ge(\"likeCount\", 20);",
                      "",
                      "const geViewFilter = filterBuilder.ge(\"viewCount\", 100);",
                      "",
                      "const andFilter = filterBuilder.and(geLikeFilter, geViewFilter);" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters for searching for popular forum posts with 20 or more likes and 100 or more views." } },
                { "title": "Create multiple search filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const gtJanFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-01-01T00:00:00.000Z\");",
                      "const ltFebFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-02-01T00:00:00.000Z\");",
                      "",
                      "const gtAprilFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-04-01T00:00:00.000Z\");",
                      "const ltMayFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-05-01T00:00:00.000Z\");",
                      "",
                      "const januaryFilter = filterBuilder.and(gtJanFilter, ltFebFilter);",
                      "const aprilFilter = filterBuilder.and(gtAprilFilter, ltMayFilter);",
                      "",
                      "const dateFilter = filterBuilder.or(januaryFilter, aprilFilter)",
                      "",
                      "const viewFilter = filterBuilder.gt(\"viewCount\", 200)",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(dateFilter, viewFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create multiple search filters and combine them to search for forum posts\nwith more than 200 views that were posted either in the month of January or April of 2020." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "eq",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `value`." },
            { "name": "value",
              "type": "*",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 165,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value equals the specified value.",
            "description":
              [ "The `eq()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the value of the specified field equals the specified `value`.",
                "",
                " `eq()` only matches values of the same type. For example, a number value stored",
                " as a String type does not match the same number stored as a Number type.",
                "",
                " Matching strings with `eq()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Create an equals search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const eqFilter = wixSearch",
                      "  .filter()",
                      "  .eq(\"sku\", \"SHO-11-BLA\");" ],
                  "extra":
                    {  } },
                { "title": "Create filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const gtFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-01-01T00:00:00.000Z\");",
                      "",
                      "const hasAllFilter = filterBuilder.hasAll(\"hashTags\", [\"summer\", \"fun\"]);",
                      "",
                      "const eqFilter = filterBuilder.eq(categoryId, \"5df7504fa8a9b30017fc1053\");",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(gtFilter, hasAllFilter, eqFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters that search for forum posts in a specific forum\ncategory, that contain the hashtags \"summer\" and \"fun\", and that were posted/updated on or after January 1, 2020.\nThe filters are joined and chained to a search using an `and()` filter." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "ge",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `value`." },
            { "name": "value",
              "type":
                [ "string",
                  "number",
                  "Date" ],
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 209,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value is greater than or equal to the specified value.",
            "description":
              [ "The `ge()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the value of the specified field is greater than or",
                " equal to the specified `value`.",
                "",
                " `ge()` only matches values of the same type. For example, a number value stored",
                " as a String type does not match the same number stored as a Number type.",
                "",
                " If a field contains a number as a String, that value will be compared",
                " alphabetically and not numerically. Documents that do not have a value for the",
                " specified field are ranked lowest.",
                "",
                " The following types of fields can be compared:",
                "",
                " + Number: Compares numerically.",
                " + Date: Compares JavaScript Date objects.",
                " + String: Compares lexicographically, so `\"text\"` is greater than or equal to `\"Text\"` (because of the 'greater than')." ],
            "links": [],
            "examples":
              [ { "title": "Create a greater than or equals search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const geFilter = wixSearch",
                      "  .filter()",
                      "  .ge(\"viewCount\", 50);" ],
                  "extra":
                    {  } },
                { "title": "Create multiple filters and combine them",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const geLikeFilter = filterBuilder.ge(\"likeCount\", 20);",
                      "",
                      "const geViewFilter = filterBuilder.ge(\"viewCount\", 100);",
                      "",
                      "const andFilter = filterBuilder.and(geLikeFilter, geViewFilter);" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters for searching for popular forum posts with 20 or more likes and 100 or more views." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "gt",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `value`." },
            { "name": "value",
              "type":
                [ "string",
                  "number",
                  "Date" ],
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 240,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value is greater than the specified value.",
            "description":
              [ "The `gt()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the value of the specified field is greater than the specified `value`.",
                "",
                " `gt()` only matches values of the same type. For example, a number value stored",
                " as a String type does not match the same number stored as a Number type.",
                "",
                " If a field contains a number as a String, that value will be compared",
                " alphabetically and not numerically. Documents that do not have a value for the",
                " specified field are ranked lowest.",
                "",
                " The following types of fields can be compared:",
                "",
                " + Number: Compares numerically.",
                " + Date: Compares JavaScript Date objects.",
                " + String: Compares lexicographically, so `\"text\"` is greater than `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Create a greater than search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const gtFilter = wixSearch",
                      "  .filter()",
                      "  .gt(\"viewCount\", 50);" ],
                  "extra":
                    {  } },
                { "title": "Create multiple search filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const gtJanFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-01-01T00:00:00.000Z\");",
                      "const ltFebFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-02-01T00:00:00.000Z\");",
                      "",
                      "const gtAprilFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-04-01T00:00:00.000Z\");",
                      "const ltMayFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-05-01T00:00:00.000Z\");",
                      "",
                      "const januaryFilter = filterBuilder.and(gtJanFilter, ltFebFilter);",
                      "const aprilFilter = filterBuilder.and(gtAprilFilter, ltMayFilter);",
                      "",
                      "const dateFilter = filterBuilder.or(januaryFilter, aprilFilter)",
                      "",
                      "const viewFilter = filterBuilder.gt(\"viewCount\", 200)",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(dateFilter, viewFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create multiple search filters and combine them to search for forum posts\nwith more than 200 views that were posted either in the month of January or April of 2020." } },
                { "title": "Create filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const gtFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-01-01T00:00:00.000Z\");",
                      "",
                      "const hasAllFilter = filterBuilder.hasAll(\"hashTags\", [\"summer\", \"fun\"]);",
                      "",
                      "const eqFilter = filterBuilder.eq(categoryId, \"5df7504fa8a9b30017fc1053\");",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(gtFilter, hasAllFilter, eqFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters that search for forum posts in a specific forum\ncategory, that contain the hashtags \"summer\" and \"fun\", and that were posted/updated on or after January 1, 2020.\nThe filters are joined and chained to a search using an `and()` filter." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasAll",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `values`. The field type must be an array of strings." },
            { "name": "values",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The values to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object representing the refined query." },
        "locations":
          [ { "lineno": 361,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value contains all of the specified values.",
            "description":
              [ "The `hasAll()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the values of the array in the specified field equal all of",
                " the specified values.",
                "",
                " Matching strings with `hasAll()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Create a has all search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const hasAllFilter = wixSearch",
                      "  .filter()",
                      "  .hasAll(\"hashtags\", [\"vacation\", \"summer\", \"fun\"]);" ],
                  "extra":
                    {  } },
                { "title": "Create filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const gtFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-01-01T00:00:00.000Z\");",
                      "",
                      "const hasAllFilter = filterBuilder.hasAll(\"hashTags\", [\"summer\", \"fun\"]);",
                      "",
                      "const eqFilter = filterBuilder.eq(categoryId, \"5df7504fa8a9b30017fc1053\");",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(gtFilter, hasAllFilter, eqFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters that search for forum posts in a specific forum\ncategory, that contain the hashtags \"summer\" and \"fun\", and that were posted/updated on or after January 1, 2020.\nThe filters are joined and chained to a search using an `and()` filter." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasSome",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `values`. The field type must be an array of strings." },
            { "name": "values",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The values to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 339,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field contains any of the specified values.",
            "description":
              [ "The `hasSome()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where any of the values of the array in the specified field equal any of",
                " the specified values.",
                "",
                " Matching strings with `hasSome()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Create a has some search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const hasSomeFilter = wixSearch",
                      "  .filter()",
                      "  .hasSome(\"hashtags\", [\"vacation\", \"summer\", \"fun\"]);" ],
                  "extra":
                    {  } },
                { "title": "Create a has some filter and add a not filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const hasSomeFilter = filterBuilder.hasSome(\"hashTags\", [\"promotion\", \"ad\", \"tip\"]);",
                      "",
                      "const notFilter = filterBuilder.not(hasSomeFilter);" ],
                  "extra":
                    { "description": "This example demonstrates how to create a filter that will search for forum posts that don't contain any of the specified hashtags." } },
                { "title": "Create filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const inFilter = filterBuilder.in(\"owner\", [\"04b11aa6-d0a0-4c7a-a444-f4a5e452840c\", \"21cf071a-cc2f-444f-ad74-5a25db0b1b6a\"]);",
                      "",
                      "const hasSomeFilter = filterBuilder.hasSome(\"hashTags\", [\"summer\", \"fun\", \"vacation\"]);",
                      "",
                      "const neFilter = filterBuilder.ne(categoryId, \"5df7504fa8a9b30017fc1053\");",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(inFilter, hasSomeFilter, neAllFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters that search for forum posts that are not in the specified\ncategory, that were posted by one of the specified owners, and that contain at least one of the specified hashtags.\nThe filters are joined and chained to a search using an `and()` filter." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "in",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `values`. The field must be of type string or number." },
            { "name": "values",
              "type":
                [ { "name": "Array",
                    "typeParams":
                      [ "string" ] },
                  { "name": "Array",
                    "typeParams":
                      [ "number" ] } ],
              "doc": "The values to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilterBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 381,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value equals any of the specified values.",
            "description":
              [ "The `in()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the value of the specified field equals any of",
                " the specified values.",
                "",
                "Matching strings with `in()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Create an `in()` search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const inFilter = wixSearch",
                      "  .filter()",
                      "  .in(\"sku\", [\"B04\", \"B07\", \"B08\"]);" ],
                  "extra":
                    {  } },
                { "title": "Create filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const inFilter = filterBuilder.in(\"owner\", [\"04b11aa6-d0a0-4c7a-a444-f4a5e452840c\", \"21cf071a-cc2f-444f-ad74-5a25db0b1b6a\"]);",
                      "",
                      "const hasSomeFilter = filterBuilder.hasSome(\"hashTags\", [\"summer\", \"fun\", \"vacation\"]);",
                      "",
                      "const neFilter = filterBuilder.ne(categoryId, \"5df7504fa8a9b30017fc1053\");",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(inFilter, hasSomeFilter, neAllFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters that search for forum posts that are not in the specified\ncategory, that were posted by one of the specified owners, and that contain at least one of the specified hashtags.\nThe filters are joined and chained to a search using an `and()` filter." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "le",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `value`." },
            { "name": "value",
              "type":
                [ "string",
                  "number",
                  "Date" ],
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 276,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value is less than or equal to the specified value.",
            "description":
              [ "The `ge()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the value of the specified field is less than or",
                " equal to the specified `value`.",
                "",
                " `le()` only matches values of the same type. For example, a number value stored",
                " as a String type does not match the same number stored as a Number type.",
                "",
                " If a field contains a number as a String, that value will be compared",
                " alphabetically and not numerically. Documents that do not have a value for the",
                " specified field are ranked lowest.",
                "",
                " The following types of fields can be compared:",
                "",
                " + Number: Compares numerically.",
                " + Date: Compares JavaScript Date objects.",
                " + String: Compares lexicographically, so `\"Text\"` is less than or equal to `\"text\"` (because of the 'less than')." ],
            "links": [],
            "examples":
              [ { "title": "Create a less than or equals search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const leFilter = wixSearch",
                      "  .filter()",
                      "  .le(\"viewCount\", 50);" ],
                  "extra":
                    {  } },
                { "title": "Create less than or equals search filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const leCommentFilter = wixSearch",
                      "  .filter()",
                      "  .le(\"totalComments\", 5)",
                      "",
                      "const leViewFilter = wixSearch",
                      "  .filter()",
                      "  .le(\"viewCount\", 20)",
                      "",
                      "const leLikeFilter = wixSearch",
                      "  .filter()",
                      "  .le(\"likeCount\", 3)",
                      "",
                      "",
                      "wixSearch.search()",
                      "  .documentType(\"Forum/Content\")",
                      "  .or(leCommentFilter, leViewFilter, leLikeFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });",
                      "",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to search for unpopular forum posts that have either\na small amount of comments, views, or likes. The filters are joined and chained to a search using an `or()` filtering function." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "lt",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `value`." },
            { "name": "value",
              "type":
                [ "string",
                  "number",
                  "Date" ],
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 308,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value is less than the specified value.",
            "description":
              [ "The `lt()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the value of the specified field is less than the specified `value`.",
                "",
                " `lt()` only matches values of the same type. For example, a number value stored",
                " as a String type does not match the same number stored as a Number type.",
                "",
                " If a field contains a number as a String, that value will be compared",
                " alphabetically and not numerically. Documents that do not have a value for the",
                " specified field are ranked lowest.",
                "",
                " The following types of properties can be compared:",
                "",
                " + Number: Compares numerically.",
                " + Date: Compares JavaScript Date objects.",
                " + String: Compares lexicographically, so `\"Text\"` is less than `\"text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Create a less than search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const ltFilter = wixSearch",
                      "  .filter()",
                      "  .lt(\"viewCount\", 50);" ],
                  "extra":
                    {  } },
                { "title": "Create multiple search filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const gtJanFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-01-01T00:00:00.000Z\");",
                      "const ltFebFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-02-01T00:00:00.000Z\");",
                      "",
                      "const gtAprilFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-04-01T00:00:00.000Z\");",
                      "const ltMayFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-05-01T00:00:00.000Z\");",
                      "",
                      "const januaryFilter = filterBuilder.and(gtJanFilter, ltFebFilter);",
                      "const aprilFilter = filterBuilder.and(gtAprilFilter, ltMayFilter);",
                      "",
                      "const dateFilter = filterBuilder.or(januaryFilter, aprilFilter)",
                      "",
                      "const viewFilter = filterBuilder.gt(\"viewCount\", 200)",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(dateFilter, viewFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create multiple search filters and combine them to search for forum posts\nwith more than 200 views that were posted either in the month of January or April of 2020." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "ne",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "field",
              "type": "string",
              "doc": "The field whose value will be compared with `value`." },
            { "name": "value",
              "type": "*",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 187,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents whose specified field value does not equal the specified value.",
            "description":
              [ "The `ne()` function is chained to a `WixSearchFilterBuilder` to create a `WixSearchFilter`.",
                " You can use the filter to match documents where the value of the specified field does not equal the specified `value`.",
                "",
                " `ne()` only matches values of the same type. For example, a number value stored",
                " as a String type is considered not equal to the same number stored as a Number type.",
                "",
                " Matching strings with `ne()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Create a not equals search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const neFilter = wixSearch",
                      "  .filter()",
                      "  .ne(\"sku\", \"SHO-11-BLA\");" ],
                  "extra":
                    {  } },
                { "title": "Create filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const inFilter = filterBuilder.in(\"owner\", [\"04b11aa6-d0a0-4c7a-a444-f4a5e452840c\", \"21cf071a-cc2f-444f-ad74-5a25db0b1b6a\"]);",
                      "",
                      "const hasSomeFilter = filterBuilder.hasSome(\"hashTags\", [\"summer\", \"fun\", \"vacation\"]);",
                      "",
                      "const neFilter = filterBuilder.ne(categoryId, \"5df7504fa8a9b30017fc1053\");",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(inFilter, hasSomeFilter, neAllFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create filters that search for forum posts that are not in the specified\ncategory, that were posted by one of the specified owners, and that contain at least one of the specified hashtags.\nThe filters are joined and chained to a search using an `and()` filter." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "not",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "filters",
              "type": "wix-search.WixSearchFilter",
              "doc": "One or more filters.",
              "spread": true } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 145,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a search filter for matching documents that do not meet the conditions of all of the specified filters.",
            "description":
              [ "The `not()` function joins `WixSearchFilters` and adds a `not` condition.",
                " A search with a `not()` returns all the documents that don't match **all** of the filters passed to the `not()` function. The",
                "`not()` function first applies an `and` condition between the filter parameters and then negates them." ],
            "links": [],
            "examples":
              [ { "title": "Create a `not()` search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const notFilter = wixSearch",
                      "  .filter()",
                      "  .not(myFilter1, myFilter2);" ],
                  "extra":
                    {  } },
                { "title": "Create a has some filter and add a not filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const hasSomeFilter = filterBuilder.hasSome(\"hashTags\", [\"promotion\", \"ad\", \"tip\"]);",
                      "",
                      "const notFilter = filterBuilder.not(hasSomeFilter);" ],
                  "extra":
                    { "description": "This example demonstrates how to create a filter that will search for forum posts that do not contain any of the specified hashtags." } },
                { "title": "Create filters, create a search, add a not filter, and run it",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const eqStockFilter = wixSearch",
                      "  .filter()",
                      "  .eq(\"inStock\", true)",
                      "",
                      "const eqSaleFilter = wixSearch",
                      "  .filter()",
                      "  .eq(\"onSale\", true)",
                      "",
                      "wixSearch.search()",
                      "  .documentType(\"Stores/Products\")",
                      "  .not(eqStockFilter, eqSaleFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });",
                      "",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to search for store products that are not both on sale and in stock.\nSearch results will exclude only products which return `true` for both `onSale` and `inStock`.\nProducts that are `onSale` but not `inStock` or `inStock` but not `onSale` will be included in the search results." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "or",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "filters",
              "type": "wix-search.WixSearchFilter",
              "doc": "One or more search filters.",
              "spread": true } ],
        "ret":
          { "type": "wix-search.WixSearchFilter",
            "doc": "A `WixSearchFilter` object." },
        "locations":
          [ { "lineno": 111,
              "filename": "filterBuilder.js" } ],
        "docs":
          { "summary": "Creates a filter for matching documents that meet the condition of any of the specified filters.",
            "description":
              [ "The `or()` function joins `WixSearchFilters` with an inclusive `or` condition",
                " and creates another `WixSearchFilter`. A search with an `or()` returns all the documents that match the condition of any of the filters." ],
            "links": [],
            "examples":
              [ { "title": "Create an `or()` search filter",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const orFilter = wixSearch",
                      "  .filter()",
                      "  .or(myFilter1, myFilter2);" ],
                  "extra":
                    {  } },
                { "title": "Create multiple filters and combine them",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const geLikeFilter = filterBuilder.ge(\"likeCount\", 20);",
                      "",
                      "const geViewFilter = filterBuilder.ge(\"viewCount\", 100);",
                      "",
                      "const orFilter = filterBuilder.or(geLikeFilter, geViewFilter);" ],
                  "extra":
                    { "description": "This example demonstrates how to create a filter that will search for popular forum posts with either 20 or more likes or 100 or more views." } },
                { "title": "Create multiple search filters and add them to a search",
                  "body":
                    [ "import wixSearch from 'wix-search';",
                      "",
                      "// ...",
                      "",
                      "const filterBuilder = wixSearch.filter();",
                      "",
                      "const gtJanFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-01-01T00:00:00.000Z\");",
                      "const ltFebFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-02-01T00:00:00.000Z\");",
                      "",
                      "const gtAprilFilter = filterBuilder.gt(\"lastActivityDate\", \"2020-04-01T00:00:00.000Z\");",
                      "const ltMayFilter = filterBuilder.lt(\"lastActivityDate\", \"2020-05-01T00:00:00.000Z\");",
                      "",
                      "const januaryFilter = filterBuilder.and(gtJanFilter, ltFebFilter);",
                      "const aprilFilter = filterBuilder.and(gtAprilFilter, ltMayFilter);",
                      "",
                      "const dateFilter = filterBuilder.or(januaryFilter, aprilFilter)",
                      "",
                      "const viewFilter = filterBuilder.gt(\"viewCount\", 200)",
                      "",
                      "wixSearch.search(phrase)",
                      "  .documentType(\"Forum/Content\")",
                      "  .and(dateFilter, viewFilter)",
                      "  .find()",
                      "  .then( (results) => {",
                      "    if(results.documents.length > 0) {",
                      "      let documents = results.documents;",
                      "    } else {",
                      "      console.log(\"No matching results\");",
                      "    }",
                      "  })",
                      "  .catch( (error) => {",
                      "    console.log(error);",
                      "  });" ],
                  "extra":
                    { "description": "This example demonstrates how to create multiple search filters and combine them to search for forum posts\nwith more than 200 views that were posted either in the month of January or April of 2020." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }