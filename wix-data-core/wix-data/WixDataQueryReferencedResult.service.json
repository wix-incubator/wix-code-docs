{ "name": "WixDataQueryReferencedResult",
  "memberOf": "wix-data",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "multiref.es6" },
  "docs":
    { "summary": "The results of a data reference query, containing the retrieved items.",
      "description":
        [ "When you execute a reference query with the [`queryReferenced()`](wix-data.html#queryReferenced)\r function, it returns a Promise that resolves to a `WixDataQueryReferencedResult`\r object. This object contains the items that match the reference query and\r functions for paging through the query results." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "items",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "Object" ] },
        "locations":
          [ { "lineno": 25,
              "filename": "multiref.es6" } ],
        "docs":
          { "summary": "Returns the items that match the reference query.",
            "description":
              [ "The current page of items retrieved by the reference query.\r\r The page size is 50 items. Navigate through pages of items with the\r [`prev()`](#prev) and [`next()`](#next) functions.\r\r When no items match the reference query, the `items` array is empty." ],
            "links": [],
            "examples":
              [ { "title": "Get the items of a reference query result",
                  "body":
                    [ "let items = results.items;\r",
                      "\r",
                      "/*\r",
                      " * [\r",
                      " *   {\r",
                      " *     \"_id\":          \"1234\",\r",
                      " *     \"_owner\":       \"f45jf8d2-grkj-2opd-4ovk-9rfj4wo5tvj3\",\r",
                      " *     \"_createdDate\": \"2017-05-29T08:35:52.344Z\",\r",
                      " *     \"_updatedDate\": \"2017-05-29T08:35:52.344Z\",\r",
                      " *     \"first_name\":   \"Jane\",\r",
                      " *     \"last_name\":    \"Doe\"\r",
                      " *   },\r",
                      " *   {\r",
                      " *     \"_id\":          \"5678\",\r",
                      " *     \"_owner\":       \"f45jf8d2-grkj-2opd-4ovk-9rfj4wo5tvj3\",\r",
                      " *     \"_createdDate\": \"2017-05-25T12:48:56.572Z\",\r",
                      " *     \"_updatedDate\": \"2017-05-29T07:30:15.869Z\",\r",
                      " *     \"first_name\":   \"John\",\r",
                      " *     \"last_name\":    \"Doe\"\r",
                      " *   }\r",
                      " * ]\r",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Perform a reference query and get the items of the result",
                  "body":
                    [ "import wixData from 'wix-data';\r",
                      "\r",
                      "// ...\r",
                      "\r",
                      "wixData.queryReferenced(\"movies\", \"00001\", \"actors\")\r",
                      "  .then( (results) => {\r",
                      "    if(results.items.length > 0) {\r",
                      "      let items = results.items; // see below\r",
                      "    } else {\r",
                      "      // handle case where no matching items found\r",
                      "    }\r",
                      "  } ) ;\r",
                      "\r",
                      "/* items:\r",
                      " *\r",
                      " * [\r",
                      " *   {\r",
                      " *     \"_id\":          \"1234\",\r",
                      " *     \"_owner\":       \"f45jf8d2-grkj-2opd-4ovk-9rfj4wo5tvj3\",\r",
                      " *     \"_createdDate\": \"2017-05-29T08:35:52.344Z\",\r",
                      " *     \"_updatedDate\": \"2017-05-29T08:35:52.344Z\",\r",
                      " *     \"first_name\":   \"Jane\",\r",
                      " *     \"last_name\":    \"Doe\"\r",
                      " *   },\r",
                      " *   {\r",
                      " *     \"_id\":          \"5678\",\r",
                      " *     \"_owner\":       \"f45jf8d2-grkj-2opd-4ovk-9rfj4wo5tvj3\",\r",
                      " *     \"_createdDate\": \"2017-05-25T12:48:56.572Z\",\r",
                      " *     \"_updatedDate\": \"2017-05-29T07:30:15.869Z\",\r",
                      " *     \"first_name\":   \"John\",\r",
                      " *     \"last_name\":    \"Doe\"\r",
                      " *   }\r",
                      " * ]\r",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalCount",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 48,
              "filename": "multiref.es6" } ],
        "docs":
          { "summary": "Returns the total number of items that match the reference query.",
            "description":
              [ "The `totalCount` returns the total number of items that match the reference query,\r not just the number of items in the current page." ],
            "links": [],
            "examples":
              [ { "title": "Get the total number of items in a reference query result",
                  "body":
                    [ "let resultCount = results.totalCount; // 150" ],
                  "extra":
                    {  } },
                { "title": "Perform a reference query and get the total number of items in the result",
                  "body":
                    [ "import wixData from 'wix-data';\r",
                      "\r",
                      "// ...\r",
                      "\r",
                      "wixData.queryReferenced(\"movies\", \"00001\", \"actors\")\r",
                      "  .then( (results) => {\r",
                      "    let resultCount = results.totalCount; // 150\r",
                      "  } ) ;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hasNext",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are more results." },
        "locations":
          [ { "lineno": 67,
              "filename": "multiref.es6" } ],
        "docs":
          { "summary": "Indicates if the reference query has more results.",
            "links": [],
            "examples":
              [ { "title": "Get whether the reference query result object has more results",
                  "body":
                    [ "let hasNext = results.hasNext(); // true" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasPrev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are previous results." },
        "locations":
          [ { "lineno": 81,
              "filename": "multiref.es6" } ],
        "docs":
          { "summary": "Indicates if the reference query has previous results.",
            "links": [],
            "examples":
              [ { "title": "Get whether the reference query result object has previous results",
                  "body":
                    [ "let hasPrev = results.hasPrev(); // false" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "next",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-data.WixDataQueryReferencedResult" ] },
            "doc": "Fulfilled - A reference query result object with the next page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 95,
              "filename": "multiref.es6" } ],
        "docs":
          { "summary": "Retrieves the next page of reference query results.",
            "description":
              [ "The `next()` function retrieves the next page of reference query results.\r\r The page size is 50 items. Navigate through pages of items with the\r [`prev()`](#prev) and [`next()`](#next) functions.\r\r If items are added or removed between calls to `next()` the values returned\r may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the next page of a query result",
                  "body":
                    [ "oldResults.next()\r",
                      "  .then( (results) => {\r",
                      "    let newResults = results;\r",
                      "    let items = newResults.items;\r",
                      "    let firstItem = items[0];\r",
                      "    let totalCount = newResults.totalCount;\r",
                      "    let hasNext = newResults.hasNext();\r",
                      "    let hasPrev = newResults.hasPrev();\r",
                      "  } )\r",
                      "  .catch( (error) => {\r",
                      "    let errorMsg = error.message;\r",
                      "    let code = error.code;\r",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of reference query results",
                  "body":
                    [ "let results = await wixData.queryReferenced(\"movies\", \"00001\", \"actors\");\r",
                      "\r",
                      "console.log(results.items);\r",
                      "\r",
                      "while(results.hasNext()) {\r",
                      "  console.log(\"---▼ Next Page ▼---\");\r",
                      "  results = await results.next();\r",
                      "  console.log(results.items);\r",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "prev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-data.WixDataQueryReferencedResult" ] },
            "doc": "Fulfilled - A query result object with the previous page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 120,
              "filename": "multiref.es6" } ],
        "docs":
          { "summary": "Retrieves the previous page of reference query results.",
            "description":
              [ "The `prev()` function retrieves the previous page of reference query results.\r\r The page size is 50 items. Navigate through pages of items with the\r [`prev()`](#prev) and [`next()`](#next) functions.\r\r If items are added or removed between calls to `prev()` the values returned\r may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the previous page of a query result",
                  "body":
                    [ "oldResults.next()\r",
                      "  .then( (results) => {\r",
                      "    let newResults = results;\r",
                      "    let items = newResults.items;\r",
                      "    let firstItem = items[0];\r",
                      "    let totalCount = newResults.totalCount;\r",
                      "    let hasNext = newResults.hasNext();\r",
                      "    let hasPrev = newResults.hasPrev();\r",
                      "  } )\r",
                      "  .catch( (error) => {\r",
                      "    let errorMsg = error.message;\r",
                      "    let code = error.code;\r",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }