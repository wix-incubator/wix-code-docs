{ "name": "DashboardInfoIcon",
  "memberOf": "$w",
  "mixes":
    [ "$w.HiddenCollapsedMixin",
      "$w.Element" ],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 1,
      "filename": "DashboardInfoIcon.js" },
  "docs":
    { "summary": "An info icon on a users site.",
      "description":
        [ "> **Important**:" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "tooltip",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 16,
              "filename": "DashboardInfoIcon.js" },
            { "lineno": 30,
              "filename": "DashboardInfoIcon.js" } ],
        "docs":
          { "summary": "Sets or gets the tooltip text content.",
            "description":
              [ "Setting the `tooltip` property defines the text that is displayed when a user hovers on an element's ![tooltip-icon](images/tooltip-icon.png) icon.",
                "Maximum length is 1200 characters." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's tooltip",
                  "body":
                    [ "let myText = $w(\"#myInfoIcon\").tooltip;  // \"This message explains the purpose of a feature.\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's tooltip",
                  "body":
                    [ "$w(\"#myInfoIcon\").tooltip = \"This message explains the purpose of a feature.\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "tooltipLink",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 54,
              "filename": "DashboardInfoIcon.js" },
            { "lineno": 74,
              "filename": "DashboardInfoIcon.js" } ],
        "docs":
          { "summary": "Sets or gets the info icon's link.",
            "links":
              [ "[`tooltipLinkText`](#tooltipLinkText)" ],
            "examples":
              [ { "title": "Get an info icon's link value",
                  "body":
                    [ "let link = $w(\"#myInfoIcon\").link; // \"http://mysite.com\"" ],
                  "extra":
                    {  } },
                { "title": "Set an info icon's value to a string",
                  "body":
                    [ "$w(\"#myInfoIcon\").link = \"https://www.wix.com\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "tooltipLinkText",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 36,
              "filename": "DashboardInfoIcon.js" },
            { "lineno": 48,
              "filename": "DashboardInfoIcon.js" } ],
        "docs":
          { "summary": "Sets or gets the tooltip link text content. Maximum length is 120 characters.",
            "links":
              [ "[`tooltipLink`](#tooltipLink)" ],
            "examples":
              [ { "title": "Get the tooltip link text content",
                  "body":
                    [ "let myText = $w(\"#myInfoIcon\").tooltipLinkText;  // \"Learn more\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onTooltipLinkClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the link within a tooltip is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 80,
              "filename": "DashboardInfoIcon.js" } ],
        "docs":
          { "summary": "dds an event handler that runs when the link within a tooltip is clicked.",
            "description":
              [ "Adds an event handler that runs when the link within a tooltip is clicked.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events).",
                " ",
                "![Properties and Events panel](images/properties_and_events.png \"Properties and Events panel\")",
                "",
                " This will automatically add the required code for the selected element and event:",
                "",
                " ```javascript ",
                "    // ...",
                "     }  ",
                "```" ],
            "links": [],
            "examples":
              [ { "title": "Open an element when the user clicks a link within a tooltip",
                  "body":
                    [ "$w(\"#myInfoIcon\").onTooltipLinkClick(event => {",
                      "    const clickedElement = event.target;",
                      "    });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }