{ "name": "HamburgerMenuContainer",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.ClickableMixin",
      "$w.ContainableMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 54,
      "filename": "HamburgerMenu.js" },
  "docs":
    { "summary": "The main container component inside the Hamburger Menu Overlay contains links to sections\non your site and a close button. It is typically a vertical menu that can hold additional limited content such as...\nNeed more fleshed out info about the container here...",
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "opened",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 114,
              "filename": "HamburgerMenu.js" },
            { "lineno": 125,
              "filename": "HamburgerMenu.js" } ],
        "docs":
          { "summary": "Sets or gets the menu container is currently open.",
            "links": [],
            "examples":
              [ { "title": "Indicates",
                  "body":
                    [ "if($w(\"#hamburgerMenu1\").opened) {",
                      "    $w(\"#hamburgerMenu1\").close();",
                      "  }",
                      "  else {",
                      "    $w(\"#hamburgerMenu1\").open();",
                      "  }  " ],
                  "extra":
                    { "description": "if the menu container is currently open." } },
                { "title": "Indicates",
                  "body":
                    [ "if($w(\"#hamburgerMenu1\").opened) {",
                      "    $w(\"#hamburgerMenu1\").close();",
                      "  }",
                      "  else {",
                      "    $w(\"#hamburgerMenu1\").open();",
                      "  }  " ],
                  "extra":
                    { "description": "if the menu container is currently open." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "close",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] } },
        "locations":
          [ { "lineno": 78,
              "filename": "HamburgerMenu.js" } ],
        "docs":
          { "summary": "Closes the Hamburger Menu container.",
            "description":
              [ "Here is a description." ],
            "links":
              [ "[icon](#icon)," ],
            "examples":
              [ { "title": "Closes",
                  "body":
                    [ "$w(\"#customCloseButton\").onClick(() => {",
                      "\t$w(\"#hamburgerMenu1\").close();",
                      "});",
                      "" ],
                  "extra":
                    { "description": "the hamburger menu container." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onClose",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\nthe function expression to run when the element is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 101,
              "filename": "HamburgerMenu.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the menu container is closed.",
            "description":
              [ "An element receives a `click` event when a user clicks on the element and releases." ],
            "links": [],
            "examples":
              [ { "title": "Adds an event handler that runs when the menu container is closed",
                  "body":
                    [ "$w(\"#hamburgerMenu\").onClose((event) => {",
                      "\tlet targetId = event.target.id; // \"hamburgerMenu\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } },
      { "name": "onOpen",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\nthe function expression to run when the element is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 88,
              "filename": "HamburgerMenu.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the menu container is opened.",
            "description":
              [ "An element receives a `click` event when a user clicks on the element and releases." ],
            "links": [],
            "examples":
              [ { "title": "Adds an event handler that runs when the menu container is opened",
                  "body":
                    [ "$w(\"#hamburgerMenu\").onOpen((event) => {",
                      "\tlet targetId = event.target.id; // \"hamburgerMenu\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } },
      { "name": "open",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] } },
        "locations":
          [ { "lineno": 68,
              "filename": "HamburgerMenu.js" } ],
        "docs":
          { "summary": "Opens the Hamburger Menu container.",
            "description":
              [ "Here is a description." ],
            "links":
              [ "[icon](#icon)," ],
            "examples":
              [ { "title": "Opens the hamburger menu container",
                  "body":
                    [ "$w(\"#customOpenButton\").onClick(() => {",
                      "\t$w(\"#hamburgerMenu1\").open();",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }