{ "name": "HamburgerMenuContainer",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.ClickableMixin",
      "$w.ContainableMixin" ],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "HamburgerMenuContainer.js" },
  "docs":
    { "summary": "The hamburger menu container holds the items of an expanded \n[hamburger menu](https://support.wix.com/en/article/editor-x-using-hamburger-menus).\nIt features a list of menu items that navigate to sections or pages on your site,\na fullscreen overlay, and a button to close the menu.",
      "description":
        [ ">**Note:** This API is not available in Wix Editor.",
          "",
          "The [hamburger menu](https://support.wix.com/en/article/editor-x-using-hamburger-menus) ",
          "is a compact navigational component used to save space on your site.",
          "Represented by an icon and usually positioned in the corner ",
          "of a site, the menu remains hidden until the user clicks on the icon. This activates",
          "the hamburger menu container to expand and reveal the menu items.",
          "",
          "The hamburger menu container consists of a list of links that guide the ",
          "user to pages on your site. It also includes a fullscreen overlay and a close button,",
          "which users can click to collapse the menu back to its hidden state." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "opened",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "lineno": 76,
              "filename": "HamburgerMenuContainer.js" } ],
        "docs":
          { "summary": "Indicates if the hamburger menu container is currently open.",
            "description":
              [ "If `opened` is `true`, the container is visible.",
                "",
                " If `opened` is `false` the container is hidden." ],
            "links": [],
            "examples":
              [ { "title": "Indicates if the menu container is currently open",
                  "body":
                    [ "if($w(\"#myMenuContainer\").opened) {",
                      "    $w(\"#myMenuContainer\").close();",
                      "  }",
                      "  else {",
                      "    $w(\"#myMenuContainer\").open();",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "close",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] } },
        "locations":
          [ { "lineno": 43,
              "filename": "HamburgerMenuContainer.js" } ],
        "docs":
          { "summary": "Closes the hamburger menu container.",
            "description":
              [ "The `close()` function returns a Promise that is resolved when the",
                "hamburger menu's container has finished closing." ],
            "links":
              [ "[open](#open)" ],
            "examples":
              [ { "title": "Closes the hamburger menu container",
                  "body":
                    [ "$w(\"#myMenuContainer\").close();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onClose",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\nthe function expression to run when the element is closed." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 65,
              "filename": "HamburgerMenuContainer.js" } ],
        "docs":
          { "summary": "Adds an event handler that is triggered when the menu container is closed.",
            "description":
              [ "Adds an event handler that is triggered when the hamburger menu container is closed." ],
            "links": [],
            "examples":
              [ { "title": "Adds an event handler that runs when the menu container is closed",
                  "body":
                    [ "$w(\"#myMenuContainer\").onClose((event) => {",
                      "  let targetId = event.target.id; // \"myMenuContainer\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "close" } },
      { "name": "onOpen",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\nthe function expression to run when the element is opened." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 54,
              "filename": "HamburgerMenuContainer.js" } ],
        "docs":
          { "summary": "Adds an event handler that is triggered when the menu container is opened.",
            "description":
              [ "Adds an event handler that is triggered when the hamburger menu container is opened." ],
            "links": [],
            "examples":
              [ { "title": "Adds an event handler that runs when the menu container is opened",
                  "body":
                    [ "$w(\"#myMenuContainer\").onOpen((event) => {",
                      "  let targetId = event.target.id; // \"myMenuContainer\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "open" } },
      { "name": "open",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] } },
        "locations":
          [ { "lineno": 32,
              "filename": "HamburgerMenuContainer.js" } ],
        "docs":
          { "summary": "Opens the hamburger menu container.",
            "description":
              [ "The `open()` function returns a Promise that is resolved when the ",
                "hamburger menu's container has finished opening." ],
            "links":
              [ "[close](#close)" ],
            "examples":
              [ { "title": "Opens the hamburger menu container",
                  "body":
                    [ "$w(\"#myMenuContainer\").open();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true },
  "relatedGuides":
    [ { "path": "./hamburgermenucontainer/guides/CSS Classes.md" } ] }