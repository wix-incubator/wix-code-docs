{ "name": "DashboardTextButton",
  "memberOf": "$w",
  "mixes":
    [ "$w.HiddenCollapsedMixin",
      "$w.DisabledMixin",
      "$w.ClickableMixin",
      "$w.LinkableMixin" ],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "DashboardTextButton.js" },
  "docs":
    { "summary": "The dashboard text button is used to display text accompanied by a link.",
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "customClassList",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.CustomClassList",
        "locations":
          [ { "lineno": 178,
              "filename": "DashboardTextButton.js" } ],
        "docs":
          { "summary": "<b>Note: This standard element property is not relevant for this DashboardTextButton.</b>",
            "description":
              [ "> This property is not yet available to all users.",
                "",
                "You can use this property to manipulate the custom CSS classes of an element. For example, ",
                "you can add a custom class to an element or replace an existing class with a new custom class.",
                "",
                "",
                "Custom classes are those that you create on your site, not the predefined global classes",
                "that are provided for each element.  ",
                "",
                "> **Note:** For more information, see [Styling Elements with CSS](https://www.wix.com/velo/reference/$w/styling-elements-with-css) ",
                "> and the [MDN CSS reference docs](https://developer.mozilla.org/en-US/docs/Learn/CSS)." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "label",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 15,
              "filename": "DashboardTextButton.js" },
            { "lineno": 29,
              "filename": "DashboardTextButton.js" } ],
        "docs":
          { "summary": "Sets or gets a button's label. \n\nMaximum length is 1200 characters.",
            "links": [],
            "examples":
              [ { "title": "Get an element's label",
                  "body":
                    [ "let myLabel = $w(\"#myElement\").label;  // \"Full Name\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's label",
                  "body":
                    [ "$w(\"#myElement\").label = \"Full Name\";" ],
                  "extra":
                    {  } },
                { "title": "Disable an element's label",
                  "body":
                    [ "$w(\"#myElement\").label = null; // Disables the element's label" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "link",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 97,
              "filename": "DashboardTextButton.js" },
            { "lineno": 143,
              "filename": "DashboardTextButton.js" } ],
        "docs":
          { "summary": "Sets or gets the text button's link.",
            "description":
              [ "When the element is clicked, the browser navigates to the `link` location. ",
                "",
                "You can set `link` to any of the following:",
                "",
                "* `/localPageURL`: another page on your site",
                "* `/`: your site's home page",
                "* `http(s)://<url>`: an external web address",
                "* `wix:document://<location>`: a document stored in the Media Manager",
                "* `mailto:<email-address>?subject=<subject>`: an email",
                "* `tel:<phone number>`: a phone number",
                "",
                " The `link` property attempts to properly encode the URL value that",
                " you set. For example, `.../some page` is encoded to `.../some%20page`.",
                " However, some URLs do not have one unambiguous encoding. In those cases",
                " it is up to you to encode the URL to reflect your intentions. Because of",
                " these situations, it is a best practice to always encode URLs before you",
                " set them as the value of the `link` property. Regardless of how you set",
                " the `link` property, when you get its value, it returns an encoded URL.",
                "",
                " Note that Wix URLs do not contain spaces. A page which has spaces in its",
                " name has its spaces replaced with dashes (`-`). Similarly,",
                " a [dynamic page URL](https://support.wix.com/en/article/creating-a-unique-dynamic-page-url) which ",
                " contains the value of a field in your collection with spaces",
                " has its spaces replaced with dashes (`-`).",
                "",
                "> **Note:** Make sure to set your button link before running (and not inside) the [`onClick()`](https://www.wix.com/velo/reference/$w/button/onclick) event handler." ],
            "links":
              [ "[target](#target)" ],
            "examples":
              [ { "title": "Get an element's URL",
                  "body":
                    [ "let link = $w('#myElement').link; // https://wix.com" ],
                  "extra":
                    {  } },
                { "title": "Set an element's URL",
                  "body":
                    [ "$w(\"#myTextButton\").link = \"https://www.wix.com\";" ],
                  "extra":
                    {  } },
                { "title": "Set element to a page on your site",
                  "body":
                    [ "$w('#myElement').link = \"/\";" ],
                  "extra":
                    {  } },
                { "title": "Set element to open an external link",
                  "body":
                    [ "$w('#myElement').link = \"https://wix.com\";" ],
                  "extra":
                    {  } },
                { "title": "Set element to open a document",
                  "body":
                    [ "$w(\"#myElement\").link = \"wix:document://v1/9bec_52fb06ea/filename.xls\";" ],
                  "extra":
                    {  } },
                { "title": "Set element to open a new email window",
                  "body":
                    [ "$w('#myElement').link = \"mailto:user@example.com?subject=Some%20Topic\";" ],
                  "extra":
                    {  } },
                { "title": "Set element's target",
                  "body":
                    [ "$w(\"#myElement\").link = \"http://wix.com\";",
                      "$w(\"#myElement\").target = \"_blank\";" ],
                  "extra":
                    {  } },
                { "title": "Disable an element's target",
                  "body":
                    [ "$w(\"#myElement\").link = null; // Disable the button's link property" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "prefix",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 35,
              "filename": "DashboardTextButton.js" },
            { "lineno": 60,
              "filename": "DashboardTextButton.js" } ],
        "docs":
          { "summary": "Sets or gets the prefix of a dashboard text button's value.",
            "description":
              [ "You can get or set a prefix for a dashboard text button's value. For example, you can set a prefix to be a ",
                "currency, such as `'$'`.  ",
                "",
                "The following formats are supported:",
                "",
                "* A string literal, such as `'cm'` or `'$'`.",
                "* Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`.",
                "* Vector images from the web: `http(s)://<vector image url>`.",
                "* Vector XML string: `<svg>...</svg>`.",
                "",
                " >**Note:** To disable an element's prefix, set the prefix property to null." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's prefix value",
                  "body":
                    [ "let prefix = $w(\"#myInput\").prefix; // $" ],
                  "extra":
                    {  } },
                { "title": "Set an element's prefix value",
                  "body":
                    [ "$w(\"#myInput\").prefix = \"$\";" ],
                  "extra":
                    {  } },
                { "title": "Disable an element's prefix value",
                  "body":
                    [ "$w(\"#myElement\").prefix = null; // Disable the button's prefix property" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "suffix",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 66,
              "filename": "DashboardTextButton.js" },
            { "lineno": 91,
              "filename": "DashboardTextButton.js" } ],
        "docs":
          { "summary": "Sets or gets the suffix of a dashboard text button's value.",
            "description":
              [ "You can set a suffix for a text button's value. For example, you can set a suffix to be a ",
                "unit of measurement, such as `'cm'`.",
                "",
                "The following formats are supported:",
                "",
                "* A string literal, such as `'USD'`.",
                "* Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`.",
                "* Vector images from the web: `http(s)://<vector image url>`.",
                "* Vector XML string: `<svg>...</svg>`.",
                "",
                " >**Note:** To disable an element's suffix, set the suffix property to null." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's suffix value",
                  "body":
                    [ "let prefix = $w(\"#myInput\").suffix; // %" ],
                  "extra":
                    {  } },
                { "title": "Set an element's suffix value",
                  "body":
                    [ "$w(\"#myInput\").suffix = \"%\";" ],
                  "extra":
                    {  } },
                { "title": "Disable an element's suffix value",
                  "body":
                    [ "$w(\"#myElement\").suffix = null; // Disable the button's suffix property" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "target",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 149,
              "filename": "DashboardTextButton.js" },
            { "lineno": 172,
              "filename": "DashboardTextButton.js" } ],
        "docs":
          { "summary": "Sets or gets the element's target.",
            "description":
              [ "An element's target determines where its link opens. The target can be set so the link ",
                "opens in the current page or in a new page.",
                "",
                "Supported values are:",
                "",
                "* \"_blank\": The link opens in a new tab or window.",
                "* \"_self\": The link opens in the tab or window.",
                "",
                "> **Note:** Link targets are only supported for external web links (e.g. http://www.wix.com)." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's target value",
                  "body":
                    [ "let target = $w(\"#myElement\").target; // \"_blank\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's target value",
                  "body":
                    [ "$w(\"#myElement\").target = \"_self\";" ],
                  "extra":
                    {  } },
                { "title": "Reset an element's target value",
                  "body":
                    [ "$w(\"#myElement\").target = null; // Resets the target property to its default value of \"_blank\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }