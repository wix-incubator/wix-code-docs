{ "name": "TextMarquee",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.LinkableMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "TextMarquee.js" },
  "docs":
    { "summary": "The TextMarquee element displays a line of text that moves horizontally.",
      "description":
        [ "> **Note:** This element is only available in Wix Studio. ",
          "",
          " The [Text Marquee element](https://support.wix.com/en/article/studio-editor-adding-and-customizing-text-marquee) contains a single line of text and an optional SVG icon that scroll horizontally. The text is duplicated or truncated to fit the width of the element." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "accessibility",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.TextMarquee.Accessibility",
        "locations":
          [ { "lineno": 63,
              "filename": "TextMarquee.js" } ],
        "docs":
          { "summary": "Sets and gets the [Accessible Rich Internet Application (ARIA) attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes) and other accessibility properties for the element.",
            "description":
              [ "ARIA attributes are a set of properties that define ways to make web content and applications more accessible to people with disabilities. The properties provide additional information about the structure, behavior, and state of elements to assistive technologies such as screen readers, braille displays, and voice control software. ",
                "",
                "Set the accessibility properties to design your elements to be more inclusive and usable for visitors with visual, auditory, motor, and or cognitive disabilities. The accessibility object primarily affects how assistive technologies read and present site content. ARIA attributes themselves do not impact SEO, but other accessibility properties, such as `lang`, can influence content indexing and discoverability.",
                "",
                ">**Note:** Incorrect use of ARIA attributes can worsen accessibility for assistive technology users. Use carefully and test with assistive technologies. ",
                "",
                "Learn more about [ARIA attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA)." ],
            "links": [],
            "examples":
              [ { "title": "Set the accessibility properties of an element",
                  "body":
                    [ "$w('#myTextMarquee').accessibility.ariaHidden = false;",
                      "$w('#myTextMarquee').accessibility.screenReader = {",
                      "  prefix : 'hidden text before text marquee element',",
                      "  suffix : 'hidden text after text marquee element'",
                      "};" ],
                  "extra":
                    {  } },
                { "title": "Get the accessibility properties of an element",
                  "body":
                    [ "const myTextMarqueeAccessibility = $w('#myTextMarquee').accessibility;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "customClassList",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "$w.CustomClassList",
        "locations":
          [ { "lineno": 48,
              "filename": "TextMarquee.js" } ],
        "docs":
          { "summary": "A property that represents an element's custom CSS classes.",
            "description":
              [ "> **Note:** This standard element property is not relevant for TextMarquee.",
                "> For more information, see [Styling Elements with CSS](https://www.wix.com/velo/reference/$w/styling-elements-with-css) ",
                "> and the [MDN CSS reference docs](https://developer.mozilla.org/en-US/docs/Learn/CSS)." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "text",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "defaultValue": "Current text value set in the UI.",
        "locations":
          [ { "lineno": 20,
              "filename": "TextMarquee.js" },
            { "lineno": 42,
              "filename": "TextMarquee.js" } ],
        "docs":
          { "summary": "Sets or gets the plain-text content of a TextMarquee element.",
            "description":
              [ "Getting the `text` property returns the plain-text content of the TextMarquee element. If the element contains an SVG icon, it is not included in the returned value. ",
                "",
                " Setting the `text` property sets the plain-text content of the TextMarquee element. The current text is replaced, but the optional SVG icon is not affected.",
                "",
                "The new text uses the same formatting as the previous `text` value, and it is duplicated or truncated to fit the width of the element.  ",
                "",
                " Min text length: 1 character  ",
                " Max text length: 450 characters" ],
            "links": [],
            "examples":
              [ { "title": "Get the TextMarquee's plain-text content",
                  "body":
                    [ "const textValue = $w(\"#textMarquee1\").text; // 'Text value'" ],
                  "extra":
                    {  } },
                { "title": "Set the TextMarquee's plain-text content",
                  "body":
                    [ "$w(\"#textMarquee1\").text = \"New Value\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages":
    [ { "name": "Accessibility",
        "locations":
          [ { "lineno": 89,
              "filename": "TextMarquee.js" } ],
        "docs":
          { "summary": "An object containing attributes to make your Wix elements more accessible.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "ariaHidden",
              "type": "boolean",
              "doc": "Indicates whether the element is visible to or hidden from users that rely on assistive technologies. Use `ariaHidden` to hide decorative, redundant, or off-screen content from screen readers. When `true`, the element is hidden from assistive technologies but remains visible in the DOM. When `false`, the element is exposed to assistive technologies. If `ariaHidden` isn't explicitly set, the default is `undefined` and the property isn't read by assistive technologies at all.",
              "optional": true },
            { "name": "screenReader",
              "type": "$w.Text.ScreenReader",
              "doc": "Adds extra text before or after a text element for screen readers and other assistive technologies. This property helps provide extra context to text elements on a site page. The added text does not affect your site visually but is read aloud by screen readers for those who rely on assistive technology. For example, you can add the prefix \"bold text\" to a bold text element because screen readers don't effectively communicate text styles such as bold, italicize, and strikethrough.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true },
  "relatedGuides":
    [ { "path": "./textmarquee/guides/CSS Classes.md" } ] }