{ "name": "DashboardToggleSwitch",
  "memberOf": "$w",
  "mixes":
    [ "$w.HiddenCollapsedElement",
      "$w.DisabledMixin" ],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "DashboardToggleSwitch.js" },
  "docs":
    { "summary": "Toggle switches are used in a Blocks panel for a single binary choice.",
      "description":
        [ "Dashboard toggle switches are used in a Blocks panel for a single binary choice." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "checked",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 12,
              "filename": "DashboardToggleSwitch.js" },
            { "lineno": 24,
              "filename": "DashboardToggleSwitch.js" } ],
        "docs":
          { "summary": "Sets or gets whether the toggle switch is on or off.",
            "description":
              [ "Setting the `checked` property to `true` toggles the switch to the On position. Setting it to `false` toggles the switch to the Off position. The default value is `true`." ],
            "links": [],
            "examples":
              [ { "title": "Get whether a switch is toggled on or off",
                  "body":
                    [ "let isChecked = $w(\"#mySwitch\").checked;  // true" ],
                  "extra":
                    {  } },
                { "title": "Set a switch to be toggled on",
                  "body":
                    [ "$w(\"#mySwitch\").checked = true;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "label",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 30,
              "filename": "DashboardToggleSwitch.js" },
            { "lineno": 43,
              "filename": "DashboardToggleSwitch.js" } ],
        "docs":
          { "summary": "Sets or gets the label of an element. Maximum length is 120 characters.",
            "description":
              [ "The toggle switch's label refers to the title to the right of the element. Its default value is \"Set a reminder\".",
                "> **Note:** To display no label at all, set the `label` field to an empty string: `\"\"`." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's label",
                  "body":
                    [ "let label = $w(\"#myElement\").label;  // \"My element's current label\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's label",
                  "body":
                    [ "$w(\"#myElement\").label = \"New Label\"; //Set a new label" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "tooltip",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "defaultValue": "An empty string",
        "locations":
          [ { "lineno": 50,
              "filename": "DashboardToggleSwitch.js" },
            { "lineno": 66,
              "filename": "DashboardToggleSwitch.js" } ],
        "docs":
          { "summary": "Sets or gets an the toggle switch's tooltip content. Maximum length is 120 characters.",
            "description":
              [ "An dashboard toggle switch's tooltip text is displayed when a user hovers over an element's ![tooltip-icon](images/tooltip-icon.png) icon." ],
            "links": [],
            "examples":
              [ { "title": "Get the toggle switch's tooltip text",
                  "body":
                    [ "let tooltip = $w(\"#myToggleSwitch\").tooltip;  // \"Tooltip text\"" ],
                  "extra":
                    {  } },
                { "title": "Set the toggle switch's tooltip text",
                  "body":
                    [ "$w(\"#myToggleSwitch\").tooltip = \"New tooltip\"; // Set a new tooltip text" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }