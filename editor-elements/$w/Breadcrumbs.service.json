{ "name": "Breadcrumbs",
  "memberOf": "$w",
  "mixes":
    [ "$w.HiddenCollapsedMixin",
      "$w.ViewportMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "Breadcrumbs.js" },
  "docs":
    { "summary": "Breadcrumbs are used for navigating between site pages.",
      "description":
        [ "> This feature is not yet available to all users or in Editor X.",
          "",
          " Breadcrumbs help site visitors navigate from page to page on a site. For example: ",
          "",
          "![Sample breadcrumbs](images/breadcrumbs.png \"Breadcrumbs\")",
          "",
          " With Velo, you can customize breadcrumbs items by changing their labels, links, and icons. ",
          "",
          " You can use Velo to add breadcrumbs ",
          " to dynamic pages, which isn't supported in the Wix Editor. ",
          " ",
          " Breadcrumbs elements consist of sets of labels, icons, and links. When the site visitor clicks",
          " a label or an icon, they navigate to the corresponding link. ",
          "",
          " Icons are vector image files ",
          " from the Media Manager, an external SVG image from any web location, or a literal SVG XML string.",
          "",
          " Breadcrumbs item links are optional. It is unnecessary, for example, to add a link for the item that represents the ",
          " current page because there is no reason to navigate to it. ",
          "",
          " You can shorten the breadcrumbs trail for display purposes by using the [`itemsBeforeEllipsis`](#itemsBeforeEllipsis) and [`itemsAfterEllipsis`](#itemsAfterEllipsis) ",
          " properties and the [`showEllipsis()`](#showEllipsis) and [`hideEllipsis()`](#hideEllipsis) functions to display an ellipsis instead of the middle items in the trail.",
          "",
          "Learn more about [adding a breadcrumbs element](https://support.wix.com/en/article/wix-editor-adding-and-setting-up-breadcrumbs) to your site." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "isEllipsisVisible",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "lineno": 151,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Indicates if an ellipsis is displayed in the breadcrumbs trail.",
            "description":
              [ "To change the `isEllipsisVisible` property, use the [`showEllipsis()`](#showEllipsis) and [`hideEllipsis()`](#hideEllipsis) functions." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [itemsBeforeEllipsis](#itemsBeforeEllipsis), [showEllipsis](#showEllipsis), [hideEllipsis](#hideEllipsis)" ],
            "examples":
              [ { "title": "Check if an ellipsis is displayed in the breadcrumbs trail",
                  "body":
                    [ "let ellipsisStatus = $w('#myBreadcrumbs').isEllipsisVisible; // true" ],
                  "extra":
                    {  } },
                { "title": "Set a button to toggle the ellipsis in the breadcrumbs trail when clicked",
                  "body":
                    [ "$w('#myButton').onClick(() => {",
                      "    if ($w('#myBreadcrumbs').isEllipsisVisible){",
                      "        $w('#myBreadcrumbs').hideEllipsis();",
                      "    } else {",
                      "        $w('#myBreadcrumbs').showEllipsis();",
                      "    }",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.Breadcrumbs.Item" ] },
        "defaultValue": "An empty array",
        "locations":
          [ { "lineno": 63,
              "filename": "Breadcrumbs.js" },
            { "lineno": 113,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Sets or gets breadcrumbs items.",
            "description":
              [ "Setting the `items` property sets the items",
                " for a breadcrumbs element.",
                "",
                " Set `items` to an empty array (`[]`) to remove all breadcrumbs items.",
                "",
                " Getting the `items` property returns breadcrumbs items that have been set using code. If no",
                " items have been set using code, your site generates a default items array based on your home page, the site visitor's location, ",
                " and the organization of your site's pages including ",
                " any [menu folders](https://support.wix.com/en/article/wix-editor-creating-and-managing-a-dropdown-submenu) you have added to your site. ",
                "",
                " Properties that don't have a value are omitted from the returned array.",
                "",
                " You can't modify the items array in-place. To add, change, or remove",
                " individual breadcrumbs items:",
                "",
                "   1. Store the value of the `items` property in a variable.",
                "   1. Make changes to the variable's array of items.",
                "   1. Reset the `items` property with the variable's modified array." ],
            "links": [],
            "examples":
              [ { "title": "Get breadcrumbs items",
                  "body":
                    [ "// This example assumes the items were set",
                      "// using code.",
                      "",
                      "let breadcrumbItems = $w('#myBreadcrumbs').items;",
                      "let firstIcon = breadcrumbItems[0].icon;",
                      "",
                      "/* Sample array of breadcrumb items: ",
                      " * [",
                      " *   {",
                      " *     'icon': 'wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/',",
                      " *     'link': '/home'",
                      " *   },",
                      " *   {",
                      " *     'label': 'Venue',",
                      " *     'link': '/zoo'",
                      " *   },",
                      " *   {",
                      " *     'label': 'Animal',",
                      " *     'link': '/lions'",
                      " *   }",
                      " * ]",
                      " * ",
                      " * In the 1st item, label is undefined. ",
                      " * In the last 2 items, icon is undefined.",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set items for various kinds of breadcrumbs",
                  "body":
                    [ "/*****************************",
                      " * A basic breadcrumbs trail *",
                      " *****************************/",
                      "",
                      "// Note that the site's base URL ",
                      "// shouldn't be included in any",
                      "// item's link property.",
                      "$w('#myBreadcrumbs').items = [",
                      "  {'icon: 'wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/', 'link': '/'},",
                      "  {'label': 'Venue', 'link': '/zoo'},",
                      "  {'label': 'Animal', 'link': '/lions', 'isCurrent': true}",
                      "];",
                      "",
                      "/*******************************",
                      " * A trail with multiple icons *",
                      " *******************************/ ",
                      "$w('#myBreadcrumbs').items = [",
                      "  {'icon': 'wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/', 'link': '/'},",
                      "  {'label': 'Venue', 'link': '/zoo'},",
                      "  { 'icon': '<svg width='50' height='50'><circle cx='25' cy='25' r='20' stroke='red' stroke-width='5' fill='blue'/></svg>', ",
                      "    'link': '/lions', ",
                      "    'isCurrent': true",
                      "  }",
                      "];",
                      "",
                      "/*****************************************************",
                      " * A trail with no links, for displaying the context *",
                      " *****************************************************/",
                      "$w('#myBreadcrumbs').items = [",
                      "  {'icon': 'wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/'},",
                      "  {'label': 'Zoo'},",
                      "  {'label': 'Tiger', 'isCurrent': true}",
                      "];" ],
                  "extra":
                    {  } },
                { "title": "Add a breadcrumbs item",
                  "body":
                    [ "let crumbs = $w('#myBreadcrumbs').items;",
                      "crumbs.push({'label': 'My New Label', 'link': '/mynewlink'});",
                      "$w('#myBreadcrumbs').items = crumbs;" ],
                  "extra":
                    { "description": "This example retrieves the breadcrumbs items, adds a new\n item, and then overwrites the old items." } },
                { "title": "Set breadcrumbs items for dynamic pages using Wix Location",
                  "body":
                    [ "import wixData from 'wix-data';",
                      "",
                      "$w.onReady(function () {",
                      "  $w('#tourismDynamicDataset').onReady(() => {",
                      "    wixData.query('tourism')",
                      "      .eq('country', 'Italy')",
                      "      .find()",
                      "      .then((results) => {",
                      "        let firstPlaceToSee = results.items[0]",
                      "        $w('#customBreadcrumbs').items = [",
                      "          { ",
                      "            icon: 'wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/', ",
                      "            link: '/' ",
                      "          },",
                      "          { ",
                      "            label: 'Places to See', ",
                      "            link: '/' + firstPlaceToSee['link-tourism-all'] ",
                      "          },",
                      "          { ",
                      "            label: firstPlaceToSee.title, ",
                      "            link: '/' + firstPlaceToSee['link-tourism-title'] ",
                      "          }",
                      "        ]",
                      "      });",
                      "  })",
                      "});" ],
                  "extra":
                    { "description": "This example demonstrates how to customize breadcrumbs for dynamic pages.\n\n > **Note**: In the interest of simplicity the code doesn't deal with display considerations\n > or validations that would normally be required to make sure site visitors perform the flow as \n > intended. \n\nThe customization includes: \n\n+ A \"tourism\" collection that contains countries and places to visit. The example queries for places to visit in Italy. \n+ 2 dynamic pages: \n    + A dynamic list page called \"Tourism (All)\" that lists travel destinations (places). The link to this dynamic page is based on the prefix in the \"link-tourism-all\" collection field.\n    + A dynamic item page called \"Tourism (Title)\" for viewing a specific place. The link to this dynamic page is based on the path in the \"link-tourism-title\" collection field. \n+ A breadcrumbs element created with code. breadcrumbs elements should be added to all pages. This \n  example sets the \"customBreadCrumbs\" element for the \"Tourism (Title)\" dynamic item page." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "itemsAfterEllipsis",
        "labels": [],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 194,
              "filename": "Breadcrumbs.js" },
            { "lineno": 217,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Sets or gets the number of items that appear in the breadcrumbs trail after an ellipsis.",
            "description":
              [ "Represents the number of items that appear in the breadcrumbs trail after an ellipsis.",
                "",
                "",
                "Consider the following when setting `itemsAfterEllipsis`:",
                "* Defaults to `1`.",
                "* Setting  `itemsAfterEllipsis` to a value less than `1` fails with an error. ",
                "  Setting it to a value greater than the total number of items in the breadcrumbs trail means the ellipsis isn't displayed under any circumstances.",
                "* If the sum of `itemsBeforeEllipsis` and `itemsAfterEllipsis` is greater than or equal to ",
                "  the total number of items in the breadcrumbs trail, the ellipsis isn't displayed under any circumstances." ],
            "links":
              [ "[itemsBeforeEllipsis](#itemsAfterEllipsis), [showEllipsis](#showEllipsis), [hideEllipsis](#hideEllipsis), [isEllipsisVisible](#isEllipsisVisible)" ],
            "examples":
              [ { "title": "Get the number of items that appear after an ellipsis",
                  "body":
                    [ "let afterEllipsis = $w('#myBreadcrumbs').itemsAfterEllipsis; // 2" ],
                  "extra":
                    {  } },
                { "title": "Set the number of items that appear after an ellipsis",
                  "body":
                    [ "$w('#myBreadcrumbs').itemsAfterEllipsis = 2;" ],
                  "extra":
                    {  } },
                { "title": "Increase the number of items after an ellipsis for breadcrumb trails under a certain length",
                  "body":
                    [ "if ($w('#myBreadcrumbs').items.length < 5) {",
                      "    $w('#myBreadcrumbs').itemsAfterEllipsis = 5 - $w('#myBreadcrumbs').items.length;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "itemsBeforeEllipsis",
        "labels": [],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 165,
              "filename": "Breadcrumbs.js" },
            { "lineno": 188,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Sets or gets the number of items that appear in the breadcrumbs trail before an ellipsis.",
            "description":
              [ "Represents the number of items that appear in the breadcrumbs trail before an ellipsis.",
                "",
                "",
                "Consider the following when setting `itemsBeforeEllipsis`:",
                "* Defaults to `1`.",
                "* Setting  `itemsBeforeEllipsis` to a value less than `1` fails with an error. ",
                "   Setting it to a value greater than the total number of items in the breadcrumbs trail means the ellipsis isn't displayed under any circumstances.",
                "* If the sum of `itemsBeforeEllipsis` and `itemsAfterEllipsis` is greater than or equal to ",
                "  the total number of items in the breadcrumbs trail, the ellipsis isn't displayed under any circumstances." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [showEllipsis](#showEllipsis), [hideEllipsis](#hideEllipsis), [isEllipsisVisible](#isEllipsisVisible)" ],
            "examples":
              [ { "title": "Get the number of items that appear before an ellipsis",
                  "body":
                    [ "let beforeEllipsis = $w('#myBreadcrumbs').itemsBeforeEllipsis; // 2" ],
                  "extra":
                    {  } },
                { "title": "Set the number of items that appear before an ellipsis",
                  "body":
                    [ "$w('#myBreadcrumbs').itemsBeforeEllipsis = 2;" ],
                  "extra":
                    {  } },
                { "title": "Increase the number of items before an ellipsis for breadcrumb trails under a certain length",
                  "body":
                    [ "if ($w('#myBreadcrumbs').items.length < 5) {",
                      "    $w('#myBreadcrumbs').itemsBeforeEllipsis = 5 - $w('#myBreadcrumbs').items.length;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hideEllipsis",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 137,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Hides an ellipsis displayed in a breadcrumbs element and displays the middle items of the breadcrumbs trail instead.",
            "description":
              [ "Running `hideEllipsis()` displays all the items in the breadcrumbs trail.",
                "",
                "Using `hideEllipsis()` changes the value of [`isEllipsisVisible`](#isEllipsisVisible)." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [itemsBeforeEllipsis](#itemsBeforeEllipsis), [isEllipsisVisible](#isEllipsisVisible), [showEllipsis](#showEllipsis)" ],
            "examples":
              [ { "title": "Hide an ellipsis displayed in a breadcrumbs trail",
                  "body":
                    [ "$('#myBreadcrumbs').hideEllipsis();" ],
                  "extra":
                    {  } },
                { "title": "Hide an ellipsis after clicking a button",
                  "body":
                    [ "$w('#myButton').onClick(() => {",
                      "    $w('#myBreadcrumbs').hideEllipsis();",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "showEllipsis",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 119,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Displays an ellipsis in a breadcrumbs element instead of the middle items of the breadcrumbs trail.",
            "description":
              [ "The number of items hidden in the breadcrumbs trail when you use `showEllipsis()` depends on the values of the [`itemsBeforeEllipsis`](#items) ",
                "and [`itemsAfterEllipsis`](#itemsAfterEllipsis) properties. Any items not accounted for by those properties are hidden and replaced by an ellipsis.",
                "",
                "For example, if your breadcrumbs trail includes 5 items and `itemsBeforeEllipsis` and `itemsAfterEllipsis` are both set to `1`, the 3 middle items in the trail",
                "are hidden when you use `showEllipsis()`.",
                "",
                "Using `showEllipsis()` changes the value of [`isEllipsisVisible`](#isEllipsisVisible)." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [itemsBeforeEllipsis](#itemsBeforeEllipsis), [isEllipsisVisible](#isEllipsisVisible), [hideEllipsis](#hideEllipsis)" ],
            "examples":
              [ { "title": "Display an ellipsis in the breadcrumbs trail",
                  "body":
                    [ "$w('#myBreadcrumbs').showEllipsis();" ],
                  "extra":
                    {  } },
                { "title": "Display an ellipsis for breadcrumbs trails over a certain length",
                  "body":
                    [ "if ($w('#myBreadcrumbs').items.length > 5) {",
                      "    $w('#myBreadcrumbs').showEllipsis();",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Item",
        "locations":
          [ { "lineno": 37,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "An object that contains the attributes of a breadcrumbs item.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "label",
              "type": "string",
              "doc": "The label of the breadcrumbs item. This is text that the site visitor sees and can click to navigate. Required if `icon` isn't specified. If not specified, `label` is omitted from the returned array.",
              "optional": true },
            { "name": "icon",
              "type": "string",
              "doc": "The icon of the breadcrumbs item. This is a vector image that the site visitor sees and can click to navigate. Required if `label` isn't specified. If not specified, the `icon` key is omitted from the returned array.\n\n The vector image file can be an image file from the Media Manager, an external SVG image from any web location, or a literal SVG XML string.\n\n The formats supported are:\n + Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`\n + Vector images from the web: `http(s)://<vector image url>`\n + Vector XML string: `<svg>...</svg>`",
              "optional": true },
            { "name": "link",
              "type": "string",
              "doc": "Optional link for the breadcrumbs item as a URL relative to your site's home page. This is the link the site visitor navigates to when they click on a breadcrumbs item. The page opens in the same window/tab. \n\n If a link isn't specified, it's `undefined` in the breadcrumbs object. The corresponding label or icon isn't clickable. \n\n >**Note:**\n > In the default breadcrumbs `items` array generated for a page, any `link` properties contain absolute URLs, not relative ones.",
              "optional": true },
            { "name": "isCurrent",
              "type": "boolean",
              "doc": "Setting `isCurrent` to `true` for a breadcrumbs item causes the item to appear highlighted in the breadcrumbs element.\nYou can use this property to indicate which page in a breadcrumbs trail is currently displayed. In a default `items` array, the last item's `isCurrent` value is `true`.\n>**Note:** The value of `isCurrent` isn't validated against which page is actually displayed. It can also be set to `true` for multiple breadcrumbs items.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true } }