{ "name": "HamburgerCloseButton",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.StyleMixin",
      "$w.LabelMixin",
      "$w.EffectsMixin" ],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "HamburgerCloseButton.js" },
  "docs":
    { "summary": "Represents the icon button that closes the [hamburger menu](https://support.wix.com/en/article/editor-x-using-hamburger-menus).",
      "description":
        [ ">**Note:** This API is not available in Wix Editor.",
          "",
          "A vector image used as the icon for the hamburger close button. ",
          "When the users clicks the icon the hamburger menu container closes. ",
          "",
          "The following formats are supported:",
          " + Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`",
          " + Vector images from the web: `http(s)://<vector image url>`",
          " + Vector XML string: `<svg>...</svg>`",
          "",
          ">**Note:** [Image Buttons](https://support.wix.com/en/article/wix-editor-adding-and-setting-up-an-image-button) don't support this property." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "icon",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 73,
              "filename": "HamburgerCloseButton.js" },
            { "lineno": 99,
              "filename": "HamburgerCloseButton.js" } ],
        "docs":
          { "summary": "Sets or gets the icon image displayed on the button.",
            "description":
              [ "The `icon` property defines the vector image used as the button's icon.",
                "",
                "Setting `icon` changes the button icon to the image indicated by the new value.",
                "Getting the `icon` property returns the location of the icon image file.",
                "To delete a button's icon set `icon` to `null`, `undefined`, or an empty string.",
                "",
                "The following formats are supported:",
                " + Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`",
                " + Vector images from the web: `http(s)://<vector image url>`",
                " + Vector XML string: `<svg>...</svg>`",
                "",
                ">**Note:** [Image Buttons](https://support.wix.com/en/article/wix-editor-adding-and-setting-up-an-image-button) are not supported by the `HamburgerCloseButton`." ],
            "links": [],
            "examples":
              [ { "title": "Set a button's icon to a Media Manager image",
                  "body":
                    [ "$w('#myButton').icon = 'wix:vector://v1/ce0334_2cec984ab68c490891dda1b53a33fead.svg/my-vector-graphic.svg';" ],
                  "extra":
                    {  } },
                { "title": "Set a button's icon to an XML string",
                  "body":
                    [ "$w('#myButton').icon = '<svg height=\"10\" width=\"10\"><polygon points=\"0,9 9,9 5,0\" style=\"fill:lime;stroke:purple;stroke-width:1\"/></svg>';" ],
                  "extra":
                    {  } },
                { "title": "Delete a button's icon",
                  "body":
                    [ "$w('#myButton').icon = '';" ],
                  "extra":
                    {  } },
                { "title": "Get a button's icon",
                  "body":
                    [ "let iconLocation = $w('#myButton').icon;",
                      "// 'wix:vector://v1/ce0334_2cec984ab68c490891dda1b53a33fead.svg/my-vector-graphic.svg'" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "link",
        "labels":
          [ "removed" ],
        "get": true,
        "set": true,
        "type": "string",
        "defaultValue": "An empty string",
        "locations":
          [ { "lineno": 106,
              "filename": "HamburgerCloseButton.js" },
            { "lineno": 154,
              "filename": "HamburgerCloseButton.js" } ],
        "docs":
          { "summary": "Sets or gets the button's link.",
            "description":
              [ "When the button is clicked, the browser navigates to the `link` location.",
                "",
                " The different types of links you can use are:",
                "",
                " + `/localPageURL`: another page on your site",
                " + `/`: your site's home page",
                " + `http(s)://<url>`: an external web address",
                " + `wix:document://<location>`: a document stored in the Media Manager",
                " + `mailto:<email-address>?subject=<subject>`: an email",
                " + `tel:<phone number>`: a phone number",
                "",
                "",
                " The `link` property attempts to properly encode the URL value that",
                " you set. For example, `.../some page` is encoded to `.../some%20page`.",
                " However, some URLs do not have one unambiguous encoding. In those cases",
                " it is up to you to encode the URL to reflect your intentions. Because of",
                " these situations, it is a best practice to always encode URLs before you",
                " set them as the value of the `link` property. Regardless of how you set",
                " the `link` property, when you get its value, it returns an encoded URL.",
                "",
                " Note that Wix URLs do not contain spaces. A page which has spaces in its",
                " name has its spaces replaced with dashes (`-`). Similarly,",
                " a [dynamic page URL](https://support.wix.com/en/article/creating-a-unique-dynamic-page-url) which ",
                " contains the value of a field in your collection with spaces",
                " has its spaces replaced with dashes (`-`).",
                "",
                "> **Note:** Make sure to set your button link before running (and not inside) the [`onClick()`](https://www.wix.com/velo/reference/$w/button/onclick) event handler." ],
            "links": [],
            "examples":
              [ { "title": "Set an element to open a local link",
                  "body":
                    [ "$w(\"#myButton\").link = \"/about-me\";" ],
                  "extra":
                    {  } },
                { "title": "Set an element to open an external web link",
                  "body":
                    [ "$w(\"#myButton\").link = \"http://wix.com\";" ],
                  "extra":
                    {  } },
                { "title": "Set an element to open an external web link in a new browser page when clicked",
                  "body":
                    [ "$w(\"#myButton\").link = \"http://wix.com\";",
                      "$w(\"#myButton\").target = \"_blank\";" ],
                  "extra":
                    {  } },
                { "title": "Set an element to open a new email window when clicked",
                  "body":
                    [ "$w(\"#myButton\").link = \"mailto:a@b.com?subject=Something%20Interesting\";" ],
                  "extra":
                    {  } },
                { "title": "Set an element to open a document",
                  "body":
                    [ "$w(\"#myButton\").link = \"wix:document://v1/9bec_52fb06ea/filename.xls\";" ],
                  "extra":
                    {  } },
                { "title": "Set an element to make a phone call when clicked",
                  "body":
                    [ "$w(\"#myButton\").link = \"tel:+1-555-555-5555\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the element is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 32,
              "filename": "HamburgerCloseButton.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element is clicked.",
            "description":
              [ "An element receives a `click` event when a user clicks on the element and releases.",
                "",
                " When a user double-clicks an element, two `click` events are fired.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events).",
                " ",
                "![Properties and Events panel](images/properties_and_events.png \"Properties and Events panel\")",
                "",
                " This will automatically add the required code for the selected element and event:",
                "",
                " ```javascript ",
                "    export function button1_click(event) {",
                "       // This function was added from the Properties & Events panel. To learn more, visit http://wix.to/UcBnC-4",
                "       // Add your code for this event here: ",
                "     }  ",
                "```",
                "",
                "",
                "> **Note:** Do not use the Editor Link panel to redirect on click when a link is already ",
                " defined using the `onClick()` function. To avoid unpredictable behavior, remove ",
                " the link from the Editor Link panel." ],
            "links": [],
            "examples":
              [ { "title": "Get the ID of the element that was clicked",
                  "body":
                    [ "$w(\"#myButton\").onClick( (event) => {",
                      "    let targetId = event.target.id;  // \"myButton\"",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Get a mouse click's coordinates",
                  "body":
                    [ "$w(\"#myButton\").onClick( (event) => {",
                      "    let clientX = event.clientX;  // 362",
                      "    let clientY = event.clientY;  // 244",
                      "    let offsetX = event.offsetX;  // 10",
                      "    let offsetY = event.offsetY;  // 12",
                      "    let pageX = event.pageX;      // 362",
                      "    let pageY = event.pageY;      // 376",
                      "    let screenX = event.screenX;  // 3897",
                      "    let screenY = event.screenY;  // 362",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Change the background color of the element that was clicked",
                  "body":
                    [ "$w('#myButton').onClick((event) => {",
                      "    const clickedElement = event.target;",
                      "    clickedElement.style.backgroundColor = 'blue';",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true },
  "relatedGuides":
    [ { "path": "./hamburgerclosebutton/guides/CSS Classes.md" } ] }