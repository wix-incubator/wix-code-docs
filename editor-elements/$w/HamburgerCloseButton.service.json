{ "name": "HamburgerCloseButton",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.StyleMixin",
      "$w.LabelMixin",
      "$w.EffectsMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 1,
      "filename": "HamburgerCloseButton.js" },
  "docs":
    { "summary": "Represents the icon button that closes the [hamburger menu](https://support.wix.com/en/article/editor-x-using-hamburger-menus).",
      "description":
        [ ">**Note:** This API is not available in Wix Editor.",
          "",
          "A vector image used as the icon for the hamburger close button. ",
          "When the users clicks the icon the hamburger menu container closes. ",
          "",
          "The following formats are supported:",
          " + Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`",
          " + Vector images from the web: `http(s)://<vector image url>`",
          " + Vector XML string: `<svg>...</svg>`",
          "",
          ">**Note:** [Image Buttons](https://support.wix.com/en/article/wix-editor-adding-and-setting-up-an-image-button) don't support this property." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "icon",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 73,
              "filename": "HamburgerCloseButton.js" },
            { "lineno": 99,
              "filename": "HamburgerCloseButton.js" } ],
        "docs":
          { "summary": "Sets or gets the icon image displayed on the button.",
            "description":
              [ "The `icon` property defines the vector image used as the button's icon.",
                "",
                "Setting `icon` changes the button icon to the image indicated by the new value.",
                "Getting the `icon` property returns the location of the icon image file.",
                "To delete a button's icon set `icon` to `null`, `undefined`, or an empty string.",
                "",
                "The following formats are supported:",
                " + Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`",
                " + Vector images from the web: `http(s)://<vector image url>`",
                " + Vector XML string: `<svg>...</svg>`",
                "",
                ">**Note:** [Image Buttons](https://support.wix.com/en/article/wix-editor-adding-and-setting-up-an-image-button) are not supported by the `HamburgerCloseButton`." ],
            "links": [],
            "examples":
              [ { "title": "Set a button's icon to a Media Manager image",
                  "body":
                    [ "$w('#myButton').icon = 'wix:vector://v1/ce0334_2cec984ab68c490891dda1b53a33fead.svg/my-vector-graphic.svg';" ],
                  "extra":
                    {  } },
                { "title": "Set a button's icon to an XML string",
                  "body":
                    [ "$w('#myButton').icon = '<svg height=\"10\" width=\"10\"><polygon points=\"0,9 9,9 5,0\" style=\"fill:lime;stroke:purple;stroke-width:1\"/></svg>';" ],
                  "extra":
                    {  } },
                { "title": "Delete a button's icon",
                  "body":
                    [ "$w('#myButton').icon = '';" ],
                  "extra":
                    {  } },
                { "title": "Get a button's icon",
                  "body":
                    [ "let iconLocation = $w('#myButton').icon;",
                      "// 'wix:vector://v1/ce0334_2cec984ab68c490891dda1b53a33fead.svg/my-vector-graphic.svg'" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the element is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 32,
              "filename": "HamburgerCloseButton.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element is clicked.",
            "description":
              [ "An element receives a `click` event when a user clicks on the element and releases.",
                "",
                " When a user double-clicks an element, two `click` events are fired.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events).",
                " ",
                "![Properties and Events panel](images/properties_and_events.png \"Properties and Events panel\")",
                "",
                " This will automatically add the required code for the selected element and event:",
                "",
                " ```javascript ",
                "    export function button1_click(event) {",
                "       // This function was added from the Properties & Events panel. To learn more, visit http://wix.to/UcBnC-4",
                "       // Add your code for this event here: ",
                "     }  ",
                "```",
                "",
                "",
                "> **Note:** Do not use the Editor Link panel to redirect on click when a link is already ",
                " defined using the `onClick()` function. To avoid unpredictable behavior, remove ",
                " the link from the Editor Link panel." ],
            "links": [],
            "examples":
              [ { "title": "Get the ID of the element that was clicked",
                  "body":
                    [ "$w(\"#myButton\").onClick( (event) => {",
                      "    let targetId = event.target.id;  // \"myButton\"",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Get a mouse click's coordinates",
                  "body":
                    [ "$w(\"#myButton\").onClick( (event) => {",
                      "    let clientX = event.clientX;  // 362",
                      "    let clientY = event.clientY;  // 244",
                      "    let offsetX = event.offsetX;  // 10",
                      "    let offsetY = event.offsetY;  // 12",
                      "    let pageX = event.pageX;      // 362",
                      "    let pageY = event.pageY;      // 376",
                      "    let screenX = event.screenX;  // 3897",
                      "    let screenY = event.screenY;  // 362",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Change the background color of the element that was clicked",
                  "body":
                    [ "$w('#myButton').onClick((event) => {",
                      "    const clickedElement = event.target;",
                      "    clickedElement.style.backgroundColor = 'blue';",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }