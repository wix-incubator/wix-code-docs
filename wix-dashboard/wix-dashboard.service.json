{ "name": "wix-dashboard",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "index.js" },
  "docs":
    { "description":
        [ "The Wix Dashboard API allows the code in [dashboard pages](https://support.wix.com/en/article/velo-working-with-dashboard-pages) to interact with the Wix dashboard enviroment.",
          "",
          "Using the module you can:",
          "- Navigate users to other pages in the dashboard.",
          "- Display modals and toasts.",
          "- Retrieve data about changes to the dashboard's state and use it to update your page in real time.",
          "",
          "To use the Wix Dashboard API, import the applicable function from `wix-dashboard`:",
          "",
          "```js",
          "import { <function> } from 'wix-dashboard';",
          "```",
          "## Before you begin",
          "It's important to note that the Wix Dashboard API can only be used in the page code files for dashboard pages. The functions in this API won't work in any other code files on your site." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "closeModal",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "closeData",
              "type": "Serializable",
              "doc": "Data to pass to the modal's opener. This data is returned by [`openModal`](#openmodal) once the modal is closed. Should not contain any functions as values.",
              "optional": true } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 19,
              "filename": "modal.js" } ],
        "docs":
          { "summary": "> This function can only be used in page code files for [dashboard pages](https://support.wix.com/en/article/velo-working-with-dashboard-pages).\nCloses the currently open modal.",
            "links": [],
            "examples":
              [ { "title": "Close a modal",
                  "body":
                    [ "import { closeModal } from 'wix-dashboard';",
                      "",
                      "closeModal({ message: 'The modal is closed!' });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "navigate",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "pageId",
              "type": "string",
              "doc": "ID of the page to navigate to. Use the [Dashboard Page IDs](#dashboard-page-ids) table to find the appropriate ID." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 1,
              "filename": "navigate.js" } ],
        "docs":
          { "summary": "> This function can only be used in page code files for [dashboard pages](https://support.wix.com/en/article/velo-working-with-dashboard-pages).\nNavigates the user to another page in the dashboard.",
            "description":
              [ "If an invalid `pageId` value is passed to this function, a **Page Not Found** message is displayed in the dashboard." ],
            "links": [],
            "examples":
              [ { "title": "Navigate to the dashboard home page",
                  "body":
                    [ "import { navigate } from 'wix-dashboard';",
                      "",
                      "navigate('home');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "observeState",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "observer",
              "type": "Function",
              "doc": "Callback function for receiving state data. \n\nReceives 2 parameters, `state` and `envData`." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 1,
              "filename": "observeState.js" } ],
        "docs":
          { "summary": "> This function can only be used in page code files for [dashboard pages](https://support.wix.com/en/article/velo-working-with-dashboard-pages).\nDefines a callback function that receives changes to the state of the page surrounding a dashboard component.",
            "description":
              [ "You can use the data passed to the callback function that you pass to `observeState()` to dynamically update a dashboard page's content.",
                "",
                "The callback function passed to `observeState()` is triggered when the dashboard page is initialized and every time it's updated.",
                "",
                "The callback function should define the following parameters:",
                "* `state`: For receiving state data.",
                "* `envData`: For receiving general data about the user's current environment.",
                "",
                "The format of the `state` argument depends on the page that hosts the dashboard page." ],
            "links": [],
            "examples":
              [ { "title": "Receive state data and log it to the console",
                  "body":
                    [ "import { observeState } from 'wix-dashboard';",
                      "",
                      "observeState((state, envData) => {",
                      "  console.log('custom prop', state.customStateProp);",
                      "  console.log('locale', envData.locale);",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "openModal",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "componentId",
              "type": "string",
              "doc": "ID of the component to show in the modal." },
            { "name": "componentParams",
              "type": "Object",
              "doc": "Custom data to pass into the component.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "{modalClosed: function()}" ] } },
        "locations":
          [ { "lineno": 1,
              "filename": "modal.js" } ],
        "docs":
          { "summary": "> This function can only be used in page code files for [dashboard pages](https://support.wix.com/en/article/velo-working-with-dashboard-pages).\nOpens a modal.",
            "description":
              [ "The `openModal()` functions returns a promise that resolves to an object containing a `modalClosed()` function. The `modalClosed()` function",
                "returns a promise that resolves to the data passed to the [`closeModal`](#closeModal) function used to close the modal." ],
            "links": [],
            "examples":
              [ { "title": "Open a modal and log the data returned when it's closed",
                  "body":
                    [ "import { openModal } from 'wix-dashboard';",
                      "",
                      "openModal('my-component-id')",
                      "  .then( ({ modalClosed }) => {",
                      "    modalClosed()",
                      "      .then( (closeData) => {",
                      "        console.log('The modal was closed and returned:', closeData);",
                      "      })",
                      "  })",
                      "",
                      "/* Promise resolves to a function that returns when the modal is closed. */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "showToast",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "config",
              "type": "wix-dashboard.ToastConfig",
              "doc": "Toast configuration options." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "{remove: function()}" ] } },
        "locations":
          [ { "lineno": 1,
              "filename": "toast.js" } ],
        "docs":
          { "summary": "> This function can only be used in page code files for [dashboard pages](https://support.wix.com/en/article/velo-working-with-dashboard-pages).\nDisplays a toast notification.",
            "description":
              [ "The `showToast()` function returns a promise that resolves to an object containing a function called remove. ",
                "The `remove()` function removes the toast from the page.",
                "",
                "Use the `config` parameter to:",
                "* Control the toast's appearance.",
                "* Set callback functions to run when the user sees or clicks on the toast.",
                "* Create a clickable call-to-action that displays in the toast.",
                "",
                "Requests to display toasts may be queued and the toast may not be displayed immediately.",
                "",
                "> **Note:** When the timeout parameter is set to `none` the toast is rendered into the page layout and pushes the rest of the page down. When timeout is set to `normal`, the toast appears on top of other content on the page." ],
            "links": [],
            "examples":
              [ { "title": "Display a success toast when a product is updated",
                  "body":
                    [ "import { showToast } from 'wix-dashboard';",
                      "",
                      "const config = {",
                      "  message: 'Product updated successfully!',",
                      "  type: 'success',",
                      "}",
                      "",
                      "showToast(config);" ],
                  "extra":
                    {  } },
                { "title": "Display an error toast with a 'Learn more' link",
                  "body":
                    [ "import { showToast } from 'wix-dashboard';",
                      "",
                      "const config = {",
                      "  message: 'Product update failed.',",
                      "  timeout: 'none',",
                      "  type: 'error',",
                      "  priority: 'low',",
                      "  action: {",
                      "    uiType: 'link',",
                      "    text: 'Learn more',",
                      "    removeToastOnClick: true,",
                      "    onClick: () => {",
                      "      console.log('Learn more clicked!');",
                      "    },",
                      "  },",
                      "};",
                      "",
                      "showToast(config);" ],
                  "extra":
                    {  } },
                { "title": "Remove a displayed toast",
                  "body":
                    [ "import { showToast } from 'wix-dashboard';",
                      "",
                      "const config = {",
                      "  message: 'Product updated successfully!',",
                      "  type: 'success',",
                      "  timeout: 'none',",
                      "}",
                      "showToast(config)",
                      "  .then( ({ remove }) => {",
                      "    // Remove the toast after 5 seconds.",
                      "    setTimeout(remove, 5000);",
                      "  })",
                      "",
                      "/* Promise resolves a function that removes the toast. */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "ToastAction",
        "locations":
          [ { "lineno": 51,
              "filename": "toast.js" } ],
        "docs":
          { "summary": "ToastAction Object",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "text",
              "type": "string",
              "doc": "Text that appears in the call-to-action." },
            { "name": "uiType",
              "type": "string",
              "doc": "The type of call-to-action. \n\nOptions: `button`, `link`",
              "optional": true },
            { "name": "removeToastOnClick",
              "type": "boolean",
              "doc": "Whether to remove the toast after the call-to-action is clicked.",
              "optional": true },
            { "name": "onClick",
              "type": "Function",
              "doc": "Callback function to run after the call-to-action is clicked." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ToastConfig",
        "locations":
          [ { "lineno": 29,
              "filename": "toast.js" } ],
        "docs":
          { "summary": "ToastConfig Object",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "message",
              "type": "string",
              "doc": "Text that appears in the toast." },
            { "name": "timeout",
              "type": "string",
              "doc": "Whether the toast removes itself or not. \n\nOptions: `none`, `normal`.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Toast color and message type. \n\nOptions: \n- `standard`: Blue toast. \n- `success`: Green toast.  \n- `warning`: Yellow warning toast.\n- `error`: Red error toast.",
              "optional": true },
            { "name": "priority",
              "type": "string",
              "doc": "Priority of the toast. If several toasts are triggered at the same time, they're displayed in the order of their priority levels. \nOptions: `low`, `normal`, `high`.",
              "optional": true },
            { "name": "action",
              "type": "wix-dashboard.ToastAction",
              "doc": "Object representing a call-to-action that is displayed in the toast.",
              "optional": true },
            { "name": "onCloseClick",
              "type": "Function",
              "doc": "Callback function to run when the toast is closed by clicking its close button.",
              "optional": true },
            { "name": "onToastSeen",
              "type": "Function",
              "doc": "Callback function to run when the toast is seen by the user.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "scopes":
        [ "frontend" ] } }