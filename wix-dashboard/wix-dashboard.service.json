{
  "name": "wix-dashboard",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-dashboard",
  "docs": {
    "description": [
      " The Dashboard SDK is a tool that allows the code in custom dashboard components to interact with other parts of the Wix dashboard.",
      " Using the SDK, developers can navigate users to pages in the dashboard, display modals, and send users alerts and updates using toasts.",
      " The SDK makes it simpler and easier to create custom experiences for users in their sites' dashboards."
    ]
  },
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "closeModal",
      "params": [
        {
          "name": "closeData",
          "type": [
            {
              "referenceType": "wix-dashboard.Serializable"
            }
          ],
          "doc": "Data to pass to the modal's opener. This data is returned by openModal once the modal is closed. Should not contain any functions as values.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "nativeType": "void"
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "summary": "Closes the currently open modal."
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "navigate",
      "params": [
        {
          "name": "pageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the page to navigate to.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "nativeType": "void"
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "summary": "Navigates the user to another page in the dashboard.\nIf an invalid pageId value is passed to this function, a \"Page Not Found\" message is displayed in the dashboard."
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "observeState",
      "params": [
        {
          "name": "observer",
          "type": [
            {
              "complexType": {
                "referenceType": "wix-dashboard.Observer",
                "typeParams": [
                  {
                    "referenceType": "wix-dashboard.S"
                  },
                  {
                    "referenceType": "wix-dashboard.T"
                  }
                ]
              }
            }
          ],
          "doc": "Callback function for receiving state data.\nReceives 2 parameters, `state` and `envData`.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "nativeType": "void"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Receives changes to the state of the page surrounding a dashboard component. You can use this data to dynamically update a dashboard component's content.",
        "description": [
          "The callback function passed to `observeState` is triggered when the dashboard component is initialized and every time the page is updated.\n\nThe callback function should define the following parameters:\n* `state`: For receiving state data.\n* `envData`: For receiving general data about the user's current environment.\n\nThe format of the `state` argument received by `observeState` depends on the page that hosts the dashboard component.\n"
        ],
        "examples": [
          {
            "title": "Receive state data and log it to the console",
            "body": [
              "```js",
              "import { observeState } from 'wix-dashboard';",
              "",
              "observeState((state, envData) => {",
              "  console.log('custom prop', state.customStateProp);",
              "  console.log('locale', envData.locale);",
              "});",
              "```",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "openModal",
      "params": [
        {
          "name": "componentId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the component to show in the modal.",
          "required": false
        },
        {
          "name": "componentParams",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Custom data to pass into the component.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {}
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [
          "This function returns a promise that resolves when the modal is closed.\nThe object that the promise resolves to contains any data passed to the {@link CloseModal} function used to close the modal.\n"
        ],
        "summary": "Opens a modal."
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "showToast",
      "params": [
        {
          "name": "config",
          "type": [
            {
              "referenceType": "wix-dashboard.ToastConfig"
            }
          ],
          "doc": "Toast configuration options.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {}
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Displays a toast notification.",
        "description": [
          "Use the `config` parameter to:\n* Control the toast's appearance.\n* Set callback functions to run when the user sees or clicks on the toast.\n* Create a clickable call-to-action that displays in the toast.\n\nRequests to display toasts may be queued and the toast may not be displayed immediately.\n\nThe object returned by `shotToast` contains a function that can be used to remove the toast.\n\n> **Note:** When the timeout parameter is set to `none` the toast is rendered into the page layout and pushes the rest of the page down. When timeout is set to `normal`, the toast appears on top of other content on the page.\n"
        ],
        "examples": [
          {
            "title": "Display a success toast when a product is updated",
            "body": [
              "```js",
              "import { showToast } from 'wix-dashboard';",
              "",
              "showToast({",
              "  message: 'Product updated successfully!',",
              "  type: 'success',",
              "});",
              "```"
            ]
          },
          {
            "title": "Display an error toast with a 'Learn more' link",
            "body": [
              "```js",
              "import { showToast } from 'wix-dashboard';",
              "",
              "const toastConfig = {",
              "  message: 'Product update failed.',",
              "  timeout: 'none',",
              "  type: 'error',",
              "  priority: 'low',",
              "  action: {",
              "    uiType: 'link',",
              "    text: 'Learn more',",
              "    removeToastOnClick: true,",
              "    onClick: () => {",
              "      console.log('Learn more clicked!');",
              "    },",
              "  },",
              "};",
              "showToast(toastConfig);",
              "```"
            ]
          },
          {
            "title": "Remove a displayed toast",
            "body": [
              "```js",
              "import { showToast } from 'wix-dashboard';",
              "",
              "// Display a toast and save the remove function.",
              "const { remove } = await showToast({",
              "  message: 'Product updated successfully!',",
              "  type: 'success',",
              "  timeout: 'none',",
              "});",
              "",
              "// Remove the toast.",
              "remove();",
              "```",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    }
  ],
  "messages": [
    {
      "name": "ModalClosed",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Observer",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ToastAction",
      "members": [
        {
          "name": "onClick",
          "type": [
            {
              "referenceType": "wix-dashboard.Callback"
            }
          ],
          "doc": "Callback function to run after the call-to-action is clicked."
        },
        {
          "name": "removeToastOnClick",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to remove the toast after the call-to-action is clicked."
        },
        {
          "name": "text",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Text that appears in the call-to-action."
        },
        {
          "name": "uiType",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard.ToastActionUiType"
            }
          ],
          "doc": "The type of call-to-action.\nOptions: `button`, `link`"
        }
      ],
      "docs": {
        "description": [
          "ToastAction Object"
        ]
      }
    },
    {
      "name": "ToastActionUiType",
      "enum": [
        "button",
        "link"
      ],
      "docs": {
        "description": [
          ""
        ]
      },
      "members": []
    },
    {
      "name": "ToastConfig",
      "members": [
        {
          "name": "action",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard.ToastAction"
            }
          ],
          "doc": "Object representing a call-to-action that is displayed in the toast."
        },
        {
          "name": "message",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Text that appears in the toast."
        },
        {
          "name": "onCloseClick",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard.Callback"
            }
          ],
          "doc": "Callback function to run when the toast is closed by clicking its close button."
        },
        {
          "name": "onToastSeen",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard.Callback"
            }
          ],
          "doc": "Callback function to run when the toast is seen by the user."
        },
        {
          "name": "priority",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard.ToastPriority"
            }
          ],
          "doc": "Priority of the toast. If several toasts are triggered at the same time, they're displayed in the order of their priority levels.\nOptions: `low`, `normal`, `high`."
        },
        {
          "name": "timeout",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard.ToastTimeout"
            }
          ],
          "doc": "Whether the toast removes itself or not.\nOptions: `none`, `normal`."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard.ToastType"
            }
          ],
          "doc": "Toast color and message type.\n\nOptions:\n- `standard`: Blue notification toast.\n- `success`: Green success toast.\n- `warning`: Yellow warning toast.\n- `error`: Red error toast.\n"
        }
      ],
      "docs": {
        "description": [
          "ToastConfig Object"
        ]
      }
    },
    {
      "name": "ToastPriority",
      "enum": [
        "low",
        "normal",
        "high"
      ],
      "docs": {
        "description": [
          ""
        ]
      },
      "members": []
    },
    {
      "name": "ToastTimeout",
      "enum": [
        "normal",
        "none"
      ],
      "docs": {
        "description": [
          ""
        ]
      },
      "members": []
    },
    {
      "name": "ToastType",
      "enum": [
        "standard",
        "success",
        "warning",
        "error"
      ],
      "docs": {
        "description": [
          ""
        ]
      },
      "members": []
    }
  ]
}
