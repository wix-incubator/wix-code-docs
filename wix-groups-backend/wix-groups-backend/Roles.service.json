{ "name": "Roles",
  "memberOf": "wix-groups-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 1,
      "filename": "roles.js" },
  "docs":
    { "summary": "The Roles API provides functionality for assigning and unassigning a role to a group member.",
      "description":
        [ "The Roles API provides functionality for assigning and unassigning a role to a group member.",
          "",
          "> **Note:** This module is only relevant for site admins and group admins.",
          "",
          "To enable groups backend API functionality for your site, add the [Wix Groups](https://support.wix.com/en/article/wix-groups-adding-and-setting-up-wix-groups) application to your site.",
          "",
          "The Groups API provides functionality allowing you to:",
          " + [Assign](wix-groups-backend.Roles/assignrole) roles to members of a group. ",
          " + [Unasssign](wix-groups-backend.Roles/assignrole) roles to members of a group. ",
          "",
          "### Permissions Information",
          ">**Note:** You can override the permissions below by setting the `suppressAuth` option to `true`. ",
          "",
          "|Functions|Permissions",
          "|--|---|",
          "| `assignRole()`, `unassignRole()`|Site owner, site admin, group admin",
          "",
          "",
          "```javascript",
          "import { roles } from \"wix-groups-backend\";",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "assignRole",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "identifiers",
              "type": "wix-groups-backend.Roles.Identifiers",
              "doc": "Group ID and member IDs." },
            { "name": "role",
              "type": "string",
              "doc": "Group member role to assign. \nOne of:\n- `\"MEMBER\"`: Group member.\n- `\"ADMIN\"`: Group admin." },
            { "name": "options",
              "type": "wix-groups-backend.Options",
              "doc": "Authorization options." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-groups-backend.Role" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 42,
              "filename": "roles.js" } ],
        "docs":
          { "summary": "Assigns a role to group members.",
            "description":
              [ "<br/>",
                "",
                "> **Note:** This function is only relevant for site admins, and group members with group admin permissions.   ",
                "",
                "The `assignRole()` function returns a Promise that resolves to the newly-assigned role after it has successfully been assigned. Assigning a role overrides an existing role. ",
                "For example, assigning a member role to an admin unassigns their admin role." ],
            "links": [],
            "examples":
              [ { "title": "Assign a role to a group member",
                  "body":
                    [ "import { roles } from \"wix-groups-backend\";",
                      "",
                      "// Sample identifiers value:",
                      "// {",
                      "//   memberIds: ['7fe8e9e1-d050-4c86-9684-e7f231600a34'],",
                      "//   groupId: '0261a737-2361-4468-a3b1-5ec2b0667836.'",
                      "// }",
                      "//",
                      "// Sample role value:",
                      "// 'ADMIN'",
                      "//",
                      "// Sample options value:",
                      "// {",
                      "//   suppressAuth: true",
                      "// }",
                      "",
                      "export function assignRole(identifiers, role, options) {",
                      "  return roles.assignRole(identifiers, role, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " * role: \"ADMIN\"",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "unassignRole",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "identifiers",
              "type": "wix-groups-backend.Roles.Identifiers",
              "doc": "Group ID and member IDs." },
            { "name": "role",
              "type": "string",
              "doc": "Group member role to unassign. \n- `\"ADMIN\"`: Group admin." },
            { "name": "options",
              "type": "wix-groups-backend.Options",
              "doc": "Authorization options." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-groups-backend.Role" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 63,
              "filename": "roles.js" } ],
        "docs":
          { "summary": "Unassigns a role from group members.",
            "description":
              [ "<br/>",
                "",
                "> **Note:** This function is only relevant for site admins, and group members with group admin permissions.   ",
                "",
                "The `unassignRole()` function returns a Promise that resolves to the unassigned role after it has successfully been unassigned. This function only applies",
                "to admin roles. Using this function with member roles returns an error." ],
            "links": [],
            "examples":
              [ { "title": "Unassign a role to a group member",
                  "body":
                    [ "import { roles } from \"wix-groups-backend\";",
                      "",
                      "// Sample identifiers value:",
                      "// {",
                      "//   memberIds: ['7fe8e9e1-d050-4c86-9684-e7f231600a34'],",
                      "//   groupId: '0261a737-2361-4468-a3b1-5ec2b0667836.'",
                      "// }",
                      "//",
                      "// Sample role value:",
                      "// 'ADMIN'",
                      "//",
                      "// Sample options value:",
                      "// {",
                      "//   suppressAuth: true",
                      "// }",
                      "",
                      "export function unassignRole(identifiers, role, options) {",
                      "  return roles.unassignRole(identifiers, role, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " * role: \"MEMBER\"",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Identifiers",
        "locations":
          [ { "lineno": 35,
              "filename": "roles.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "groupId",
              "type": "string",
              "doc": "ID of the group." },
            { "name": "memberIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of the site members." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }