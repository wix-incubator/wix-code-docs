{ "name": "GroupMembersQueryBuilder",
  "memberOf": "wix-groups-backend.Members",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 248,
      "filename": "members.js" },
  "docs":
    { "summary": "Contains functionality for refining a Members query.",
      "description":
        [ "The `GroupMembersQueryBuilder` functions enable you to run, sort, filter, and control",
          "which results a query returns.",
          "",
          "Typically, you build a query using the [`queryGroupMembers()`](wix-groups-backend/members-obj/querygroupmembers)function,",
          "refine the query by chaining `GroupMembersQueryBuilder` functions, and then execute the",
          "query by chaining the [`find()`](#find) function.",
          "",
          "For example, the following code returns the first 5 group members with admin roles, and sorts them by the date they joined in ascending order.",
          "",
          "```javascript",
          "import { members } from 'wix-groups-backend';",
          "",
          "members.queryGroupMembers()",
          " .eq(\"role\", \"ADMIN\")",
          " .ascending(\"joinedDate\")",
          " .limit(5)",
          " .find()",
          " .then( (results) => {",
          "   console.log(results.items);",
          " });",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "ascending",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The properties used in the sort.\n\nSupported property:\n+ `_createdDate`",
              "spread": true } ],
        "ret":
          { "type": "wix-groups-backend.Members.GroupMembersQueryBuilder",
            "doc": "A `GroupMembersQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 430,
              "filename": "members.js" } ],
        "docs":
          { "summary": "Adds a sort to a query, sorting by the specified properties in ascending order.",
            "description":
              [ "The `ascending()` function refines a `GroupMembersQueryBuilder` to sort in ascending order of",
                "the specified properties. If you specify more than one property,",
                "`ascending()` sorts the results in ascending order by each property in the",
                "order they are listed.",
                "",
                "You can sort the following types:",
                "",
                "+ Number: Sorts numerically.",
                "+ Date: Sorts by date and time.",
                "+ String: Sorts lexicographically, so `\"abc\"` comes after `\"XYZ\"`.",
                "",
                "If a property contains a number as a String, that value will be sorted",
                "alphabetically and not numerically. Items that do not have a value for the",
                "specified sort property are ranked lowest." ],
            "links": [],
            "examples":
              [ { "title": "Add an `ascending` sort to a query",
                  "body":
                    [ "const query = members.queryGroupMembers().ascending(\"joinedDate\");" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add an `ascending` sort, and run it",
                  "body":
                    [ "import { members } from 'wix-groups-backend';",
                      "",
                      "export function myQueryGroupMembersFunction() {",
                      "",
                      "  return members.queryGroupMembers()",
                      "    .ascending(\"joinedDate\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const totalPages = results.totalPages;",
                      "        const totalCount = results.totalCount;",
                      "        const currentPage = results.currentPage();",
                      "        const next = results.next();",
                      "        const previous = results.prev();",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "descending",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The properties used in the sort.\n\nSupported property:\n+ `_createdDate`",
              "spread": true } ],
        "ret":
          { "type": "wix-groups-backend.Members.GroupMembersQueryBuilder",
            "doc": "A `GroupMembersQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 457,
              "filename": "members.js" } ],
        "docs":
          { "summary": "Adds a sort to a query, sorting by the specified properties in descending order.",
            "description":
              [ "The `descending()` function refines a `GroupMembersQueryBuilder` to sort in descending order of",
                "the specified properties. If you specify more than one property,",
                "`descending()` sorts the results in descending order by each property in the",
                "order they are listed.",
                "",
                "You can sort the following types:",
                "",
                "+ Number: Sorts numerically.",
                "+ Date: Sorts by date and time.",
                "+ String: Sorts lexicographically, so `\"abc\"` comes before `\"XYZ\"`.",
                "",
                "If a property contains a number as a String, that value will be sorted",
                "alphabetically and not numerically. Items that do not have a value for the",
                "specified sort property are ranked lowest." ],
            "links": [],
            "examples":
              [ { "title": "Add a `descending` sort to a query",
                  "body":
                    [ "const query = members.queryGroupMembers().descending(\"joinedDate\");" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a `descending` sort, and run it",
                  "body":
                    [ "import { members } from 'wix-groups-backend';",
                      "",
                      "export function myQueryGroupMembersFunction() {",
                      "",
                      "  return members.queryGroupMembers()",
                      "    .descending(\"joinedDate\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const totalPages = results.totalPages;",
                      "        const totalCount = results.totalCount;",
                      "        const currentPage = results.currentPage();",
                      "        const next = results.next();",
                      "        const previous = results.prev();",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "eq",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose value will be compared with `value`. \n\nSupported property:\n+ `role`" },
            { "name": "value",
              "type": "*",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-groups-backend.Members.GroupMembersQueryBuilder",
            "doc": "A `GroupMembersQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 274,
              "filename": "members.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property value equals the specified value.",
            "description":
              [ "The `eq()` function refines a `GroupMembersQueryBuilder` to only",
                "match items where the value of the specified property equals the specified `value`.",
                "",
                "It only matches values of the same type. For example, a number value stored",
                "as a String type does not match the same number stored as a Number type.",
                "",
                "Matching strings with `eq()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Add an equals filter to a query",
                  "body":
                    [ "const query = members.queryGroupMembers().eq(\"role\", \"MEMBER\");" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add an equals filter, and run it",
                  "body":
                    [ "import { members } from 'wix-groups-backend';",
                      "",
                      "export function myQueryGroupMembersFunction() {",
                      "",
                      "  return members.queryGroupMembers()",
                      "    .eq(\"role\", \"ADMIN\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const totalPages = results.totalPages;",
                      "        const totalCount = results.totalCount;",
                      "        const currentPage = results.currentPage();",
                      "        const next = results.next();",
                      "        const previous = results.prev();",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "find",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-groups-backend.Options",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-groups-backend.Members.GroupMembersQueryResult" ] },
            "doc": "Fulfilled - The results of a contacts query, containing the retrieved items.\nWhen you execute a query with the [`find()`](wix-groups-backend.GroupMembersQueryBuilder.html#find)\nfunction, it returns a Promise that resolves to a `GroupMembersQueryResult` object.\nThis object contains the items that match the query, information about the\nquery itself, and functions for paging through the query results." },
        "locations":
          [ { "lineno": 522,
              "filename": "members.js" } ],
        "docs":
          { "summary": "Returns the items that match the query.",
            "description":
              [ "The `find()` function returns a Promise that resolves to the results found",
                "by the query and some information about the results. The Promise is",
                "rejected if `find()` is called with incorrect permissions or if any of the",
                "functions used to refine the query are invalid." ],
            "links": [],
            "examples":
              [ { "title": "Run a query with no filters",
                  "body":
                    [ "const queryResults = members.queryGroupMembers().find();" ],
                  "extra":
                    {  } },
                { "title": "Perform a `find` on a query",
                  "body":
                    [ "import { groups } from 'wix-groups-backend';",
                      "",
                      "export function myQueryGroupsFunction() {",
                      "",
                      "  return createRequests.queryGroups()",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const totalPages = results.totalPages;",
                      "        const totalCount = results.totalCount;",
                      "        const currentPage = results.currentPage();",
                      "        const next = results.next();",
                      "        const previous = results.prev();",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "limit",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "limit",
              "type": "string",
              "doc": "limit The number of items to return, which is also the [`pageSize`](wix-groups-backend.GroupMembersQueryResult.html#pageSize) of the results object." } ],
        "ret":
          { "type": "wix-groups-backend.Members.GroupMembersQueryBuilder",
            "doc": "A `GroupMembersQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 484,
              "filename": "members.js" } ],
        "docs":
          { "summary": "Limits the number of items the query returns.",
            "description":
              [ "The `limit()` function defines the number of results a query returns in each",
                "page. Only one page of results is retrieved at a time. The [`next()`](wix-groups-backend.GroupMembersQueryResult.html#next)",
                "and [`prev()`](wix-groups-backend.GroupMembersQueryResult.html#prev) functions are used to",
                "navigate the pages of a query result.",
                "",
                "By default, `limit` is set to `50`.",
                "",
                "The maximum value that `limit()` can accept is `1000`." ],
            "links": [],
            "examples":
              [ { "title": "Add a `limit` to a query",
                  "body":
                    [ "const query = members.queryGroupMembers().limit(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a `limit`, and run it",
                  "body":
                    [ "import { members } from 'wix-groups-backend';",
                      "",
                      "export function myQueryGroupMembersFunction() {",
                      "",
                      "  return members.queryGroupMembers()",
                      "    .limit(10)",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const totalPages = results.totalPages;",
                      "        const totalCount = results.totalCount;",
                      "        const currentPage = results.currentPage();",
                      "        const next = results.next();",
                      "        const previous = results.prev();",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "ne",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose value will be compared with `value`. \n\nSupported property:\n+ `role`" },
            { "name": "value",
              "type": "*",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-groups-backend.Members.GroupMembersQueryBuilder",
            "doc": "A `GroupMembersQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 296,
              "filename": "members.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property value does not equal the specified value.",
            "description":
              [ "The `ne()` function refines a `GroupMembersQueryBuilder` to only",
                "match items where the value of the specified property does not equal the specified `value`.",
                "",
                "It only matches values of the same type. For example, a number value stored",
                "as a String type does not match the same number stored as a Number type.",
                "",
                "Matching strings with `ne()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`." ],
            "links": [],
            "examples":
              [ { "title": "Add a not equals filter to a query",
                  "body":
                    [ "const query = members.queryGroupMembers().ne(\"role\", \"MEMBER\");" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a not equals filter, and run it",
                  "body":
                    [ "import { members } from 'wix-groups-backend';",
                      "",
                      "export function myQueryGroupMembersFunction() {",
                      "",
                      "  return members.queryGroupMembers()",
                      "    .ne(\"role\", \"ADMIN\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const totalPages = results.totalPages;",
                      "        const totalCount = results.totalCount;",
                      "        const currentPage = results.currentPage();",
                      "        const next = results.next();",
                      "        const previous = results.prev();",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "skip",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "skip",
              "type": "string",
              "doc": "The number of items to skip in the query results before returning the results." } ],
        "ret":
          { "type": "wix-groups-backend.Members.GroupMembersQueryBuilder",
            "doc": "A `GroupMembersQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 502,
              "filename": "members.js" } ],
        "docs":
          { "summary": "Sets the number of items to skip before returning query results.",
            "description":
              [ "The number of items to skip in the query results before returning the results.",
                "",
                "The `skip()` function defines the number of results to skip in the query",
                "results before returning new query results.",
                "",
                "For example, if you query a collection and 50 items match your query, but",
                "you set `skip` to 10, the results returned will skip the first 10 items",
                "that match and return the 11th through 50th items.",
                "",
                "By default, `skip` is set to 0." ],
            "links": [],
            "examples":
              [ { "title": "`Add a `skip` to a query",
                  "body":
                    [ "const query = members.queryGroupMembers().skip(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a `skip`, and run it",
                  "body":
                    [ "import { members } from 'wix-groups-backend';",
                      "",
                      "export function myQueryGroupMembersFunction() {",
                      "",
                      "  return members.queryGroupMembers()",
                      "    .skip(10)",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const totalPages = results.totalPages;",
                      "        const totalCount = results.totalCount;",
                      "        const currentPage = results.currentPage();",
                      "        const next = results.next();",
                      "        const previous = results.prev();",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }