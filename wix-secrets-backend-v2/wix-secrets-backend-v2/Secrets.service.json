{
  "name": "Secrets",
  "memberOf": "wix-secrets-backend-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-secrets-backend.v2-secret",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createSecret",
      "params": [
        {
          "name": "secret",
          "type": [
            {
              "referenceType": "wix-secrets-backend-v2.Secrets.Secret"
            }
          ],
          "doc": "The object including the fields of a new secret.",
          "required": true
        }
      ],
      "requiredFields": [
        "secret",
        "secret.name",
        "secret.value"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-secrets-backend-v2.Secrets.CreateSecretResponse"
                }
              ]
            }
          }
        ],
        "doc": "Fulfilled - The ID of the created secret.\nRejected - Error message.\n"
      },
      "docs": {
        "summary": "Creates a new secret.",
        "description": [
          "The `createSecret()` function returns a Promise that resolves to the newly created secret's ID when a secret is created in the [Secrets Manager](https://support.wix.com/en/article/velo-working-with-the-secrets-manager). Secrets created by this function are available in the Secrets Manager section in your site's dashboard, just like any other secret created using the UI.\n\n>**Notes:**\n> - The secret's name cannot start with `'wix'` or be identical to an existing secret's name.\n> - Don't leave private keys in your code. Leaving them in your code is a security risk. Make sure to delete the keys from the code after running `createSecret()`, or pass the parameters in using the backend [Functional Testing](https://support.wix.com/en/article/velo-functional-testing-in-the-backend) tool."
        ],
        "examples": [
          {
            "title": "Create a new secret ",
            "body": [
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "",
              "export function createNewSecret() {",
              "  const secret = {",
              "\t  name: \"s3_secret_key\",",
              "\t  value: \"Fm8OfflH6bJOwWjenqAtLurLbkiMNvmhQHZV+118\",",
              "\t  description: \"AWS secret access key\"",
              "  };",
              "",
              "  return wixSecretsBackend.createSecret(secret)",
              "    .then((id) => {",
              "      return id;",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}",
              "",
              "/*",
              " * Returns a Promise that resolves to:",
              " *",
              " * \"5ec36ffb-2cec-489a-9c0e-d8f53fef5fd1\"",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createSecret"
    },
    {
      "name": "deleteSecret",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The unique ID of the secret to be deleted.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": "Fulfilled - When the secret is successfully deleted from the Secrets Manager. Rejected - Error message.\n"
      },
      "docs": {
        "summary": "Deletes an existing secret by ID.",
        "description": [
          "The `deleteSecret()` function returns a Promise that resolves when a secret from the [Secrets Manager](https://support.wix.com/en/article/velo-working-with-the-secrets-manager) is deleted. You can retrieve the `_id` parameter using the [`listSecretInfo`](#listSecretInfo) function.\n\n>**Note:**\n> Deleting a secret is irreversible and will break all code using the secret.\n"
        ],
        "examples": [
          {
            "title": "Delete an existing secret ",
            "body": [
              "",
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "",
              "export function deleteMySecret() {",
              "  const id = \"b741766c-eead-46fe-8e7f-fd01ff3d6e21\";",
              "",
              "  return wixSecretsBackend.deleteSecret(id)",
              "    .then(() => {",
              "      console.log(\"Secret deleted\");",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}"
            ]
          },
          {
            "title": "Retrieve an ID and delete a secret ",
            "body": [
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "",
              "export function deleteFirstSecret() {",
              "  return wixSecretsBackend.listSecretInfo()",
              "    .then((secrets) => {",
              "      return wixSecretsBackend.deleteSecret(secrets[0].id);",
              "    })",
              "    .then(() => {",
              "      console.log(\"Secret deleted\");",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}",
              ""
            ],
            "extra": {
              "description": "This example demonstrates how to delete the first secret stored in the Secrets Manager. First we retrieve the ID of the secret using the `listSecretInfo()` function. Then we delete the secret using the retrieved ID."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteSecret"
    },
    {
      "name": "getSecretValue",
      "params": [
        {
          "name": "name",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The name of the secret to get the value of.",
          "required": true
        }
      ],
      "requiredFields": [
        "name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-secrets-backend-v2.Secrets.GetSecretValueResponse"
                }
              ]
            }
          }
        ],
        "doc": "Fulfilled - The value of the secret. Rejected - Error message.\n"
      },
      "docs": {
        "summary": "Retrieves the secret value by the secret name.",
        "description": [
          "The `getSecretValue()` function returns a Promise that resolves to the value of the secret that was stored in the Secrets Manager with the given name.\n\n>**Note:**\n> Only use a secret's value in the backend code. Returning the secret value in the frontend is a security risk."
        ],
        "examples": [
          {
            "title": "Get a secret and use it to fetch a JSON from a 3rd-party service ",
            "body": [
              "",
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "import {getJSON} from 'wix-fetch';",
              "",
              "export function getSomeJSON() {",
              "  return wixSecretsBackend.getSecretValue(\"myApiKeyName\")",
              "    .then((secret) => {",
              "      return getJSON(`https://someapi.com/api/someendpoint?apiKey=${secret}`);",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}",
              "",
              "export function getFirstSecretValue() {",
              "  return wixSecretsBackend.listSecretInfo()",
              "    .then((secrets) => {",
              "      return wixSecretsBackend.getSecretValue(secrets[0].name);",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}"
            ]
          },
          {
            "title": "Retrieve a name and get a secret's value ",
            "body": [
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "",
              "export function getFirstSecretValue() {",
              "  return wixSecretsBackend.listSecretInfo()",
              "    .then((secrets) => {",
              "      return wixSecretsBackend.getSecretValue(secrets[0].name);",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}",
              "",
              "/*",
              " * Returns a Promise that resolves to:",
              " *",
              " * \"Fm8OfflH6bJOwWjenqAtLurLbkiMNvmhQHZV+118\"",
              " */"
            ],
            "extra": {
              "description": "This example demonstrates how to delete the first secret stored in the Secrets Manager. First we retrieve the ID of the secret using the `listSecretInfo()` function. Then we get the value of the secret using the retrieved ID."
            }
          },
          {
            "title": "Get an API key and use it to fetch a JSON from a weather service ",
            "body": [
              "",
              "",
              "/************************************",
              " * Backend code - getWeather.jsw *",
              " ************************************/",
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "import { getJSON } from 'wix-fetch';",
              "",
              "export async function getWeatherJson() {",
              "  const secret = await wixSecretsBackend.getSecretValue(\"openWeatherApiKey\");",
              "  return getJSON(`https://api.openweathermap.org/data/2.5/weather?q=London&units=metric&APPID=${secret}`);",
              "}",
              "",
              "/********************",
              " * Frontend code *",
              " ********************/",
              "",
              "import { getWeatherJson } from 'backend/getWeather';",
              "",
              "export async function getWeather_click(event) {",
              "  let json = await getWeatherJson();",
              "  $w(\"#weather\").text = json.weather[0].description; // \"mist\"",
              "  $w(\"#temp\").text = json.main.temp; // 9.4 (degrees Celsius)",
              "}",
              ""
            ],
            "extra": {
              "description": "In this example, we use the Secrets API to get an API key from the Secrets Manager. We use the key in the backend to fetch a JSON with weather information from a 3rd-party service, and return the JSON to the frontend."
            }
          },
          {
            "title": "Get an API key and use it to send an email with the SendGrid npm interface ",
            "body": [
              "",
              "",
              "/************************************",
              " * Backend code - sendEmail.jsw *",
              " ************************************/",
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "import sendGridMail from '@sendgrid/mail';",
              "",
              "export async function sendEmail(recipient, sender, subject, body) {",
              "  const secret = await wixSecretsBackend.getSecretValue(\"SendGridApiKey\");",
              "  sendGridMail.setApiKey(secret);",
              "  const message = {",
              "    \"to\": recipient,",
              "    \"from\": sender,",
              "    \"subject\": subject,",
              "    \"text\": body",
              "  };",
              "  sendGridMail.send(message);",
              "}",
              "",
              "/********************",
              " * Frontend code *",
              " ********************/",
              "",
              "import { sendEmail } from 'backend/sendEmail';",
              "",
              "export function sendEmailButton_click(event) {",
              "  sendEmail(",
              "    $w(\"#toEmail\").value,",
              "    $w(\"#fromEmail\").value,",
              "    $w(\"#subject\").value,",
              "    $w(\"#emailContent\").value",
              "  )",
              "    .then(() => {",
              "      console.log(\"Email sent\");",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    })",
              "}",
              ""
            ],
            "extra": {
              "description": "In this example, we added the SendGrid package to our site using the Package Manager. We created a backend function that gets an API key from the Secrets Manager, sets it as the SendGrid API key, and sends an email using the SendGrid service. We call the function from the client side when a site visitor submits email information via a form."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getSecretValue"
    },
    {
      "name": "listSecretInfo",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-secrets-backend-v2.Secrets.ListSecretInfoResponse"
                }
              ]
            }
          }
        ],
        "doc": "Fulfilled - A list of objects containing information about your site's secrets. Rejected - Error message.\n"
      },
      "docs": {
        "summary": "Retrieves a list of objects containing information about all secrets stored in the [Secrets Manager](https://support.wix.com/en/article/velo-working-with-the-secrets-manager).",
        "description": [
          "The `listSecretInfo()` function returns a Promise that resolves to a list containing information about all the secrets stored on your site.\n\n> **Notes:**\n> - The secret's value does not get returned for security reasons. To retrieve a secret's value, use the [`getSecretValue()`](#getSecretValue) function.\n> - Do not use `listSecretInfo()` in a **.jsw** file with anonymous permissions! This is a serious security risk which exposes your secrets to potential leaks. To prevent this, implement `listSecretInfo()` in a separate **.js** file to block frontend access. If you must include `listSecretInfo()` in a **.jsw** file, make sure the exported function has [permissions set](https://support.wix.com/en/article/velo-about-web-module-permissions) to **Admin**."
        ],
        "examples": [
          {
            "title": "Get information about your secrets ",
            "body": [
              "",
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "",
              "export function getSecretInfo() {",
              "  return wixSecretsBackend.listSecretInfo()",
              "  .then((secrets) => {",
              "    return secrets;",
              "  })",
              "  .catch((error) => {",
              "    console.error(error);",
              "  });",
              "}",
              "",
              "/* Returns a Promise that resolves to:",
              " * {",
              " *   \"secrets\": [",
              " *     {",
              " *       \"id\": \"2eebccce-6c01-469d-a278-433fd96ba111\",",
              " *       \"createdDate\": \"2020-05-26T06:16:46.000Z\",",
              " *       \"updatedDate\": \"2020-05-28T12:21:10.000Z\",",
              " *       \"name\": \"MyFirstSecret\",",
              " *       \"description\": \"This is my first secret\"",
              " *     },",
              " *     {",
              " *       \"id\": \"ef4b43d4-851d-4b52-a07f-9a500a888371\",",
              " *       \"createdDate\": \"2020-06-02T08:23:54.000Z\",",
              " *       \"updatedDate\": \"2020-06-02T08:23:54.000Z\",",
              " *       \"name\": \"MySecondSecret\",",
              " *       \"description\": \"This is my second secret\"",
              " *     }",
              " *   ]",
              " * }",
              " */"
            ]
          },
          {
            "title": "Retrieve a name and get a secret's value ",
            "body": [
              "",
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "",
              "export function getFirstSecretValue() {",
              "  return wixSecretsBackend.listSecretInfo()",
              "    .then((secrets) => {",
              "      return wixSecretsBackend.getSecretValue(secrets[0].name);",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}",
              "",
              "/*",
              " * Returns a Promise that resolves to:",
              " *",
              " * \"Fm8OfflH6bJOwWjenqAtLurLbkiMNvmhQHZV+118\"",
              " */"
            ]
          },
          {
            "title": "Retrieve an ID and delete a secret ",
            "body": [
              "",
              "import wixSecretsBackend from 'wix-secrets-backend.v2';",
              "",
              "export function deleteFirstSecret() {",
              "  return wixSecretsBackend.listSecretInfo()",
              "    .then((secrets) => {",
              "      return wixSecretsBackend.deleteSecret(secrets[0].id);",
              "    })",
              "    .then(() => {",
              "      console.log(\"Secret deleted\");",
              "    })",
              "    .catch((error) => {",
              "      console.error(error);",
              "    });",
              "}"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listSecretInfo"
    },
    {
      "name": "partiallyUpdateSecret",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The unique id of the secret to be updated",
          "required": true
        },
        {
          "name": "secret",
          "type": [
            {
              "referenceType": "wix-secrets-backend-v2.Secrets.Secret"
            }
          ],
          "doc": "The secret fields with the desired new values",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "secret"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates some or all of the fields of an existing secret",
        "description": [],
        "examples": [
          {
            "title": "partiallyUpdateSecret example",
            "body": [
              "import { secrets } from 'wix-secrets-backend.v2';",
              "  ",
              " async function partiallyUpdateSecret(id, secret) {",
              "   try {",
              "     const result = await secrets.partiallyUpdateSecret(id, secret);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "partiallyUpdateSecret"
    },
    {
      "name": "updateSecret",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The unique id of the secret to be updated",
          "required": true
        },
        {
          "name": "secret",
          "type": [
            {
              "referenceType": "wix-secrets-backend-v2.Secrets.Secret"
            }
          ],
          "doc": "The secret fields with the desired new values",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "secret",
        "secret.name",
        "secret.value"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates all the fields of an existing secret at once",
        "description": [],
        "examples": [
          {
            "title": "updateSecret example",
            "body": [
              "import { secrets } from 'wix-secrets-backend.v2';",
              "  ",
              " async function updateSecret(id, secret) {",
              "   try {",
              "     const result = await secrets.updateSecret(id, secret);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateSecret"
    }
  ],
  "messages": [
    {
      "name": "CreateSecretRequest",
      "members": [
        {
          "name": "secret",
          "type": [
            {
              "referenceType": "wix-secrets-backend-v2.Secrets.Secret"
            }
          ],
          "doc": "The object including the fields of a new secret."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateSecretResponse",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The globally-unique ID assigned to the secret."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteSecretRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The unique ID of the secret to be deleted."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteSecretResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetSecretValueRequest",
      "members": [
        {
          "name": "name",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The name of the secret to get the value of."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetSecretValueResponse",
      "members": [
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The plaintext, unencrypted value of the secret."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListSecretInfoRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListSecretInfoResponse",
      "members": [
        {
          "name": "secrets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-secrets-backend-v2.Secrets.Secret"
                  }
                ]
              }
            }
          ],
          "doc": "Object containing information for each secret."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Secret",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The date and time the secreted was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The secret's unique ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The date and time the secret was last updated."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "An optional text describing the secret's purpose or any other notes about it."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A unique, meaningful name used for retrieving the secret at runtime with the [`getSecretValue`](#getSecretValue) function. You can use alphanumeric characters and the following special characters: `_+=-@#$`. Spaces are not supported."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The confidential secret value to protect, such as an API key."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateSecretRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The unique id of the secret to be updated"
        },
        {
          "name": "secret",
          "type": [
            {
              "referenceType": "wix-secrets-backend-v2.Secrets.Secret"
            }
          ],
          "doc": "The secret fields with the desired new values"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateSecretResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
