{ "name": "wix-members",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "index.js" },
  "docs":
    { "summary": "The wix-members module contains functionality\nfor working with your site members from frontend page code.",
      "description":
        [ "The frontend Wix Members API allows you to manage member access to your site",
          "as well as view and manage the currently logged-in member.",
          "",
          "To use the Wix Members API,",
          "import the applicable named exports from `wix-members`:",
          "",
          "```js",
          "import { authentication, currentMember } from 'wix-members';",
          "```",
          "## Calling Members functions from the browser only",
          "",
          "Most frontend members functions are typically only called from the browser.",
          "",
          "[Server-side rendering](https://support.wix.com/en/article/velo-about-the-page-rendering-process), which is usually helpful to make your page load faster, may cause unwanted effects if you don't explicitly manage which code is running in the browser, and which is executed on the server side, causing the functions to be called twice, potentially with different results.",
          "",
          "The following example shows a simple addition to the `onReady()` function which ensures that only code running on the browser is executed when the page has finished loading. The check always returns immediately when code is not run in the browser, without any result. Any other functions, like `getMember()`, outside the check, will only run once, in the browser.",
          "",
          "```js",
          "import wixWindow from 'wix-window';",
          "import currentMember from 'wix-members';",
          "$w.onReady(function () {",
          "  if (wixWindow.rendering.env !== 'browser')",
          "  return;",
          "  const options = {",
          "    fieldsets: ['PUBLIC']",
          "  };",
          "  currentMember.getMember(options)",
          "  .then(memberInfo => {",
          "    console.log('currentMember.getMember', memberInfo);",
          "  })",
          "  .catch(error => {",
          "    console.error(error);",
          "  });",
          "});",
          "```",
          "For more information on the `wixWindow.rendering.env` property, see [the API reference article](https://www.wix.com/velo/reference/wix-window/rendering-obj/env)." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "authentication",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-members.Authentication",
        "locations":
          [ { "lineno": 80,
              "filename": "index.js" } ],
        "docs":
          { "summary": "The Authentication API contains functionality for authenticating members from frontend code.",
            "description":
              [ "To use the Authentication API, import `{authentication}` from the `wix-members` module:",
                "",
                "```javascript",
                "import { authentication } from 'wix-members';",
                "```" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "currentMember",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-members.CurrentMember",
        "locations":
          [ { "lineno": 54,
              "filename": "index.js" } ],
        "docs":
          { "summary": "The CurrentMember API contains functionality for viewing and managing site members from frontend code.",
            "description":
              [ "To use the CurrentMember API, import `{currentMember}` from the `wix-members` module:",
                "",
                "```javascript",
                "import { currentMember } from 'wix-members';",
                "```" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }