{ "name": "wix-editor",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "editor.js" },
  "docs":
    { "summary": "The wix-editor module contains functionality for working with the Editor from [Blocks Panel](https://support.wix.com/en/article/creating-custom-panels-for-your-widgets-action-bar-buttons) code.",
      "description":
        [ "> **Note**: This API is only relevant for Blocks users. Blocks is a workspace for building Wix apps.",
          "The Editor API is used within the code of panels built with the [Blocks Panel Builder](https://support.wix.com/en/article/creating-custom-panels-for-your-widgets-action-bar-buttons).",
          "It enables your panel to interact with the Editor by adding or removing components on the stage and opening Dashboard panels.",
          "To use the Editor API, import `wixEditor` from the `wix-editor` module:",
          "",
          "```javascript",
          "import wixEditor from 'wix-editor';",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "deleteComponent",
        "labels":
          [ "changed",
            "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "selector",
              "type": "string",
              "doc": "An element selector." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the element is deleted." },
        "locations":
          [ { "lineno": 37,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Deletes (hides) a widget element from the stage.",
            "description":
              [ "The `deleteComponent()` function returns a Promise that is resolved when the element is deleted. You can only delete elements that are part of the widget to which the panel is related.",
                "The element selector is a string with the hash symbol (`#`) followed by the ID of the item you want to select (e.g. `\"#myElement\"`)." ],
            "links": [],
            "examples":
              [ { "title": "Hide an element",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "wixEditor.deleteComponent('#title');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getAllDeletedElements",
        "labels":
          [ "changed",
            "removed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "string" ] } ] },
            "doc": "Fulfilled - A list of roles of deleted (hidden) elements." },
        "locations":
          [ { "lineno": 76,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Gets a list of all deleted (hidden) widget elements.",
            "description":
              [ "The `getAllDeletedElements()` function returns a Promise that resolves to a list of selectors of deleted (hidden) elements that are part of the widget to which the panel is related, for example: `[‘title’, ‘description’]`." ],
            "links": [],
            "examples":
              [ { "title": "Get all the deleted elements",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "const allDeletedElements = await wixEditor.getAllDeletedElements();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getCurrentViewport",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-editor.ViewportInfo" ] },
            "doc": "Fulfilled - Object with the current viewport's information." },
        "locations":
          [ { "lineno": 103,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Gets the viewport currently selected in the Editor.",
            "description":
              [ "The `getCurrentViewport()` function returns a Promise that resolves to an object containing information about the currently selected viewport." ],
            "links": [],
            "examples":
              [ { "title": "Get the current viewport",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "const viewport = await wixEditor.getCurrentViewport();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "isDeleted",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "selector",
              "type": "string",
              "doc": "An element selector." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the element is restored." },
        "locations":
          [ { "lineno": 63,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Checks if an element is deleted.",
            "description":
              [ "The `isDeleted()` function returns a Promise that resolves to `true` if the element is deleted.",
                "The element selector is a string with the hash symbol (`#`) followed by the ID of the item you want to select (e.g. `\"#myElement\"`)." ],
            "links": [],
            "examples":
              [ { "title": "Check if an element is deleted",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "const isDeleted = await wixEditor.isDeleted('#title');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "isRemoved",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "selector",
              "type": "string",
              "doc": "An element selector." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - `true` if the element was deleted and `false` if it exists." },
        "locations":
          [ { "lineno": 65,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Checks if an element is deleted.",
            "description":
              [ "The `isRemoved()` function returns a Promise that resolves to `true` if the element is deleted.",
                "",
                "The element selector is a string with the hash symbol (`#`) followed by the ID of the item you want to select (e.g. `\"#myElement\"`)." ],
            "links": [],
            "examples":
              [ { "title": "Check if an element is deleted",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "const isRemoved = await wixEditor.isRemoved('#title');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listRemovedElements",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "string" ] } ] },
            "doc": "Fulfilled - A list of roles of deleted (hidden) elements." },
        "locations":
          [ { "lineno": 79,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Gets a list of all deleted (hidden) widget elements.",
            "description":
              [ "The `listRemovedElements()` function returns a Promise that resolves to a list of selectors of deleted (hidden) elements that are part of the widget with which the panel is associated, for example: `[‘title’, ‘description’]`." ],
            "links": [],
            "examples":
              [ { "title": "Get all the deleted elements",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "const allRemovedElements = wixEditor.listRemovedElements();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "openDashboardPanel",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-editor.DashboardOptions",
              "doc": "Relative URL for the Dashboard page." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the Dashboard is open." },
        "locations":
          [ { "lineno": 90,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Opens the [Dashboard](https://support.wix.com/en/article/about-your-wix-dashboard) for the current site.",
            "description":
              [ "The `openDashboardPanel()` function returns a Promise that resolves when the Dashboard is open.",
                "The `url` parameter specifies the page to open within the Dashboard." ],
            "links": [],
            "examples":
              [ { "title": "Open a dashboard panel",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "wixEditor.openDashboardPanel({url: 'blog'});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "removeElement",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "selector",
              "type": "string",
              "doc": "An element selector." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the element is deleted." },
        "locations":
          [ { "lineno": 38,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Deletes (hides) a widget element from the stage.",
            "description":
              [ "The `removeElement()` function returns a Promise that is resolved when the element is deleted. You can only delete elements that are part of the widget with which the panel is associated.  ",
                "The element selector is a string with the hash symbol (`#`) followed by the ID of the item you want to select (for example, `\"#myElement\"`)." ],
            "links": [],
            "examples":
              [ { "title": "Hide an element",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "wixEditor.removeElement('#title');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "restoreComponent",
        "labels":
          [ "changed",
            "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "selector",
              "type": "string",
              "doc": "An element selector." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the element is restored." },
        "locations":
          [ { "lineno": 50,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Restores (shows) a widget element on the stage.",
            "description":
              [ "The `restoreComponent()` function returns a Promise that is resolved when the element is restored. You can only restore elements that are part of the widget to which the panel is related.",
                "The element selector is a string with the hash symbol (`#`) followed by the ID of the item you want to select (e.g. `\"#myElement\"`)." ],
            "links": [],
            "examples":
              [ { "title": "Show an element",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "wixEditor.restoreComponent('#title');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "restoreElement",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "selector",
              "type": "string",
              "doc": "An element selector." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - when the element is restored." },
        "locations":
          [ { "lineno": 51,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "Restores (shows) a widget element on the stage.",
            "description":
              [ "The `restoreElement()` function returns a Promise that is resolved when the element is restored. You can only restore elements that are part of the widget with which the panel is associated.",
                "",
                "The element selector is a string with the hash symbol (`#`) followed by the ID of the item you want to select (for example, `\"#myElement\"`)." ],
            "links": [],
            "examples":
              [ { "title": "Show an element",
                  "body":
                    [ "import wixEditor from 'wix-editor';",
                      "",
                      "// ...",
                      "",
                      "wixEditor.restoreElement('#title');" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "DashboardOptions",
        "locations":
          [ { "lineno": 15,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "An object representing the Dashboard parameters.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "url",
              "type": "string",
              "doc": "The relative URL to open in the Business Manager." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ViewportInfo",
        "locations":
          [ { "lineno": 22,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "An object representing the current viewport.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "Type of viewport (`DESKTOP`, `MOBILE`, or `TABLET`)" },
            { "type": "wix-editor.viewportRange" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "viewportRange",
        "locations":
          [ { "lineno": 30,
              "filename": "editor.js" } ],
        "docs":
          { "summary": "An object representing the current viewport's range.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "min",
              "type": "number",
              "doc": "Minimum range in pixels for the current viewport." },
            { "name": "max",
              "type": "number",
              "doc": "Maximum range in pixels for the current viewport." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }