{ "name": "wix-bookings-frontend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "bookings.js" },
  "docs":
    { "summary": "The wix-bookings-frontend module contains functionality for working with\n bookings from client-side code.",
      "description":
        [ "Using the Bookings API, you can build a customized bookings experience ",
          " for customers to book and check out a service.",
          "",
          " With the Bookings API, you can:",
          " + See the available slots and payment options for a service.",
          " + Book a service and process payment. ",
          "",
          " Learn more by reviewing this [sample flow](wix-bookings.html#sample-flow). ",
          "",
          " To use the Bookings API, import `wixBookingsFrontend` from the `wix-bookings-frontend` module:",
          "",
          "   ```javascript",
          "   import wixBookingsFrontend from 'wix-bookings-frontend';",
          "   ```",
          "",
          " ## Before you begin ",
          "",
          " It's important to note the following points before starting to code:  ",
          "",
          " + You must upgrade your site to a [Premium Business Plan](https://support.wix.com/en/article/upgrading-wix-bookings) in order to accept bookings and receive payments.",
          "",
          " + To process bookings on your site, first set up your site to accept bookings",
          "   as described in [About Wix Bookings](https://support.wix.com/en/article/about-wix-bookings).",
          "",
          " ## Terminology",
          "",
          " + **Resource**: A business asset like a staff member, a room, ",
          "   or equipment needed to provide a service.",
          " ",
          " + **Booking**: Information about an order placed by a customer for a service or ",
          "   series of services. Includes details about the time, location, participants, and price.",
          "",
          " + **Service**: A business offering that you can book. For example, ",
          "   a fitness studio may offer a 1-hour yoga class, a 45 minute HIIT ",
          "   training session, and a 30 minute 1-on-1 personal training. Wix Bookings ",
          "   offers 3 types of services: ",
          "",
          "     + [**Appointment**](https://support.wix.com/en/article/creating-the-right-booking-service-for-your-business#appointments): A specific time slot that a customer can book in a calendar.",
          "",
          "     + [**Class**](https://support.wix.com/en/article/creating-the-right-booking-service-for-your-business#classes): A single session or a set of sessions that are offered on specific days and at specific times.",
          "",
          "     + [**Course**](https://support.wix.com/en/article/creating-the-right-booking-service-for-your-business#courses): A multi-session course, or a workshop that starts and ends on a particular day. Customers sign up for the entire course and not one session.",
          " ",
          " + **Sessions**: A reserved period of time for an appointment, class, ",
          "   or course, or a period of availability for a resource.",
          "",
          " + **Schedule**: A collection of sessions and the information needed ",
          "   to calculate availability. ",
          "",
          " + **Slot**: An available period of time in a schedule that can be booked ",
          "   by a customer. While this includes existing sessions that are available ",
          "   for booking, it can also represent a period of time that can be booked ",
          "   based on the availability of a resource (for example, a barber with ",
          "   appointments of 30 minutes each that are open for booking every weekday ",
          "   between 8:00 - 17:00). These slots are calculated by the constraints of ",
          "   the schedule.",
          "",
          " + [**Calendar**](https://support.wix.com/en/article/wix-bookings-about-the-wix-booking-calendar): Where you schedule appointments, classes, and courses.",
          "",
          " + [**Membership plans with Wix Pricing Plans**](https://support.wix.com/en/article/wix-bookings-about-wix-bookings#selling-membership-plans-and-packages): A prepaid bundle of services, or a membership ",
          "   including access to certain services. Access a member's pricing plans with APIs by ",
          "   calling the [`checkoutBooking()`](wix-bookings-frontend/checkoutBooking) function." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations": [],
  "callbacks": [],
  "messages":
    [ { "name": "Address",
        "locations":
          [ { "lineno": 130,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object that contains address information.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "formatted",
              "type": "string",
              "doc": "Full text address comprised of street name and number, city, subdivision, country, and postal code." },
            { "name": "location",
              "type": "wix-bookings-frontend.AddressCoordinates",
              "doc": "Address coordinates." },
            { "name": "streetAddress",
              "type": "wix-bookings-frontend.StreetAddress",
              "doc": "Address street address." },
            { "name": "city",
              "type": "string",
              "doc": "Address city." },
            { "name": "subdivision",
              "type": "string",
              "doc": "Address subdivision, state, prefecture, or province." },
            { "name": "country",
              "type": "string",
              "doc": "Address country." },
            { "name": "postalCode",
              "type": "string",
              "doc": "Address postal code." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "AddressCoordinates",
        "locations":
          [ { "lineno": 142,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object that contains the geographic coordinates of the address.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "latitude",
              "type": "number",
              "doc": "Address latitude." },
            { "name": "longitude",
              "type": "number",
              "doc": "Address longitude." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "AvailabilityOptions",
        "locations":
          [ { "lineno": 72,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object used when calling [`getServiceAvailability()`](#getServiceAvailability)\n containing options for which slots should be returned.",
            "links": [],
            "examples":
              [ { "title": "Get the available slots for a service for a specific date range",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "// ...",
                      "",
                      "let serviceId = // get service ID",
                      "",
                      "let today = new Date();",
                      "let startRange = new Date();",
                      "let endRange = new Date();",
                      "startRange.setDate(today.getDate() + 7);  // one week from now",
                      "endRange.setDate(today.getDate() + 14);   // two weeks from now",
                      "",
                      "let options = {",
                      "  startDateTime: startRange,",
                      "  endDateTime: endRange",
                      "};",
                      "",
                      "wixBookingsFrontend.getServiceAvailability(serviceId, options)",
                      "  .then( (availability) => {",
                      "    let slots = availability.slots;",
                      "    let firstSlot = slots[0];",
                      "  } );",
                      "",
                      "/* firstSlot:",
                      " * {",
                      " *   \"_id\": \"eyIjoxN2xhc3NJbnN0YW5jZUlkIjoiNjc4ZDYyMzItZ\",",
                      " *   \"startDateTime\": \"2018-11-20T08:00:00Z\",",
                      " *   \"endDateTime\": \"2018-11-20T09:00:00Z\",",
                      " *   \"serviceId\": \"a642caa6-1aba-4aa4-9f07-5aed39fbd3ba\",",
                      " *   \"capacity\": 20,",
                      " *   \"remainingSpots\": 20,",
                      " *   \"staffMemberId\": \"5a55aa7c-8e5d-488a-8191-7d430f2cdcc2\"",
                      " *   \"location\": {",
                      " *   \"type\": \"OWNER_BUSINESS\",",
                      " *   \"businessLocation\": {        ",
                      " *       \"id\": \"d3cd28cf-4415-4680-9fa3-f690484e7432\",",
                      " *       \"name\": \"New York Office\",",
                      " *       \"description\": \"Our Office in NY\",",
                      " *       \"address\": {",
                      " *           \"formatted\": \"100 Gansevoort St, New York, NY 10014, United States\",",
                      " *           \"location\": {",
                      " *               \"latitude\": 40.7391622,",
                      " *               \"longitude\": -74.0113215",
                      " *           },",
                      " *           \"streetAddress\": {",
                      " *           \"name\": \"Gansevoort St\",",
                      " *           \"number\": \"100\"",
                      " *           },",
                      " *           \"city\": \"New York\",",
                      " *           \"subdivision\": \"New York\", ",
                      " *           \"country\": US\",",
                      " *           \"postalCode\": \"NY 10014\"",
                      " *       }",
                      " *     }",
                      " *   }",
                      " *   \"bookable\": false,",
                      " *   \"constraints\": {",
                      " *     \"bookableFrom\": \"2018-12-12T14:00:00.000Z\",",
                      " *     \"bookableUntil\": \"2019-01-16T14:00:00.000Z\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "startDateTime",
              "type": "Date",
              "doc": "Start date and time of the slots\n to be returned. Defaults to the current date and time.",
              "optional": true },
            { "name": "endDateTime",
              "type": "Date",
              "doc": "End date and time of the slots to\n be returned. Defaults to one week from `startDateTime`, which is one week\n from the current date and time if `startDateTime` is also omitted.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "BookingInfo",
        "locations":
          [ { "lineno": 164,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object used when calling [`checkoutBooking()`](#checkoutBooking)\n containing information about the slot to be booked.",
            "links": [],
            "examples":
              [ { "title": "Book a service",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "// ...",
                      "",
                      "let chosenSlot = // get chosen slot",
                      "",
                      "let formFieldValues = [",
                      "  {",
                      "    \"_id\": \"20657271-c55f-43d6-adfd-39b7acc38e11\", // name field ID",
                      "    \"value\": \"John Doe\"",
                      "  }, {",
                      "    \"_id\": \"87edd4e0-42b1-4802-8766-584f3eeb6436\", // email field ID",
                      "    \"value\": \"john@doe.com\"",
                      "  }",
                      "];",
                      "",
                      "let bookingInfo = {",
                      "  \"slot\": chosenSlot,",
                      "  \"formFields\": formFieldValues",
                      "};",
                      "",
                      "wixBookingsFrontend.checkoutBooking(bookingInfo)",
                      "  .then( (results) => {",
                      "    let id = results.bookingId;",
                      "    let status = results.status;",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "slot",
              "type": "wix-bookings-frontend.Slot",
              "doc": "The slot to be booked." },
            { "name": "formFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-frontend.FormField" ] },
              "doc": "List of form field values required to book the session." },
            { "name": "numberOfSpots",
              "type": "number",
              "doc": "Number of spots to book. Defaults to `1`.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "BookingResult",
        "locations":
          [ { "lineno": 243,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object representing the result of a call to [`checkoutBooking()`](#checkoutBooking).",
            "links": [],
            "examples":
              [ { "title": "Book a service with payment options",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "// ...",
                      "",
                      "let chosenSlot = // get chosen slot",
                      "",
                      "let formFieldValues = [",
                      "  {",
                      "    \"_id\": \"20657271-c55f-43d6-adfd-39b7acc38e11\", // name field ID",
                      "    \"value\": \"John Doe\"",
                      "  }, {",
                      "    \"_id\": \"87edd4e0-42b1-4802-8766-584f3eeb6436\", // email field ID",
                      "    \"value\": \"john@doe.com\"",
                      "  }",
                      "];",
                      "",
                      "let bookingInfo = {",
                      "  \"slot\": chosenSlot,",
                      "  \"formFields\": formFieldValues",
                      "};",
                      "",
                      "let options = {",
                      "  \"paymentType\": \"wixPay_Offline\",",
                      "  \"couponCode\": \"thecouponcode\"",
                      "}",
                      "",
                      "wixBookingsFrontend.checkoutBooking(bookingInfo, options)",
                      "  .then( (results) => {",
                      "    let id = results.bookingId;",
                      "    let status = results.status;",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "ID of the booking that was checked out." },
            { "name": "status",
              "type": "string",
              "doc": "Status of the booking that was checked out.\n One of:\n\n + `\"Confirmed\"`: Payment was successful or payment is to be done offline.\n + `\"Pending Payment\"`: Payment is pending.\n + `\"Terminated\"`: Payment failed or was cancelled." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "BusinessLocation",
        "locations":
          [ { "lineno": 121,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object describing the business location.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Business location ID." },
            { "name": "name",
              "type": "string",
              "doc": "Business location name." },
            { "name": "description",
              "type": "string",
              "doc": "Business location description." },
            { "name": "address",
              "type": "wix-bookings-frontend.Address",
              "doc": "An object describing the address." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "CheckoutOption",
        "locations":
          [ { "lineno": 216,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object returned after calling [`getCheckoutOptions()`](#getCheckoutOptions)\n containing information about the available payment options for the service and the logged-in user.",
            "links": [],
            "examples":
              [ { "title": "Get the payment options for the service that are available to the logged-in user.",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "import wixUsers from 'wix-users';",
                      "",
                      "",
                      "// ...",
                      "",
                      "let user = wixUsers.currentUser;",
                      "let currentUserId = user.id;     ",
                      "",
                      "// get available slot with `getServiceAvailability()`",
                      "",
                      "let options = {",
                      "  \"slotId\": slot._id,",
                      "  \"userId\": currentUserId",
                      "}",
                      "",
                      "wixBookingsFrontend.getCheckoutOptions(options)",
                      "  .then((checkoutOptions) => {",
                      "     let firstOptionType = checkoutOptions[0].type;",
                      "  });",
                      "",
                      "/* An object containing checkout options:  ",
                      " * {",
                      " *   [",
                      " *    { ",
                      " *      \"type\":\"wixPay_Online\"",
                      " *    },",
                      " *    {",
                      " *      \"type\":\"wixPay_Offline\"",
                      " *    },",
                      " *    {",
                      " *      \"type\":\"membership\",",
                      " *      \"planName\":\"Frequent Flier\",",
                      " *      \"planOrderId\":\"b1a75-...-a236\",",
                      " *      \"planExpiration\":\"2021-01-08T11:39:29.218Z\",",
                      " *      \"benefitId\":\"93de9c-...-48e6\"",
                      " *    },",
                      " *    {",
                      " *      \"type\":\"package\",",
                      " *      \"planName\":\"Repeat Customer\",",
                      " *      \"planOrderId\":\"9551f-...-1b8039\",",
                      " *      \"planExpiration\":\"2020-07-08T11:39:11.340Z\",",
                      " *      \"benefitId\":\"8b11cc-...-67a49e\",",
                      " *      \"remainingCredits\":58,",
                      " *      \"totalCredits\":60",
                      " *    }",
                      " *  ]",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Book a service with the pricing plan payment option",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "let serviceId = // get chosen serviceId;",
                      "",
                      "let formFieldValues = [",
                      "  {",
                      "    \"_id\": \"00000000-0000-0000-0000-000000000001\", // name field ID",
                      "    \"value\": \"Joe Smith\"",
                      "  }, {",
                      "    \"_id\": \"00000000-0000-0000-0000-000000000003\", // Phone field ID",
                      "    \"value\": \"0987654321\"",
                      "  },{",
                      "    \"_id\": \"00000000-0000-0000-0000-000000000002\", // email field ID",
                      "    \"value\": \"abc@abc\"",
                      "  }",
                      "];",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  wixBookingsFrontend.getServiceAvailability(serviceId)",
                      "    .then( (availability) => {\t\t",
                      "      let slots = availability.slots;",
                      "      slot = slots[0];",
                      "\t    let slotId = slot._id; ",
                      "\t  ",
                      "      wixBookingsFrontend.getCheckoutOptions({slotId})",
                      "        .then( (checkoutOptions) => {",
                      "",
                      "          // Make sure each option object in ",
                      "          // the array of the repeater's data",
                      "          // has a unique _id. ",
                      "",
                      "          checkoutOptions.forEach((option, index) => {",
                      "\t\t\t\t\t\toption._id = index.toString(); ",
                      "\t\t\t\t\t});",
                      "         })",
                      "",
                      "         $w('#myRepeater').data = checkoutOptions;",
                      "       });",
                      "\t} );",
                      "\t",
                      "  $w(\"#myRepeater\").onItemReady( ($item, itemData, index) => {",
                      "    $item(\"#title\").text = itemData.type;",
                      "    $item(\"#selectButton\").onClick( (event) => {\t\t\t",
                      "      let paymentOptions = {",
                      "        \"paymentType\": itemData.type",
                      "\t  };",
                      "\t  ",
                      "    if ((itemData.type === \"package\") || (itemData.type === \"membership\")) {",
                      "      paymentOptions.paidPlan = {};",
                      "      paymentOptions.paidPlan.planOrderId = itemData.planOrderId;",
                      "      paymentOptions.paidPlan.benefitId = itemData.benefitId;",
                      "\t};",
                      "\t",
                      "    let bookingInfo = {",
                      "      \"slot\": slot,",
                      "      \"formFields\": formFieldValues",
                      "    };",
                      "",
                      "    wixBookingsFrontend.checkoutBooking(bookingInfo, paymentOptions)",
                      "      .then( (results) => {",
                      "        let id = results.bookingId;",
                      "        let status = results.status;",
                      "\t  } );",
                      "\t} );",
                      "\t",
                      "  });",
                      "});",
                      "" ],
                  "extra":
                    { "description": "We find the next available slot for a given service. Using this slot, we display the service's available payment options\n for the logged-in visitor in a repeater. If a pricing plan is selected as the payment option, we add the plan's order ID\n and  benefit ID to the payment options to use for the booking." } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "Type of the available payment option. Valid options are:\n\n + `\"wixPay_Online\"` for online collections\n + `\"wixPay_Offline\"` for offline collections\n + `\"package\"` for a package-type pricing plan\n + `\"membership\"` for a membership-type pricing plan" },
            { "name": "planName",
              "type": "string",
              "doc": "Name of the plan package or membership. For booking with pricing plans only.",
              "optional": true },
            { "name": "planOrderId",
              "type": "string",
              "doc": "Order ID of the plan package or membership. For booking with pricing plans only.",
              "optional": true },
            { "name": "benefitId",
              "type": "string",
              "doc": "ID of the benefit provided by the plan package. For booking with package-type pricing plans only.",
              "optional": true },
            { "name": "remainingCredits",
              "type": "number",
              "doc": "Number of sessions remaining in the plan package. For booking with package-type pricing plans only.",
              "optional": true },
            { "name": "totalCredits",
              "type": "number",
              "doc": "Number of sessions initially provided with the plan package.  For booking with package-type pricing plans only.",
              "optional": true },
            { "name": "planExpiration",
              "type": "Date",
              "doc": "Date by which the plan package or membership expires. For booking with pricing plans only.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "CheckoutOptionOptions",
        "locations":
          [ { "lineno": 156,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object used to request checkout options for the service. Currently, you can request the checkout options using the ID of a slot.",
            "links": [],
            "examples":
              [ { "title": "Get the payment options for the service that are available to the logged-in user",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "import wixUsers from 'wix-users';",
                      "",
                      "",
                      "// ...",
                      "",
                      "let user = wixUsers.currentUser;",
                      "let currentUserId = user.id;     ",
                      "",
                      "// get available slot with `getServiceAvailability()`",
                      "",
                      "let options = {",
                      "  \"slotId\": slot._id,",
                      "  \"userId\": currentUserId",
                      "}",
                      "",
                      "wixBookingsFrontend.getCheckoutOptions(options)",
                      "  .then((checkoutOptions) => {",
                      "     let firstOptionType = checkoutOptions[0].type;",
                      "  });",
                      "",
                      "/* An object containing checkout options:  ",
                      " * {",
                      " *   [",
                      " *    { ",
                      " *      \"type\":\"wixPay_Online\"",
                      " *    },",
                      " *    {",
                      " *      \"type\":\"wixPay_Offline\"",
                      " *    },",
                      " *    {",
                      " *      \"type\":\"membership\",",
                      " *      \"planName\":\"Frequent Flier\",",
                      " *      \"planOrderId\":\"b1a75-...-a236\",",
                      " *      \"planExpiration\":\"2021-01-08T11:39:29.218Z\",",
                      " *      \"benefitId\":\"93de9c-...-48e6\"",
                      " *    },",
                      " *    {",
                      " *      \"type\":\"package\",",
                      " *      \"planName\":\"Repeat Customer\",",
                      " *      \"planOrderId\":\"9551f-...-1b8039\",",
                      " *      \"planExpiration\":\"2020-07-08T11:39:11.340Z\",",
                      " *      \"benefitId\":\"8b11cc-...-67a49e\",",
                      " *      \"remainingCredits\":58,",
                      " *      \"totalCredits\":60",
                      " *    }",
                      " *  ]",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "slotId",
              "type": "string",
              "doc": "Unique slot identifier." },
            { "name": "userId",
              "type": "string",
              "doc": "User ID for the customer making the booking. Used for retrieving valid payment plans for the customer for the selected slot." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "Constraints",
        "locations":
          [ { "lineno": 175,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object that defines a booking window for limiting when a member can book a slot. For example,\n you can prevent members from booking a service too far in advance, because perhaps the service might\n be discontinued by then. Or, you can prevent members from booking a service right before it starts, as\n this would make it hard to schedule resources.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "bookableFrom",
              "type": "Date",
              "doc": "Date from which a member is allowed to book a slot." },
            { "name": "bookableUntil",
              "type": "Date",
              "doc": "Date until which a member is allowed to book a slot." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "FormField",
        "locations":
          [ { "lineno": 186,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object used when calling [`checkoutBooking()`](#checkoutBooking)\n containing values for form fields required to book the session.",
            "links": [],
            "examples":
              [ { "title": "Book a service",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "// ...",
                      "",
                      "let chosenSlot = // get chosen slot",
                      "",
                      "let formFieldValues = [",
                      "  {",
                      "    \"_id\": \"20657271-c55f-43d6-adfd-39b7acc38e11\", // name field ID",
                      "    \"value\": \"John Doe\"",
                      "  }, {",
                      "    \"_id\": \"87edd4e0-42b1-4802-8766-584f3eeb6436\", // email field ID",
                      "    \"value\": \"john@doe.com\"",
                      "  }",
                      "];",
                      "",
                      "let bookingInfo = {",
                      "  \"slot\": chosenSlot,",
                      "  \"formFields\": formFieldValues",
                      "};",
                      "",
                      "wixBookingsFrontend.checkoutBooking(bookingInfo)",
                      "  .then( (results) => {",
                      "    let id = results.bookingId;",
                      "    let status = results.status;",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "ID of the form field from the **form** property in the **Booking/Services** collection." },
            { "name": "value",
              "type": "string",
              "doc": "Form field value." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "Location",
        "locations":
          [ { "lineno": 110,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "The location where a service is offered.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "Location type. Valid options are:\n- `\"OWNER_BUSINESS\"` The business address set by the owner. This type is set when choosing **Business Address** in the Service Details page of the dashboard, and populates the businessLocation object. \n- `\"OWNER_CUSTOM\"` A custom address set by the owner. This type is set when choosing **Custom Location** in the Service Details page of the dashboard, and populates the `locationText` property.\n- `\"CUSTOM\"` An address set for the individual booking, usually chosen by the customer and entered in the booking form." },
            { "name": "locationText",
              "type": "string",
              "doc": "Text describing the location." },
            { "name": "businessLocation",
              "type": "wix-bookings-frontend.BusinessLocation",
              "doc": "An object describing the business location." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "PaymentOptions",
        "locations":
          [ { "lineno": 195,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object used when calling [`checkoutBooking()`](#checkoutBooking)\n containing information about the payment options.",
            "links": [],
            "examples":
              [ { "title": "Book a service with online or offline payment options",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "// ...",
                      "",
                      "let chosenSlot = // get chosen slot",
                      "",
                      "let formFieldValues = [",
                      "  {",
                      "    \"_id\": \"20657271-c55f-43d6-adfd-39b7acc38e11\", // name field ID",
                      "    \"value\": \"John Doe\"",
                      "  }, {",
                      "    \"_id\": \"87edd4e0-42b1-4802-8766-584f3eeb6436\", // email field ID",
                      "    \"value\": \"john@doe.com\"",
                      "  }",
                      "];",
                      "",
                      "let bookingInfo = {",
                      "  \"slot\": chosenSlot,",
                      "  \"formFields\": formFieldValues",
                      "};",
                      "",
                      "let options = {",
                      "  \"paymentType\": \"wixPay_Offline\",",
                      "  \"couponCode\": \"thecouponcode\"",
                      "}",
                      "",
                      "wixBookingsFrontend.checkoutBooking(bookingInfo, options)",
                      "  .then( (results) => {",
                      "    let id = results.bookingId;",
                      "    let status = results.status;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Book a service with the pricing plan payment option",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "let serviceId = // get chosen serviceId;",
                      "",
                      "let formFieldValues = [",
                      "  {",
                      "    \"_id\": \"00000000-0000-0000-0000-000000000001\", // name field ID",
                      "    \"value\": \"Joe Smith\"",
                      "  }, {",
                      "    \"_id\": \"00000000-0000-0000-0000-000000000003\", // Phone field ID",
                      "    \"value\": \"0987654321\"",
                      "  },{",
                      "    \"_id\": \"00000000-0000-0000-0000-000000000002\", // email field ID",
                      "    \"value\": \"abc@abc\"",
                      "  }",
                      "];",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  wixBookingsFrontend.getServiceAvailability(serviceId)",
                      "    .then( (availability) => {\t\t",
                      "      let slots = availability.slots;",
                      "      slot = slots[0];",
                      "\t    let slotId = slot._id; ",
                      "\t  ",
                      "      wixBookingsFrontend.getCheckoutOptions({slotId})",
                      "        .then( (checkoutOptions) => {",
                      "",
                      "          // Make sure each option object in ",
                      "          // the array of the repeater's data",
                      "          // has a unique _id. ",
                      "",
                      "          checkoutOptions.forEach((option, index) => {",
                      "\t\t\t\t\t\toption._id = index.toString(); ",
                      "\t\t\t\t\t});",
                      "         })",
                      "",
                      "         $w('#myRepeater').data = checkoutOptions;",
                      "       });",
                      "\t} );",
                      "\t",
                      "  $w(\"#myRepeater\").onItemReady( ($item, itemData, index) => {",
                      "    $item(\"#title\").text = itemData.type;",
                      "    $item(\"#selectButton\").onClick( (event) => {\t\t\t",
                      "      let paymentOptions = {",
                      "        \"paymentType\": itemData.type",
                      "\t  };",
                      "\t  ",
                      "    if ((itemData.type === \"package\") || (itemData.type === \"membership\")) {",
                      "      paymentOptions.paidPlan = {};",
                      "      paymentOptions.paidPlan.planOrderId = itemData.planOrderId;",
                      "      paymentOptions.paidPlan.benefitId = itemData.benefitId;",
                      "\t};",
                      "\t",
                      "    let bookingInfo = {",
                      "      \"slot\": slot,",
                      "      \"formFields\": formFieldValues",
                      "    };",
                      "",
                      "    wixBookingsFrontend.checkoutBooking(bookingInfo, paymentOptions)",
                      "      .then( (results) => {",
                      "        let id = results.bookingId;",
                      "        let status = results.status;",
                      "\t  } );",
                      "\t} );",
                      "\t",
                      "  });",
                      "});",
                      "" ],
                  "extra":
                    { "description": "We find the next available slot for a given service. Using this slot, we display the service's available payment options\n for the logged-in visitor in a repeater. If a pricing plan is selected as the payment option, we add the plan's order ID\n and benefit ID to the payment options to use for the booking." } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "paymentType",
              "type": "string",
              "doc": "Type of payment. Valid options are:\n\n  + `\"wixPay_Online\"` for online collections\n  + `\"wixPay_Offline\"` for offline collections\n  + `\"package\"` for a package-type pricing plan\n  + `\"membership\"` for a membership-type pricing plan" },
            { "name": "couponCode",
              "type": "string",
              "doc": "A coupon code to be used with the payment.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "ServiceAvailability",
        "locations":
          [ { "lineno": 84,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object returned from [`getServiceAvailability()`](#getServiceAvailability)\n containing the available bookings slots.",
            "links": [],
            "examples":
              [ { "title": "Get the available slots for a service",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "// ...",
                      "",
                      "let serviceId = // get service ID",
                      "",
                      "wixBookingsFrontend.getServiceAvailability(serviceId)",
                      "  .then( (availability) => {",
                      "    let slots = availability.slots;",
                      "    let firstSlot = slots[0];",
                      "  } );",
                      "",
                      "/* firstSlot:",
                      " * {",
                      " *   \"_id\": \"eyIjoxN2xhc3NJbnN0YW5jZUlkIjoiNjc4ZDYyMzItZ\",",
                      " *   \"startDateTime\": \"2018-11-20T08:00:00Z\",",
                      " *   \"endDateTime\": \"2018-11-20T09:00:00Z\",",
                      " *   \"serviceId\": \"a642caa6-1aba-4aa4-9f07-5aed39fbd3ba\",",
                      " *   \"capacity\": 20,",
                      " *   \"remainingSpots\": 20,",
                      " *   \"staffMemberId\": \"5a55aa7c-8e5d-488a-8191-7d430f2cdcc2\",",
                      " *   \"location\": {",
                      " *      \"type\": \"OWNER_BUSINESS\",",
                      " *      \"businessLocation\": {        ",
                      " *          \"id\": \"d3cd28cf-4415-4680-9fa3-f690484e7432\",",
                      " *          \"name\": \"New York Office\",",
                      " *          \"description\": \"Our Office in NY\",",
                      " *          \"address\": {",
                      " *              \"formatted\": \"100 Gansevoort St, New York, NY 10014, United States\",",
                      " *              \"location\": {",
                      " *                  \"latitude\": 40.7391622,",
                      " *                  \"longitude\": -74.0113215",
                      " *              },",
                      " *              \"streetAddress\": {",
                      " *              \"name\": \"Gansevoort St\",",
                      " *              \"number\": \"100\"",
                      " *              },",
                      " *              \"city\": \"New York\",",
                      " *              \"subdivision\": \"New York\", ",
                      " *              \"country\": US\",",
                      " *              \"postalCode\": \"NY 10014\"",
                      " *          }",
                      " *      }",
                      " *   }",
                      " *   \"bookable\": false,",
                      " *   \"constraints\": { ",
                      " *     \"bookableFrom\": \"2018-12-12T14:00:00.000Z\",",
                      " *     \"bookableUntil\": \"2019-01-16T14:00:00.000Z\"",
                      " *   } ",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "slots",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-frontend.Slot" ] },
              "doc": "List of the available slots.\n\nMax: 500 slots" } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "Slot",
        "locations":
          [ { "lineno": 94,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object representing a booking slot.",
            "links": [],
            "examples":
              [ { "title": "Get the available slots for a service",
                  "body":
                    [ "import wixBookingsFrontend from 'wix-bookings-frontend';",
                      "",
                      "// ...",
                      "",
                      "let serviceId = // get service ID",
                      "",
                      "wixBookingsFrontend.getServiceAvailability(serviceId)",
                      "  .then( (availability) => {",
                      "    let slots = availability.slots;",
                      "    let firstSlot = slots[0];",
                      "  } );",
                      "",
                      "/* firstSlot:",
                      " * {",
                      " *   \"_id\": \"eyIjoxN2xhc3NJbnN0YW5jZUlkIjoiNjc4ZDYyMzItZ\",",
                      " *   \"startDateTime\": \"2018-11-20T08:00:00Z\",",
                      " *   \"endDateTime\": \"2018-11-20T09:00:00Z\",",
                      " *   \"serviceId\": \"a642caa6-1aba-4aa4-9f07-5aed39fbd3ba\",",
                      " *   \"capacity\": 20,",
                      " *   \"remainingSpots\": 20,",
                      " *   \"staffMemberId\": \"5a55aa7c-8e5d-488a-8191-7d430f2cdcc2\",",
                      " *   \"location\": {",
                      " *      \"type\": \"OWNER_BUSINESS\",",
                      " *      \"businessLocation\": {        ",
                      " *          \"id\": \"d3cd28cf-4415-4680-9fa3-f690484e7432\",",
                      " *          \"name\": \"New York Office\",",
                      " *          \"description\": \"Our Office in NY\",",
                      " *          \"address\": {",
                      " *              \"formatted\": \"100 Gansevoort St, New York, NY 10014, United States\",",
                      " *              \"location\": {",
                      " *                  \"latitude\": 40.7391622,",
                      " *                  \"longitude\": -74.0113215",
                      " *              },",
                      " *              \"streetAddress\": {",
                      " *              \"name\": \"Gansevoort St\",",
                      " *              \"number\": \"100\"",
                      " *              },",
                      " *              \"city\": \"New York\",",
                      " *              \"subdivision\": \"New York\", ",
                      " *              \"country\": US\",",
                      " *              \"postalCode\": \"NY 10014\"",
                      " *          }",
                      " *      }",
                      " *   }",
                      " *   \"bookable\": false,",
                      " *   \"constraints\": { ",
                      " *     \"bookableFrom\": \"2018-12-12T14:00:00.000Z\",",
                      " *     \"bookableUntil\": \"2019-01-16T14:00:00.000Z\"",
                      " *   } ",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Unique slot identifier." },
            { "name": "startDateTime",
              "type": "Date",
              "doc": "Starting date and time of the slot." },
            { "name": "endDateTime",
              "type": "Date",
              "doc": "Ending date and time of the slot." },
            { "name": "serviceId",
              "type": "string",
              "doc": "ID of the service that the slot belongs to." },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can book the service for this slot." },
            { "name": "remainingSpots",
              "type": "number",
              "doc": "Number of remaining spots that can be booked for the slot." },
            { "name": "staffMemberId",
              "type": "string",
              "doc": "ID of the slot's staff member." },
            { "name": "location",
              "type": "wix-bookings-frontend.Location",
              "doc": "The location where this slot is offered." },
            { "name": "bookable",
              "type": "boolean",
              "doc": "Whether the slot can be booked right now, meaning today's date is within the booking window defined by `constraints`." },
            { "name": "constraints",
              "type": "wix-bookings-frontend.Constraints",
              "doc": "The dates between which the slot can be booked. The constraints define the booking window. The booking window prevents site members from booking way in advance or just right before the slot starts." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "StreetAddress",
        "locations":
          [ { "lineno": 149,
              "filename": "bookings.js" } ],
        "docs":
          { "summary": "An object representing information about the street name and street number of an address.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Address street name." },
            { "name": "number",
              "type": "string",
              "doc": "Address street number." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] } ],
  "extra":
    { "scopes":
        [ "frontend" ] },
  "menuSections": "APIs",
  "relatedContent":
    [ { "icon": "article",
        "text": "Ideas for Working with Your Bookings App Collections",
        "url": "https://support.wix.com/en/article/wix-code-ideas-for-working-with-your-bookings-app-collections" },
      { "icon": "article",
        "text": "Creating a Bookings Timetable",
        "url": "https://support.wix.com/en/article/wix-code-how-to-create-a-bookings-timetable" },
      { "icon": "example",
        "text": "Service Page",
        "url": "https://www.wix.com/velo/example/Service-Page" },
      { "icon": "example",
        "text": "Service List",
        "url": "https://www.wix.com/velo/example/Service-List" },
      { "icon": "example",
        "text": "Quick Book & Pending Appointments",
        "url": "https://www.wix.com/velo/example/quick-book-and-pending-appointments" },
      { "icon": "article",
        "text": "Creating a Custom Bookings Experience",
        "url": "https://support.wix.com/en/article/wix-code-creating-a-custom-bookings-experience" } ] }