{
  "name": "Schedule",
  "memberOf": "wix-events-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-events.v2-schedule_item-schedule",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "addScheduleItem",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.AddScheduleItemOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId",
        "options.item.name",
        "options.item.timeSlot",
        "options.item.timeSlot.end",
        "options.item.timeSlot.start"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Schedule.AddScheduleItemResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Adds a schedule item to the draft schedule.",
        "description": [],
        "examples": [
          {
            "title": "addScheduleItem example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function addScheduleItem(eventId, options) {",
              "   try {",
              "     const result = await schedule.addScheduleItem(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "addScheduleItem",
      "isAdminMethod": true
    },
    {
      "name": "deleteScheduleItem",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.DeleteScheduleItemOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes schedule items from the draft schedule.",
        "description": [],
        "examples": [
          {
            "title": "deleteScheduleItem example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function deleteScheduleItem(eventId, options) {",
              "   try {",
              "     const result = await schedule.deleteScheduleItem(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "deleteScheduleItem",
      "isAdminMethod": true
    },
    {
      "name": "discardDraft",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs.",
          "required": true
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Clears all changes to the draft schedule.",
        "description": [],
        "examples": [
          {
            "title": "discardDraft example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function discardDraft(eventId) {",
              "   try {",
              "     const result = await schedule.discardDraft(eventId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "discardDraft",
      "isAdminMethod": true
    },
    {
      "name": "getScheduleItem",
      "params": [
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.GetScheduleItemOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "itemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Schedule.ScheduleItem"
                }
              ]
            }
          }
        ],
        "doc": "Schedule item.\n"
      },
      "docs": {
        "summary": "Retrieves schedule item by ID.",
        "description": [],
        "examples": [
          {
            "title": "getScheduleItem example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function getScheduleItem(itemId, options) {",
              "   try {",
              "     const result = await schedule.getScheduleItem(itemId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getScheduleItem"
    },
    {
      "name": "listScheduleItems",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ListScheduleItemsOptions"
            }
          ],
          "doc": "Optional fields.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Schedule.ListScheduleItemsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of up to 100 schedule items",
        "description": [],
        "examples": [
          {
            "title": "listScheduleItems example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function listScheduleItems(options) {",
              "   try {",
              "     const result = await schedule.listScheduleItems(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listScheduleItems"
    },
    {
      "name": "publishDraft",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs.",
          "required": true
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Publishes the draft schedule.",
        "description": [],
        "examples": [
          {
            "title": "publishDraft example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function publishDraft(eventId) {",
              "   try {",
              "     const result = await schedule.publishDraft(eventId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "publishDraft",
      "isAdminMethod": true
    },
    {
      "name": "queryScheduleItems",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-events-v2.Schedule.ItemsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a query to retrieve a list of schedule items. ",
        "description": [
          "",
          "The `queryScheduleItems( )` function builds a query to retrieve a list of schedule items and returns a [`ItemsQueryBuilder`](https://www.wix.com/velo/reference/wix-events-v2/schedule/itemsquerybuilder) object.",
          "",
          "The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://www.wix.com/velo/reference/wix-events-v2/schedule/itemsquerybuilder/find) function.",
          "",
          "You can refine the query by chaining `ItemsQueryBuilder` functions onto the query. `ItemsQueryBuilder` functions enable you to sort, filter, and control the results `queryScheduleItems( )` returns.",
          "",
          "`queryScheduleItems( )` runs with these `ItemsQueryBuilder` defaults, which you can override:",
          "",
          " - [`limit(50)`](https://www.wix.com/velo/reference/wix-events-v2/schedule/itemsquerybuilder/limit)",
          " - [`descending(\"_createdDate\")`](https://www.wix.com/velo/reference/wix-events-v2/schedule/itemsquerybuilder/descending)",
          "",
          "The functions that are chained to `queryScheduleItems( )` are applied in the order they're called. For example, if you apply `ascending('name')` and then `descending('stageName')`, the results are sorted first by the `name`, and then, if there are multiple results with the same `name`, the items are sorted by `stageName`.",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-events-v2.Schedule.ItemsQueryBuilder#eq),[`ne()`](wix-events-v2.Schedule.ItemsQueryBuilder#ne),[`ascending()`](wix-events-v2.Schedule.ItemsQueryBuilder#ascending),[`descending()`](wix-events-v2.Schedule.ItemsQueryBuilder#descending)|",
          "|`name`|[`eq()`](wix-events-v2.Schedule.ItemsQueryBuilder#eq),[`ne()`](wix-events-v2.Schedule.ItemsQueryBuilder#ne),[`ascending()`](wix-events-v2.Schedule.ItemsQueryBuilder#ascending),[`descending()`](wix-events-v2.Schedule.ItemsQueryBuilder#descending)|",
          "|`description`|[`eq()`](wix-events-v2.Schedule.ItemsQueryBuilder#eq),[`ne()`](wix-events-v2.Schedule.ItemsQueryBuilder#ne),[`ascending()`](wix-events-v2.Schedule.ItemsQueryBuilder#ascending),[`descending()`](wix-events-v2.Schedule.ItemsQueryBuilder#descending)|",
          "|`stageName`|[`eq()`](wix-events-v2.Schedule.ItemsQueryBuilder#eq),[`ne()`](wix-events-v2.Schedule.ItemsQueryBuilder#ne),[`ascending()`](wix-events-v2.Schedule.ItemsQueryBuilder#ascending),[`descending()`](wix-events-v2.Schedule.ItemsQueryBuilder#descending)|",
          "|`_createdDate`|[`eq()`](wix-events-v2.Schedule.ItemsQueryBuilder#eq),[`ne()`](wix-events-v2.Schedule.ItemsQueryBuilder#ne),[`lt()`](wix-events-v2.Schedule.ItemsQueryBuilder#lt),[`le()`](wix-events-v2.Schedule.ItemsQueryBuilder#le),[`gt()`](wix-events-v2.Schedule.ItemsQueryBuilder#gt),[`ge()`](wix-events-v2.Schedule.ItemsQueryBuilder#ge),[`ascending()`](wix-events-v2.Schedule.ItemsQueryBuilder#ascending),[`descending()`](wix-events-v2.Schedule.ItemsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-events-v2.Schedule.ItemsQueryBuilder#eq),[`ne()`](wix-events-v2.Schedule.ItemsQueryBuilder#ne),[`lt()`](wix-events-v2.Schedule.ItemsQueryBuilder#lt),[`le()`](wix-events-v2.Schedule.ItemsQueryBuilder#le),[`gt()`](wix-events-v2.Schedule.ItemsQueryBuilder#gt),[`ge()`](wix-events-v2.Schedule.ItemsQueryBuilder#ge),[`ascending()`](wix-events-v2.Schedule.ItemsQueryBuilder#ascending),[`descending()`](wix-events-v2.Schedule.ItemsQueryBuilder#descending)|",
          "|`eventId`|[`eq()`](wix-events-v2.Schedule.ItemsQueryBuilder#eq),[`ne()`](wix-events-v2.Schedule.ItemsQueryBuilder#ne),[`ascending()`](wix-events-v2.Schedule.ItemsQueryBuilder#ascending),[`descending()`](wix-events-v2.Schedule.ItemsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryScheduleItems example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function queryScheduleItems() {",
              "   const { items } = schedule.queryScheduleItems().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "queryScheduleItems"
    },
    {
      "name": "rescheduleDraft",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.RescheduleDraftOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId",
        "options.timeZoneId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Adjusts the time of all draft schedule items at once per event.",
        "description": [],
        "examples": [
          {
            "title": "rescheduleDraft example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function rescheduleDraft(eventId, options) {",
              "   try {",
              "     const result = await schedule.rescheduleDraft(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "rescheduleDraft",
      "isAdminMethod": true
    },
    {
      "name": "updateScheduleItem",
      "params": [
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item ID.",
          "required": true
        },
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.UpdateScheduleItemOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId",
        "itemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Schedule.UpdateScheduleItemResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a schedule item in a draft schedule.",
        "description": [],
        "examples": [
          {
            "title": "updateScheduleItem example",
            "body": [
              "import { schedule } from 'wix-events.v2';",
              "  ",
              " async function updateScheduleItem(itemId, eventId, options) {",
              "   try {",
              "     const result = await schedule.updateScheduleItem(itemId, eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "updateScheduleItem",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "AddScheduleItemOptions",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItemData"
            }
          ],
          "doc": "Schedule item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddScheduleItemRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItemData"
            }
          ],
          "doc": "Schedule item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddScheduleItemResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItem"
            }
          ],
          "doc": "Schedule item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateBookmarkRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateBookmarkResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteBookmarkRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteBookmarkResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteScheduleItemOptions",
      "members": [
        {
          "name": "itemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule items to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteScheduleItemRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "itemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule items to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteScheduleItemResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DiscardDraftRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DiscardDraftResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FacetCounts",
      "members": [
        {
          "name": "counts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "number"
                  }
                ]
              }
            }
          ],
          "doc": "Facet counts aggregated per value"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetScheduleItemOptions",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "includeDraft",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to include draft schedules in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetScheduleItemRequest",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "includeDraft",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to include draft schedules in the response."
        },
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetScheduleItemResponse",
      "members": [
        {
          "name": "draft",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItem"
            }
          ],
          "doc": "Draft of the Schedule item."
        },
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItem"
            }
          ],
          "doc": "Schedule item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListBookmarksRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListBookmarksResponse",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Schedule.ScheduleItem"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListScheduleItemsOptions",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "facet",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Filter facets.\nSee [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-schedule-items)."
        },
        {
          "name": "itemId",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item ID."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated, use `paging`.\nNumber of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated, use `paging`.\nNumber of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.Paging"
            }
          ],
          "doc": "Pointer to page of results using offset.\nSee [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        },
        {
          "name": "stageName",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Stage or room name in which the session takes place."
        },
        {
          "name": "startingBefore",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Filters schedule items starting before specified point in time. Non-inclusive."
        },
        {
          "name": "startingFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Filters schedule items starting on or after specified point in time. Inclusive."
        },
        {
          "name": "state",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item state filter. Possible values:\n- `PUBLISHED`: The schedule item is published.\n- `DRAFT`: The schedule item is in the draft. You need the \"WIX_EVENTS.MANAGE_AGENDA\" permissions to change this state.\n- `VISIBLE`: The schedule item is visible to guests.\n- `HIDDEN`: The schedule item is hidden from guests. You need the \"WIX_EVENTS.MANAGE_AGENDA\" permissions to change this state.\nDefault: Filters by the `PUBLISHED` and `VISIBLE` states."
        },
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item tags. They're used to organize the items to a theme."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListScheduleItemsRequest",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "facet",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Filter facets.\nSee [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-schedule-items)."
        },
        {
          "name": "itemId",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item ID."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated, use `paging`.\nNumber of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated, use `paging`.\nNumber of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.Paging"
            }
          ],
          "doc": "Pointer to page of results using offset.\nSee [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        },
        {
          "name": "stageName",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Stage or room name in which the session takes place."
        },
        {
          "name": "startingBefore",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Filters schedule items starting before specified point in time. Non-inclusive."
        },
        {
          "name": "startingFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Filters schedule items starting on or after specified point in time. Inclusive."
        },
        {
          "name": "state",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item state filter. Possible values:\n- `PUBLISHED`: The schedule item is published.\n- `DRAFT`: The schedule item is in the draft. You need the \"WIX_EVENTS.MANAGE_AGENDA\" permissions to change this state.\n- `VISIBLE`: The schedule item is visible to guests.\n- `HIDDEN`: The schedule item is hidden from guests. You need the \"WIX_EVENTS.MANAGE_AGENDA\" permissions to change this state.\nDefault: Filters by the `PUBLISHED` and `VISIBLE` states."
        },
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item tags. They're used to organize the items to a theme."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListScheduleItemsResponse",
      "members": [
        {
          "name": "draftNotPublished",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether there are draft changes which have not been published yet.\nReturned only when filtering by single `event_id` with `WIX_EVENTS.MANAGE_AGENDA` permission."
        },
        {
          "name": "facets",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "referenceType": "wix-events-v2.Schedule.FacetCounts"
                  }
                ]
              }
            }
          ],
          "doc": "Facets."
        },
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Schedule.ScheduleItem"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule items."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated.\nLimit."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated, use `paging_metadata.offset`.\nOffset."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.PagingMetadataV2"
            }
          ],
          "doc": "Paging metadata."
        },
        {
          "name": "total",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated, use `paging_metadata.total`.\nTotal schedule items matching the given filters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load per page."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PublishDraftRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PublishDraftResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryScheduleItemsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.QueryV2"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryScheduleItemsResponse",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Schedule.ScheduleItem"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule items."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.PagingMetadataV2"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events)."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.Paging"
            }
          ],
          "doc": "Pointer to page of results using offset.\nSee [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Schedule.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\nSee [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfQueryV2PagingMethodOneOf",
            "members": [
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.Paging"
            }
          ],
          "doc": "Pointer to page of results using offset.\nSee [Pagination](https://dev.wix.com/api/rest/getting-started/pagination)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RescheduleDraftOptions",
      "members": [
        {
          "name": "timeSlotOffset",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Offset added or subtracted from the start and end times of schedule items."
        },
        {
          "name": "timeZoneId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Time zone ID in the [TZ database](https://www.iana.org/time-zones) format. For example, `EST`, `America/Los_Angeles`.\nDefault: `Etc/UTC`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RescheduleDraftRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "timeSlotOffset",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Offset added or subtracted from the start and end times of schedule items."
        },
        {
          "name": "timeZoneId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Time zone ID in the [TZ database](https://www.iana.org/time-zones) format. For example, `EST`, `America/Los_Angeles`.\nDefault: `Etc/UTC`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RescheduleDraftResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ScheduleItem",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the schedule item was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the schedule item was updated."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Rich text schedule item description."
        },
        {
          "name": "draft",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the schedule item is draft."
        },
        {
          "name": "eventId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "hidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether a schedule item is hidden from guests."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item name."
        },
        {
          "name": "stageName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stage or room name in which the session takes place."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item status. Possible values:\n- `SCHEDULED`: An item is scheduled.\n- `CANCELED`: An item is canceled."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item tags. They're used to organize the items to a theme."
        },
        {
          "name": "timeSlot",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.TimeInterval"
            }
          ],
          "doc": "Time slot of a schedule item."
        }
      ],
      "docs": {
        "description": [
          "Schedule item describes the schedule within an event. Each event may contain multiple schedule items."
        ]
      }
    },
    {
      "name": "ScheduleItemData",
      "members": [
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Rich text schedule item description."
        },
        {
          "name": "hidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether a schedule item is hidden from guests."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item name."
        },
        {
          "name": "stageName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stage or room name in which the session takes place."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item status. Possible values:\n- `SCHEDULED`: An item is scheduled.\n- `CANCELED`: An item is canceled."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Schedule item tags. They're used to organize the items to a theme."
        },
        {
          "name": "timeSlot",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.TimeInterval"
            }
          ],
          "doc": "Time slot of a schedule item."
        }
      ],
      "docs": {
        "description": [
          "Schedule item describes the schedule within an event. Each event may contain multiple schedule items."
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by"
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order (ASC/DESC). Defaults to ASC"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TimeInterval",
      "members": [
        {
          "name": "end",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "End of the interval. Non-inclusive."
        },
        {
          "name": "start",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Start of the interval. Inclusive."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Time zone ID in the [TZ database](https://www.iana.org/time-zones) format. For example, `EST`, `America/Los_Angeles`.\nDefault: `Etc/UTC`."
        }
      ],
      "docs": {
        "description": [
          "Time interval on the timeline between two points in time."
        ]
      }
    },
    {
      "name": "UpdateScheduleItemOptions",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItemData"
            }
          ],
          "doc": "Schedule item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateScheduleItemRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the schedule belongs."
        },
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItemData"
            }
          ],
          "doc": "Schedule item."
        },
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule item ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateScheduleItemResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Schedule.ScheduleItem"
            }
          ],
          "doc": "Schedule item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
