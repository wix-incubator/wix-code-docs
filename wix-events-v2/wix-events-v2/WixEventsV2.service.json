{
  "name": "WixEventsV2",
  "memberOf": "wix-events-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-events.v2-event",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkCancelEventsByFilter",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.BulkCancelEventsByFilterOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "options.filter.filter"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Cancels multiple events that meet the given criteria.",
        "description": [
          "After cancellation, registration for an event is closed. To reuse the event, [clone](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/cloneevent) and [publish](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/publishdraftevent) it again.\nIf event cancellation notifications are enabled, canceling an event automatically triggers the sending of cancellation emails and/or push notifications to registered guests."
        ],
        "examples": [
          {
            "title": "bulkCancelEventsByFilter example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function bulkCancelEventsByFilter(options) {",
              "   try {",
              "     const result = await wixEventsV2.bulkCancelEventsByFilter(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "bulkCancelEventsByFilter",
      "isAdminMethod": true
    },
    {
      "name": "bulkDeleteEventsByFilter",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.BulkDeleteEventsByFilterOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "options.filter.filter"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Permanently deletes multiple events that meet the given criteria.",
        "description": [
          "You can retrieve the deleted events through a GDPR access request."
        ],
        "examples": [
          {
            "title": "bulkDeleteEventsByFilter example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function bulkDeleteEventsByFilter(options) {",
              "   try {",
              "     const result = await wixEventsV2.bulkDeleteEventsByFilter(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "bulkDeleteEventsByFilter",
      "isAdminMethod": true
    },
    {
      "name": "cancelEvent",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CancelEventOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.CancelEventResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Cancels an event.",
        "description": [
          "After cancellation, registration for an event is closed. To reuse the event, [clone](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/cloneevent) and [publish](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/publishdraftevent) it again.\nIf event cancellation notifications are enabled, canceling an event automatically triggers the sending of cancellation emails and/or push notifications to registered guests."
        ],
        "examples": [
          {
            "title": "cancelEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function cancelEvent(eventId, options) {",
              "   try {",
              "     const result = await wixEventsV2.cancelEvent(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "cancelEvent",
      "isAdminMethod": true
    },
    {
      "name": "cloneEvent",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CloneEventOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.CloneEventResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Clones an event, including the registration form, notifications, multilingual translations and ticket configuration from the original event.",
        "description": [
          "The new event's date is automatically set to 14 days from the original event date.\nIf an event with the same title already exists, the new event's title gets a sequence number. For example, if you clone an event named \"Leather Crafting 101\", the new event's title is \"Leather Crafting 101 (1)\".  You can change the required entity field values while cloning an event."
        ],
        "examples": [
          {
            "title": "cloneEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function cloneEvent(eventId, options) {",
              "   try {",
              "     const result = await wixEventsV2.cloneEvent(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "cloneEvent",
      "isAdminMethod": true
    },
    {
      "name": "countEventsByStatus",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CountEventsByStatusOptions"
            }
          ],
          "doc": "Optional fields.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.CountEventsByStatusResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Counts events by status.",
        "description": [],
        "examples": [
          {
            "title": "countEventsByStatus example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function countEventsByStatus(options) {",
              "   try {",
              "     const result = await wixEventsV2.countEventsByStatus(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "countEventsByStatus"
    },
    {
      "name": "createEvent",
      "params": [
        {
          "name": "event",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Event data.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CreateEventOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "event",
        "event.dateAndTimeSettings",
        "event.location",
        "event.title"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.V3Event"
                }
              ]
            }
          }
        ],
        "doc": "Created event.\n"
      },
      "docs": {
        "summary": "Creates an event.",
        "description": [
          "The event includes a default registration form in the selected language, which consists of input fields for first name, last name, and email. See [Registration Form](https://www.wix.com/velo/reference/wix-events-v2/forms/introduction) for more information.\n\nYou can create the event as a draft by setting the draft value to true. Otherwise, the event is published right away.\n\nThe event is automatically set up to send daily summary reports of new guests to your business email."
        ],
        "examples": [
          {
            "title": "createEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function createEvent(event, options) {",
              "   try {",
              "     const result = await wixEventsV2.createEvent(event, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "createEvent",
      "isAdminMethod": true
    },
    {
      "name": "deleteEvent",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID.",
          "required": true
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.DeleteEventResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Permanently deletes an event. <br> <br>\nYou can retrieve the deleted event through a GDPR access request.",
        "description": [],
        "examples": [
          {
            "title": "deleteEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function deleteEvent(eventId) {",
              "   try {",
              "     const result = await wixEventsV2.deleteEvent(eventId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "deleteEvent",
      "isAdminMethod": true
    },
    {
      "name": "findEvent",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.FindEventOptions"
            }
          ],
          "doc": "Optional fields.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.FindEventResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Finds an event by ID or URL slug.",
        "description": [
          "Unlike the [`getEvent`](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/getevent) function, which returns a \"not found\" error, `findEvent()` returns an empty response when an event is not found."
        ],
        "examples": [
          {
            "title": "findEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function findEvent(options) {",
              "   try {",
              "     const result = await wixEventsV2.findEvent(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "findEvent"
    },
    {
      "name": "getEvent",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.GetEventOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.V3Event"
                }
              ]
            }
          }
        ],
        "doc": "Event.\n"
      },
      "docs": {
        "summary": "Retrieves an event by ID.",
        "description": [],
        "examples": [
          {
            "title": "getEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function getEvent(eventId, options) {",
              "   try {",
              "     const result = await wixEventsV2.getEvent(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getEvent"
    },
    {
      "name": "getEventBySlug",
      "params": [
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.GetEventBySlugOptions"
            }
          ],
          "doc": "Optional fields.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "slug"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.GetEventBySlugResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves an event by the `slug` URL.",
        "description": [
          "The slug is the end of an event URL that refers to a specific event. For example, if an events' URL is `https://example.com/events/event/{my-event-slug}`, the slug is `my-event-slug`."
        ],
        "examples": [
          {
            "title": "getEventBySlug example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function getEventBySlug(slug, options) {",
              "   try {",
              "     const result = await wixEventsV2.getEventBySlug(slug, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getEventBySlug"
    },
    {
      "name": "publishDraftEvent",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.PublishDraftEventOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "eventId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.PublishDraftEventResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Publishes a draft event to your live site. Once published, the event's status changes from `DRAFT` to `UPCOMING.`",
        "description": [
          "It's impossible to revert the `DRAFT` status after publishing. The only option is to clone the event, and then delete the original one."
        ],
        "examples": [
          {
            "title": "publishDraftEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function publishDraftEvent(eventId, options) {",
              "   try {",
              "     const result = await wixEventsV2.publishDraftEvent(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "publishDraftEvent",
      "isAdminMethod": true
    },
    {
      "name": "queryEvents",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.QueryEventsOptions"
            }
          ],
          "doc": "Optional fields.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-events-v2.WixEventsV2.EventsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a query to retrieve a list of events.",
        "description": [
          "",
          "",
          "The `queryEvents()` function builds a query to retrieve a list of events and returns a [`EventsQueryBuilder`](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/eventsquerybuilder) object.",
          "",
          "The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/eventsquerybuilder/find) function.",
          "",
          "You can refine the query by chaining `EventsQueryBuilder` functions onto the query. `EventsQueryBuilder` functions enable you to sort, filter, and control the results `queryEvents()` returns.",
          "",
          "`queryEvents()` runs with these `EventsQueryBuilder` defaults, which you can override:",
          "",
          "- [`skip(0)`](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/eventsquerybuilder/skip)",
          "- [`limit(50)`](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/eventsquerybuilder/limit)",
          "- [`descending(\"_createdDate\")`](https://www.wix.com/velo/reference/wix-events-v2/wixeventsv2/eventsquerybuilder/descending)",
          "",
          "The functions that are chained to `queryEvents()` are applied in the order they're called. For example, if you apply `ascending('title')` and then `descending('status')`, the results are sorted first by the `title`, and then, if there are multiple results with the same `title`, the items are sorted by `status`.",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in),[`ascending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ascending),[`descending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#descending)|",
          "|`dateAndTimeSettings.startDate`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`lt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#lt),[`le()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#le),[`gt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#gt),[`ge()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ge),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in),[`ascending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ascending),[`descending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#descending)|",
          "|`dateAndTimeSettings.endDate`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`lt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#lt),[`le()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#le),[`gt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#gt),[`ge()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ge),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in),[`ascending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ascending),[`descending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#descending)|",
          "|`title`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in),[`ascending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ascending),[`descending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#descending)|",
          "|`slug`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in),[`ascending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ascending),[`descending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#descending)|",
          "|`_createdDate`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`lt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#lt),[`le()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#le),[`gt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#gt),[`ge()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ge),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in),[`ascending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ascending),[`descending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`lt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#lt),[`le()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#le),[`gt()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#gt),[`ge()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ge),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in),[`ascending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ascending),[`descending()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#descending)|",
          "|`status`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in)|",
          "|`registration.initialType`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq)|",
          "|`userId`|[`eq()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#eq),[`ne()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#ne),[`in()`](wix-events-v2.WixEventsV2.EventsQueryBuilder#in)|"
        ],
        "examples": [
          {
            "title": "queryEvents example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function queryEvents() {",
              "   const { items } = wixEventsV2.queryEvents().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "queryEvents"
    },
    {
      "name": "updateEvent",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.UpdateEventOptions"
            }
          ],
          "doc": "Optional fields.",
          "required": false
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.WixEventsV2.V3Event"
                }
              ]
            }
          }
        ],
        "doc": "Updated event.\n"
      },
      "docs": {
        "summary": "Updates an event.",
        "description": [],
        "examples": [
          {
            "title": "updateEvent example",
            "body": [
              "import { wixEventsV2 } from 'wix-events.v2';",
              "  ",
              " async function updateEvent(id, options) {",
              "   try {",
              "     const result = await wixEventsV2.updateEvent(id, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "updateEvent",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Address",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "addressLine1",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "addressLine2",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Free text providing more detailed address info. Usually contains Apt, Suite, Floor"
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "city name"
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "country code"
        },
        {
          "name": "formatted",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A string containing the human-readable address of this location"
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.AddressLocation"
            }
          ],
          "doc": "coordinates of the physical address"
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "zip/postal code"
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.StreetAddress"
            }
          ],
          "doc": "a break down of the street to number and street name"
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision (usually state or region) code according to ISO 3166-2"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Physical address"
        ]
      }
    },
    {
      "name": "AddressLocation",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "address latitude coordinates"
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "address longitude coordinates"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.StreetAddress"
            }
          ],
          "doc": "a break down of the street to number and street name"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Agenda",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the schedule is enabled for the event."
        },
        {
          "name": "pageUrl",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.SiteUrl"
            }
          ],
          "doc": "Agenda page URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AgendaSettings",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the schedule is enabled for the event."
        },
        {
          "name": "pageUrl",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule page URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCancelEventsByFilterOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.QueryV2"
            }
          ],
          "doc": "Filter."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCancelEventsByFilterRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.QueryV2"
            }
          ],
          "doc": "Filter."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCancelEventsByFilterResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteEventsByFilterOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.QueryV2"
            }
          ],
          "doc": "Query options. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteEventsByFilterRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.QueryV2"
            }
          ],
          "doc": "Query options. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteEventsByFilterResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CalendarLinks",
      "members": [
        {
          "name": "google",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Add to Google calendar\" URL."
        },
        {
          "name": "ics",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Download ICS calendar file\" URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CalendarUrls",
      "members": [
        {
          "name": "google",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Add to Google calendar\" URL."
        },
        {
          "name": "ics",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Download ICS calendar file\" URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelEventOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelEventRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelEventResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Canceled event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Category",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Category creation timestamp."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "assignedEventsCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Assigned events count. Deleted events are excluded."
        },
        {
          "name": "counts",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CategoryCounts"
            }
          ],
          "doc": "Assigned and assigned draft event counts."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category name."
        },
        {
          "name": "states",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Category state. Default - MANUAL.\nWIX_EVENTS.MANAGE_AUTO_CATEGORIES permission is required to use other states.\nField will be ignored on update requests."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoryCounts",
      "members": [
        {
          "name": "assignedDraftEventsCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Assigned draft events count."
        },
        {
          "name": "assignedEventsCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Assigned events count. Deleted events are excluded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CheckoutFormMessages",
      "members": [
        {
          "name": "confirmation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ResponseConfirmation"
            }
          ],
          "doc": "Confirmation messages shown after checkout."
        },
        {
          "name": "submitActionLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Submit form call-to-action label text."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main form title for response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CloneEventOptions",
      "members": [
        {
          "name": "draft",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to clone the event as a draft."
        },
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Field values to be changed when cloning the event."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CloneEventRequest",
      "members": [
        {
          "name": "draft",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to clone the event as a draft."
        },
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Field values to be changed when cloning the event."
        },
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CloneEventResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Cloned event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonAddress",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary address information (street and building number)."
        },
        {
          "name": "addressLine1",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary address information (street and building number)."
        },
        {
          "name": "addressLine2",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Secondary address information (suite or apartment number and room number)."
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "City name."
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "2-letter country code in [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) format."
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Zip or postal code."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CommonStreetAddress"
            }
          ],
          "doc": "Street address."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCommonAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Physical address"
        ]
      }
    },
    {
      "name": "CommonAddressLocation",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Address latitude coordinates."
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Address longitude coordinates."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonAddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary address information (street and building number)."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CommonStreetAddress"
            }
          ],
          "doc": "Street address."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonStreetAddress",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street name."
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street number."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonSubdivision",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Short subdivision code."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Subdivision full name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountEventsByStatusOptions",
      "members": [
        {
          "name": "facet",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Parameters to count events by.\n\n- Max: 20 facets\n"
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\" }`."
        },
        {
          "name": "includeDrafts",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether draft events should be returned in the response.\nThis parameter requires the `WIX_EVENTS.MANAGE_EVENTS` permission."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountEventsByStatusRequest",
      "members": [
        {
          "name": "facet",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Parameters to count events by.\n\n- Max: 20 facets\n"
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\" }`."
        },
        {
          "name": "includeDrafts",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether draft events should be returned in the response.\nThis parameter requires the `WIX_EVENTS.MANAGE_EVENTS` permission."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountEventsByStatusResponse",
      "members": [
        {
          "name": "facets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.FacetCounts"
                  }
                ]
              }
            }
          ],
          "doc": "Filter facets."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateEventOptions",
      "members": [
        {
          "name": "draft",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to create the event as a draft."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateEventRequest",
      "members": [
        {
          "name": "draft",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to create the event as a draft."
        },
        {
          "name": "event",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Event data."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateEventResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Created event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Dashboard",
      "members": [
        {
          "name": "rsvpSummary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.RsvpSummary"
            }
          ],
          "doc": "Guest RSVP summary."
        },
        {
          "name": "ticketingSummary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TicketingSummary"
            }
          ],
          "doc": "Summary of revenue and tickets sold.\n(Archived orders are not included)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DateAndTimeSettings",
      "members": [
        {
          "name": "dateAndTimeTbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event date and time are TBD."
        },
        {
          "name": "dateAndTimeTbdMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Message that is displayed when time and date is TBD."
        },
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end date in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "formatted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Formatted"
            }
          ],
          "doc": "Formatted date and time settings."
        },
        {
          "name": "hideEndDate",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the end date is hidden in the formatted date and time."
        },
        {
          "name": "recurrenceStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Repeating event status. Possible values:\n\n  - `ONE_TIME`: The event happens only once and can last multiple days.\n  - `RECURRING`: A series of events that repeat.\n  - `RECURRING_UPCOMING`: Next event in a schedule of recurring events.\n  - `RECURRING_RECENTLY_ENDED`: Latest event that ended in a schedule of recurring events.\n  - `RECURRING_RECENTLY_CANCELED`: Latest canceled event tin a schedule of recurring events."
        },
        {
          "name": "recurringEvents",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Recurrences"
            }
          ],
          "doc": "Event repetitions."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the time zone is displayed in the formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start date in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in the [TZ database](https://www.iana.org/time-zones) format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteEventRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteEventResponse",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deleted event ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Event",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "about",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Rich-text content displayed in Wix UI - \"About Event\" section (HTML)."
        },
        {
          "name": "agenda",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Agenda"
            }
          ],
          "doc": "Agenda details."
        },
        {
          "name": "assignedContactsLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assigned contacts label key."
        },
        {
          "name": "calendarLinks",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CalendarLinks"
            }
          ],
          "doc": "\"Add to calendar\" URLs."
        },
        {
          "name": "categories",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Category"
                  }
                ]
              }
            }
          ],
          "doc": "Categories this event is assigned to."
        },
        {
          "name": "created",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event creation timestamp."
        },
        {
          "name": "dashboard",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Dashboard"
            }
          ],
          "doc": "Event dashboard summary of RSVP / ticket sales."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event description."
        },
        {
          "name": "eventDisplaySettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventDisplaySettings"
            }
          ],
          "doc": "Visual settings for event."
        },
        {
          "name": "eventPageUrl",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.SiteUrl"
            }
          ],
          "doc": "Event page URL components."
        },
        {
          "name": "feed",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsFeed"
            }
          ],
          "doc": "Event discussion feed. For internal use."
        },
        {
          "name": "form",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Form"
            }
          ],
          "doc": "Event registration form."
        },
        {
          "name": "guestListConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.GuestListConfig"
            }
          ],
          "doc": "Guest list configuration."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID of the site where event is hosted."
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ISO 639-1 language code of the event (used in content translations)."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsLocation"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "mainImage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main event image."
        },
        {
          "name": "modified",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event modified timestamp."
        },
        {
          "name": "onlineConferencing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsOnlineConferencing"
            }
          ],
          "doc": "Online conferencing details."
        },
        {
          "name": "registration",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsRegistration"
            }
          ],
          "doc": "RSVP or ticketing registration details."
        },
        {
          "name": "scheduling",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Scheduling"
            }
          ],
          "doc": "Event scheduling."
        },
        {
          "name": "seoSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsSeoSettings"
            }
          ],
          "doc": "SEO settings."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event slug URL (generated from event title)."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCanceled",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event canceled timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title"
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCategories",
      "members": [
        {
          "name": "categories",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.EventCategory"
                  }
                ]
              }
            }
          ],
          "doc": "Event categories."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCategory",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Category creation timestamp."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "hidden",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Category is hidden."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category name."
        },
        {
          "name": "type",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category type."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCloned",
      "members": [
        {
          "name": "dateAndTimeSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.DateAndTimeSettings"
            }
          ],
          "doc": "Event date and time settings."
        },
        {
          "name": "derivedFromEventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID. Indicates the original event from which current event was derived from."
        },
        {
          "name": "derivedFromInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID. Indicates the original app instance from which current event was derived from."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Location"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "ticketDefinitions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Map of copied ticket definitions from the original event.\nKey represents ticket definition ID in the original event.\nValue represents ticket definition ID in the newly event."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event creation timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the user who created the event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCopied",
      "members": [
        {
          "name": "derivedFromEventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID. Indicates the original event which current event was derived from."
        },
        {
          "name": "derivedFromInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID. Indicates the original app instance which current event was derived from."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsLocation"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "scheduleConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ScheduleConfig"
            }
          ],
          "doc": "Event schedule configuration."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "ticketDefinitions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Map of copied ticket definitions from original event.\nKey represents ticket def id in the original event.\nValue represents ticket def id in the newly created event."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event created timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCreated",
      "members": [
        {
          "name": "derivedFromEventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID. Indicates the original event which current event was derived from."
        },
        {
          "name": "derivedFromInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID. Indicates the original app instance which current event was derived from."
        },
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Event"
            }
          ],
          "doc": "Event that was created."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsLocation"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "scheduleConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ScheduleConfig"
            }
          ],
          "doc": "Event schedule configuration."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event created timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventDeleted",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event deleted timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventDisplaySettings",
      "members": [
        {
          "name": "hideEventDetailsButton",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether event details button is hidden. Only available for events with no registration."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventEnded",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp in ISO UTC format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventPublished",
      "members": [
        {
          "name": "derivedFromEventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID. Indicates the original event which current event was derived from.\nCan be used to track the original event and add missing information."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event publish timestamp in ISO UTC format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventReminder",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsLocation"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "scheduleConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ScheduleConfig"
            }
          ],
          "doc": "Event schedule configuration."
        },
        {
          "name": "startsIn",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TimeDuration"
            }
          ],
          "doc": "Time until the event starts (currently, reminder is triggered 1 day before event starts)."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Reminder timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventStarted",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start timestamp in ISO UTC format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventUpdated",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Event"
            }
          ],
          "doc": "Updated event"
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsLocation"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "scheduleConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ScheduleConfig"
            }
          ],
          "doc": "Event schedule configuration."
        },
        {
          "name": "scheduleConfigUpdated",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether schedule configuration was updated."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event update timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsFeed",
      "members": [
        {
          "name": "token",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event discussion feed token."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsLocation",
      "members": [
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Single line address representation."
        },
        {
          "name": "coordinates",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.MapCoordinates"
            }
          ],
          "doc": "Location map coordinates."
        },
        {
          "name": "fullAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Address"
            }
          ],
          "doc": "Full address derived from formatted single line `address`.\nWhen `full_address` is used to create or update the event, deprecated `address` and `coordinates` are ignored.\nIf provided `full_address` has empty `formatted_address` or `coordinates`, it will be auto-completed using Atlas service.\n\nMigration notes:\n- `full_address.formatted_address` is equivalent to `address`.\n- `full_address.geocode` is equivalent to `coordinates`.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location name."
        },
        {
          "name": "tbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Defines event location as TBD (To Be Determined).\nWhen event location is not yet defined, `name` is displayed instead of location address.\n`coordinates`, `address`, `type` and `full_address` are not required when location is TBD."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location type."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsMoney",
      "members": [
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deprecated:** Use `value` instead."
        },
        {
          "name": "currency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ISO 4217 format of the currency i.e. `USD`."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsOccurrence",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether time zone is displayed in formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start timestamp."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsOnlineConferencing",
      "members": [
        {
          "name": "config",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.OnlineConferencingConfig"
            }
          ],
          "doc": ""
        },
        {
          "name": "session",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsOnlineConferencingSession"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsOnlineConferencingSession",
      "members": [
        {
          "name": "guestLink",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Link for guests to join the online conference session."
        },
        {
          "name": "hostLink",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Link for event host to start the online conference session."
        },
        {
          "name": "password",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The password required to join online conferencing session (when relevant)."
        },
        {
          "name": "sessionCreated",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates that session was created successfully on providers side."
        },
        {
          "name": "sessionId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique session id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsRecurrences",
      "members": [
        {
          "name": "categoryId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Recurring event category ID."
        },
        {
          "name": "occurrences",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.EventsOccurrence"
                  }
                ]
              }
            }
          ],
          "doc": "Event occurrences."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Recurrence status."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsRegistration",
      "members": [
        {
          "name": "external",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ExternalEvent"
            }
          ],
          "doc": "External registration details."
        },
        {
          "name": "initialType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Initial event type which was set when creating an event."
        },
        {
          "name": "restrictedTo",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Types of users allowed to register."
        },
        {
          "name": "rsvpCollection",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.RsvpCollection"
            }
          ],
          "doc": "RSVP collection details."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event registration status."
        },
        {
          "name": "ticketing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Ticketing"
            }
          ],
          "doc": "Ticketing details."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventsSeoSettings",
      "members": [
        {
          "name": "advancedSeoData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.SeoSchema"
            }
          ],
          "doc": "Advanced SEO data"
        },
        {
          "name": "hidden",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Hidden from SEO Site Map"
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExternalEvent",
      "members": [
        {
          "name": "registration",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "External event registration URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExternalRegistration",
      "members": [
        {
          "name": "url",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "External event registration URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FacetCounts",
      "members": [
        {
          "name": "counts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "number"
                  }
                ]
              }
            }
          ],
          "doc": "Facet counts aggregated per value"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Feed",
      "members": [
        {
          "name": "token",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event discussion feed token."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FindEventOptions",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\nSome fields require additional computation that affects latency.\nUse minimum set of required fieldset for best performance."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfFindEventRequestFindByOneOf",
            "members": [
              "eventId",
              "slug"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FindEventRequest",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\nSome fields require additional computation that affects latency.\nUse minimum set of required fieldset for best performance."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfFindEventRequestFindByOneOf",
            "members": [
              "eventId",
              "slug"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FindEventRequestFindByOneOf",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FindEventResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Form",
      "members": [
        {
          "name": "controls",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.InputControl"
                  }
                ]
              }
            }
          ],
          "doc": "Nested fields as an ordered list."
        },
        {
          "name": "messages",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.FormMessages"
            }
          ],
          "doc": "Set of configured form messages."
        }
      ],
      "docs": {
        "description": [
          "The form defines which elements are rendered in the Wix UI during the registration process (RSVP or checkout).\nIt also contains customizable messages and labels."
        ]
      }
    },
    {
      "name": "FormMessages",
      "members": [
        {
          "name": "checkout",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CheckoutFormMessages"
            }
          ],
          "doc": "Checkout form messages."
        },
        {
          "name": "registrationClosed",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.RegistrationClosedMessages"
            }
          ],
          "doc": "Messages shown when event registration is closed."
        },
        {
          "name": "rsvp",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.RsvpFormMessages"
            }
          ],
          "doc": "RSVP form messages."
        },
        {
          "name": "ticketsUnavailable",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TicketsUnavailableMessages"
            }
          ],
          "doc": "Messages shown when event tickets are unavailable."
        }
      ],
      "docs": {
        "description": [
          "Defines form messages shown in UI before, during, and after registration flow.\nIt enables configuration of form titles, response labels, \"thank you\" messages, and call-to-action texts."
        ]
      }
    },
    {
      "name": "Formatted",
      "members": [
        {
          "name": "dateAndTime",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted date and time representation.\n\nExample of formatting when an event lasts multiple days and is in the UTC time zone: `September 1, 2015 at 10:20 AM – September 5, 2015 at 12:14 PM`.\nExample of formatting when an event lasts 1 day and is in the GMT+2 time zone: `February 1, 2018, 12:10 – 2:50 PM GMT+2`."
        },
        {
          "name": "endDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted end date of the event. Empty for TBD schedules or when the end date is hidden."
        },
        {
          "name": "endTime",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted end time of the event. Empty for TBD schedules or when the end date is hidden."
        },
        {
          "name": "startDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted start date of the event. Empty for TBD schedules."
        },
        {
          "name": "startTime",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted start time of the event. Empty for TBD schedules."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEventBySlugOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEventBySlugRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        },
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEventBySlugResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEventOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEventRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEventResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GuestListConfig",
      "members": [
        {
          "name": "publicGuestList",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether members can see other members attending the event (defaults to true)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GuestListSettings",
      "members": [
        {
          "name": "displayedPublicly",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the guest list is public for all guests."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Input",
      "members": [
        {
          "name": "additionalLabels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Additional labels for multi-valued fields such as address."
        },
        {
          "name": "array",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Deprecated: use `ValueType.TEXT_ARRAY`."
        },
        {
          "name": "defaultOptionSelection",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.OptionSelection"
            }
          ],
          "doc": "Preselected option.\nCurrently only applicable for dropdown."
        },
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main field label"
        },
        {
          "name": "labels",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Label"
                  }
                ]
              }
            }
          ],
          "doc": "Additional labels for multi-valued fields such as address."
        },
        {
          "name": "mandatory",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether field is mandatory."
        },
        {
          "name": "maxLength",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of accepted characters (relevant for text fields)."
        },
        {
          "name": "maxSize",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "A maximum accepted values for array input.\nOnly applicable for inputs of valueType: TEXT_ARRAY."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Field name."
        },
        {
          "name": "options",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined choice options for fields, such as dropdown."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Type which determines field format.\nUsed to validate submitted response."
        }
      ],
      "docs": {
        "description": [
          "An input of one or multiple text values"
        ]
      }
    },
    {
      "name": "InputControl",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique control ID."
        },
        {
          "name": "deleted",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether input control is deleted."
        },
        {
          "name": "inputs",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Input"
                  }
                ]
              }
            }
          ],
          "doc": "Child inputs."
        },
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deprecated: use `inputs.label`."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deprecated: Use `id`."
        },
        {
          "name": "orderIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Field controls are sorted by this value in ascending order."
        },
        {
          "name": "system",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether control is mandatory (such as name & email). When true, only label can be changed."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Field control type."
        }
      ],
      "docs": {
        "description": [
          "A block of nested fields.\nUsed to aggregate similar inputs like First Name and Last Name."
        ]
      }
    },
    {
      "name": "Keyword",
      "members": [
        {
          "name": "isMain",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the keyword is the main focus keyword."
        },
        {
          "name": "term",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Keyword value."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Label",
      "members": [
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Field label."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Field name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListEventsByCategoryOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage`, and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListEventsByCategoryRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage`, and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListEventsByCategoryResponse",
      "members": [
        {
          "name": "events",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.V3Event"
                  }
                ]
              }
            }
          ],
          "doc": "List of events."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListUserEventsRequest",
      "members": [
        {
          "name": "facet",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Filter facets to include in the response.\nSee [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events)."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort order, defaults to `\"created:asc\"`.\nSee [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events)."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "userFilter",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.UserFilter"
            }
          ],
          "doc": "Wix user filter, by default any.\nAllows to filter events by user relation to the event among all wix sites."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListUserEventsResponse",
      "members": [
        {
          "name": "events",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.V3Event"
                  }
                ]
              }
            }
          ],
          "doc": "List of events."
        },
        {
          "name": "facets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.FacetCounts"
                  }
                ]
              }
            }
          ],
          "doc": "Filter facets."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Location",
      "members": [
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CommonAddress"
            }
          ],
          "doc": "Exact location address."
        },
        {
          "name": "locationTbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event location is TBD."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location name. This value is displayed instead of the address when the location is defined as TBD by setting the `locationTbd` property to `true`."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location type:\n\n  - `VENUE`: The event is on-site at a specific physical location.\n  - `ONLINE`: The event is online, such as a virtual video conference.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MapCoordinates",
      "members": [
        {
          "name": "lat",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Latitude."
        },
        {
          "name": "lng",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Longitude."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Money",
      "members": [
        {
          "name": "currency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Currency code in 3-letter [ISO-4217 alphabetic](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) format."
        },
        {
          "name": "formattedValue",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Amount of money in decimal form. A period or comma are used as a decimal separator (for example, `1 000,30`)."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Amount of money in decimal form. A period is used as a decimal separator (for example, `3.99`)."
        }
      ],
      "docs": {
        "description": [
          "Money.\nDefault format to use. Sufficiently compliant with majority of standards: w3c, ISO 4217, ISO 20022, ISO 8583:2003."
        ]
      }
    },
    {
      "name": "Negative",
      "members": [
        {
          "name": "confirmation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.NegativeResponseConfirmation"
            }
          ],
          "doc": "Confirmation messages shown after registration."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main form title for negative response."
        }
      ],
      "docs": {
        "description": [
          "A set of messages shown during registration with negative response"
        ]
      }
    },
    {
      "name": "NegativeResponseConfirmation",
      "members": [
        {
          "name": "shareActionLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Share event\" call-to-action label text."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Confirmation message title."
        }
      ],
      "docs": {
        "description": [
          "Confirmation messages shown after registration."
        ]
      }
    },
    {
      "name": "Occurrence",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end date in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the time zone is displayed in a formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start date in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in the [TZ database](https://www.iana.org/time-zones) format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "OnlineConferencing",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether online conferencing is enabled. Not applicable for events, where date and time are TBD. When enabled, links to join the conference are generated and provided to guests."
        },
        {
          "name": "providerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Conference host ID."
        },
        {
          "name": "session",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.OnlineConferencingSession"
            }
          ],
          "doc": "Online conferencing session information."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Conference type. Possible values:\n\n  - `MEETING`: Guests can do some actions during the conference, for example talk, turn on camera and show their screen.\n  - `WEBINAR`: Guests can only watch the conference.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "OnlineConferencingConfig",
      "members": [
        {
          "name": "conferenceType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Conference type"
        },
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether online conferencing is enabled (not supported for TBD schedules).\nWhen enabled, links to join conferencing are generated and provided to guests."
        },
        {
          "name": "providerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Conferencing provider ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "OnlineConferencingSession",
      "members": [
        {
          "name": "guestLink",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Link for guests to join the online conference session."
        },
        {
          "name": "hostLink",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Link for the event host to start the online conference session."
        },
        {
          "name": "password",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Password required to join the online conferencing session (when relevant)."
        },
        {
          "name": "sessionCreated",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the session was created successfully on the event host side."
        },
        {
          "name": "sessionId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique session ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "OptionSelection",
      "members": [
        {
          "name": "optionIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "0-based index from predefined `input.options` which is selected initially."
        },
        {
          "name": "placeholderText",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Placeholder hint describing expected choices (such as \"Please select\").\nConsidered an empty choice."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfOptionSelectionSelectedOptionOneOf",
            "members": [
              "optionIndex",
              "placeholderText"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Describes initially selected option when an input has multiple choices.\nDefaults to first (0th) option if not configured."
        ]
      }
    },
    {
      "name": "OptionSelectionSelectedOptionOneOf",
      "members": [
        {
          "name": "optionIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "0-based index from predefined `input.options` which is selected initially."
        },
        {
          "name": "placeholderText",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Placeholder hint describing expected choices (such as \"Please select\").\nConsidered an empty choice."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to return. See [Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging#getting-started_sorting-and-paging_paging) for more information."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to return. See [Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging#getting-started_sorting-and-paging_paging) for more information."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Requested offset."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Positive",
      "members": [
        {
          "name": "confirmation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.PositiveResponseConfirmation"
            }
          ],
          "doc": "Confirmation messages shown after registration."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main form title for positive response."
        }
      ],
      "docs": {
        "description": [
          "Set of messages shown during registration when RSVP response is positive."
        ]
      }
    },
    {
      "name": "PositiveResponseConfirmation",
      "members": [
        {
          "name": "addToCalendarActionLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Add to calendar\" call-to-action label text."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Confirmation message text."
        },
        {
          "name": "shareActionLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Share event\" call-to-action label text."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Confirmation message title."
        }
      ],
      "docs": {
        "description": [
          "Confirmation messages shown after registration."
        ]
      }
    },
    {
      "name": "PublishDraftEventOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PublishDraftEventRequest",
      "members": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PublishDraftEventResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Published event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryEventsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        },
        {
          "name": "includeDrafts",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether draft events should be returned in the response.\nThis parameter requires the `WIX_EVENTS.MANAGE_EVENTS` permission."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryEventsRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        },
        {
          "name": "includeDrafts",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether draft events should be returned in the response.\nThis parameter requires the `WIX_EVENTS.MANAGE_EVENTS` permission."
        },
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.QueryV2"
            }
          ],
          "doc": "Query options. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryEventsResponse",
      "members": [
        {
          "name": "events",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.V3Event"
                  }
                ]
              }
            }
          ],
          "doc": "List of events."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Paging"
            }
          ],
          "doc": "Paging options. Can't be used together with `cursorPaging`."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfQueryV2PagingMethodOneOf",
            "members": [
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Paging"
            }
          ],
          "doc": "Paging options. Can't be used together with `cursorPaging`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Recurrences",
      "members": [
        {
          "name": "categoryId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Recurring event category ID."
        },
        {
          "name": "individualEventDates",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Occurrence"
                  }
                ]
              }
            }
          ],
          "doc": "Individual event dates info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Registration",
      "members": [
        {
          "name": "allowedGuestTypes",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Types of guests allowed to register. Possible values:\n\n  - `VISITOR_OR_MEMBER`: All site visitors can RSVP to the event.\n  - `MEMBER`: Only people who have signed up as members of your site are able to RSVP to the event.\n"
        },
        {
          "name": "external",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ExternalRegistration"
            }
          ],
          "doc": "External registration details."
        },
        {
          "name": "initialType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Initial event type which is set when creating an event. Possible values:\n\n  - `RSVP`: Guests register by RSVPing to the event.\n  - `TICKETING`: Guests register by buying tickets.\n\n  This property value never changes.\n"
        },
        {
          "name": "registrationDisabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the registration is disabled."
        },
        {
          "name": "registrationPaused",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the registration is paused."
        },
        {
          "name": "rsvp",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.RsvpRegistration"
            }
          ],
          "doc": "RSVP registration details."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Registration status. Possible values:\n\n  - `CLOSED_AUTOMATICALLY`: Registration is closed after tickets are sold out.\n  - `CLOSED_MANUALLY`: Registration is closed when the `registration.registrationDisabled` property is set to `true`.\n  - `OPEN_RSVP`: Guests can start RSVPing to the event.\n  - `OPEN_RSVP_WAITLIST_ONLY`: Guest list has reached the maximum, new guests are added to a waitlist.\n  - `OPEN_TICKETS`: Guests can buy tickets to the event.\n  - `OPEN_EXTERNAL`: Guests register on a different page or web address.\n  - `SCHEDULED_RSVP`: Registration via RSVP is scheduled for the future."
        },
        {
          "name": "tickets",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TicketsRegistration"
            }
          ],
          "doc": "Ticket registration details."
        },
        {
          "name": "type",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Current registration type:\n\n  - `RSVP`: Guests register by RSVPing to the event.\n  - `TICKETING`: Guests register by buying tickets.\n  - `EXTERNAL`: Guests register externally using some other site or platform.\n  - `NONE`: No registration is required, all guests can attend. This registration type is for only displaying the event details on a site.\n\nThe property value might change to `EXTERNAL` or `NONE` after initial event creation, depending on any additional configuration applied to the event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RegistrationClosedMessages",
      "members": [
        {
          "name": "exploreEventsActionLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Explore other events\" call-to-action label text."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Message shown when event registration is closed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ResponseConfirmation",
      "members": [
        {
          "name": "addToCalendarLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Add to calendar\" call-to-action label text."
        },
        {
          "name": "downloadTicketsLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Download tickets\" call-to-action label text."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Confirmation message text."
        },
        {
          "name": "shareEventLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Share event\" call-to-action label text."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Confirmation message title."
        }
      ],
      "docs": {
        "description": [
          "Confirmation messages shown after checkout."
        ]
      }
    },
    {
      "name": "RsvpCollection",
      "members": [
        {
          "name": "config",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.RsvpCollectionConfig"
            }
          ],
          "doc": "RSVP collection configuration."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RsvpCollectionConfig",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Registration end timestamp."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total guest limit available to register to the event.\nAdditional guests per RSVP are counted towards total guests."
        },
        {
          "name": "rsvpStatusOptions",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Defines the supported RSVP statuses."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Registration start timestamp."
        },
        {
          "name": "waitlist",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether a waitlist is opened when total guest limit is reached, allowing guests to create RSVP with WAITING RSVP status."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RsvpFormMessages",
      "members": [
        {
          "name": "negativeMessages",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Negative"
            }
          ],
          "doc": "Messages shown for RSVP = `NO`."
        },
        {
          "name": "positiveMessages",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Positive"
            }
          ],
          "doc": "Messages shown for RSVP = `YES`."
        },
        {
          "name": "rsvpNoOption",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Label text indicating RSVP `NO` response."
        },
        {
          "name": "rsvpYesOption",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Label text indicating RSVP `YES` response."
        },
        {
          "name": "submitActionLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Submit form\" call-to-action label text."
        },
        {
          "name": "waitlistMessages",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Positive"
            }
          ],
          "doc": "Messages shown for RSVP = `WAITING` (when event is full and waitlist is available)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RsvpRegistration",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Registration end date in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "How many guests can RSVP to an event."
        },
        {
          "name": "responseType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'UNKNOWN_RESPONSE_TYPE'`\n- `'YES_AND_NO'`\n- `'YES_ONLY'`"
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Registration start date in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "waitlistEnabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether a waitlist is opened when the total guest limit is reached. If `true`, guests can RSVP to an event and are automatically put in the waitlist with the `IN_WAITLIST` status."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RsvpSummary",
      "members": [
        {
          "name": "no",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of RSVPs with status `NO`."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of RSVPs."
        },
        {
          "name": "waitlist",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of RSVPs in waitlist."
        },
        {
          "name": "yes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of RSVPs with status `YES`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Rsvps",
      "members": [
        {
          "name": "noCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of RSVPs with status `NO`."
        },
        {
          "name": "totalCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of RSVPs."
        },
        {
          "name": "waitlistCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of RSVPs in a waitlist."
        },
        {
          "name": "yesCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of RSVPs with status `YES`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ScheduleConfig",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp."
        },
        {
          "name": "endDateHidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether end date is hidden in the formatted schedule."
        },
        {
          "name": "recurrences",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsRecurrences"
            }
          ],
          "doc": "Event recurrences."
        },
        {
          "name": "scheduleTbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Defines event as TBD (To Be Determined) schedule.\nWhen event time is not yet defined, TBD message is displayed instead of event start and end times.\n`startDate`, `endDate` and `timeZoneId` are not required when schedule is TBD."
        },
        {
          "name": "scheduleTbdMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TBD message."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether time zone is displayed in formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start timestamp."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Scheduling",
      "members": [
        {
          "name": "config",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.ScheduleConfig"
            }
          ],
          "doc": "Schedule configuration."
        },
        {
          "name": "endDateFormatted",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted end date of the event (empty for TBD schedules or when end date is hidden)."
        },
        {
          "name": "endTimeFormatted",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted end time of the event (empty for TBD schedules or when end date is hidden)."
        },
        {
          "name": "formatted",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted schedule representation."
        },
        {
          "name": "startDateFormatted",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted start date of the event (empty for TBD schedules)."
        },
        {
          "name": "startTimeFormatted",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted start time of the event (empty for TBD schedules)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SeoSchema",
      "members": [
        {
          "name": "settings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Settings"
            }
          ],
          "doc": "SEO general settings."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Tag"
                  }
                ]
              }
            }
          ],
          "doc": "SEO tag information."
        }
      ],
      "docs": {
        "description": [
          "The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\nThe search engines use this information for ranking purposes, or to display snippets in the search results.\nThis data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself."
        ]
      }
    },
    {
      "name": "SeoSettings",
      "members": [
        {
          "name": "advancedSeoData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.SeoSchema"
            }
          ],
          "doc": "Advanced SEO data."
        },
        {
          "name": "hidden",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the slug is hidden from the SEO Site Map."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Settings",
      "members": [
        {
          "name": "keywords",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.WixEventsV2.Keyword"
                  }
                ]
              }
            }
          ],
          "doc": "User-selected keyword terms for a specific page."
        },
        {
          "name": "preventAutoRedirect",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled.\n\nDefault: `false` (Auto Redirect is enabled.)\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteUrl",
      "members": [
        {
          "name": "base",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Base URL. For premium sites, this will be the domain.\nFor free sites, this would be site URL (e.g `mysite.wixsite.com/mysite`)"
        },
        {
          "name": "path",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The path to that page - e.g `/my-events/weekly-meetup-2`"
        }
      ],
      "docs": {
        "description": [
          "Site URL components"
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order.\nUse `ASC` for ascending order or `DESC` for descending order.\n\nDefault: `ASC`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "street name"
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "street number"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Subdivision",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision short code"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision full-name"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Summaries",
      "members": [
        {
          "name": "rsvps",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Rsvps"
            }
          ],
          "doc": "RSVP summary of guests."
        },
        {
          "name": "tickets",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Tickets"
            }
          ],
          "doc": "Summary of revenue and sold tickets. Archived orders are not included."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Tag",
      "members": [
        {
          "name": "children",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag inner content. For example, `<title> inner content </title>`."
        },
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is a custom tag."
        },
        {
          "name": "disabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is disabled."
        },
        {
          "name": "meta",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "SEO tag meta data. For example, `{height: 300, width: 240}`."
        },
        {
          "name": "props",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\nFor example: `{'name': 'description', 'content': 'the description itself'}`."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag type.\n\nSupported values: `title`, `meta`, `script`, `link`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TaxConfig",
      "members": [
        {
          "name": "appliesToDonations",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Applies taxes for donations, default true."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax name."
        },
        {
          "name": "rate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax rate (e.g.,`21.55`)."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax application settings."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TaxSettings",
      "members": [
        {
          "name": "appliedToDonations",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Apply tax to donations."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax name."
        },
        {
          "name": "rate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax rate (for example,`21.55`)."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax application settings:\n\n  - `INCLUDED_IN_PRICE`: Deduct the fee from the ticket price for a seller. For example, if you're selling tickets for $10, a service fee of $0.25 is deducted from the price and you'll get $9.75.\n  - `ADDED_AT_CHECKOUT`: Show the fee iin addition to the ticket price at checkout and a guest pays the fee. For example, if you sell tickets for $10, a customer sees a service fee of $0.25 and pays $10.25 in total.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Ticketing",
      "members": [
        {
          "name": "config",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TicketingConfig"
            }
          ],
          "doc": "Ticketing configuration."
        },
        {
          "name": "currency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Currency used in event transactions."
        },
        {
          "name": "highestPrice",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deprecated."
        },
        {
          "name": "highestTicketPrice",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsMoney"
            }
          ],
          "doc": "Price of highest priced ticket."
        },
        {
          "name": "highestTicketPriceFormatted",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted price of highest priced ticket."
        },
        {
          "name": "lowestPrice",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deprecated."
        },
        {
          "name": "lowestTicketPrice",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsMoney"
            }
          ],
          "doc": "Price of lowest priced ticket."
        },
        {
          "name": "lowestTicketPriceFormatted",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted price of lowest priced ticket."
        },
        {
          "name": "soldOut",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether all tickets are sold for this event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TicketingConfig",
      "members": [
        {
          "name": "guestAssignedTickets",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the form must be filled out separately for each ticket."
        },
        {
          "name": "reservationDurationInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Duration for which the tickets being bought are reserved."
        },
        {
          "name": "taxConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TaxConfig"
            }
          ],
          "doc": "Tax configuration."
        },
        {
          "name": "ticketLimitPerOrder",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Limit of tickets that can be purchased per order, default 20."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TicketingSummary",
      "members": [
        {
          "name": "currencyLocked",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether currency is locked and cannot be changed (generally occurs after the first order in the specified currency has been created)."
        },
        {
          "name": "orders",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of orders placed."
        },
        {
          "name": "revenue",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsMoney"
            }
          ],
          "doc": "Total revenue, excluding fees.\n(taxes and payment provider fees are not deducted.)"
        },
        {
          "name": "tickets",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of tickets sold."
        },
        {
          "name": "totalSales",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsMoney"
            }
          ],
          "doc": "Total balance of confirmed transactions."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Tickets",
      "members": [
        {
          "name": "currencyLocked",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the currency is locked and can’t be changed."
        },
        {
          "name": "revenue",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsMoney"
            }
          ],
          "doc": "Total revenue. Taxes and payment provider fees aren't deducted."
        },
        {
          "name": "ticketsSold",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of sold tickets."
        },
        {
          "name": "totalOrders",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of orders placed."
        },
        {
          "name": "totalSales",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.EventsMoney"
            }
          ],
          "doc": "Total balance of confirmed transactions."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TicketsRegistration",
      "members": [
        {
          "name": "currency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket price currency."
        },
        {
          "name": "guestsAssignedSeparately",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the registration form must be filled out separately for each ticket."
        },
        {
          "name": "highestPrice",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Money"
            }
          ],
          "doc": "Highest ticket price."
        },
        {
          "name": "lowestPrice",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Money"
            }
          ],
          "doc": "Lowest ticket price."
        },
        {
          "name": "soldOut",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether all tickets are sold for the event."
        },
        {
          "name": "taxSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TaxSettings"
            }
          ],
          "doc": "How tax is applied."
        },
        {
          "name": "ticketLimitPerOrder",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Ticket limit per order.\nDefault: 20 tickets."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TicketsUnavailableMessages",
      "members": [
        {
          "name": "exploreEventsActionLabel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "\"Explore other events\" call-to-action label text."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Message shown when event tickets are unavailable."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TimeDuration",
      "members": [
        {
          "name": "days",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of days"
        },
        {
          "name": "hours",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of hours"
        },
        {
          "name": "minutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of minutes"
        }
      ],
      "docs": {
        "description": [
          "A coarse-grained representation of time duration divided into whole constituting components of days, hours, and minutes.\nFor example, 25.5 hours duration is represented as `{ days: 1, hours: 1, minutes: 30 }`."
        ]
      }
    },
    {
      "name": "UpdateEvent",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the event was created in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the event was updated in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "agendaSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.AgendaSettings"
            }
          ],
          "doc": "Event schedule details."
        },
        {
          "name": "calendarUrls",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CalendarUrls"
            }
          ],
          "doc": "URLs that allow you to add an event to the Google calendar, or to download an [ICS calendar](https://icscalendar.com/) file."
        },
        {
          "name": "contactLabel",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assigned contacts label key."
        },
        {
          "name": "dateAndTimeSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.DateAndTimeSettings"
            }
          ],
          "doc": "Event date and time settings."
        },
        {
          "name": "detailedDescription",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Detailed description of an event. You can enter the description using rich text format (add various types of markups, such as underlines, italics, bolding, color codes, bullet lists, and links by using HTML formatting tags)."
        },
        {
          "name": "eventDisplaySettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3EventDisplaySettings"
            }
          ],
          "doc": "Visual settings for event."
        },
        {
          "name": "eventPageUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event page URL components."
        },
        {
          "name": "form",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Form"
            }
          ],
          "doc": "Event registration form."
        },
        {
          "name": "guestListSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.GuestListSettings"
            }
          ],
          "doc": "Guest list configuration."
        },
        {
          "name": "instanceId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID of the site where the event is hosted."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Location"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "mainImage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main event image."
        },
        {
          "name": "onlineConferencing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.OnlineConferencing"
            }
          ],
          "doc": "Online conferencing details."
        },
        {
          "name": "registration",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Registration"
            }
          ],
          "doc": "RSVP or ticketing registration details."
        },
        {
          "name": "seoSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.SeoSettings"
            }
          ],
          "doc": "SEO settings."
        },
        {
          "name": "shortDescription",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Short description that appears under the event title."
        },
        {
          "name": "slug",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique identifier of the event page. The naming is the same as the event title written in kebab case. For example, if your event title is \"Leather Crafting 101\", then the slug is \"leather-crafting-101\"."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status. Possible values:\n\n  - `UPCOMING`: The event is published and scheduled to start.\n  - `STARTED`: The event has started.\n  - `ENDED`: The event has ended.\n  - `CANCELED`: The event is canceled.\n  - `DRAFT`: The event is not published."
        },
        {
          "name": "summaries",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Summaries"
            }
          ],
          "doc": "Summary of RSVP or ticket sales."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the user who created the event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateEventOptions",
      "members": [
        {
          "name": "event",
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.UpdateEvent"
            }
          ],
          "doc": "Event to update."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateEventRequest",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Field values to be changed."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return. If both `fields` and `fieldsets` are sent in the request, the union of both lists is returned.\n- `DETAILS`: Returns `shortDescription`, `mainImage` and `calendarUrls`.\n- `TEXTS`: Returns `detailedDescription`.\n- `REGISTRATION`: Returns `registration`.\n- `URLS`: Returns `eventPageUrl`.\n- `FORM`: Returns `form`.\n- `DASHBOARD`: Returns `summaries`.\n- `FEED`: Returns `feed`.\n- `ONLINE_CONFERENCING_SESSION`: Returns `onlineConferencing.session`.\n- `SEO_SETTINGS`: Returns `seoSettings`.\n- `AGENDA`: Returns `agendaSettings`.\n- `CATEGORIES`: Returns `categories`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateEventResponse",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3Event"
            }
          ],
          "doc": "Updated event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UserFilter",
      "members": [
        {
          "name": "relation",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Relation of user to event"
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "User who is related to event"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V3Event",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the event was created in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the event was updated in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "agendaSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.AgendaSettings"
            }
          ],
          "doc": "Event schedule details."
        },
        {
          "name": "calendarUrls",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.CalendarUrls"
            }
          ],
          "doc": "URLs that allow you to add an event to the Google calendar, or to download an [ICS calendar](https://icscalendar.com/) file."
        },
        {
          "name": "contactLabel",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assigned contacts label key."
        },
        {
          "name": "dateAndTimeSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.DateAndTimeSettings"
            }
          ],
          "doc": "Event date and time settings."
        },
        {
          "name": "detailedDescription",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Detailed description of an event. You can enter the description using rich text format (add various types of markups, such as underlines, italics, bolding, color codes, bullet lists, and links by using HTML formatting tags)."
        },
        {
          "name": "eventDisplaySettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.V3EventDisplaySettings"
            }
          ],
          "doc": "Visual settings for event."
        },
        {
          "name": "eventPageUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event page URL components."
        },
        {
          "name": "form",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Form"
            }
          ],
          "doc": "Event registration form."
        },
        {
          "name": "guestListSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.GuestListSettings"
            }
          ],
          "doc": "Guest list configuration."
        },
        {
          "name": "instanceId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID of the site where the event is hosted."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Location"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "mainImage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main event image."
        },
        {
          "name": "onlineConferencing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.OnlineConferencing"
            }
          ],
          "doc": "Online conferencing details."
        },
        {
          "name": "registration",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Registration"
            }
          ],
          "doc": "RSVP or ticketing registration details."
        },
        {
          "name": "seoSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.SeoSettings"
            }
          ],
          "doc": "SEO settings."
        },
        {
          "name": "shortDescription",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Short description that appears under the event title."
        },
        {
          "name": "slug",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique identifier of the event page. The naming is the same as the event title written in kebab case. For example, if your event title is \"Leather Crafting 101\", then the slug is \"leather-crafting-101\"."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status:\n\n  - `UPCOMING`: Event is published and scheduled to start.\n  - `STARTED`: Event has started.\n  - `ENDED`: Event has ended.\n  - `CANCELED`: Event is canceled.\n  - `DRAFT`: Event is not published."
        },
        {
          "name": "summaries",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Summaries"
            }
          ],
          "doc": "Summary of RSVP or ticket sales."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the user who created the event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V3EventCanceled",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event cancelation timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the user who created the event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V3EventDisplaySettings",
      "members": [
        {
          "name": "hideEventDetailsButton",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether event details button is hidden. Only available for events with no registration."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V3EventEnded",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp in ISO UTC format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V3EventPublished",
      "members": [
        {
          "name": "derivedFromEventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID. Indicates the original event from which the current event was derived from.\nCan be used to track the original event and add missing information."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event publishing timestamp in ISO UTC format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V3EventReminder",
      "members": [
        {
          "name": "dateAndTimeSettings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.DateAndTimeSettings"
            }
          ],
          "doc": "Event schedule configuration."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.Location"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "startsIn",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.WixEventsV2.TimeDuration"
            }
          ],
          "doc": "Time until the event starts (currently, reminder letter is triggered 1 day before event starts)."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Reminder timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the user who created the event."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V3EventStarted",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event schedule configuration."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
