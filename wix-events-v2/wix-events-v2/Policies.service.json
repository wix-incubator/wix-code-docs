{
  "name": "Policies",
  "memberOf": "wix-events-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-events.v2-policy",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createPolicy",
      "params": [
        {
          "name": "policy",
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Policy"
            }
          ],
          "doc": "An event policy to be created.",
          "required": true
        }
      ],
      "requiredFields": [
        "policy",
        "policy.body",
        "policy.eventId",
        "policy.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Policies.CreatePolicyResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a policy for an event. Each event can have up to 3 policies.",
        "description": [
          ">  Note: This function is restricted and only runs if you elevate permissions using the [wix-auth.elevate()](https://www.wix.com/velo/reference/wix-auth/elevate) function."
        ],
        "examples": [
          {
            "title": "CreatePolicy example",
            "body": [
              "import { policies } from 'wix-events.v2';",
              "  ",
              " async function createPolicy(policy) {",
              "   try {",
              "     const result = await policies.createPolicy(policy);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "deletePolicy",
      "params": [
        {
          "name": "policyId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event policy to delete.\n",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.DeletePolicyOptions"
            }
          ],
          "doc": "Options for Delete Policy function.",
          "required": false
        }
      ],
      "requiredFields": [
        "policyId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a policy.",
        "description": [
          "> Note: This function is restricted and only runs if you elevate permissions using the [wix-auth.elevate()](https://www.wix.com/velo/reference/wix-auth/elevate) function."
        ],
        "examples": [
          {
            "title": "DeletePolicy example",
            "body": [
              "import { policies } from 'wix-events.v2';",
              "  ",
              " async function deletePolicy(policyId, options) {",
              "   try {",
              "     const result = await policies.deletePolicy(policyId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "getPolicy",
      "params": [
        {
          "name": "policyId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy ID",
          "required": true
        }
      ],
      "requiredFields": [
        "policyId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Policies.GetPolicyResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a policy.",
        "description": [],
        "examples": [
          {
            "title": "GetPolicy example",
            "body": [
              "import { policies } from 'wix-events.v2';",
              "  ",
              " async function getPolicy(policyId) {",
              "   try {",
              "     const result = await policies.getPolicy(policyId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "queryPolicies",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-events-v2.Policies.PoliciesQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of policies, given the provided paging and filter.  ",
        "description": [
          "",
          "> Note: The fieldsets in this function are restricted and only run if you elevate permissions using the [wix-auth.elevate()](https://www.wix.com/velo/reference/wix-auth/elevate) function.",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`id`|[`eq()`](wix-events.v2.Policies.PolicysQueryBuilder#eq),[`ne()`](wix-events.v2.Policies.PolicysQueryBuilder#ne),[`in()`](wix-events.v2.Policies.PolicysQueryBuilder#in),[`exists()`](wix-events.v2.Policies.PolicysQueryBuilder#exists),[`ascending()`](wix-events.v2.Policies.PolicysQueryBuilder#ascending),[`descending()`](wix-events.v2.Policies.PolicysQueryBuilder#descending)|",
          "|`revision`|[`eq()`](wix-events.v2.Policies.PolicysQueryBuilder#eq),[`ne()`](wix-events.v2.Policies.PolicysQueryBuilder#ne),[`in()`](wix-events.v2.Policies.PolicysQueryBuilder#in),[`lt()`](wix-events.v2.Policies.PolicysQueryBuilder#lt),[`le()`](wix-events.v2.Policies.PolicysQueryBuilder#le),[`gt()`](wix-events.v2.Policies.PolicysQueryBuilder#gt),[`ge()`](wix-events.v2.Policies.PolicysQueryBuilder#ge),[`exists()`](wix-events.v2.Policies.PolicysQueryBuilder#exists),[`ascending()`](wix-events.v2.Policies.PolicysQueryBuilder#ascending),[`descending()`](wix-events.v2.Policies.PolicysQueryBuilder#descending)|",
          "|`createdDate`|[`eq()`](wix-events.v2.Policies.PolicysQueryBuilder#eq),[`ne()`](wix-events.v2.Policies.PolicysQueryBuilder#ne),[`in()`](wix-events.v2.Policies.PolicysQueryBuilder#in),[`lt()`](wix-events.v2.Policies.PolicysQueryBuilder#lt),[`le()`](wix-events.v2.Policies.PolicysQueryBuilder#le),[`gt()`](wix-events.v2.Policies.PolicysQueryBuilder#gt),[`exists()`](wix-events.v2.Policies.PolicysQueryBuilder#exists),[`ascending()`](wix-events.v2.Policies.PolicysQueryBuilder#ascending),[`descending()`](wix-events.v2.Policies.PolicysQueryBuilder#descending)|",
          "|`updatedDate`|[`eq()`](wix-events.v2.Policies.PolicysQueryBuilder#eq),[`ne()`](wix-events.v2.Policies.PolicysQueryBuilder#ne),[`in()`](wix-events.v2.Policies.PolicysQueryBuilder#in),[`lt()`](wix-events.v2.Policies.PolicysQueryBuilder#lt),[`le()`](wix-events.v2.Policies.PolicysQueryBuilder#le),[`gt()`](wix-events.v2.Policies.PolicysQueryBuilder#gt),[`exists()`](wix-events.v2.Policies.PolicysQueryBuilder#exists),[`ascending()`](wix-events.v2.Policies.PolicysQueryBuilder#ascending),[`descending()`](wix-events.v2.Policies.PolicysQueryBuilder#descending)|",
          "|`name`|[`eq()`](wix-events.v2.Policies.PolicysQueryBuilder#eq),[`ne()`](wix-events.v2.Policies.PolicysQueryBuilder#ne),[`in()`](wix-events.v2.Policies.PolicysQueryBuilder#in),[`exists()`](wix-events.v2.Policies.PolicysQueryBuilder#exists),[`ascending()`](wix-events.v2.Policies.PolicysQueryBuilder#ascending),[`descending()`](wix-events.v2.Policies.PolicysQueryBuilder#descending)|",
          "|`body`|[`eq()`](wix-events.v2.Policies.PolicysQueryBuilder#eq),[`ne()`](wix-events.v2.Policies.PolicysQueryBuilder#ne),[`in()`](wix-events.v2.Policies.PolicysQueryBuilder#in),[`exists()`](wix-events.v2.Policies.PolicysQueryBuilder#exists),[`ascending()`](wix-events.v2.Policies.PolicysQueryBuilder#ascending),[`descending()`](wix-events.v2.Policies.PolicysQueryBuilder#descending)|",
          "|`eventId`|[`eq()`](wix-events.v2.Policies.PolicysQueryBuilder#eq),[`ne()`](wix-events.v2.Policies.PolicysQueryBuilder#ne),[`in()`](wix-events.v2.Policies.PolicysQueryBuilder#in),[`exists()`](wix-events.v2.Policies.PolicysQueryBuilder#exists),[`ascending()`](wix-events.v2.Policies.PolicysQueryBuilder#ascending),[`descending()`](wix-events.v2.Policies.PolicysQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "QueryPolicies example",
            "body": [
              "import { policies } from 'wix-events.v2';",
              "  ",
              " async function queryPolicies() {",
              "   const { items } = policies.queryPolicies().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "reorderEventPolicies",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.ReorderEventPoliciesOptions"
            }
          ],
          "doc": "Options for Reorder Event Policies function.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Policies.ReorderEventPoliciesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Change the order of event policies.",
        "description": [
          ">  Note: This function is restricted and only runs if you elevate permissions using the [wix-auth.elevate()](https://www.wix.com/velo/reference/wix-auth/elevate) function."
        ],
        "examples": [
          {
            "title": "ReorderEventPolicies example",
            "body": [
              "import { policies } from 'wix-events.v2';",
              "  ",
              " async function reorderEventPolicies(options) {",
              "   try {",
              "     const result = await policies.reorderEventPolicies(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "updatePolicy",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy ID. (Generated automatically).\n",
          "required": true
        },
        {
          "name": "policy",
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.UpdatePolicy"
            }
          ],
          "doc": "Event policy to update.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "policy",
        "policy.body",
        "policy.eventId",
        "policy.name",
        "policy.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v2.Policies.UpdatePolicyResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a policy.",
        "description": [
          "> Note: This function is restricted and only runs if you elevate permissions using the [wix-auth.elevate()](https://www.wix.com/velo/reference/wix-auth/elevate) function."
        ],
        "examples": [
          {
            "title": "UpdatePolicy example",
            "body": [
              "import { policies } from 'wix-events.v2';",
              "  ",
              " async function updatePolicy(id, policy, options) {",
              "   try {",
              "     const result = await policies.updatePolicy(id, policy, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    }
  ],
  "messages": [
    {
      "name": "Address",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "addressLine1",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "addressLine2",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Free text providing more detailed address info. Usually contains Apt, Suite, Floor"
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "city name"
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "country code"
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "zip/postal code"
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.StreetAddress"
            }
          ],
          "doc": "a break down of the street to number and street name"
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision (usually state or region) code according to ISO 3166-2"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Physical address"
        ]
      }
    },
    {
      "name": "AddressLocation",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.StreetAddress"
            }
          ],
          "doc": "a break down of the street to number and street name"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonCursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load per page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonCursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonPaging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load per page."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonPagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.CommonCursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonQueryV2",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.CommonCursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\", \"fieldName2\":{\"$operator\":\"value2\"} }`. <br/> <br/> **Example:** <br/> `\"filter\" : { \"id\": \"2224a9d1-79e6-4549-a5c5-bf7ce5aac1a5\", \"revision\": {\"$ne\":\"1\"} }` <br/> <br/> See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort) for more information."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.CommonPaging"
            }
          ],
          "doc": "Pagination options."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Policies.CommonSorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format: <br/> `[{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]` <br/> <br/> **Example:** <br/> `[{\"fieldName\":\"createdDate\",\"direction\":\"DESC\"}]` <br/> <br/> See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort) for more information."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCommonQueryV2PagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonQueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.CommonCursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.CommonPaging"
            }
          ],
          "doc": "Pagination options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommonSorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order (ASC/DESC). Defaults to ASC"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreatePolicyRequest",
      "members": [
        {
          "name": "policy",
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Policy"
            }
          ],
          "doc": "An event policy to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreatePolicyResponse",
      "members": [
        {
          "name": "policy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Policy"
            }
          ],
          "doc": "The event policy that was created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeletePolicyOptions",
      "members": [
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the event policy."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeletePolicyRequest",
      "members": [
        {
          "name": "policyId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event policy to delete."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the event policy."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeletePolicyResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCopied",
      "members": [
        {
          "name": "derivedFromEventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID. Indicates the original event which current event was derived from."
        },
        {
          "name": "derivedFromInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID. Indicates the original app instance which current event was derived from."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Location"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "scheduleConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.ScheduleConfig"
            }
          ],
          "doc": "Event schedule configuration."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "ticketDefinitions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Map of copied ticket definitions from original event.\nKey represents ticket def id in the original event.\nValue represents ticket def id in the newly created event."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event created timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetPolicyRequest",
      "members": [
        {
          "name": "policyId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetPolicyResponse",
      "members": [
        {
          "name": "policy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Policy"
            }
          ],
          "doc": "Policy"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Location",
      "members": [
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Single line address representation."
        },
        {
          "name": "coordinates",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.MapCoordinates"
            }
          ],
          "doc": "Location map coordinates."
        },
        {
          "name": "fullAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Address"
            }
          ],
          "doc": "Full address derived from formatted single line `address`.\nWhen `full_address` is used to create or update the event, deprecated `address` and `coordinates` are ignored.\nIf provided `full_address` has empty `formatted_address` or `coordinates`, it will be auto-completed using Atlas service.\n\nMigration notes:\n- `full_address.formatted_address` is equivalent to `address`.\n- `full_address.geocode` is equivalent to `coordinates`.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location name."
        },
        {
          "name": "tbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Defines event location as TBD (To Be Determined).\nWhen event location is not yet defined, `name` is displayed instead of location address.\n`coordinates`, `address`, `type` and `full_address` are not required when location is TBD."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location type."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MapCoordinates",
      "members": [
        {
          "name": "lat",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Latitude."
        },
        {
          "name": "lng",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Longitude."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Occurrence",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether time zone is displayed in formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start timestamp."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Policy",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date policy was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy ID. (Generated automatically)."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time of guest's latest update in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "body",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy body."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy name."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the policy is updated.\nTo prevent conflicting changes, the current revision must be passed when updating the policy."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryPoliciesRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.CommonQueryV2"
            }
          ],
          "doc": "Query options. See [API Query Langauge](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryPoliciesResponse",
      "members": [
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.CommonPagingMetadataV2"
            }
          ],
          "doc": "Query result's metadata."
        },
        {
          "name": "policies",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Policies.Policy"
                  }
                ]
              }
            }
          ],
          "doc": "Event policies."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Recurrences",
      "members": [
        {
          "name": "categoryId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Recurring event category ID."
        },
        {
          "name": "occurrences",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Policies.Occurrence"
                  }
                ]
              }
            }
          ],
          "doc": "Event occurrences."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Recurrence status."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderEventPoliciesOptions",
      "members": [
        {
          "name": "afterPolicyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the event policy ID after this event policy ID."
        },
        {
          "name": "beforePolicyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the event policy ID before this event policy ID."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "policyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event policy ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderEventPoliciesRequest",
      "members": [
        {
          "name": "afterPolicyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the event policy ID after this event policy ID."
        },
        {
          "name": "beforePolicyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the event policy ID before this event policy ID."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "policyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event policy ID."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfReorderEventPoliciesRequestReferencePolicyOneOf",
            "members": [
              "afterPolicyId",
              "beforePolicyId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderEventPoliciesRequestReferencePolicyOneOf",
      "members": [
        {
          "name": "afterPolicyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the event policy Id after this event policy ID."
        },
        {
          "name": "beforePolicyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderEventPoliciesResponse",
      "members": [
        {
          "name": "policies",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v2.Policies.Policy"
                  }
                ]
              }
            }
          ],
          "doc": "Ordered event policies."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ScheduleConfig",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp."
        },
        {
          "name": "endDateHidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether end date is hidden in the formatted schedule."
        },
        {
          "name": "recurrences",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Recurrences"
            }
          ],
          "doc": "Event recurrences."
        },
        {
          "name": "scheduleTbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Defines event as TBD (To Be Determined) schedule.\nWhen event time is not yet defined, TBD message is displayed instead of event start and end times.\n`startDate`, `endDate` and `timeZoneId` are not required when schedule is TBD."
        },
        {
          "name": "scheduleTbdMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TBD message."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether time zone is displayed in formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start timestamp."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "street name"
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "street number"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Subdivision",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision short code"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision full-name"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePolicy",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date policy was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy ID. (Generated automatically)."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time of guest's latest update in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "body",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy body."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy name."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the policy is updated.\nTo prevent conflicting changes, the current revision must be passed when updating the policy."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePolicyOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePolicyRequest",
      "members": [
        {
          "name": "policy",
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Policy"
            }
          ],
          "doc": "Event policy to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePolicyResponse",
      "members": [
        {
          "name": "policy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Policy"
            }
          ],
          "doc": "The updated event policy."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePolicySortIndexRequest",
      "members": [
        {
          "name": "policyId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy's ID"
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the event policy."
        },
        {
          "name": "sortIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The sort index of a policy to set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePolicySortIndexResponse",
      "members": [
        {
          "name": "policy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v2.Policies.Policy"
            }
          ],
          "doc": "The updated event policy."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
