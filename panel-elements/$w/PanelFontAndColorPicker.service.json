{ "name": "PanelFontAndColorPicker",
  "memberOf": "$w",
  "mixes":
    [ "$w.PanelElementMixin",
      "$w.HiddenCollapsedMixin",
      "$w.Element",
      "$w.DisabledMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "PanelFontAndColorPicker.js" },
  "docs":
    { "summary": "Panel font and color picker elements are used in the Wix Blocks panel builder for selecting fonts and colors.",
      "description":
        [ "Panel font and color picker is a custom panel element that is added to the Wix Editor for site creators to select fonts and colors to use on their site.",
          "",
          "> **Important**:  ",
          "> This element is available only in [custom panels](https://support.wix.com/en/article/wix-blocks-designing-custom-panels-for-your-widgets-action-bar-buttons) built in Wix Blocks. [Wix Blocks](https://support.wix.com/en/article/wix-blocks-check-out-our-articles) is an editor for building Wix apps." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "color",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 184,
              "filename": "PanelFontAndColorPicker.js" },
            { "lineno": 199,
              "filename": "PanelFontAndColorPicker.js" } ],
        "docs":
          { "summary": "Sets or gets an element's color.",
            "description":
              [ "Retrieve or update the displayed color in the panel element's color picker section.",
                "The `color` property supports basic [named colors](https://developer.mozilla.org/en-US/docs/Web/CSS/named-color#standard_colors), RGB, and hexadecimal code formats.",
                "> **Note**: Changing an element's `color` in code triggers an `onColorChange()` event." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's color value",
                  "body":
                    [ "let color = $w(\"#myElement\").color; // \"#008000\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's color value (RGB)",
                  "body":
                    [ "$w(\"#myElemet\").color = \"rgb(0,128,0)\";" ],
                  "extra":
                    {  } },
                { "title": "Set an element's color value (Standard named colors)",
                  "body":
                    [ "$w(\"#myElemet\").color = \"aqua\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "divider",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 225,
              "filename": "PanelFontAndColorPicker.js" },
            { "lineno": 242,
              "filename": "PanelFontAndColorPicker.js" } ],
        "docs":
          { "summary": "Sets or gets the type of divider displayed under the element.",
            "description":
              [ "The divider type can be:",
                "* `\"LONG\"`",
                "* `\"SHORT\"`",
                "* `\"NONE\"`" ],
            "links": [],
            "examples":
              [ { "title": "Get an element's divider type",
                  "body":
                    [ "let divider = $w(\"#myElement\").divider;  // \"LONG\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's divider type",
                  "body":
                    [ "$w(\"#myElement\").divider = \"SHORT\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "fontFamily",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 19,
              "filename": "PanelFontAndColorPicker.js" },
            { "lineno": 178,
              "filename": "PanelFontAndColorPicker.js" } ],
        "docs":
          { "summary": "Sets or gets an element's font.",
            "description":
              [ "Read or update the panel element's font.",
                "<details>",
                "  <summary>See the supported font family values</summary>",
                "    <ul>",
                "      <li><code>arial black</code></li>",
                "      <li><code>assistant light</code></li>",
                "      <li><code>assistant semi bold</code></li>",
                "      <li><code>avenida</code></li>",
                "      <li><code>avenir</code></li>",
                "      <li><code>avenir light</code></li>",
                "      <li><code>bai jamjuree</code></li>",
                "      <li><code>barlow extra light</code></li>",
                "      <li><code>barlow medium</code></li>",
                "      <li><code>basic</code></li>",
                "      <li><code>belinda</code></li>",
                "      <li><code>bodoni poster</code></li>",
                "      <li><code>braggadocio</code></li>",
                "      <li><code>brandon grotesque</code></li>",
                "      <li><code>bree</code></li>",
                "      <li><code>caudex</code></li>",
                "      <li><code>caveat</code></li>",
                "      <li><code>chelsea market</code></li>",
                "      <li><code>cinzel</code></li>",
                "      <li><code>clarendon lt</code></li>",
                "      <li><code>comic sans ms</code></li>",
                "      <li><code>cookie</code></li>",
                "      <li><code>coquette</code></li>",
                "      <li><code>corben</code></li>",
                "      <li><code>cormorant garamond light</code></li>",
                "      <li><code>cormorant garamond semi bold</code></li>",
                "      <li><code>courier new</code></li>",
                "      <li><code>din neuzeit grotesk</code></li>",
                "      <li><code>din next light</code></li>",
                "      <li><code>damion</code></li>",
                "      <li><code>dancing script regular</code></li>",
                "      <li><code>droid serif</code></li>",
                "      <li><code>eb garamond</code></li>",
                "      <li><code>enriqueta</code></li>",
                "      <li><code>fahkwang</code></li>",
                "      <li><code>forum</code></li>",
                "      <li><code>fraunces</code></li>",
                "      <li><code>fraunces 120 light</code></li>",
                "      <li><code>fraunces 120 semi bold</code></li>",
                "      <li><code>fredericka the great</code></li>",
                "      <li><code>futura</code></li>",
                "      <li><code>futura light</code></li>",
                "      <li><code>georgia</code></li>",
                "      <li><code>geotica four open</code></li>",
                "      <li><code>heebo light</code></li>",
                "      <li><code>heebo medium</code></li>",
                "      <li><code>helvetica</code></li>",
                "      <li><code>helvetica bold</code></li>",
                "      <li><code>helvetica light</code></li>",
                "      <li><code>itc arecibo</code></li>",
                "      <li><code>impact</code></li>",
                "      <li><code>inknut antiqua</code></li>",
                "      <li><code>jockey one</code></li>",
                "      <li><code>josefin slab</code></li>",
                "      <li><code>jura</code></li>",
                "      <li><code>k2d</code></li>",
                "      <li><code>kanit</code></li>",
                "      <li><code>karantina light</code></li>",
                "      <li><code>kelly slab</code></li>",
                "      <li><code>kepler</code></li>",
                "      <li><code>kodchasan</code></li>",
                "      <li><code>lato light</code></li>",
                "      <li><code>libre baskerville</code></li>",
                "      <li><code>linotype didot</code></li>",
                "      <li><code>lobster</code></li>",
                "      <li><code>lucida console</code></li>",
                "      <li><code>lucida sans unicode</code></li>",
                "      <li><code>lulo clean</code></li>",
                "      <li><code>maitree</code></li>",
                "      <li><code>marck script</code></li>",
                "      <li><code>marmelad</code></li>",
                "      <li><code>marzo</code></li>",
                "      <li><code>mitr</code></li>",
                "      <li><code>monoton</code></li>",
                "      <li><code>monotype baskerville</code></li>",
                "      <li><code>montserrat</code></li>",
                "      <li><code>mr de haviland</code></li>",
                "      <li><code>museo</code></li>",
                "      <li><code>museo slab</code></li>",
                "      <li><code>niconne</code></li>",
                "      <li><code>nimbus sans</code></li>",
                "      <li><code>nobile</code></li>",
                "      <li><code>noticia text</code></li>",
                "      <li><code>open sans</code></li>",
                "      <li><code>open sans condensed</code></li>",
                "      <li><code>oswald extra light</code></li>",
                "      <li><code>oswald medium</code></li>",
                "      <li><code>overlock</code></li>",
                "      <li><code>pacifica condensed</code></li>",
                "      <li><code>palatino linotype</code></li>",
                "      <li><code>patrick hand</code></li>",
                "      <li><code>peaches &amp; cream</code></li>",
                "      <li><code>play</code></li>",
                "      <li><code>playfair display</code></li>",
                "      <li><code>playfair display bold</code></li>",
                "      <li><code>poppins extra light</code></li>",
                "      <li><code>poppins semi bold</code></li>",
                "      <li><code>pridi</code></li>",
                "      <li><code>prompt</code></li>",
                "      <li><code>proxima nova</code></li>",
                "      <li><code>questrial</code></li>",
                "      <li><code>quicksand</code></li>",
                "      <li><code>raleway</code></li>",
                "      <li><code>raleway semi bold</code></li>",
                "      <li><code>reklame script</code></li>",
                "      <li><code>roboto bold</code></li>",
                "      <li><code>roboto thin</code></li>",
                "      <li><code>rosewood</code></li>",
                "      <li><code>rozha one</code></li>",
                "      <li><code>rubik light</code></li>",
                "      <li><code>rubik medium</code></li>",
                "      <li><code>sacramento</code></li>",
                "      <li><code>sail</code></li>",
                "      <li><code>sarabun</code></li>",
                "      <li><code>sarina</code></li>",
                "      <li><code>secular one</code></li>",
                "      <li><code>signika</code></li>",
                "      <li><code>snell roundhand</code></li>",
                "      <li><code>soho condensed</code></li>",
                "      <li><code>space grotesk</code></li>",
                "      <li><code>spinnaker</code></li>",
                "      <li><code>sriracha</code></li>",
                "      <li><code>stencil</code></li>",
                "      <li><code>suez one</code></li>",
                "      <li><code>syne</code></li>",
                "      <li><code>tahoma</code></li>",
                "      <li><code>times new roman</code></li>",
                "      <li><code>trend</code></li>",
                "      <li><code>trirong</code></li>",
                "      <li><code>varela round</code></li>",
                "      <li><code>verdana</code></li>",
                "      <li><code>wix madefor display</code></li>",
                "      <li><code>wix madefor display bold</code></li>",
                "      <li><code>wix madefor display xbold</code></li>",
                "      <li><code>wix madefor text</code></li>",
                "      <li><code>wix madefor text bold</code></li>",
                "      <li><code>wix madefor text medium</code></li>",
                "      <li><code>wix madefor text xbold</code></li>",
                "      <li><code>work sans extra light</code></li>",
                "      <li><code>work sans semi bold</code></li>",
                "    </ul>",
                "</details>",
                "",
                "> **Note**: Changing an element's `fontFamily` in code triggers an `onFontChange()` event." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's font value",
                  "body":
                    [ "let font = $w(\"#myElement\").fontFamily; // \"helvetica\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's font value",
                  "body":
                    [ "$w(\"#myElement\").fontFamily = \"arial\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "tooltip",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 205,
              "filename": "PanelFontAndColorPicker.js" },
            { "lineno": 219,
              "filename": "PanelFontAndColorPicker.js" } ],
        "docs":
          { "summary": "Sets or gets an element's tooltip.",
            "description":
              [ "Setting the `tooltip` property defines the text that is displayed when a user hovers on an element's ![tooltip-icon](images/tooltip-icon.png) icon.",
                "Maximum length is 1,200 characters." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's tooltip",
                  "body":
                    [ "let tooltip = $w(\"#myElement\").tooltip;  // \"Tooltip text\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's tooltip",
                  "body":
                    [ "$w(\"#myElement\").tooltip = \"New tooltip\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onColorChange",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the element's value changes." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element on which the event is now registered." },
        "locations":
          [ { "lineno": 275,
              "filename": "PanelFontAndColorPicker.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when an element's color value\n is changed.",
            "description":
              [ "An element triggers a change event when a site visitor changes the color value",
                " in the panel element.",
                "",
                " A change event is not triggered when you change an element's color value using",
                " the element's [`color`](#color) property in code.",
                "",
                " Because `onColorChange()` is fired before validations are performed, do not check",
                " any of the validation properties in the `onColorChange()` event handler. For example,",
                " do not code an `if` statement that checks the `valid` property in `onColorChange()`",
                " because the property at this point contains values prior to the `onColorChange()` event.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events)." ],
            "links": [],
            "examples":
              [ { "title": "Get the value of the element that was changed",
                  "body":
                    [ "$w(\"#myElement\").onColorChange((event) => {",
                      "    let newColor = event.target.color; // \"#FF4040\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "change" } },
      { "name": "onFontChange",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the element's value changes." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element on which the event is now registered." },
        "locations":
          [ { "lineno": 248,
              "filename": "PanelFontAndColorPicker.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when an element's font value\n is changed.",
            "description":
              [ "An element triggers a change event when a site visitor changes the font value",
                " in the panel element.",
                "",
                " A change event is not triggered when you change an element's font value using",
                " the element's [`fontFamily`](#fontFamily) property in code.",
                "",
                " Because `onFontChange()` is fired before validations are performed, do not check",
                " any of the validation properties in the `onFontChange()` event handler. For example,",
                " do not code an `if` statement that checks the `valid` property in `onFontChange()`",
                " because the property at this point contains values prior to the `onFontChange()` event.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events)." ],
            "links": [],
            "examples":
              [ { "title": "Get the value of the element that was changed",
                  "body":
                    [ "$w(\"#myElement\").onFontChange((event) => {",
                      "    let newFontValue = event.target.fontFamily; // \"arial black\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "change" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }