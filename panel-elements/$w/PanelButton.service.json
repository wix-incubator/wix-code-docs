{ "name": "PanelButton",
  "memberOf": "$w",
  "mixes":
    [ "$w.HiddenCollapsedMixin",
      "$w.Element",
      "$w.DisabledMixin" ],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "PanelButton.js" },
  "docs":
    { "summary": "A button on your Blocks panel.",
      "description":
        [ "> **Important**:  ",
          "> This element is available only in [custom panels built in Blocks](https://support.wix.com/en/article/wix-blocks-designing-custom-panels-for-your-widgets-action-bar-buttons).   ",
          "> [Wix Blocks](https://support.wix.com/en/article/wix-blocks-check-out-our-articles) is a workspace for building Wix apps. It is currently a Beta version, open to a limited number of users." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "buttonLabel",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 56,
              "filename": "PanelButton.js" },
            { "lineno": 69,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Sets or gets the button's label (the text that appears on the button).",
            "links":
              [ "[`label`](#label)" ],
            "examples":
              [ { "title": "Get a button's label",
                  "body":
                    [ "let label = $w(\"#myButton\").buttonLabel;  // \"Open Dashboard\"" ],
                  "extra":
                    {  } },
                { "title": "Set a button's label",
                  "body":
                    [ "$w(\"#myButton\").buttonLabel = \"Open Dashboard\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "divider",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 147,
              "filename": "PanelButton.js" },
            { "lineno": 163,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Sets or gets the type of divider displayed under the element.",
            "description":
              [ "The divider type can be:",
                "* `\"LONG\"`",
                "* `\"SHORT\"`",
                "* `\"NONE\"`" ],
            "links": [],
            "examples":
              [ { "title": "Get an element's divider type",
                  "body":
                    [ "let divider = $w(\"#myElement\").divider;  // \"none\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's divider type",
                  "body":
                    [ "$w(\"#myElement\").divider = \"NONE\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "label",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 38,
              "filename": "PanelButton.js" },
            { "lineno": 50,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Sets or gets the text above the button (field title). Maximum length is 120 characters.",
            "links":
              [ "[`buttonLabel`](#buttonLabel)" ],
            "examples":
              [ { "title": "Get an element's label",
                  "body":
                    [ "let label = $w(\"#myElement\").label;  // \"My element's label\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's label",
                  "body":
                    [ "$w(\"#myElement\").label = \"New Label\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "size",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 105,
              "filename": "PanelButton.js" },
            { "lineno": 121,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Sets or gets the button's size.",
            "description":
              [ "The size can be:",
                "* `\"SMALL\"`",
                "* `\"MEDIUM\"`",
                "* `\"LARGE\"`" ],
            "links": [],
            "examples":
              [ { "title": "Get a button's size",
                  "body":
                    [ "let size = $w(\"#myButton\").size;  // \"SMALL\"" ],
                  "extra":
                    {  } },
                { "title": "Set a button's size",
                  "body":
                    [ "$w(\"#myButton\").size = \"SMALL\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "skin",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 75,
              "filename": "PanelButton.js" },
            { "lineno": 99,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Sets or gets the button's skin.",
            "description":
              [ "The skin can be:",
                "* `\"STANDARD\"`",
                "* `\"STANDARD_SECONDARY\"`",
                "* `\"PREMIUM\"`",
                "* `\"PREMIUM_SECONDARY\"`",
                "* `\"ALERT\"`",
                "* `\"ALERT_SECONDARY\"`",
                "* `\"INVERTED\"`",
                "Primary (as opposed to secondary) buttons are for main actions.  ",
                "Red alert buttons are for destructive actions like \"Delete\".  ",
                "Purple premium buttons are for upgrade actions.  ",
                "To view the different skin options, change the type of your panel button in the Blocks panel builder." ],
            "links": [],
            "examples":
              [ { "title": "Get a button's skin",
                  "body":
                    [ "let skin = $w(\"#myButton\").skin;  // \"PREMIUM\"" ],
                  "extra":
                    {  } },
                { "title": "Set a button's skin",
                  "body":
                    [ "$w(\"#myButton\").skin = \"PREMIUM\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "stretched",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 130,
              "filename": "PanelButton.js" },
            { "lineno": 141,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Sets or gets whether the button is stretched to the full width of the panel.",
            "links": [],
            "examples":
              [ { "title": "Get whether a button is full width",
                  "body":
                    [ "let isFullWidth = $w(\"#myButton\").stretched;  // true" ],
                  "extra":
                    {  } },
                { "title": "Set a button to be full width",
                  "body":
                    [ "$w(\"#myButton\").stretched = true;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "tooltip",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 18,
              "filename": "PanelButton.js" },
            { "lineno": 32,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Sets or gets an element's tooltip.",
            "description":
              [ "Setting the `tooltip` property defines the text that is displayed when a user hovers on an element's ![tooltip-icon](images/tooltip-icon.png) icon.",
                "Maximum length is 1200 characters." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's tooltip",
                  "body":
                    [ "let tooltip = $w(\"#myElement\").tooltip;  // \"Tooltip text\"" ],
                  "extra":
                    {  } },
                { "title": "Set an element's tooltip",
                  "body":
                    [ "$w(\"#myElement\").tooltip = \"New tooltip\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the element is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 169,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element is clicked.",
            "description":
              [ "An element receives a `click` event when a user clicks on the element",
                " and releases.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events).",
                " ",
                "![Properties and Events panel](images/properties_and_events.png \"Properties and Events panel\")",
                "",
                " This will automatically add the required code for the selected element and event:",
                "",
                " ```javascript ",
                "    export function button1_click(event) {",
                "       // This function was added from the Properties & Events panel. To learn more, visit http://wix.to/UcBnC-4",
                "       // Add your code for this event here: ",
                "     }  ",
                "```" ],
            "links": [],
            "examples":
              [ { "title": "Open a dashboard panel when the user clicks a button",
                  "body":
                    [ "import wixEditor from 'wix-editor'",
                      "",
                      "$w.onReady(function () {",
                      "    $w('#myButton').buttonLabel = \"Manage Contacts\"; // Set the button's label",
                      "    $w('#myButton').onClick(async () => {",
                      "        await wixEditor.openDashboardPanel({ url: \"/contacts\" }) // Open the site Dashboard's Contacts page",
                      "    })",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } } ],
  "callbacks": [],
  "messages":
    [ { "name": "icon",
        "locations":
          [ { "lineno": 199,
              "filename": "PanelButton.js" } ],
        "docs":
          { "summary": "An object representing an SVG icon.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "svgId",
              "type": "string",
              "doc": "An SVG element" } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true } }