{ "name": "TimeLine",
  "memberOf": "wix-animations",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "timeline.js" },
  "docs":
    { "summary": "An animation timeline.",
      "description":
        [ "A timeline is used to compose animations together over time. You can synchronize",
          " multiple animations on matched elements, control them as a whole, and precisely",
          " manage their timing." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "add",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "target",
              "type":
                [ "$w.Element",
                  { "name": "Array",
                    "typeParams":
                      [ "$w.Element" ] } ],
              "doc": "Page element or\n elements to animate that mix in [`HiddenMixin`]($w.HiddenMixin.html)" },
            { "name": "animation",
              "type":
                [ "wix-animations.TimeLine.AnimationAttributes",
                  { "name": "Array",
                    "typeParams":
                      [ "wix-animations.TimeLine.AnimationAttributes" ] } ],
              "doc": "Attributes of the animation or animations to add to the timeline." },
            { "name": "offset",
              "type":
                [ "number",
                  "string" ],
              "doc": "When the animation starts in the timeline. When no\n `offset` is specified, the animation added starts after the previous animation ends.\n\n The `offset` can be relative to the last animation added or absolute within the whole\n timeline using this following formats:\n\n + A non-negative number specifying the absolute offset from the beginning of the\n   timeline in milliseconds, regardless of the animation's position in the timeline.\n + A `\"+=\"` expression to specify a relative offset in milliseconds, where the\n   animation starts the specified number of milliseconds after the previous\n   animation in the timeline ends. For example, `\"+=1000\"` starts the current\n   animation 1 second after the previous animation ends.\n + A `\"-=\"` expression to specify a relative offset in milliseconds, where the\n   animation starts the specified number of milliseconds before the previous\n   animation in the timeline ends. For example, `\"+-=1000\"` starts the current\n   animation 1 second before the previous animation ends.\n\n If the specified relative `offset` is before the current start of the timeline,\n the timeline is lengthened and the beginning of the timeline is now the start\n of the new animation. When played, the timeline will begin playing from its\n original start.\n\n For example, if a timeline is 1000 milliseconds long and you add an animation with\n an `offset` of `-500`, the timeline length will become 1500 milliseconds and the\n beginning of the timeline now be the start time of the newly added animation.",
              "optional": true } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the animation was added to." },
        "locations":
          [ { "lineno": 137,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Adds an animation to a timeline.",
            "description":
              [ "The `add()` function adds one or more animations on one or more page",
                " elements to a timeline. Any element that mixes in the [`HiddenMixin`]($w.HiddenMixin.html)",
                " can be added as an animation `target` in a timeline.",
                "",
                " By default, when no `offset` is specified ,the animations in a timeline run in",
                " the order they are added. When multiple animations are added using a single call",
                " to the add function, those animations default to run together at the same time",
                " within the timeline.",
                "",
                " You can override the default order that the animations run using the `offset`",
                " parameter.",
                "",
                " You can add multiple `add()` functions to make more complex animations." ],
            "links": [],
            "examples":
              [ { "title": "Add animations to a timeline one at a time",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage = $w(\"#myImage\");",
                      "",
                      "timeline.add(myImage, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "});",
                      "",
                      "timeline.add(myImage, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Add multiple animations to a timeline together",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline1 = wixAnimations.timeline();",
                      "let timeline2 = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage1 = $w(\"#myImage1\");",
                      "const myImage2 = $w(\"#myImage2\");",
                      "",
                      "// In timeline1, the rotation animation and opacity",
                      "// change animation will happen at the same time.",
                      "timeline1.add(myImage1, ",
                      "  [",
                      "    {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000,",
                      "      \"easing\": \"easeInCirc\"",
                      "    }, {",
                      "      \"delay\": 500,",
                      "      \"opacity\": 0,",
                      "      \"duration\": 500",
                      "    }",
                      "  ]",
                      ");",
                      "",
                      "// In timeline2, the rotation animation and opacity",
                      "// change animation will happen one after the other.",
                      "timeline2.add(myImage2, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "});",
                      "",
                      "timeline2.add(myImage2, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Add animations on multiple page elements together",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage1 = $w(\"#myImage1\");",
                      "const someImages = $w(\"#myImage2\", \"#myImage3\");",
                      "const vectorImages = $w(\"VectorImage\");",
                      "",
                      "// Adds an animation for myImage1 ",
                      "timeline.add(myImage1, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "})",
                      "",
                      "// Adds an animation for myImage2",
                      "// and myImage3 together",
                      "timeline.add(someImages, {",
                      "  \"rotate\": -360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "})",
                      "",
                      "// Adds an animation for all the",
                      "// vector images on the page",
                      "timeline.add(vectorImages, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "})" ],
                  "extra":
                    {  } },
                { "title": "Add animations to a timeline and play it",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage1 = $w(\"#myImage1\");",
                      "  const myImage2 = $w(\"#myImage2\");",
                      "  const myImage3 = $w(\"#myImage3\");",
                      "",
                      "  timeline",
                      "    .add( ",
                      "      [myImage1, myImage2],",
                      "      {",
                      "        \"rotate\": 360,",
                      "        \"scale\": .5,",
                      "        \"duration\": 1000",
                      "      } ",
                      "    )",
                      "    .add( ",
                      "      myImage3, ",
                      "      {",
                      "        \"opacity\": 0,",
                      "        \"duration\": 500",
                      "      }, ",
                      "      \"-=500\"",
                      "    )",
                      "    .play();",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onComplete",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "Function",
              "doc": "The name of the function or\n the function expression to run when the timeline completes playing." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the event handler was set on." },
        "locations":
          [ { "lineno": 302,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Sets an event handler that runs when the timeline completes playing.",
            "description":
              [ "The event handler set by calling the `onComplete()` function runs when a",
                " timeline completes playing by reaching the end.",
                "",
                " When a timeline has been set to repeat, the event handler runs at the end",
                " of the last repetition and does not run for the preceding repetitions.",
                "",
                " If an event handler is already set for `onComplete`, setting a new event",
                " handler overrides the one set previously.",
                "",
                " To remove an event handler you set previously, call the `onComplete()`",
                " function and pass `null` for the `handler` parameter." ],
            "links": [],
            "examples":
              [ { "title": "Set an event handler that runs when a timeline completes playing forwards",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onComplete( () => {",
                      "  // handle timeline forwards completion",
                      "  console.log(\"Timeline has completed playing in reverse.\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Remove the event handler that runs when a timeline completes playing forwards",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onComplete( null );" ],
                  "extra":
                    {  } },
                { "title": "Display a message when a timeline completes playing forwards",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .onComplete( () => {",
                      "      $w(\"#messageText\").text = \"Timeline has completed playing forwards.\";",
                      "    } )",
                      "    .play();",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onRepeat",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "Function",
              "doc": "The name of the function or\n the function expression to run when the timeline repeats." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the event handler was set on." },
        "locations":
          [ { "lineno": 278,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Sets an event handler that runs when a the timeline repeats.",
            "description":
              [ "The event handler set by calling the `onRepeat()` function runs when a",
                " timeline begins playing a repetition. It does not run for the initial",
                " play of the timeline. However, when replaying a timeline that has already",
                " been played, the event handler runs even for the first repetition of",
                " the timeline.",
                "",
                " If an event handler is already set for `onRepeat`, setting a new event",
                " handler overrides the one set previously.",
                "",
                " To remove an event handler you set previously, call the `onRepeat()`",
                " function and pass `null` for the `handler` parameter." ],
            "links": [],
            "examples":
              [ { "title": "Set an event handler that runs when a timeline repeats",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline({\"repeat\": 3});",
                      "",
                      "// ...",
                      "",
                      "timeline.onRepeat( () => {",
                      "  // handle timeline repetition",
                      "  console.log(\"Timeline is repeating.\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Remove the event handler that runs when a timeline repeats",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onRepeat( null );" ],
                  "extra":
                    {  } },
                { "title": "Display a message when a timeline repeats",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline({\"repeat\": 3});",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .onRepeat( () => {",
                      "      $w(\"#messageText\").text = \"Timeline is repeating.\";",
                      "    } )",
                      "    .play();",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onReverseComplete",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "Function",
              "doc": "The name of the function or\n the function expression to run when the timeline completes playing." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the event handler was set on." },
        "locations":
          [ { "lineno": 326,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Sets an event handler that runs when the timeline completes playing\n in the reverse direction.",
            "description":
              [ "The event handler set by calling the `onReverseComplete()` function runs when a",
                " timeline completes playing in reverse by reaching the beginning.",
                "",
                " When a timeline has been set to repeat, the event handler runs at the end",
                " of the last repetition and does not run for the preceding repetitions.",
                "",
                " If an event handler is already set for `onReverseComplete`, setting a new event",
                " handler overrides the one set previously.",
                "",
                " To remove an event handler you set previously, call the `onReverseComplete()`",
                " function and pass `null` for the `handler` parameter." ],
            "links": [],
            "examples":
              [ { "title": "Set an event handler that runs when a timeline completes playing in reverse",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onReverseComplete( () => {",
                      "  // handle timeline reverse completion",
                      "  console.log(\"Timeline has completed playing in reverse.\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Remove the event handler that runs when a timeline completes playing in reverse",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onReverseComplete( null );" ],
                  "extra":
                    {  } },
                { "title": "Display a message when a timeline completes playing in reverse",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .onReverseComplete( () => {",
                      "      $w(\"#messageText\").text = \"Timeline has completed playing in reverse.\";",
                      "    } )",
                      "    .reverse();",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onStart",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "Function",
              "doc": "The name of the function or\n the function expression to run when the timeline starts playing." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the event handler was set on." },
        "locations":
          [ { "lineno": 246,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Sets an event handler that runs when the timeline starts playing.",
            "description":
              [ "The event handler set by calling the `onStart()` function runs when a",
                " timeline starts playing from the beginning.",
                "",
                " This happens when:",
                "",
                " + The `play()` function is called on a timeline that has not been played yet.",
                " + The `replay()` function is called, regardless of the timeline state, since",
                "   it replays the timeline from its beginning.",
                "",
                " When a timeline has been set to repeat, the event handler runs at the beginning",
                " of the first repetition and does not run for each successive repetition. To set",
                " an event handler that runs when a timeline repeats, use the [`onRepeat()`](#onRepeat)",
                " function.",
                "",
                " If an event handler is already set for `onStart`, setting a new event",
                " handler overrides the one set previously.",
                "",
                " To remove an event handler you set previously, call the `onStart()`",
                " function and pass `null` for the `handler` parameter." ],
            "links": [],
            "examples":
              [ { "title": "Set an event handler that runs when a timeline starts",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onStart( () => {",
                      "  // handle timeline start",
                      "  console.log(\"Timeline has started.\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Remove the event handler that runs when a timeline starts",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onStart( null );" ],
                  "extra":
                    {  } },
                { "title": "Display a message when a timeline starts",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .onStart( () => {",
                      "      $w(\"#messageText\").text = \"Timeline has started.\";",
                      "    } )",
                      "    .play();",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "pause",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline to be paused." },
        "locations":
          [ { "lineno": 216,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Pauses a timeline.",
            "description":
              [ "Pauses a running timeline.",
                "",
                " Note that when a timeline is created it is paused by default at the",
                " beginning of the timeline." ],
            "links": [],
            "examples":
              [ { "title": "Pause a timeline",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.pause();" ],
                  "extra":
                    {  } },
                { "title": "Create buttons for controlling how a timeline is played",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline(",
                      "  {",
                      "    \"repeat\": 3,",
                      "    \"repeatDelay\": 100,",
                      "    \"yoyo\": true",
                      "  }",
                      ");",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "",
                      "  $w(\"#reverseButton\").onClick( () => {",
                      "    timeline.reverse();",
                      "  } );",
                      "",
                      "  $w(\"#pauseButton\").onClick( () => {",
                      "    timeline.pause();",
                      "  } );",
                      "",
                      "  $w(\"#replayButton\").onClick( () => {",
                      "    timeline.replay();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "play",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline to be played forwards." },
        "locations":
          [ { "lineno": 191,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Plays a timeline forwards.",
            "description":
              [ "Plays a timeline that is not at its end in the forward",
                " direction and sets the [`hidden`]($w.HiddenMixin.html#hidden) property",
                " of the animated elements to `false`." ],
            "links": [],
            "examples":
              [ { "title": "Play a timeline",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.play();" ],
                  "extra":
                    {  } },
                { "title": "Create buttons for controlling how a timeline is played",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline(",
                      "  {",
                      "    \"repeat\": 3,",
                      "    \"repeatDelay\": 100,",
                      "    \"yoyo\": true",
                      "  }",
                      ");",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "",
                      "  $w(\"#reverseButton\").onClick( () => {",
                      "    timeline.reverse();",
                      "  } );",
                      "",
                      "  $w(\"#pauseButton\").onClick( () => {",
                      "    timeline.pause();",
                      "  } );",
                      "",
                      "  $w(\"#replayButton\").onClick( () => {",
                      "    timeline.replay();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "replay",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline to be replayed." },
        "locations":
          [ { "lineno": 230,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Replays a timeline.",
            "description":
              [ "Replaying restarts the play of a paused or playing timeline from the",
                " beginning of the timeline and sets the [`hidden`]($w.HiddenMixin.html#hidden)",
                " property of the animated elements to `false`.",
                "",
                " Note that when a timeline is created it is paused by default at the",
                " beginning of the timeline." ],
            "links": [],
            "examples":
              [ { "title": "Replays a timeline",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.replay();" ],
                  "extra":
                    {  } },
                { "title": "Create buttons for controlling timeline playback",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline(",
                      "  {",
                      "    \"repeat\": 3,",
                      "    \"repeatDelay\": 100,",
                      "    \"yoyo\": true",
                      "  }",
                      ");",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "",
                      "  $w(\"#reverseButton\").onClick( () => {",
                      "    timeline.reverse();",
                      "  } );",
                      "",
                      "  $w(\"#pauseButton\").onClick( () => {",
                      "    timeline.pause();",
                      "  } );",
                      "",
                      "  $w(\"#replayButton\").onClick( () => {",
                      "    timeline.replay();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "reverse",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline to be played in reverse." },
        "locations":
          [ { "lineno": 204,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Plays a timeline in reverse.",
            "description":
              [ "Plays a timeline that is not at its beginning in the reverse",
                " direction." ],
            "links": [],
            "examples":
              [ { "title": "Play a timeline",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.reverse();" ],
                  "extra":
                    {  } },
                { "title": "Create buttons for controlling how a timeline is played",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline(",
                      "  {",
                      "    \"repeat\": 3,",
                      "    \"repeatDelay\": 100,",
                      "    \"yoyo\": true",
                      "  }",
                      ");",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline",
                      "    .add( myImage, {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000",
                      "    } )",
                      "    .add( myImage, {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 1000",
                      "    } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "",
                      "  $w(\"#reverseButton\").onClick( () => {",
                      "    timeline.reverse();",
                      "  } );",
                      "",
                      "  $w(\"#pauseButton\").onClick( () => {",
                      "    timeline.pause();",
                      "  } );",
                      "",
                      "  $w(\"#replayButton\").onClick( () => {",
                      "    timeline.replay();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "AnimationAttributes",
        "locations":
          [ { "lineno": 11,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "An object representing the attributes of an animation in an timeline.",
            "links":
              [ "[add( )](#add)" ],
            "examples":
              [ { "title": "Add animation attributes to a timeline one at a time",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage = $w(\"#myImage\");",
                      "",
                      "timeline.add(myImage, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "});",
                      "",
                      "timeline.add(myImage, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Add multiple animation attributes to a timeline together",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline1 = wixAnimations.timeline();",
                      "let timeline2 = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage1 = $w(\"#myImage1\");",
                      "const myImage2 = $w(\"#myImage2\");",
                      "",
                      "// In timeline1, the rotation animation and opacity",
                      "// change animation will happen at the same time.",
                      "timeline1.add(myImage1, ",
                      "  [",
                      "    {",
                      "      \"rotate\": 360,",
                      "      \"scale\": .5,",
                      "      \"duration\": 1000,",
                      "      \"easing\": \"easeInCirc\"",
                      "    }, {",
                      "      \"delay\": 500,",
                      "      \"opacity\": 0,",
                      "      \"duration\": 500",
                      "    }",
                      "  ]",
                      ");",
                      "",
                      "// In timeline2, the rotation animation and opacity",
                      "// change animation will happen one after the other.",
                      "timeline2.add(myImage2, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "});",
                      "",
                      "timeline2.add(myImage2, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "duration",
              "type": "number",
              "doc": "Animation duration in milliseconds." },
            { "name": "delay",
              "type": "number",
              "doc": "Number of milliseconds to delay before beginning the animation.",
              "optional": true },
            { "name": "opacity",
              "type": "number",
              "doc": "Target opacity of the animated element or elements, from 0.0 to 1.0.",
              "optional": true },
            { "name": "rotate",
              "type":
                [ "number",
                  "string" ],
              "doc": "The target degree to rotate to, where a complete rotation\n is 360 degrees.\n\n Note that the starting orientation of each element is determined by the rotation set in the\n Editor. If you did not rotate the element in the Editor, it begins at 0 degrees.\n\n The direction of the rotation is determined by the current orientation of the animated\n element or elements, the target degree specified by the `rotate` attribute, and, optionally,\n the specified `rotateDirection` attribute.\n\n + If the target degree is greater than the current rotation degree, the animation\n   rotates clockwise.\n\n   For example, if an element starts at 0 degrees and `rotate` is `540`, it rotates clockwise\n   one and a half rotations. Similarly, if an element starts at -540 degrees and `rotate` is `0`,\n   it also rotates clockwise one and a half rotations.\n + If the target degree is less than the current rotation degree, the animation\n   rotates counterclockwise.\n\n   For example, if an element starts at 0 degrees and `rotate` is `-540`, it rotates counterclockwise\n   one and a half rotations. Similarly, if an element starts a 540 degrees and `rotate` is `0`,\n   it also rotates counterclockwise one and a half rotations.\n + If a `rotateDirection` value is specified, that direction overrides the rules listed\n   above.\n\n\n The `rotate` value is specified using one of the following formats:\n\n + A number to specify the target degree to rotate to.\n + A `\"+=X\"` expression to specify a target degree is `X` number of degrees greater\n   than the current orientation.\n\n   For example, if the current orientation is 540 degrees and `rotate` is `\"+=90\"`,\n   the target degree is 630 and the rotation will be a quarter turn clockwise,\n   unless the direction is overridden by specifying a `rotateDirection` value.\n + A `\"-=X\"` expression to specify a target degree is `X` number of degrees less\n   than the current orientation.\n\n   For example, if the current orientation is 540 degrees and `rotate` is `\"-=90\"`,\n   the target degree is 450 and the rotation will be a quarter turn counterclockwise,\n   unless the direction is overridden by specifying a `rotateDirection` value.",
              "optional": true },
            { "name": "rotateDirection",
              "type": "string",
              "doc": "Direction in which to rotate. Overrides the\n default rotation direction as explained in the `rotate` property.\n\n Either `\"cw\"` to rotate clockwise or `\"ccw\"` to rotate counterclockwise.",
              "optional": true },
            { "name": "scale",
              "type": "number",
              "doc": "Target scale of the animated element or elements, where\n `1` is the original size.\n\n For example, if `scale` is `.5`, the animated element or elements will shrink to\n half their original sizes and if `scale` is `2`, the animated element or elements\n will grow to double their original sizes.",
              "optional": true },
            { "name": "scaleX",
              "type": "number",
              "doc": "Target horizontal scale of the animated element or elements.\n\n If a `scale` value is set, also setting a `scaleX` value overrides the horizontal\n scaling set use `scale`.",
              "optional": true },
            { "name": "scaleY",
              "type": "number",
              "doc": "Target vertical scale of the animated element or elements.\n\n If a `scale` value is set, also setting a `scaleY` value overrides the vertical\n scaling set use `scale`.",
              "optional": true },
            { "name": "x",
              "type":
                [ "number",
                  "string" ],
              "doc": "Horizontal pixel target to move the element or elements\n to horizontally.\n\n One of the following formats:\n\n + A positive number to specify a target pixel to the right, relative to the\n   original position.\n + A negative number to specify a target pixel to the left, relative to the\n   original position.\n + A `\"+=\"` expression to specify a target pixel to the right, relative to the\n   last animated position. For example, `\"+=100\"` moves 100 pixels to the right\n   of wherever the element or elements are positioned when this specific animation\n   begins.\n + A `\"-=\"` expression to specify a target pixel to the left, relative to the\n   last animated position. For example, `\"-=100\"` moves 100 pixels to the left\n   of wherever the element or elements are positioned when this specific animation\n   begins.",
              "optional": true },
            { "name": "y",
              "type":
                [ "number",
                  "string" ],
              "doc": "Vertical pixel target to move the element or elements\n to vertically.\n\n One of the following formats:\n\n + A positive number to specify a target pixel down, relative to the\n   original position.\n + A negative number to specify a target pixel up, relative to the\n   original position.\n + A `\"+=\"` expression to specify a target pixel down, relative to the\n   last animated position. For example, `\"+=100\"` moves 100 pixels down\n   from wherever the element or elements are positioned when this specific animation\n   begins.\n + A `\"-=\"` expression to specify a target pixel up, relative to the\n   last animated position.For example, `\"-=100\"` moves 100 pixels up\n   from wherever the element or elements are positioned when this specific animation\n   begins.",
              "optional": true },
            { "name": "easing",
              "type": "string",
              "doc": "The animation motion acceleration or deceleration. Specifies\nthe rate of change of the animation attributes over time.\n\nOne of:\n\n\n| Ease In | Ease Out | Ease In-Out |\n|---|---|---|\n| `\"easeInSine\"` ![Ease In Sine](images/easeInSine.png \"Ease In Sine\") | `\"easeOutSine\"` ![Ease Out Sine](images/easeOutSine.png \"Ease Out Sine\") | `\"easeInOutSine\"` ![Ease In Sine](images/easeInOutSine.png \"Ease In-Out Sine\") |\n| `\"easeInQuad\"` ![Ease In Quad](images/easeInQuad.png \"Ease In Quad\") | `\"easeOutQuad\"` ![Ease Out Quad](images/easeOutQuad.png \"Ease Out Quad\") | `\"easeInOutQuad\"` ![Ease In-Out Quad](images/easeInOutQuad.png \"Ease In-Out Quad\") |\n| `\"easeInCubic\"` ![Ease In Cubic](images/easeInCubic.png \"Ease In Cubic\") | `\"easeOutCubic\"` ![Ease Out Cubic](images/easeOutCubic.png \"Ease Out Cubic\") | `\"easeInOutCubic\"` ![Ease In-Out Cubic](images/easeInOutCubic.png \"Ease In-Out Cubic\") |\n| `\"easeInQuart\"` ![Ease In Quart](images/easeInQuart.png \"Ease In Quart\") | `\"easeOutQuart\"` ![Ease Out Quart](images/easeOutQuart.png \"Ease Out Quart\") | `\"easeInOutQuart\"` ![Ease In-Out Quart](images/easeInOutQuart.png \"Ease In-Out Quart\") |\n| `\"easeInQuint\"` ![Ease In Quint](images/easeInQuint.png \"Ease In Quint\") | `\"easeOutQuint\"` ![Ease Out Quint](images/easeOutQuint.png \"Ease Out Quint\") | `\"easeInOutQuint\"` ![Ease In-Out Quint](images/easeInOutQuint.png \"Ease In-Out Quint\") |\n| `\"easeInExpo\"` ![Ease In Expo](images/easeInExpo.png \"Ease In Expo\") | `\"easeOutExpo\"` ![Ease Out Expo](images/easeOutExpo.png \"Ease Out Expo\") | `\"easeInOutExpo\"` ![Ease In-Out Expo](images/easeInOutExpo.png \"Ease In-Out Expo\") |\n| `\"easeInCirc\"` ![Ease In Circ](images/easeInCirc.png \"Ease In Circ\") | `\"easeOutCirc\"` ![Ease Out Circ](images/easeOutCirc.png \"Ease Out Circ\") | `\"easeInOutCirc\"` ![Ease In-Out Circ](images/easeInOutCirc.png \"Ease In-Out Circ\") |\n| `\"easeInBack\"` ![Ease In Back](images/easeInBack.png \"Ease In Back\") | `\"easeOutBack\"` ![Ease Out Back](images/easeOutBack.png \"Ease Out Back\") | `\"easeInOutBack\"` ![Ease In-Out Back](images/easeInOutBack.png \"Ease In-Out Back\") |\n| `\"easeInElastic\"` ![Ease In Elastic](images/easeInElastic.png \"Ease In Elastic\") | `\"easeOutElastic\"` ![Ease Out Elastic](images/easeOutElastic.png \"Ease Out Elastic\") | `\"easeInOutElastic\"` ![Ease In-Out Elastic](images/easeInOutElastic.png \"Ease In-Out Elastic\") |\n| `\"easeInBounce\"` ![Ease In Bounce](images/easeInBounce.png \"Ease In Bounce\") | `\"easeOutBounce\"` ![Ease Out Bounce](images/easeOutBounce.png \"Ease Out Bounce\") | `\"easeInOutBounce\"` ![Ease In-Out Bounce](images/easeInOutBounce.png \"Ease In-Out Bounce\") |\n| `\"easeLinear\"` ![Ease Linear](images/easeLinear.png \"Ease Linear\") | | |\n\n\nDefaults to `\"easeInSine\"`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }