{ "name": "PublicPlansQueryResult",
  "memberOf": "wix-pricing-plans-backend",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 713,
      "filename": "plan-queries.js" },
  "docs":
    { "summary": "The results of a public pricing plans query, containing the retrieved items.",
      "description":
        [ "When you execute a query with the [`find()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#find)",
          " function, it returns a Promise that resolves to a `PublicPlansQueryResult` object.",
          " This object contains the items that match the query, information about the",
          " query itself, and functions for paging through the query results." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentPage",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 816,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Returns the index of the current results page number.",
            "description":
              [ "The `currentPage` is a zero-based index of the current page of results.",
                "",
                " The page size is defined by the [`limit()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#limit)",
                " function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                " navigating through pages is done with the [`prev()`](#prev) and",
                " [`next()`](#next) functions.",
                "",
                " The `currentPage` property returns `undefined` if the query returned no results." ],
            "links": [],
            "examples":
              [ { "title": "Get the current page index of a query result",
                  "body":
                    [ "const resultPage = results.currentPage; // 0" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the current page index of the query result",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "// ...",
                      "",
                      "wixPricingPlansBackend.queryPublicPlans()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultPage = results.currentPage; // 0",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "wix-pricing-plans-backend.PublicPlansQueryResult.Item" ] },
        "locations":
          [ { "lineno": 730,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Returns the items that match the query.",
            "description":
              [ "The current page of items retrieved by the query.",
                "",
                " The page size is defined by the [`limit()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#limit)",
                " function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                " navigating through pages is done with the [`prev()`](#prev) and",
                " [`next()`](#next) functions.",
                "",
                " When no items match the query, the `items` array is empty." ],
            "links": [],
            "examples":
              [ { "title": "Perform a query and get the public pricing plan items from the result",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "// ...",
                      "wixPricingPlansBackend.queryPublicPlans()",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      const items = results.items; // see below",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });",
                      "",
                      "",
                      "/* items:",
                      " * [",
                      " *  {",
                      " *    \"plan\": {",
                      " *      \"_id\": \"5269ddde-a3a6-7c32-abc1-fe8af8331097\",",
                      " *      \"name\": \"Basic\",",
                      " *      \"description\": \"This plan provides the basics.\",",
                      " *      \"pricing\": {",
                      " *        \"singlePaymentUnlimited\": true,",
                      " *        \"price\": {",
                      " *          \"value\": \"50\",",
                      " *          \"currency\": \"USD\"",
                      " *        }",
                      " *      },",
                      " *      \"primary\": false,",
                      " *      \"_createdDate\": \"2021-01-01T15:33:34.860Z\",",
                      " *      \"_updatedDate\": \"2021-01-14T10:30:30.870Z\",",
                      " *      \"slug\": \"basic\",",
                      " *      \"allowFutureStartDate\": false,",
                      " *      \"buyerCanCancel\": true,",
                      " *      \"termsAndConditions\": \"\",",
                      " *      \"perks\": [",
                      " *        \"Essentials only\",",
                      " *        \"For beginners\"",
                      " *      ]",
                      " *    }",
                      " *  },",
                      " *  {",
                      " *    \"plan\": {",
                      " *      \"_id\": \"31c26520-a3a6-7c32-abc1-d4b11e509a92\",",
                      " *      \"name\": \"Intermediate\",",
                      " *      \"description\": \"This plan provides intermediate capabilities\",",
                      " *      \"pricing\": {",
                      " *        \"subscription\": {",
                      " *          \"cycleDuration\": {",
                      " *            \"count\": 1,",
                      " *            \"unit\": \"MONTH\"",
                      " *          },",
                      " *          \"cycleCount\": 2",
                      " *        },",
                      " *        \"price\": {",
                      " *          \"value\": \"25\",",
                      " *          \"currency\": \"USD\"",
                      " *        },",
                      " *        \"freeTrialDays\": 3",
                      " *      },",
                      " *      \"primary\": false,",
                      " *      \"_createdDate\": \"2020-02-14T15:33:34.977Z\",",
                      " *      \"_updatedDate\": \"2021-01-14T10:30:30.970Z\",",
                      " *      \"slug\": \"intermediate\",",
                      " *      \"allowFutureStartDate\": false,",
                      " *      \"buyerCanCancel\": true,",
                      " *      \"termsAndConditions\": \"\",",
                      " *      \"perks\": [",
                      " *        \"Cool templates you can reuse\",",
                      " *        \"Includes the Basic plan\"",
                      " *      ]",
                      " *    }",
                      " *  },",
                      " *  {",
                      " *    \"plan\": {",
                      " *      \"_id\": \"6e01c2ae-b3b6-7a33-abc1-b7daf0fd125c\",",
                      " *      \"name\": \"Advanced\",",
                      " *      \"description\": \"This plan provides advanced capabilities\",",
                      " *      \"pricing\": {",
                      " *        \"subscription\": {",
                      " *          \"cycleDuration\": {",
                      " *            \"count\": 1,",
                      " *            \"unit\": \"YEAR\"",
                      " *          },",
                      " *          \"cycleCount\": 0",
                      " *        },",
                      " *        \"price\": {",
                      " *          \"value\": \"100\",",
                      " *          \"currency\": \"USD\"",
                      " *        }",
                      " *      },",
                      " *      \"primary\": false,",
                      " *      \"_createdDate\": \"2020-12-14T15:33:35.677Z\",",
                      " *      \"_updatedDate\": \"2021-01-14T11:33:11.677Z\",",
                      " *      \"slug\": \"advanced\",",
                      " *      \"allowFutureStartDate\": false,",
                      " *      \"buyerCanCancel\": true,",
                      " *      \"perks\": [",
                      " *        \"Extra utilities, plug-ins\",",
                      " *        \"Includes the Intermediate Plan\"",
                      " *      ]",
                      " *    }",
                      " *  },",
                      " *  {",
                      " *    \"plan\": {",
                      " *      \"_id\": \"a7fff6ae-b3b6-7a33-abc1-2b9f8b39e6c5\",",
                      " *      \"name\": \"Advanced VIP\",",
                      " *      \"description\": \"This plan provides a lot of extras that are really cool in addition to the regular Advanced plan\",",
                      " *      \"pricing\": {",
                      " *        \"singlePaymentUnlimited\": true,",
                      " *        \"price\": {",
                      " *          \"value\": \"125\",",
                      " *          \"currency\": \"USD\"",
                      " *        }",
                      " *      },",
                      " *      \"primary\": false,",
                      " *      \"_createdDate\": \"2021-01-14T15:33:35.782Z\",",
                      " *      \"_updatedDate\": \"2021-01-14T15:33:35.782Z\",",
                      " *      \"slug\": \"advanced-vip\",",
                      " *      \"allowFutureStartDate\": false,",
                      " *      \"buyerCanCancel\": true,",
                      " *      \"termsAndConditions\": \"\",",
                      " *      \"perks\": [",
                      " *        \"Free beer and champagne sent to your home when you purchase the plan\",",
                      " *        \"Discount on our merchandise\",",
                      " *        \"Includes the Advanced plan\"",
                      " *      ]",
                      " *    }",
                      " *  }",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "length",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 748,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Returns the number of items in the current results page.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#limit)",
                " function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                " navigating through pages is done with the [`prev()`](#prev) and",
                " [`next()`](#next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the length of a query result",
                  "body":
                    [ "const resultLength = results.length; // 20" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the length of the result",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "// ...",
                      "",
                      "wixPricingPlansBackend.queryPublicPlans()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultLength = results.length; // 20",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "pageSize",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 786,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Returns the query page size.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#limit)",
                " function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                " navigating through pages is done with the [`prev()`](#prev) and",
                " [`next()`](#next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the page size of a query result",
                  "body":
                    [ "const resultPageSize = results.pageSize; // 50" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the page size of the result",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "// ...",
                      "",
                      "wixPricingPlansBackend.queryPublicPlans()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultPageSize = results.pageSize; // 50",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "query",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-pricing-plans-backend.PublicPlansQueryBuilder",
        "locations":
          [ { "lineno": 776,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Returns the query used to get the current results.",
            "links": [],
            "examples":
              [ { "title": "Get the query that produced a query result",
                  "body":
                    [ "const resultQuery = results.query;" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the query that produced the result",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "// ...",
                      "",
                      "wixPricingPlansBackend.queryPublicPlans()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const newQuery = results.query;",
                      "    newQuery",
                      "      .ge(\"_createdDate\", \"2021-01-01T15:21:41.960Z\")",
                      "      .find()",
                      "      .then((newQueryResults) => {",
                      "        const firstItem = newQueryResults.items[0];",
                      "      })",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalCount",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 763,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Returns the total number of items that match the query.",
            "description":
              [ "The `totalCount` returns the total number of items that match the query,",
                " not just the number of items in the current page." ],
            "links": [],
            "examples":
              [ { "title": "Get the number of items in a query result",
                  "body":
                    [ "const resultCount = results.totalCount; // 150" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the number of items in the result",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "// ...",
                      "",
                      "wixPricingPlansBackend.queryPublicPlans()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultCount = results.totalCount; // 150",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalPages",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 801,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Returns the total number of pages the query produced.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#limit)",
                " function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                " navigating through pages is done with the [`prev()`](#prev) and",
                " [`next()`](#next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the total number of pages in a query result",
                  "body":
                    [ "const resultPages = results.totalPages; // 3" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the total number of pages in the result",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "// ...",
                      "",
                      "wixPricingPlansBackend.queryPublicPlans()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultPages = results.totalPages; // 3",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hasNext",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are more results." },
        "locations":
          [ { "lineno": 877,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Indicates if the query has more results.",
            "links": [],
            "examples":
              [ { "title": "Get the next page of a query result",
                  "body":
                    [ "const hasNext = results.hasNext(); // true" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "async function retrieveAllItems() {",
                      "  const allItems = [];",
                      "",
                      "  const results = await wixPricingPlansBackend.queryPublicPlans()",
                      "    .limit(1000)",
                      "    .find();",
                      "  allItems.push(results.items);",
                      "",
                      "  while (results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems.push(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasPrev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are previous results." },
        "locations":
          [ { "lineno": 887,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Indicates the query has previous results.",
            "links": [],
            "examples":
              [ { "title": "Get the previous page of a query result",
                  "body":
                    [ "const hasPrev = results.hasPrev(); // false" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "next",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.PublicPlansQueryResult" ] },
            "doc": "Fulfilled - A query result object with the next page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 835,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Retrieves the next page of query results.",
            "description":
              [ "The `next()` function retrieves the next page of query results.",
                "",
                " The page size is defined by the [`limit()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#limit)",
                " function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                " navigating through pages is done with the [`prev()`](#prev) and",
                " [`next()`](#next) functions.",
                "",
                " If items are added or removed between calls to `next()` the values returned",
                " by `PublicPlansQueryResult` may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the next page of a query result",
                  "body":
                    [ "oldResults.next()",
                      "  .then((results) => {",
                      "    const newResults = results;",
                      "    const items = newResults.items;",
                      "    const firstItem = items[0];",
                      "    const totalCount = newResults.totalCount;",
                      "    const pageSize = newResults.pageSize;",
                      "    const currentPage = newResults.currentPage;",
                      "    const totalPages = newResults.totalPages;",
                      "    const hasNext = newResults.hasNext();",
                      "    const hasPrev = newResults.hasPrev();",
                      "    const length = newResults.length;",
                      "    const query = newResults.query;",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import wixPricingPlansBackend from 'wix-pricing-plans-backend';",
                      "",
                      "async function retrieveAllItems() {",
                      "  const allItems = [];",
                      "",
                      "  const results = await wixPricingPlansBackend.queryPublicPlans()",
                      "    .limit(1000)",
                      "    .find();",
                      "  allItems.push(results.items);",
                      "",
                      "  while (results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems.push(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "prev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.PublicPlansQueryResult" ] },
            "doc": "Fulfilled - A query result object with the previous page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 857,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "Retrieves the previous page of query results.",
            "description":
              [ "The `prev()` function retrieves the previous page of query results.",
                "",
                " The page size is defined by the [`limit()`](wix-pricing-plans-backend.PublicPlansQueryBuilder.html#limit)",
                " function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                " navigating through pages is done with the [`prev()`](#prev) and",
                " [`next()`](#next) functions.",
                "",
                " If items are added or removed between calls to `prev()` the values returned",
                " may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the previous page of a query result",
                  "body":
                    [ "oldResults.prev()",
                      "  .then((results) => {",
                      "    const newResults = results;",
                      "    const items = newResults.items;",
                      "    const firstItem = items[0];",
                      "    const totalCount = newResults.totalCount;",
                      "    const pageSize = newResults.pageSize;",
                      "    const currentPage = newResults.currentPage;",
                      "    const totalPages = newResults.totalPages;",
                      "    const hasNext = newResults.hasNext();",
                      "    const hasPrev = newResults.hasPrev();",
                      "    const length = newResults.length;",
                      "    const query = newResults.query;",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Item",
        "locations":
          [ { "lineno": 723,
              "filename": "plan-queries.js" } ],
        "docs":
          { "summary": "An item returned by a query.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "publicPlan",
              "type": "wix-pricing-plans-backend.PublicPlan",
              "doc": "An item that matches the query." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }