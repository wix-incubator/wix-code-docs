{ "name": "Checkout",
  "memberOf": "wix-pricing-plans-backend",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "checkout.js" },
  "docs":
    { "summary": "The Pricing Plans Checkout API contains functionality for ordering and checking out\n your site's pricing plan [orders](https://support.wix.com/en/article/pricing-plans-an-overview).",
      "description":
        [ "Use the Pricing Plans Checkout API to create online and offline orders for your pricing plans. The Pricing Plans",
          " Checkout API provides functionality for creating orders created in the Wix Pricing Plans app ",
          " or using this Wix Pricing Plans API.",
          "",
          " > **Note:**",
          " > As part of our Velo rebranding efforts, we have improved plan ordering and purchasing functionality",
          "   in our Pricing Plans APIs. The Pricing Plans APIs replace the deprecated Paid Plans APIs.",
          " > The deprecated APIs will continue to work, but they will not receive updates.",
          " > To keep any existing code compatible with future changes, see the",
          " > migration instructions for each function.",
          "",
          " ### Setting up pricing plans",
          "",
          " To use APIs for checking out orders, first set up your site to:",
          "",
          " + Accept payments as described in [About Accepting Payments](https://support.wix.com/en/article/about-accepting-payments).",
          "",
          " + Offer membership plans as described in [About Pricing Plans](https://support.wix.com/en/article/about-pricing-plans). When setting up your site to accept pricing plans, ",
          "   define the plans you want to offer [using the Dashboard](https://support.wix.com/en/article/creating-a-plan-in-pricing-plans) or",
          "   [using the Pricing Plan APIs](wix-pricing-plans-backend/createplan).",
          "",
          "",
          " ### Checking out pricing plans",
          "",
          " Use the Checkout APIs to create orders and facilitate payment. ",
          "",
          " The Checkout API allows you to: ",
          " + Create both offline and online orders, and facilitate their payment.",
          " + Preview orders and their pricing. ",
          " + Change the start date for an unpaid order. ",
          " ",
          " Updating the properties of a pricing plan does not affect any current orders of the plan. The existing orders retain",
          " their existing terms and pricing.",
          "",
          " Members can order pricing plans in 2 ways:",
          " + **Online**. Members order and pay for their plans",
          "   on your site without manual intervention. This can also be done in [page code](wix-pricing-plans/checkout/createOnlineOrder).",
          " + **Offline**. Members place their order by phone, text, or email. You manually record each stage of the transaction.",
          "",
          " ### Drafts",
          "",
          " Online orders are considered drafts until they are paid for. Drafts are not listed",
          " in the Subscriptions dashboard page and are not saved in the `Orders` collection. Drafts",
          " are displayed when listing orders with the [`listOrders()`](wix-pricing-plans-backend/orders/listorders) function. ",
          "",
          " Offline orders are never considered drafts even if they are not yet paid for. Unlike ",
          " online orders, offline orders are immediately listed",
          " in the Subscriptions dashboard page and saved in the `Orders` collection.  ",
          "",
          " ### Orders and subscriptions",
          " ",
          " Actions related to basic pricing plan management are available from the [Pricing Plans](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fmembership%3FreferralInfo%3Dvelo-docs)",
          " page in the Dashboard. These actions correspond to the functions available in the [Pricing Plans APIs](wix-pricing-plans-backend/introduction).",
          "",
          " Every pricing plan order corresponds to a Wix subscription, including orders for single payment plans. You can see all orders from your site's",
          " [Subscriptions](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fsubscriptions%3FreferralInfo%3Dvelo-docs)",
          " page in the Dashboard. Actions available on this page correspond to the functions available in the [Orders APIs](wix-pricing-plans-backend/orders/introduction) and the [Checkout APIs](wix-pricing-plans-backend/checkout/introduction).",
          "",
          " > **Notes**: ",
          " >",
          " > + Wix pricing plans are 1 type of Wix subscriptions available from the Subscriptions page. For example, the Subscriptions page also includes Wix Stores subscriptions and Wix invoice subscriptions.",
          " >",
          " > + Pricing plans can be 1 of 3 different pricing models: `singlePaymentForDuration`, `singlePaymentUnlimited`, or `subscription`. Orders for all pricing plan models are displayed ",
          "     on the Subscriptions page, not just `subscription` type models. See [Pricing Models](wix-pricing-plans-backend/introduction#pricing-models) to learn more.  ",
          "",
          "",
          " ### Roles and permissions",
          "",
          " Some functions require that only site visitors with the **Manage Pricing Plans** and **Manage Subscriptions** [permissions](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Froles-and-permissions/roles) ",
          " can perform pricing plan checkout functions. You can override the permissions by setting the function's `suppressAuth` ",
          " option to `true`.",
          " ",
          " Other functions might require that the site visitor just be logged in. ",
          "",
          " ### Importing the APIs",
          "",
          " To use the Checkout API, import `checkout` from the `wix-pricing-plans-backend` module.",
          "",
          "   ```javascript",
          "   import {checkout} from 'wix-pricing-plans-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "applyCoupon",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "orderId",
              "type": "string",
              "doc": "ID of the order to apply coupon to." },
            { "name": "couponCode",
              "type": "string",
              "doc": "Coupon code to apply." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.Checkout.ApplyCoupon" ] },
            "doc": "Fulfilled - A preview of the order." },
        "locations":
          [ { "lineno": 410,
              "filename": "checkout.js" } ],
        "docs":
          { "summary": "Applies a coupon to a draft order.",
            "description":
              [ "The `applyCoupon()` function returns a Promise that resolves to an order with the discounted price. ",
                " ",
                " A coupon can be for a percentage off the price or a fixed amount off, and it can apply to the entire duration of an order or to a specified amount ",
                " of payment cycles in the order. A coupon can be created to work for all available plans or for a specific plan only. A coupon can also be limited",
                " to apply only if an order hits a minimum subtotal, or limited to the amount of uses available per coupon.",
                " ",
                " Create new coupons using the [createCoupon() function](wix-marketing-backend/coupons-obj/createcoupon) or [through the dashboard](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcoupons). ",
                " You can learn more about [creating coupons here](https://support.wix.com/en/article/pricing-plans-creating-discount-coupons). ",
                "",
                " Once the coupon is applied, taxes are recalculated if [taxes are configured for the site](https://support.wix.com/en/article/pricing-plans-setting-up-tax-collection).",
                "",
                " `applyCoupon()` makes a change to the order itself. To see what the price would be if the coupon is applied, but without making an actual change to the order, use the [previewOfflineOrder()](wix-pricing-plans-backend/checkout/previewofflineorder), ",
                " [previewOnlineOrder()](wix-pricing-plans-backend/checkout/previewonlineorder), or [previewPrice()](wix-pricing-plans-backend/checkout/previewprice) functions.",
                "",
                " When a coupon applies to the entire order, there is a single `price` for the repeating payment cycle for the entire duration of the order.",
                "",
                " **Example:** A 10% off coupon that applies to the entire order.",
                "",
                " ```javascript",
                "      \"prices\": [{",
                "        \"duration\": {",
                "          \"cycleFrom\": 1",
                "        },",
                "        \"price\": {",
                "          \"subtotal\": \"14.99\",",
                "          \"coupon\": {",
                "            \"code\": \"BACKTOSHAPE22\",",
                "            \"amount\": \"1.5\",",
                "            \"_id\": \"52f73ce1-9e31-40f7-b5d4-a621b4b4057d\"",
                "          },",
                "          \"discount\": \"1.5\",",
                "          \"total\": \"13.49\",",
                "          \"currency\": \"USD\"",
                "          }",
                "        }]",
                " ```",
                "",
                "",
                " When a coupon only applies to some payment cycles of the order, there is a `price` for the period when the coupon applies and a separate `price` for the rest of the time.",
                "",
                " **Example:** A coupon that rewards the first month free.",
                "",
                " ```javascript",
                "    \"prices\": [",
                "      {",
                "        \"duration\": {",
                "          \"cycleFrom\": 1,",
                "          \"numberOfCycles\": 1",
                "        },",
                "        \"price\": {",
                "          \"subtotal\": \"74.99\",",
                "          \"coupon\": {",
                "            \"code\": \"ONEMONTHFREE\",",
                "            \"amount\": \"74.99\",",
                "            \"_id\": \"5061dd91-8cfc-4948-aae2-66fbc4b31af7\"",
                "          },",
                "          \"discount\": \"74.99\",",
                "          \"total\": \"0\",",
                "          \"currency\": \"EUR\"",
                "        }",
                "      },",
                "      {",
                "        \"duration\": {",
                "          \"cycleFrom\": 2,",
                "          \"numberOfCycles\": 2",
                "        },",
                "        \"price\": {",
                "          \"subtotal\": \"74.99\",",
                "          \"discount\": \"0\",",
                "          \"total\": \"74.99\",",
                "          \"currency\": \"EUR\"",
                "        }",
                "      }]",
                " ```" ],
            "links":
              [ "[previewOfflineOrder( )](#previewOfflineOrder)",
                "[previewOnlineOrder( )](#previewOnlineOrder)",
                "[previewPrice( )](#previewPrice)" ],
            "examples":
              [ { "title": "Apply a coupon to an online order",
                  "body":
                    [ "/*******************************",
                      " * Backend code - checkout.jsw *",
                      " *******************************/",
                      "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "// Sample orderId value: '18629b51-f0a3-4105-b367-c250dad96d83'",
                      "//",
                      "// Sample couponCode value: 'FIFTYOFF'",
                      "",
                      "export async function myApplyCouponFunction(orderId, couponCode) {",
                      "  try {",
                      "    const discountedOrder = await checkout.applyCoupon(orderId, couponCode);",
                      "",
                      "    return discountedOrder;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  }",
                      "}",
                      "",
                      "/*****************",
                      " * Frontend code *",
                      " *****************/",
                      "import { checkout } from 'wix-pricing-plans';",
                      "import { myApplyCouponFunction } from 'backend/orders-checkout';",
                      "",
                      "$w.onReady(function () {",
                      "\t$w('#myOrderButton').onClick((event) => {",
                      "\t\tconst planId = \"26f474d3-16a5-4891-8076-1f2f44e13021\"",
                      "",
                      "    // Create an online order in DRAFT status, and pass the order ID to the applyCoupon() function.",
                      "\t\tcheckout.createOnlineOrder(planId)",
                      "\t\t.then((newOrder) => {",
                      "\t\t\tconst id = newOrder._id;",
                      "",
                      "      myApplyCouponFunction(id, 'FIFTYOFF')",
                      "        .then((discountedOrder) => {",
                      "          const discountedPricing = discountedOrder.pricing;",
                      "          const status = discountedOrder.status;",
                      "",
                      "          console.log(discountedPricing, status);",
                      "    \t\t\treturn discountedOrder;",
                      "        });",
                      "\t\t})",
                      "\t\t.catch((error) => {",
                      "\t\t\tconsole.error(error);",
                      "\t\t})",
                      "\t});",
                      "});",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " * {",
                      " *     \"_id\": \"18629b51-f0a3-4105-b367-c250dad96d83\",",
                      " *     \"planId\": \"26f474d3-16a5-4891-8076-1f2f44e13021\",",
                      " *     \"subscriptionId\": \"6af934ac-0bce-4abc-ab6a-82117b90a6cc\",",
                      " *     \"wixPayOrderId\": \"31ba9b82-8530-4009-8d7c-c8f83c6e9d12\",",
                      " *     \"buyer\": {",
                      " *         \"memberId\": \"0c9bca47-1f00-4b92-af1c-7852452e949a\",",
                      " *         \"contactId\": \"0c9bca47-1f00-4b92-af1c-7852452e949a\"",
                      " *     },",
                      " *     \"priceDetails\": {",
                      " *         \"subtotal\": \"25.0\",",
                      " *         \"discount\": \"25.0\",",
                      " *         \"total\": \"0\",",
                      " *         \"planPrice\": \"25\",",
                      " *         \"currency\": \"USD\",",
                      " *         \"subscription\": {",
                      " *             \"cycleDuration\": {",
                      " *                 \"count\": 1,",
                      " *                 \"unit\": \"MONTH\"",
                      " *             },",
                      " *             \"cycleCount\": 12",
                      " *         },",
                      " *         \"coupon\": {",
                      " *             \"code\": \"FIFTYOFF\",",
                      " *             \"amount\": \"25.0\",",
                      " *             \"_id\": \"0a499915-7099-4179-a19a-4cc66044f8e3\"",
                      " *         }",
                      " *     },",
                      " *     \"pricing\": {",
                      " *         \"subscription\": {",
                      " *             \"cycleDuration\": {",
                      " *                 \"count\": 1,",
                      " *                 \"unit\": \"MONTH\"",
                      " *             },",
                      " *             \"cycleCount\": 12",
                      " *         },",
                      " *         \"prices\": [",
                      " *             {",
                      " *                 \"duration\": {",
                      " *                     \"cycleFrom\": 1,",
                      " *                     \"numberOfCycles\": 2",
                      " *                 },",
                      " *                 \"price\": {",
                      " *                     \"subtotal\": \"25.0\",",
                      " *                     \"coupon\": {",
                      " *                         \"code\": \"FIFTYOFF\",",
                      " *                         \"amount\": \"25.0\",",
                      " *                         \"_id\": \"0a499915-7099-4179-a19a-4cc66044f8e3\"",
                      " *                     },",
                      " *                     \"discount\": \"25.0\",",
                      " *                     \"total\": \"0\",",
                      " *                     \"currency\": \"USD\"",
                      " *                 }",
                      " *             },",
                      " *             {",
                      " *                 \"duration\": {",
                      " *                     \"cycleFrom\": 3,",
                      " *                     \"numberOfCycles\": 10",
                      " *                 },",
                      " *                 \"price\": {",
                      " *                     \"subtotal\": \"25\",",
                      " *                     \"discount\": \"0\",",
                      " *                     \"total\": \"25\",",
                      " *                     \"currency\": \"USD\"",
                      " *                 }",
                      " *             }",
                      " *         ]",
                      " *     },",
                      " *     \"type\": \"ONLINE\",",
                      " *     \"orderMethod\": \"UNKNOWN\",",
                      " *     \"status\": \"DRAFT\",",
                      " *     \"autoRenewCanceled\": false,",
                      " *     \"lastPaymentStatus\": \"UNPAID\",",
                      " *     \"startDate\": \"2022-09-12T22:33:21.094Z\",",
                      " *     \"endDate\": \"2023-09-12T22:33:21.094Z\",",
                      " *     \"pausePeriods\": [],",
                      " *     \"earliestEndDate\": \"2023-09-12T22:33:21.094Z\",",
                      " *     \"currentCycle\": {",
                      " *         \"index\": 1,",
                      " *         \"startedDate\": \"2022-09-12T22:33:21.094Z\",",
                      " *         \"endedDate\": \"2022-10-12T22:33:21.094Z\"",
                      " *     },",
                      " *     \"planName\": \"Annual plan\",",
                      " *     \"planDescription\": \"\",",
                      " *     \"planPrice\": \"25\",",
                      " *     \"_createdDate\": \"2022-09-12T22:33:21.094Z\",",
                      " *     \"_updatedDate\": \"2022-09-12T22:33:23.686Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    { "description": "This example applies a $50-off coupon to an order that was created in the frontend." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "changeStartDate",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "orderId",
              "type": "string",
              "doc": "Draft order ID." },
            { "name": "startDate",
              "type": "Date",
              "doc": "New start date and time to update the `startDate` at which the order will become active." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.Orders.Order" ] },
            "doc": "Fulfilled - The order of the plan." },
        "locations":
          [ { "lineno": 100,
              "filename": "checkout.js" } ],
        "docs":
          { "summary": "Change the start date of a draft order.",
            "description":
              [ "The `changeStartDate()` function returns a promise that resolves to a draft of the `Order` ",
                " object with an updated `startDate`.",
                "",
                " This function cannot be called on paid orders. When an order is paid for, it is no longer",
                " considered a draft and its start date cannot be changed.",
                "",
                " The [`onOrderStartDateChanged()`](wix-pricing-plans-backend/events/onOrderStartDateChanged) and [`onOrderUpdated()`](wix-pricing-plans-backend/events/onOrderUpdated) event handlers run when the start date of an order is changed.",
                "",
                " The member must be logged in to change the start date of their order. Members cannot change the start date of other members' orders." ],
            "links":
              [ "[onOrderStartDateChanged( )](wix-pricing-plans-backend/events/onOrderStartDateChanged)",
                "[onOrderUpdated( )](wix-pricing-plans-backend/events/onOrderUpdated)" ],
            "examples":
              [ { "title": "Change the start date of a draft order",
                  "body":
                    [ "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "export function myChangeStartDateFunction() {",
                      "",
                      "  const orderId = '4d771642-2e36-4078-a294-105649e1ed05';",
                      "  const startDate = new Date('September 19, 2021 10:00:00');",
                      "",
                      "  return checkout.changeStartDate(orderId, startDate)",
                      "    .then((draft) => {",
                      "      const orderPlan = draft.planName;",
                      "      const orderStatus = draft.status;",
                      "      const orderStart = draft.startDate;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " * {",
                      " *   \"_id\": \"4d771642-2e36-4078-a294-105649e1ed05\",",
                      " *   \"planId\": \"5cfdba28-283f-4859-98f8-ebb7af542d41\",",
                      " *   \"subscriptionId\": \"0a0304bc-7aae-474c-a2b5-81e3e7925c24\",",
                      " *   \"wixPayOrderId\": \"cd5e42ba-5de4-4ba1-b2e3-410cd46dde60\",",
                      " *   \"buyer\": {",
                      " *     \"memberId\": \"4c47c608-cfa8-4037-93ac-738f09560ed3\",",
                      " *     \"contactId\": \"4c47c608-cfa8-4037-93ac-738f09560ed3\"",
                      " *   },",
                      " *   \"priceDetails\": {",
                      " *     \"subtotal\": \"25\",",
                      " *     \"discount\": \"0\",",
                      " *     \"total\": \"25\",",
                      " *     \"planPrice\": \"25\",",
                      " *     \"currency\": \"USD\",",
                      " *     \"singlePaymentForDuration\": {",
                      " *       \"count\": 6,",
                      " *       \"unit\": \"MONTH\"",
                      " *     }",
                      " *   },",
                      " *   \"pricing\": {",
                      " *     \"singlePaymentForDuration\": {",
                      " *       \"count\": 6,",
                      " *       \"unit\": \"MONTH\"",
                      " *     },",
                      " *     \"prices\": [",
                      " *       {",
                      " *         \"duration\": {",
                      " *           \"cycleFrom\": 1",
                      " *         },",
                      " *         \"price\": {",
                      " *           \"subtotal\": \"25\",",
                      " *           \"discount\": \"0\",",
                      " *           \"total\": \"25\",",
                      " *           \"currency\": \"USD\"",
                      " *         }",
                      " *       }",
                      " *     ]",
                      " *   },",
                      " *   \"type\": \"ONLINE\",",
                      " *   \"orderMethod\": \"UNKNOWN\",",
                      " *   \"status\": \"DRAFT\",",
                      " *   \"lastPaymentStatus\": \"UNPAID\",",
                      " *   \"startDate\": \"2021-09-19T10:00:00.000Z\",",
                      " *   \"endDate\": \"2022-03-19T10:00:00.000Z\",",
                      " *   \"pausePeriods\": [],",
                      " *   \"earliestEndDate\": \"2022-03-19T10:00:00.000Z\",",
                      " *   \"currentCycle\": {",
                      " *     \"index\": 1,",
                      " *     \"startedDate\": \"2021-09-19T10:00:00.000Z\",",
                      " *     \"endedDate\": \"2022-03-19T10:00:00.000Z\"",
                      " *   },",
                      " *   \"planName\": \"Vegetarian Cooking\",",
                      " *   \"planDescription\": \"Weekly delivery of vegetarian recipes and vegan recipes\",",
                      " *   \"planPrice\": \"25\",",
                      " *   \"_createdDate\": \"2021-08-26T16:32:20.808Z\",",
                      " *   \"_updatedDate\": \"2021-08-27T14:53:10.084Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createOfflineOrder",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "ID of the plan being ordered." },
            { "name": "buyerId",
              "type": "string",
              "doc": "Member ID for the buyer." },
            { "name": "options",
              "type": "wix-pricing-plans-backend.Checkout.CreateOfflineOrderOptions",
              "doc": "Additional options for creating the offline order.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.Orders.Order" ] },
            "doc": "Fulfilled - The order of the plan." },
        "locations":
          [ { "lineno": 170,
              "filename": "checkout.js" } ],
        "docs":
          { "summary": "Creates an order for a buyer who purchased the plan with an offline transaction.",
            "description":
              [ "The `createOfflineOrder()` function returns a Promise that resolves to an `Order` object when the ",
                " order has been created. ",
                " ",
                " > **Note:**",
                " > The pricing plan `createOnlineOrder()` and the `createOfflineOrder()` APIs ",
                " > replace the deprecated paid plans `orderPlan()` API.",
                " > The deprecated API will continue to work, but will not receive updates.",
                " > To keep any existing code compatible with future changes, see the",
                " > [migration instructions](wix-paid-plans/orderplan#migration-instructions).",
                "",
                "",
                " Payment of an offline order is handled in 1 of 2 ways: ",
                " + When creating the order, select `true` in the `paid` request parameter. ",
                " + After creation, with the [`markAsPaid()`](wix-pricing-plans-backend/orders/markAsPaid) function.",
                "",
                " Creating a *non-free* offline order causes: ",
                " + The order's status is set to `\"PENDING\"` if the start date is in the future. Otherwise, the status is set to `\"ACTIVE\"`.",
                " + The order's last payment status is set to `\"UNPAID\"` or `\"PAID\"`.",
                "",
                " Creating a *free* offline order causes: ",
                " + The order's status is set to `\"PENDING\"` if the start date is in the future. Otherwise, the status is set to `\"ACTIVE\"`.",
                " + The order's last payment status is set to `\"NOT_APPLICABLE\"`.",
                "",
                " The [`onOrderCreated()`](wix-pricing-plans-backend/events/onOrderCreated) event handler runs when an offline order is created.",
                "",
                " > **Note**: Only site visitors with the **Manage Pricing Plans** and **Manage Subscriptions** [permissions](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Froles-and-permissions/roles) ",
                " > can create offline orders. You can override the permissions by setting the function's `suppressAuth` ",
                " > option to `true`." ],
            "links":
              [ "[createOnlineOrder( )](#createOnlineOrder)",
                "[previewOfflineOrder( )](#previewOfflineOrder)",
                "[onOrderCreated( )](wix-pricing-plans-backend/events/onOrderCreated)",
                "[onOrderPurchased( )](wix-pricing-plans-backend/events/onOrderPurchased)",
                "[onOrderStarted( )](wix-pricing-plans-backend/events/onOrderStarted)",
                "[onOrderUpdated( )](wix-pricing-plans-backend/events/onOrderUpdated)" ],
            "examples":
              [ { "title": "Create an offline order",
                  "body":
                    [ "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "// Sample planId value: '099e2c86-3b7e-4477-8c27-f77402b8cceb'",
                      "// ",
                      "// Sample buyerId value: '0c9bca47-1f00-4b92-af1c-7852452e949a'",
                      "",
                      "export async function myCreateOfflineOrderFunction(planId, buyerId) {",
                      "  try {",
                      "    const order = await checkout.createOfflineOrder(planId, buyerId);",
                      "    const plan = order.planName;",
                      "    const orderType = order.type;",
                      "    ",
                      "    return order;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  }",
                      "}",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " *  {",
                      " *    \"_id\": \"810a10b7-9da4-4de3-87e3-b4a3d7ed9654\",",
                      " *    \"planId\": \"099e2c86-3b7e-4477-8c27-f77402b8cceb\",",
                      " *    \"subscriptionId\": \"8bd53121-a1b3-4754-981e-64d5779a6821\",",
                      " *    \"wixPayOrderId\": \"6c56901d-d17f-44c8-acfa-05979b63e11f\",",
                      " *    \"buyer\": {",
                      " *      \"memberId\": \"0c9bca47-1f00-4b92-af1c-7852452e949a\",",
                      " *      \"contactId\": \"0c9bca47-1f00-4b92-af1c-7852452e949a\"",
                      " *    },",
                      " *    \"priceDetails\": {",
                      " *      \"subtotal\": \"74.99\",",
                      " *      \"discount\": \"0\",",
                      " *      \"total\": \"74.99\",",
                      " *      \"planPrice\": \"74.99\",",
                      " *      \"currency\": \"EUR\",",
                      " *      \"subscription\": {",
                      " *        \"cycleDuration\": {",
                      " *          \"count\": 1,",
                      " *          \"unit\": \"MONTH\"",
                      " *        },",
                      " *        \"cycleCount\": 3",
                      " *      }",
                      " *    },",
                      " *    \"pricing\": {",
                      " *      \"subscription\": {",
                      " *        \"cycleDuration\": {",
                      " *          \"count\": 1,",
                      " *          \"unit\": \"MONTH\"",
                      " *        },",
                      " *        \"cycleCount\": 3",
                      " *      },",
                      " *      \"prices\": [",
                      " *        {",
                      " *          \"duration\": {",
                      " *            \"cycleFrom\": 1,",
                      " *            \"numberOfCycles\": 3",
                      " *          },",
                      " *          \"price\": {",
                      " *            \"subtotal\": \"74.99\",",
                      " *            \"discount\": \"0\",",
                      " *            \"total\": \"74.99\",",
                      " *            \"currency\": \"EUR\"",
                      " *          }",
                      " *        }",
                      " *      ]",
                      " *    },",
                      " *    \"type\": \"OFFLINE\",",
                      " *    \"orderMethod\": \"UNKNOWN\",",
                      " *    \"status\": \"ACTIVE\",",
                      " *    \"autoRenewCanceled\": false,",
                      " *    \"lastPaymentStatus\": \"UNPAID\",",
                      " *    \"startDate\": \"2022-07-13T04:20:50.320Z\",",
                      " *    \"endDate\": \"2022-10-13T04:20:50.320Z\",",
                      " *    \"pausePeriods\": [],",
                      " *    \"earliestEndDate\": \"2022-10-13T04:20:50.320Z\",",
                      " *    \"currentCycle\": {",
                      " *      \"index\": 1,",
                      " *      \"startedDate\": \"2022-07-13T04:20:50.320Z\",",
                      " *      \"endedDate\": \"2022-08-13T04:20:50.320Z\"",
                      " *    },",
                      " *    \"planName\": \"Platinum Pro\",",
                      " *    \"planDescription\": \"\",",
                      " *    \"planPrice\": \"74.99\",",
                      " *    \"_createdDate\": \"2022-07-13T04:20:50.320Z\",",
                      " *    \"_updatedDate\": \"2022-07-13T04:20:50.320Z\"",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Create an offline order with additional options",
                  "body":
                    [ "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "/* Sample planId value: '099e2c86-3b7e-4477-8c27-f77402b8cceb'",
                      " * ",
                      " * Sample buyerId value: 'fac761ea-e6f1-4e3d-8b30-a4852f091416'",
                      " *",
                      " * Sample options value:",
                      " * {",
                      " *   startDate: new Date('2022-09-15T03:00:00Z'),",
                      " *   paid: true,",
                      " *   suppressAuth: true,",
                      " *   couponCode: 'ONEMONTHFREE'",
                      " * }",
                      " */",
                      "",
                      "export async function myCreateOfflineOrderWithOptionsFunction(planId, buyerId, options) {",
                      "  try {",
                      "    const order = await checkout.createOfflineOrder(planId, buyerId, options);",
                      "    const plan = order.planName;",
                      "    const orderType = order.type;",
                      "",
                      "    return order;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  }",
                      "}",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " * {",
                      " *   \"_id\": \"5080a56a-b6f6-4841-b5ad-2d46e9702619\",",
                      " *   \"planId\": \"099e2c86-3b7e-4477-8c27-f77402b8cceb\",",
                      " *   \"subscriptionId\": \"00f669b9-9084-43b2-bcdf-991a1e7905d3\",",
                      " *   \"wixPayOrderId\": \"6ff8a88b-6946-43ad-af86-00b90339e10d\",",
                      " *   \"buyer\": {",
                      " *     \"memberId\": \"fac761ea-e6f1-4e3d-8b30-a4852f091416\",",
                      " *     \"contactId\": \"fac761ea-e6f1-4e3d-8b30-a4852f091416\"",
                      " *   },",
                      " *   \"priceDetails\": {",
                      " *     \"subtotal\": \"74.99\",",
                      " *     \"discount\": \"74.99\",",
                      " *     \"total\": \"0\",",
                      " *     \"planPrice\": \"74.99\",",
                      " *     \"currency\": \"EUR\",",
                      " *     \"subscription\": {",
                      " *       \"cycleDuration\": {",
                      " *         \"count\": 1,",
                      " *         \"unit\": \"MONTH\"",
                      " *       },",
                      " *       \"cycleCount\": 3",
                      " *     },",
                      " *     \"coupon\": {",
                      " *       \"code\": \"ONEMONTHFREE\",",
                      " *       \"amount\": \"74.99\",",
                      " *       \"_id\": \"5061dd91-8cfc-4948-aae2-66fbc4b31af7\"",
                      " *     }",
                      " *   },",
                      " *   \"pricing\": {",
                      " *     \"subscription\": {",
                      " *       \"cycleDuration\": {",
                      " *         \"count\": 1,",
                      " *         \"unit\": \"MONTH\"",
                      " *       },",
                      " *       \"cycleCount\": 3",
                      " *     },",
                      " *     \"prices\": [",
                      " *       {",
                      " *         \"duration\": {",
                      " *           \"cycleFrom\": 1,",
                      " *           \"numberOfCycles\": 1",
                      " *         },",
                      " *         \"price\": {",
                      " *           \"subtotal\": \"74.99\",",
                      " *           \"coupon\": {",
                      " *             \"code\": \"ONEMONTHFREE\",",
                      " *             \"amount\": \"74.99\",",
                      " *             \"_id\": \"5061dd91-8cfc-4948-aae2-66fbc4b31af7\"",
                      " *           },",
                      " *           \"discount\": \"74.99\",",
                      " *           \"total\": \"0\",",
                      " *           \"currency\": \"EUR\"",
                      " *         }",
                      " *       },",
                      " *       {",
                      " *         \"duration\": {",
                      " *           \"cycleFrom\": 2,",
                      " *           \"numberOfCycles\": 2",
                      " *         },",
                      " *         \"price\": {",
                      " *           \"subtotal\": \"74.99\",",
                      " *           \"discount\": \"0\",",
                      " *           \"total\": \"74.99\",",
                      " *           \"currency\": \"EUR\"",
                      " *         }",
                      " *       }",
                      " *     ]",
                      " *   },",
                      " *   \"type\": \"OFFLINE\",",
                      " *   \"orderMethod\": \"UNKNOWN\",",
                      " *   \"status\": \"ACTIVE\",",
                      " *   \"autoRenewCanceled\": false,",
                      " *   \"lastPaymentStatus\": \"PAID\",",
                      " *   \"startDate\": \"2022-09-15T03:00:00.000Z\",",
                      " *   \"endDate\": \"2022-12-15T03:00:00.000Z\",",
                      " *   \"pausePeriods\": [],",
                      " *   \"earliestEndDate\": \"2022-12-15T03:00:00.000Z\",",
                      " *   \"planName\": \"Platinum Pro\",",
                      " *   \"planDescription\": \"\",",
                      " *   \"planPrice\": \"74.99\",",
                      " *   \"_createdDate\": \"2022-09-12T14:10:16.041Z\",",
                      " *   \"_updatedDate\": \"2022-09-12T14:10:16.041Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    { "description": "This example demonstrates how to create an offline order that is already marked as paid, starts at a later date, and \n uses a coupon code for a discount. This example also bypasses permission checks using the suppressAuth option." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createOnlineOrder",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "ID of the plan being ordered." },
            { "name": "options",
              "type": "wix-pricing-plans-backend.Checkout.CreateOnlineOrderOptions",
              "doc": "Additional options for creating the online order.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.Orders.Order" ] },
            "doc": "Fulfilled - The order of the plan." },
        "locations":
          [ { "lineno": 221,
              "filename": "checkout.js" } ],
        "docs":
          { "summary": "Creates an order online for currently logged-in member.",
            "description":
              [ "The `createOnlineOrder()` function returns a Promise that resolves to an `Order` object when the ",
                " order has been created. The order is for the currently logged-in member. The buyer must be logged in for you to be able to create an order.",
                "",
                " > **Note:**",
                " > The pricing plan `createOnlineOrder()` and `createOfflineOrder()` functions ",
                " > replace the deprecated paid plans `orderPlan()` function.",
                " > The deprecated function will continue to work, but will not receive updates.",
                " > To keep any existing code compatible with future changes, see the",
                " > [migration instructions](wix-paid-plans/orderplan#migration-instructions).",
                "",
                " Purchasing a plan:",
                " 1. Starts with creating an order. ",
                " 1. For non-free plans, calling the Wix Pay [`startPayment()`](wix-pay/startPayment) ",
                "    function with the `wixPayOrderId` value as the `paymentId` parameter to enable your buyer to pay for the order. ",
                "    (Do not  call the Wix Pay `createPayment()` function to create the payment ID because this",
                "    `createOnlineOrder()` function does that for you.)",
                " 1.  If the order is free, do not call the Wix Pay [`startPayment()`](wix-pay/startPayment) ",
                "     function after `createOnlineOrder()`. The order is created and considered paid for.",
                "",
                " Once an online order is paid for, the `status` of the order is no longer `\"DRAFT\"` and at this point, its `startDate` cannot be changed.",
                "",
                " Creating an online order causes: ",
                " + The order status to be set to `\"PENDING\"` if the start date is in the future. Otherwise, the `status` is set to `\"ACTIVE\"`.",
                "",
                " The [`onOrderCreated()`](wix-pricing-plans-backend/events/onOrderCreated) event handler runs when an online order is created." ],
            "links":
              [ "[createOfflineOrder( )](#createOfflineOrder)",
                "[previewOnlineOrder( )](#previewOnlineOrder)",
                "[onOrderCreated( )](wix-pricing-plans-backend/events/onOrderCreated)",
                "[onOrderCycleStarted( )](wix-pricing-plans-backend/events/onOrderCycleStarted)",
                "[onOrderPurchased( )](wix-pricing-plans-backend/events/onOrderPurchased)",
                "[onOrderStarted( )](wix-pricing-plans-backend/events/onOrderStarted)",
                "[onOrderUpdated( )](wix-pricing-plans-backend/events/onOrderUpdated)" ],
            "examples":
              [ { "title": "Create an online order for a plan",
                  "body":
                    [ "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "// Sample planId value: 'aef93bb6-aaaa-4965-966e-bd68dd2a1cc2'",
                      "",
                      "export async function myCreateOnlineOrderFunction(planId) {",
                      "  try {",
                      "    const order = await checkout.createOnlineOrder(planId);",
                      "    const orderId = order._id;",
                      "    const plan = order.planName;",
                      "    const orderType = order.type;",
                      "",
                      "    return order;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  }",
                      "}",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " * {",
                      " *   \"_id\": \"73a646b3-6aff-4fc6-a18b-9e30cf725aa5\",",
                      " *   \"planId\": \"aef93bb6-aaaa-4965-966e-bd68dd2a1cc2\",",
                      " *   \"subscriptionId\": \"f713e998-8344-4791-8c54-00d578746ff4\",",
                      " *   \"wixPayOrderId\": \"6a5c0cfc-490b-4120-a704-c49facae1172\",",
                      " *   \"buyer\": {",
                      " *     \"memberId\": \"ea3d74df-b7dc-4ca1-a7c9-c416b9017a86\",",
                      " *     \"contactId\": \"ea3d74df-b7dc-4ca1-a7c9-c416b9017a86\"",
                      " *   },",
                      " *   \"priceDetails\": {",
                      " *     \"subtotal\": \"2\",",
                      " *     \"discount\": \"0\",",
                      " *     \"total\": \"2\",",
                      " *     \"planPrice\": \"2\",",
                      " *     \"currency\": \"USD\",",
                      " *     \"subscription\": {",
                      " *       \"cycleDuration\": {",
                      " *         \"count\": 1,",
                      " *         \"unit\": \"WEEK\"",
                      " *       },",
                      " *       \"cycleCount\": 26",
                      " *     }",
                      " *   },",
                      " *   \"pricing\": {",
                      " *     \"subscription\": {",
                      " *       \"cycleDuration\": {",
                      " *         \"count\": 1,",
                      " *         \"unit\": \"WEEK\"",
                      " *       },",
                      " *       \"cycleCount\": 26",
                      " *     },",
                      " *     \"prices\": [",
                      " *       {",
                      " *         \"duration\": {",
                      " *           \"cycleFrom\": 1,",
                      " *           \"numberOfCycles\": 26",
                      " *         },",
                      " *         \"price\": {",
                      " *           \"subtotal\": \"2\",",
                      " *           \"discount\": \"0\",",
                      " *           \"total\": \"2\",",
                      " *           \"currency\": \"USD\"",
                      " *         }",
                      " *       }",
                      " *     ]",
                      " *   },",
                      " *   \"type\": \"ONLINE\",",
                      " *   \"orderMethod\": \"UNKNOWN\",",
                      " *   \"status\": \"DRAFT\",",
                      " *   \"autoRenewCanceled\": false,",
                      " *   \"lastPaymentStatus\": \"UNPAID\",",
                      " *   \"startDate\": \"2022-08-01T11:00:00.000Z\",",
                      " *   \"endDate\": \"2023-01-30T11:00:00.000Z\",",
                      " *   \"pausePeriods\": [],",
                      " *   \"earliestEndDate\": \"2023-01-30T11:00:00.000Z\",",
                      " *   \"planName\": \"Cooking for Kids\",",
                      " *   \"planDescription\": \"Get easy-to-make recipes that kids can prepare on their own!\",",
                      " *   \"planPrice\": \"2\",",
                      " *   \"_createdDate\": \"2022-07-13T04:37:11.197Z\",",
                      " *   \"_updatedDate\": \"2022-07-13T04:37:11.197Z\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Create an online order and purchase it with Wix Pay",
                  "body":
                    [ "/*******************************",
                      " * Backend code - checkout.jsw *",
                      " *******************************/",
                      "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "export async function myCreateOnlineOrderFunction(planId, startDate) {",
                      "  try {",
                      "    const order = await checkout.createOnlineOrder(planId, startDate)",
                      "    return order;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "    // Handle the error",
                      "  }",
                      "}",
                      "",
                      "/* Returns a Promise that resolves to an ",
                      " * `order` object with a `\"DRAFT\"`",
                      " * status. In the object, there is a ",
                      " * `wixPayOrderId` property you can use to ",
                      " * complete the purchase.",
                      " */ ",
                      "",
                      "/*************",
                      " * Page code *",
                      " *************/",
                      "",
                      "import {myCreateOnlineOrderFunction} from 'backend/checkout';",
                      "import wixPay from 'wix-pay';",
                      "",
                      "// ... ",
                      "",
                      "const planId = $w('#planId').value;",
                      "const startDate = new Date('July 22, 2022 11:00:00');",
                      "",
                      "$w('#submitButton').onClick(async () => {",
                      "  try {",
                      "    const order = await myCreateOnlineOrderFunction(planId, startDate);",
                      "    const result = await wixPay.startPayment(order.wixPayOrderId);",
                      "    if (result.status === 'Successful') {",
                      "      console.log('Successfully Ordered');",
                      "      // Handle payment success",
                      "    } else if (result.status === 'Failed to Order') {",
                      "      console.log('Failed');",
                      "      // Handle payment failure",
                      "    } else if (result.status === 'Order Pending') {",
                      "      console.log('Pending');",
                      "      // Handle payment pending",
                      "    } else if (result.status === 'Order Cancelled') {",
                      "      console.log('Cancelled');",
                      "      // Handle user closing the payment panel",
                      "      // without paying",
                      "    } else {",
                      "      console.log('Failed to Create Order');",
                      "      // Handle any remaining possibilities",
                      "    }",
                      "  } catch(error) {",
                      "    // Handle the error ",
                      "  }",
                      "}); ",
                      "",
                      "/* Returns a Promise that resolves to  ",
                      " * the created payment. ",
                      " */" ],
                  "extra":
                    { "description": "This example demonstrates how you can start an online order with the wix-pricing-plans-backend createOnlineOrder()\n function and then send the payment ID (wixPayOrderId) to the frontend Wix Pay startPayment() function to facilitate payment." } },
                { "title": "A full order plan scenario including a collection",
                  "body":
                    [ "/***********************************************",
                      " * For demonstration purposes, the             * ",
                      " * following myCreateOnlineOrderFunction()     * ",
                      " * triggers the onOrderCreated event. You      *",
                      " * can put this code in a backend jsw file     *",
                      " * or use a different method for triggering    *",
                      " * the event such as with http functions.      *",
                      " ***********************************************/",
                      "",
                      "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "export function myCreateOnlineOrderFunction(planId) {",
                      "  return checkout.createOnlineOrder(planId);",
                      "}",
                      "",
                      "/*******************************",
                      " * Backend code - events.js    *",
                      " *******************************/",
                      "",
                      " import { myInsertNewOrderFunction } from 'backend/process-orders'",
                      "",
                      " export function wixPricingPlans_onOrderCreated(event) {",
                      "  myInsertNewOrderFunction(event.entity);",
                      "}",
                      "",
                      "/*************************************",
                      " * Backend code - process-orders.jsw *",
                      " *************************************/",
                      " import wixData from 'wix-data';",
                      " ",
                      " export async function myInsertOrderFunction(order) {",
                      "",
                      "     const member = await getMember(order.buyer.memberId);",
                      "     const data = ({",
                      "         _id: order.id,",
                      "         planId: order.planId,",
                      "         planName: order.planName,",
                      "         status: order.status,",
                      "         nickname: member.nickname",
                      "     });",
                      "",
                      "     wixData.insert('Orders', data)",
                      "       .then(() => {",
                      "          console.log('Inserted successfully', data);",
                      "       })",
                      "       .catch(() => {",
                      "          console.error('Failed to insert', data);",
                      "       });",
                      " }",
                      "",
                      " // Gets member details to associate with the order ",
                      " async function getMember(memberId) {",
                      "  try {",
                      "    return wixData.get('Members/PublicData', memberId)",
                      "  } catch (error) {",
                      "    console.error('Failed to fetch member by ID', memberId, error);",
                      "  };",
                      " }" ],
                  "extra":
                    { "description": "This example demonstrates how to create an order and save its details in a collection after an event fires. \n\n The code assumes: \n\n + An Orders collection with the following fields: _id, planId, planName, nickname, and status\n + The Members app is installed on the site, including the Members/PublicData collection\n + The Pricing Plans app is installed on the site, including the PaidPlans/Plans collection\n + A backend code file exists called process-orders.jsw\n + A backend events file exists called events.js\n\n The OrderCreated event is fired in response to an order being created. The initial order creation might be\n initiated in several ways, such as by a button click on the page or by an external event request sent by \n an HTTP function call. The order creation is routed to backend code.\n\n In this example, when the OrderCreated event is fired:\n\n + The myInsertOrderFunction() function is called, with the order object extracted from the event object\n + The myInsertOrderFunction() function calls a getMember() function to gets details about the member \n   ordering the plan\n + The myInsertOrderFunction() function calls the Wix Data insert() function to add order and member details\n   into the Orders collection" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "previewOfflineOrder",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "ID of the plan being previewed." },
            { "name": "buyerId",
              "type": "string",
              "doc": "Member ID for the buyer who might order the plan offline. The `buyerId` must be entered because the buyer might not be logged in." },
            { "name": "options",
              "type": "wix-pricing-plans-backend.Checkout.PreviewOfflineOrderOptions",
              "doc": "Additional options for previewing the offline order.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.Checkout.OrderPreview" ] },
            "doc": "Fulfilled - A preview of the order." },
        "locations":
          [ { "lineno": 302,
              "filename": "checkout.js" } ],
        "docs":
          { "summary": "Provides a preview of an offline order as if it was purchased.",
            "description":
              [ "The `previewOfflineOrder()` function returns a Promise that resolves to a temporary preview of the offline order.",
                "",
                " The preview uses the same logic as purchasing a plan, but the preview is not saved. Because an order",
                " is not actually created, the preview's `_id` and `subscriptionId` properties are displayed as a string of ",
                " multiple zero characters (`000000-0000`).",
                " ",
                " If [taxes are configured for the site](https://support.wix.com/en/article/pricing-plans-setting-up-tax-collection), ",
                " taxes are applied to the preview. If not, the `tax` previews as `null`.",
                "",
                " You can preview the order to check purchase limitations, but the limitations are not enforced for the preview. ",
                " If a pricing plan has a limit on the amount of purchases per buyer, that limit is not considered for ",
                " generating the preview. But, if that limit has been reached and this order would then exceed the amount ",
                " of purchases permitted for this buyer, then `purchaseLimitExceeded` will return as `true`.",
                "",
                " This function is not available to the buyer. You specify the member ID for the buyer whose order ",
                " should be previewed. To get a general price preview for a plan that's not buyer-specific, use ",
                " the [previewPrice()](wix-pricing-plans-backend/checkout/previewprice) function.",
                "",
                " > **Note**: Only those with the **Manage Pricing Plans** and **Manage Subscriptions** [permissions](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Froles-and-permissions/roles) ",
                " > can preview offline orders. You can override the permissions by setting the function's `suppressAuth` ",
                " > option to `true`." ],
            "links":
              [ "[previewOnlineOrder( )](#previewOnlineOrder)",
                "[previewPricing( )](#previewPricing)" ],
            "examples":
              [ { "title": "Preview an offline order as if it was purchased, bypassing permission checks",
                  "body":
                    [ "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "/* Sample planId value: '7251b9e9-3852-4e9f-958e-af630f039802'",
                      " * ",
                      " * Sample buyerId value: '4c47c608-cfa8-4037-93ac-738f09560ed3'",
                      " * ",
                      " * Sample options value:",
                      " * {",
                      " *   startDate: new Date('July 17, 2022 10:00:00'),",
                      " *   suppressAuth: true",
                      " * }",
                      " */",
                      "",
                      "export async function myPreviewOfflineOrderFunction(planId, buyerId, options) {",
                      "  try {",
                      "    const preview = await checkout.previewOfflineOrder(planId, buyerId, options);",
                      "    const maxReached = preview.purchaseLimitExceeded;",
                      "    const orderPricing = preview.order.pricing;",
                      "",
                      "    return preview;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  }",
                      "}",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " * {",
                      " *   \"order\": {",
                      " *     \"_id\": \"00000000-0000-0000-0000-000000000000\",",
                      " *     \"planId\": \"7251b9e9-3852-4e9f-958e-af630f039802\",",
                      " *     \"subscriptionId\": \"00000000-0000-0000-0000-000000000000\",",
                      " *     \"buyer\": {",
                      " *       \"memberId\": \"4c47c608-cfa8-4037-93ac-738f09560ed3\",",
                      " *       \"contactId\": \"4c47c608-cfa8-4037-93ac-738f09560ed3\"",
                      " *     },",
                      " *     \"priceDetails\": {",
                      " *       \"subtotal\": \"0\",",
                      " *       \"discount\": \"0\",",
                      " *       \"total\": \"0\",",
                      " *       \"planPrice\": \"0\",",
                      " *       \"currency\": \"USD\",",
                      " *       \"singlePaymentUnlimited\": true",
                      " *     },",
                      " *     \"pricing\": {",
                      " *       \"singlePaymentUnlimited\": true,",
                      " *       \"prices\": [",
                      " *         {",
                      " *           \"duration\": {",
                      " *             \"cycleFrom\": 1,",
                      " *             \"numberOfCycles\": 1",
                      " *           },",
                      " *           \"price\": {",
                      " *             \"subtotal\": \"0\",",
                      " *             \"discount\": \"0\",",
                      " *             \"total\": \"0\",",
                      " *             \"currency\": \"USD\"",
                      " *           }",
                      " *         }",
                      " *       ]",
                      " *     },",
                      " *     \"type\": \"OFFLINE\",",
                      " *     \"orderMethod\": \"UNKNOWN\",",
                      " *     \"status\": \"ACTIVE\",",
                      " *     \"lastPaymentStatus\": \"PAID\",",
                      " *     \"startDate\": \"2022-07-17T10:00:00.000Z\",",
                      " *     \"pausePeriods\": [],",
                      " *     \"planName\": \"Family Cooking\",",
                      " *     \"planDescription\": \"Weekly delivery of home cooking recipes and time-saving tips\",",
                      " *     \"planPrice\": \"0\",",
                      " *     \"_createdDate\": \"2022-07-13T04:54:23.503Z\",",
                      " *     \"_updatedDate\": \"2022-07-13T04:54:23.503Z\"",
                      " *   },",
                      " *   \"purchaseLimitExceeded\": false",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "previewOnlineOrder",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "ID of the plan to be previewed." },
            { "name": "options",
              "type": "wix-pricing-plans-backend.Checkout.PreviewOnlineOrderOptions",
              "doc": "Additional options for previewing the online order.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.Checkout.OrderPreview" ] },
            "doc": "Fulfilled - A preview of the order." },
        "locations":
          [ { "lineno": 339,
              "filename": "checkout.js" } ],
        "docs":
          { "summary": "Provides a preview of an online order as if it was purchased.",
            "description":
              [ "The `previewOnlineOrder()` function returns a Promise that resolves to a temporary preview of the online order. ",
                "",
                " The buyer must be logged in to preview an online order. ",
                "",
                " The preview uses the same logic as purchasing a plan, but the preview is not saved. Because an order",
                " is not actually created, the preview's `_id` and `subscriptionId` properties are displayed as a string of ",
                " multiple zero characters (`000000-0000`).",
                "",
                " If [taxes are configured for the site](https://support.wix.com/en/article/pricing-plans-setting-up-tax-collection), taxes are applied to the preview.  If not, the `tax` previews as`null`.",
                " ",
                " You can preview the order to check purchase limitations, but the limitations are not enforced for the preview. ",
                " If a pricing plan has a limit on the amount of purchases per buyer, that limit is not considered for ",
                " generating the preview. But, if that limit has been reached and this order would then exceed the amount ",
                " of purchases permitted for this buyer, then `purchaseLimitExceeded` will return as `true`.",
                "",
                " This function is available to the site owner and the buyer. Because the buyer is logged in, ",
                " you do not need to specify the `buyerId` when previewing an online order. To get a general price preview ",
                " for a plan that's not buyer-specific, use the [previewPrice()](wix-pricing-plans-backend/checkout/previewprice) function." ],
            "links":
              [ "[previewOfflineOrder( )](#previewOfflineOrder)",
                "[previewPrice( )](#previewPrice)" ],
            "examples":
              [ { "title": "Preview an online order as if it was purchased with a coupon",
                  "body":
                    [ "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "/* Sample planId value: '38b3021a-8b43-4a31-98cc-4a05b522b7d3'",
                      " * ",
                      " * Sample startDate value: new Date('August 01, 2022 11:00:00')",
                      " */",
                      "",
                      "export async function myPreviewOnlineOrderFunction(planId, startDate) {",
                      "  try {",
                      "    const preview = await checkout.previewOnlineOrder(planId, startDate);",
                      "    const maxReached = preview.purchaseLimitExceeded;",
                      "    const orderPricing = preview.order.pricing;",
                      "",
                      "    return preview;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  };",
                      "}",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " * {",
                      " *   \"order\": {",
                      " *     \"_id\": \"00000000-0000-0000-0000-000000000000\",",
                      " *     \"planId\": \"38b3021a-8b43-4a31-98cc-4a05b522b7d3\",",
                      " *     \"subscriptionId\": \"00000000-0000-0000-0000-000000000000\",",
                      " *     \"buyer\": {",
                      " *       \"memberId\": \"ea3d74df-b7dc-4ca1-a7c9-c416b9017a86\",",
                      " *       \"contactId\": \"ea3d74df-b7dc-4ca1-a7c9-c416b9017a86\"",
                      " *     },",
                      " *     \"priceDetails\": {",
                      " *       \"subtotal\": \"10\",",
                      " *       \"discount\": \"0\",",
                      " *       \"total\": \"10\",",
                      " *       \"planPrice\": \"10\",",
                      " *       \"currency\": \"USD\",",
                      " *       \"subscription\": {",
                      " *         \"cycleDuration\": {",
                      " *           \"count\": 1,",
                      " *           \"unit\": \"MONTH\"",
                      " *         },",
                      " *         \"cycleCount\": 12",
                      " *       },",
                      " *       \"freeTrialDays\": 30",
                      " *     },",
                      " *     \"pricing\": {",
                      " *       \"subscription\": {",
                      " *         \"cycleDuration\": {",
                      " *           \"count\": 1,",
                      " *           \"unit\": \"MONTH\"",
                      " *         },",
                      " *         \"cycleCount\": 12",
                      " *       },",
                      " *       \"prices\": [",
                      " *         {",
                      " *           \"duration\": {",
                      " *             \"cycleFrom\": 1,",
                      " *             \"numberOfCycles\": 12",
                      " *           },",
                      " *           \"price\": {",
                      " *             \"subtotal\": \"10\",",
                      " *             \"discount\": \"0\",",
                      " *             \"total\": \"10\",",
                      " *             \"currency\": \"USD\"",
                      " *           }",
                      " *         }",
                      " *       ]",
                      " *     },",
                      " *     \"type\": \"ONLINE\",",
                      " *     \"orderMethod\": \"UNKNOWN\",",
                      " *     \"status\": \"ACTIVE\",",
                      " *     \"autoRenewCanceled\": false,",
                      " *     \"lastPaymentStatus\": \"PAID\",",
                      " *     \"startDate\": \"2022-08-01T11:00:00.000Z\",",
                      " *     \"endDate\": \"2023-08-31T11:00:00.000Z\",",
                      " *     \"pausePeriods\": [],",
                      " *     \"freeTrialDays\": 30,",
                      " *     \"earliestEndDate\": \"2023-08-31T11:00:00.000Z\",",
                      " *     \"planName\": \"Diabetic Cooking\",",
                      " *     \"planDescription\": \"Special recipes for those with diabetes.\",",
                      " *     \"planPrice\": \"10\",",
                      " *     \"_createdDate\": \"2022-07-13T05:02:40.265Z\",",
                      " *     \"_updatedDate\": \"2022-07-13T05:02:40.265Z\"",
                      " *   },",
                      " *   \"purchaseLimitExceeded\": false",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "previewPrice",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "ID of the plan whose pricing should be previewed." },
            { "name": "couponCode",
              "type": "string",
              "doc": "Coupon code to apply.\n\nTo learn more about coupons, see [applyCoupon()](wix-pricing-plans-backend/checkout/applycoupon).",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-backend.Checkout.PricePreview" ] },
            "doc": "Fulfilled - A preview of the pricing for the order." },
        "locations":
          [ { "lineno": 380,
              "filename": "checkout.js" } ],
        "docs":
          { "summary": "Provides a preview of an order's pricing as if was purchased.",
            "description":
              [ "The `previewPrice()` function returns a Promise that resolves to a temporary preview of the order's price. ",
                "",
                " The price preview uses the same logic for calculating prices as used when purchasing a plan, but the preview is not saved. ",
                " If [taxes are configured for the site](https://support.wix.com/en/article/pricing-plans-setting-up-tax-collection), taxes are applied to the preview.  If not, the `tax` previews as `null`.",
                "",
                " Buyers do not have to be logged in to preview the price, as such, the details returned by this function are not buyer-specific. To generate ",
                " a preview of a purchase for a specific buyer, use the [previewOfflineOrder()](wix-pricing-plans-backend/checkout/previewofflineorder) or [previewOnlineOrder()](wix-pricing-plans-backend/checkout/previewonlineorder) functions." ],
            "links":
              [ "[previewOfflineOrder( )](#previewOfflineOrder)",
                "[previewOnlineOrder( )](#previewOnlineOrder)" ],
            "examples":
              [ { "title": "Preview the pricing details for a plan to be purchased with a 10%-off coupon",
                  "body":
                    [ "import { checkout } from 'wix-pricing-plans-backend';",
                      "",
                      "// Sample planId value: '6d7537c5-beac-44a3-bea3-b947ddc56b31'",
                      "//",
                      "// Sample couponCode value: 'BACKTOSHAPE22'",
                      "",
                      "export async function myPreviewPriceFunction(planId, couponCode) {",
                      "  try {",
                      "    const pricePreview = await checkout.previewPrice(planId, couponCode);",
                      "    const orderPricing = pricePreview.prices.price.total;",
                      "    const currency = pricePreview.prices.price.currency;",
                      "",
                      "    return pricePreview;",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "  }",
                      "}",
                      "",
                      "/* Promise resolves to: ",
                      " * ",
                      " * {",
                      " *   \"price\": {",
                      " *     \"subtotal\": \"14.99\",",
                      " *     \"discount\": \"1.5\",",
                      " *     \"total\": \"13.49\",",
                      " *     \"planPrice\": \"14.99\",",
                      " *     \"currency\": \"USD\",",
                      " *     \"subscription\": {",
                      " *       \"cycleDuration\": {",
                      " *         \"count\": 1,",
                      " *         \"unit\": \"MONTH\"",
                      " *       },",
                      " *       \"cycleCount\": 0",
                      " *     },",
                      " *     \"coupon\": {",
                      " *       \"code\": \"BACKTOSHAPE22\",",
                      " *       \"amount\": \"1.5\",",
                      " *       \"_id\": \"52f73ce1-9e31-40f7-b5d4-a621b4b4057d\"",
                      " *     }",
                      " *   },",
                      " *   \"prices\": [",
                      " *     {",
                      " *       \"duration\": {",
                      " *         \"cycleFrom\": 1",
                      " *       },",
                      " *       \"price\": {",
                      " *         \"subtotal\": \"14.99\",",
                      " *         \"coupon\": {",
                      " *           \"code\": \"BACKTOSHAPE22\",",
                      " *           \"amount\": \"1.5\",",
                      " *           \"_id\": \"52f73ce1-9e31-40f7-b5d4-a621b4b4057d\"",
                      " *         },",
                      " *         \"discount\": \"1.5\",",
                      " *         \"total\": \"13.49\",",
                      " *         \"currency\": \"USD\"",
                      " *       }",
                      " *     }",
                      " *   ]",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "ApplyCoupon",
        "locations":
          [ { "lineno": 404,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "order",
              "type": "wix-pricing-plans-backend.Orders.Order",
              "doc": "The order with the coupon applied.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateOfflineOrderInfo",
        "locations":
          [ { "lineno": 128,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "startDate",
              "type": "Date",
              "doc": "Date from which the plan is active. Defaults to the current date.",
              "optional": true },
            { "name": "paid",
              "type": "boolean",
              "doc": "Whether the order is paid. Defaults to `false`.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation. Defaults to `false`.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed",
            "removed" ] },
      { "name": "CreateOfflineOrderOptions",
        "locations":
          [ { "lineno": 123,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "startDate",
              "type": "Date",
              "doc": "Start date and time for the ordered plan.\n\nDefault: Current date and time",
              "optional": true },
            { "name": "paid",
              "type": "boolean",
              "doc": "Whether the order is paid.\n\nDefault: `false`",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "Whether to suppress permission checks from running for the operation.\n\nDefault: `false`",
              "optional": true },
            { "name": "couponCode",
              "type": "string",
              "doc": "Coupon code to apply.\n\nTo learn more about coupons, see [applyCoupon()](wix-pricing-plans-backend/checkout/applycoupon).",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateOnlineOrderOptions",
        "locations":
          [ { "lineno": 140,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "startDate",
              "type": "Date",
              "doc": "Start date and time for the ordered plan.\n\nDefault: Current date and time",
              "optional": true },
            { "name": "couponCode",
              "type": "string",
              "doc": "Coupon code to apply.\n\nTo learn more about coupons, see [applyCoupon()](wix-pricing-plans-backend/checkout/applycoupon).",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "OrderPreview",
        "locations":
          [ { "lineno": 292,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "order",
              "type": "wix-pricing-plans-backend.Orders.Order",
              "doc": "The preview, as if the plan had been ordered.",
              "optional": true },
            { "name": "purchaseLimitExceeded",
              "type": "boolean",
              "doc": "Whether this previewed order would exceed the permitted amount of purchases \navailable for this plan for this buyer. \n\nAlways `false` for plans that do not have purchase limits." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PreviewOfflineOrderOptions",
        "locations":
          [ { "lineno": 151,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "startDate",
              "type": "Date",
              "doc": "Date from which the plan is active. Defaults to the current date.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation. Defaults to `false`.",
              "optional": true },
            { "name": "couponCode",
              "type": "string",
              "doc": "Coupon code to apply.\n\nTo learn more about coupons, see [applyCoupon()](wix-pricing-plans-backend/checkout/applycoupon).",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PreviewOnlineOrderOptions",
        "locations":
          [ { "lineno": 161,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "startDate",
              "type": "Date",
              "doc": "Date from which the plan is active. Defaults to the current date.",
              "optional": true },
            { "name": "couponCode",
              "type": "string",
              "doc": "Coupon code to apply.\n\nTo learn more about coupons, see [applyCoupon()](wix-pricing-plans-backend/checkout/applycoupon).",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PricePreview",
        "locations":
          [ { "lineno": 373,
              "filename": "checkout.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "price",
              "type": "wix-pricing-plans-backend.Orders.PriceDetails",
              "doc": "**Deprecated.** Use `prices` instead." },
            { "name": "prices",
              "type": "wix-pricing-plans-backend.Orders.Prices",
              "doc": "Pricing details." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }