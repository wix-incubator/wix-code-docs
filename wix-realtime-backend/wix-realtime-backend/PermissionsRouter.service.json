{ "name": "PermissionsRouter",
  "memberOf": "wix-realtime-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "permissions-router.js" },
  "docs":
    { "summary": "A router for defining and checking permissions.",
      "description":
        [ "Use the permissions router to define the permissions you want to grant to subscribers",
          " on channels or channel resources. You can set permissions on the channel and channel",
          " resource level. If you do not define permissions for a particular channel resource,",
          " that resource inherits the permissions of its parent channel.",
          "",
          " Typically you use the permissions router in the **realtime-permissions.js** file in",
          " your site's backend to:",
          "",
          " + Set default permissions for all channels and channel resources where no explicit",
          "   permissions are defined.",
          " + Add permissions logic for specific channels or channel resources.",
          " + Check the permissions for a specific subscriber on a specific channel.",
          "",
          " > **Note:** Although it is recommended, you do not need to use the permissions router to set permissions. You can also define all your permissions logic in the [`realtime_check_permission()`](#realtime_check_permission) function." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "add",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "channel",
              "type": "wix-realtime-backend.Channel",
              "doc": "Channel or channel resource to add a permissions handler for." },
            { "name": "handler",
              "type": "wix-realtime-backend.PermissionsRouter.PermissionsHandler",
              "doc": "The name of the\n function or the function expression to use when checking permissions for the specified channel." } ],
        "ret":
          { "type":
              [ { "name": "Promise",
                  "typeParams":
                    [ "void" ] },
                "void" ] },
        "locations":
          [ { "lineno": 93,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "Sets a permissions handler for a specific channel or channel resource.",
            "description":
              [ "The handler set by the `add()` function is used for permission checks by the permissions",
                " router for the channel or channel resource specified in the `channel` property.",
                "",
                " Adding a handler to a specific channel without a specified resource adds a handler for",
                " all permissions checks on the channel and all permissions checks on any of the channel's",
                " resources that do not have their own permissions handlers.",
                "",
                " For example, suppose you have the following channel, resources, and permissions:",
                "",
                " + channel: A, permissions: handler X is specified using the `add()` function",
                " + channel: A, resource: 1, permissions: handler Y is specified using the `add()` function",
                " + channel: A, resource: 2, permissions: no handler is specified",
                "",
                "",
                " Permissions will be checked as follows:",
                "",
                " + A: use handler X",
                " + A, 1: use handler Y",
                " + A, 2: use handler X" ],
            "links": [],
            "examples":
              [ { "title": "Set a permissions handler for a specific channel",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const adminAnnouncements = {\"name\": \"announcements\"}",
                      "",
                      "permissionsRouter.add( adminAnnouncements, (channel, subscriber) => {",
                      "  // add permissions check logic and return",
                      "  // permissions for announcements channel",
                      "  if(subscriber.type === \"Admin\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": true};",
                      "  }",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions for a channel based on subscriber type using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "} );",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add(membersOnlyChannel, (channel, subscriber) => {",
                      "  if(subscriber.type === \"Member\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": false};",
                      "  }",
                      "});",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import { members } from `wix-members-backend`;",
                      "import { permissionsRouter } from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default((channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "});",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add( membersOnlyChannel, async (channel, subscriber) => {",
                      "  let member = await members.getMember(subscriber.id, { fieldsets: ['FULL'] });",
                      "  ",
                      "  if(channel.resourceId === \"BobsOnly\") {",
                      "    if(member.contactDetails.firstName === \"Bob\") {",
                      "      return { \"read\": true };",
                      "    }",
                      "    else {",
                      "      return { \"read\": false };",
                      "    }",
                      "  }",
                      "  else {",
                      "    return { \"read\": true };",
                      "  }",
                      "} );",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel, subscriber);",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "check",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "channel",
              "type": "wix-realtime-backend.Channel",
              "doc": "Channel to check permissions for." },
            { "name": "subscriber",
              "type": "wix-realtime-backend.Subscriber",
              "doc": "Subscriber to check permissions for." } ],
        "ret":
          { "type":
              [ { "name": "Promise",
                  "typeParams":
                    [ "wix-realtime-backend.ChannelPermissions" ] },
                "wix-realtime-backend.ChannelPermissions" ],
            "doc": "The permissions granted to the subscriber on the channel or channel resource." },
        "locations":
          [ { "lineno": 126,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "Checks the permissions for a subscriber on a channel or channel resource.",
            "description":
              [ "The `check()` function returns a Promise that resolves to the permissions for the",
                " specified user on the specified channel or channel resource.",
                "",
                " The check is performed as follows:",
                "",
                " 1. If a permissions handler for the specified channel or channel resource exists,",
                "    it's invoked and its result is returned.",
                " 1. If no handler is found for the specified channel resource, but a handler",
                "    exists for the resource's channel, it's invoked and its result is returned.",
                " 1. If no handler is found for the specified channel, but a default permissions handler",
                "    exists, it's invoked and its result is returned.",
                " 1. If the default handler has not been found, the default permissions are returned.",
                "",
                "    The default permissions are:",
                "    `{\"read\": true}`",
                "",
                "",
                " This function is typically called in the body of the",
                " [`realtime_check_permission()`](#realtime_check_permission) function like so:",
                "",
                " ```JavaScript",
                " export function realtime_check_permission(channel, subscriber) {",
                "   return permissionsRouter.check(channel,subscriber);",
                " }",
                " ```" ],
            "links": [],
            "examples":
              [ { "title": "Check permission for a subscriber to a channel",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions for a channel based on subscriber type using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "} );",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add(membersOnlyChannel, (channel, subscriber) => {",
                      "  if(subscriber.type === \"Member\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": false};",
                      "  }",
                      "});",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import { members } from `wix-members-backend`;",
                      "import { permissionsRouter } from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default((channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "});",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add( membersOnlyChannel, async (channel, subscriber) => {",
                      "  let member = await members.getMember(subscriber.id, { fieldsets: ['FULL'] });",
                      "  ",
                      "  if(channel.resourceId === \"BobsOnly\") {",
                      "    if(member.contactDetails.firstName === \"Bob\") {",
                      "      return { \"read\": true };",
                      "    }",
                      "    else {",
                      "      return { \"read\": false };",
                      "    }",
                      "  }",
                      "  else {",
                      "    return { \"read\": true };",
                      "  }",
                      "} );",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel, subscriber);",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "default",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "wix-realtime-backend.PermissionsRouter.PermissionsHandler",
              "doc": "The name of the\n function or the function expression to use when checking default permissions." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 57,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "Sets a permissions handler for default permissions.",
            "description":
              [ "The handler set by the `default()` function is used for permission checks by the permissions",
                " router for all channels where an explicit handler has not been added. For channel resources,",
                " if no explicit handler has been set, the resource will inherit the permissions of its parent",
                " channel.",
                "",
                " For example, suppose you have the following channel, resources, and permissions:",
                "",
                " + channel: A, permissions: no handler specified",
                " + channel: A, resource: 1, permissions: no handler specified",
                " + channel: A, resource: 2, permissions: handler is specified",
                "",
                "",
                " Permissions will be checked as follows:",
                "",
                " + A: use the handler set by `default()` function",
                " + A, 1: use the handler set by `default()` function",
                " + A, 2: use the handler set by `add()` function for this resource",
                "",
                "",
                " If no default handler is set, subscribers to channels without explicit permissions handlers will",
                " receive the following permissions:",
                " `{\"read\": true}`" ],
            "links": [],
            "examples":
              [ { "title": "Set a default permissions handler",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  // return default permissions",
                      "  return {\"read\": true};",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions for a channel based on subscriber type using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "} );",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add(membersOnlyChannel, (channel, subscriber) => {",
                      "  if(subscriber.type === \"Member\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": false};",
                      "  }",
                      "});",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import { members } from `wix-members-backend`;",
                      "import { permissionsRouter } from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default((channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "});",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add( membersOnlyChannel, async (channel, subscriber) => {",
                      "  let member = await members.getMember(subscriber.id, { fieldsets: ['FULL'] });",
                      "  ",
                      "  if(channel.resourceId === \"BobsOnly\") {",
                      "    if(member.contactDetails.firstName === \"Bob\") {",
                      "      return { \"read\": true };",
                      "    }",
                      "    else {",
                      "      return { \"read\": false };",
                      "    }",
                      "  }",
                      "  else {",
                      "    return { \"read\": true };",
                      "  }",
                      "} );",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel, subscriber);",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks":
    [ { "name": "PermissionsHandler",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "channel",
              "type": "wix-realtime-backend.Channel",
              "doc": "The channel to grant permissions to." },
            { "name": "subscriber",
              "type": "wix-realtime-backend.Subscriber",
              "doc": "The subscriber to grant permissions to." } ],
        "ret":
          { "type":
              [ { "name": "Promise",
                  "typeParams":
                    [ "wix-realtime-backend.ChannelPermissions" ] },
                "wix-realtime-backend.ChannelPermissions" ] },
        "locations":
          [ { "lineno": 48,
              "filename": "permissions-router.js" } ],
        "docs":
          { "description":
              [ "Handles setting of permissions for a subscriber on a channel or",
                " channel resource." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "messages": [],
  "extra":
    {  } }