{ "name": "wix-realtime-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "publisher.js" },
  "docs":
    { "summary": "The wix-realtime module contains functionality for publishing messages\n on channels that site visitors can subscribe to and for managing channel permissions.",
      "description":
        [ "Using the Realtime API you can create channels and channel resources where messages",
          " can be published. Site visitors who subscribe to a channel receive the published",
          " messages published to that channel. When a message is received you can handle the message any",
          " way you choose, such as displaying the contents of the message or changing the state",
          " of page elements depending on the contents of the message. You can also manage the",
          " permissions of who can read from specific channels.",
          "",
          " The `wix-realtime-backend` module is used in conjunction with the ",
          " [`wix-realtime`](wix-realtime.html) module.",
          "",
          " Typical uses of the Realtime API include implementing a messaging system or",
          " as an alternative to using a polling mechanism.",
          "",
          " The Realtime API uses the following terminology:",
          "",
          " + **Channel**: A specific channel on which messages are published. Each channel",
          "   has a unique name. Site visitors can subscribe to a channel to receive the ",
          "   messages that are published on it. When site visitors subscribe to a channel, they do not ",
          "   receive messages published to a resource on that same channel.",
          " + **Channel resource**: A subchannel on which messages are published. Subchannels",
          "   can share a name with a channel and other subchannels, but they have a unique",
          "   resource ID. When site visitors subscribe to a channel resource, they do not ",
          "   receive messages published to that same channel without a specified resource.",
          "   Channel resources inherit their parent channel's permissions, unless specified",
          "   otherwise.",
          " + **Message**: A message published on a channel or channel resource. A message can",
          "   be of any type, such as a string, number, or object. Channel subscribers receive",
          "   the messages published on the channel.",
          " + **Publish**: Sending a message over a channel or channel resource.",
          " + **Subscribe**: A site visitor subscribes to receive the messages published on a ",
          "   channel or channel resource.",
          " + **Permissions router**: The permissions router is used to define the permissions",
          "   you want to grant to subscribers on channels and channel resources.",
          " + **Permissions handler**: Handles a permissions check for a specific user on a ",
          "   specific channel or channel resource.",
          "",
          "",
          " To use the Realtime API in the backend, import `wixRealtimeBackend` from the `wix-realtime-backend` module:",
          "",
          "   ```javascript",
          "   import wixRealtimeBackend from 'wix-realtime-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "permissionsRouter",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-realtime-backend.PermissionsRouter",
        "locations":
          [ { "lineno": 23,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "Returns the realtime permissions router.",
            "description":
              [ "Use the permissions router to define the permissions you want to grant to subscribers",
                " on channels or channel resources. You can set permissions on the channel and channel",
                " resource level. If you do not define permissions for a particular channel resource, ",
                " that resource inherits the permissions of its parent channel.",
                "",
                " Typically you use the permissions router in the **realtime-permissions.js** file in",
                " your site's backend to:",
                "",
                " + Set default permissions for all channels and channel resources where no explicit",
                "   permissions are defined.",
                " + Add permissions logic for specific channels or channel resources.",
                " + Check the permissions for a specific subscriber on a specific channel." ],
            "links": [],
            "examples":
              [ { "title": "Grant permissions for a channel based on subscriber type using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "} );",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add(membersOnlyChannel, (channel, subscriber) => {",
                      "  if(subscriber.type === \"Member\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": false};",
                      "  }",
                      "});",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import wixUsersBackend from `wix-users-backend`;",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "} );",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add( membersOnlyChannel, async (channel, subscriber) => {",
                      "  let user = await wixUsersBackend.getUser(subscriber.id);",
                      "  ",
                      "  if(channel.resourceId === \"BobsOnly\") {",
                      "    if(user.firstName === \"Bob\") {",
                      "      return {\"read\": true};",
                      "    }",
                      "    else {",
                      "      return {\"read\": false};",
                      "    }",
                      "  }",
                      "  else {",
                      "    return {\"read\": true};",
                      "  }",
                      "} );",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "Although it is recommended, you do not need to use the permissions router to set\n permissions. You can also define all your permissions logic in the\n [`realtime_check_permission()`](#realtime_check_permission) function." ] } } ],
  "operations":
    [ { "name": "publish",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "channel",
              "type": "wix-realtime-backend.Channel",
              "doc": "The channel, and optionally the resource, to \n publish to." },
            { "name": "payload",
              "type": "*",
              "doc": "Message payload." },
            { "name": "options",
              "type": "wix-realtime-backend.PublishOptions",
              "doc": "Options to use when publishing.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the message is published to the channel or channel resource. Does\n not indicate that the message was received." },
        "locations":
          [ { "lineno": 77,
              "filename": "publisher.js" } ],
        "docs":
          { "summary": "Publishes a message to a channel or channel resource.",
            "description":
              [ "The `publish()` function publishes a message to the specified channel or",
                " channel resource. ",
                "",
                " When site visitors subscribe to a channel, they do not ",
                " receive messages published to a resource on that same channel. Similarly, ",
                " when site visitors subscribe to a channel resource, they do not ",
                " receive messages published to that same channel without a specified resource.",
                "",
                " To publish a message to specific users only, specify the users by ID in",
                " the `PublishOptions` object sent to the `options` parameter.",
                "",
                " To include the ID of the user who triggered the publish in the published message,",
                " set the `includePublisher` property of the `PublishOptions` object to `true`." ],
            "links": [],
            "examples":
              [ { "title": "Publish to a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "wixRealtimeBackend.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Publish to a resource on a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const channel = {",
                      "  \"name\": \"someChannel\",",
                      "  \"resourceId\": \"someId\"",
                      "};",
                      "",
                      "wixRealtimeBackend.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Publish to specific users on a channel and include publisher information",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "const message = {",
                      "  \"firstKey\": \"firstValue\",",
                      "  \"secondKey\": \"secondValue\"",
                      "};",
                      "",
                      "const user1 = // get ID of first user to publish to",
                      "const user2 = // get ID of second user to publish to",
                      "",
                      "const options = {",
                      "  \"users\" : [user1, user2],",
                      "  \"includePublisher\": true",
                      "};",
                      "",
                      "wixRealtimeBackend.publish(channel, message, options)",
                      "  .then( () => {",
                      "    // published",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "realtime_check_permission",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "channel",
              "type": "wix-realtime-backend.Channel",
              "doc": "The channel, and optionally the resource,\n to check permissions for." },
            { "name": "subscriber",
              "type": "wix-realtime-backend.Subscriber",
              "doc": "The subscriber to check permissions\n for." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-realtime-backend.ChannelPermissions" ] },
            "doc": "Fulfilled - The permissions granted to the subscriber\n on the channel or channel resource." },
        "locations":
          [ { "lineno": 203,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "Checks permissions for a subscriber on a channel or channel resource.",
            "description":
              [ "The `realtime_check_permission` hook is triggered when a site visitor subscribes",
                " to a channel to check what permissions the subscriber will have. ",
                "",
                " The `realtime_check_permission()` function is not a function that you call from",
                " your code. You define the function in a file named **realtime-permissions.js**",
                " in your site's Backend section.",
                "",
                " If this function is not defined, all subscribers will receive the default permissions,",
                " which are:",
                "",
                " ```",
                " {\"read\": true}`",
                " ```",
                "",
                " Implement permissions logic for channels and subscribers by either:",
                "",
                " + Including all permissions logic in the body of this function.",
                " + Use the `PermissionsRouter` to add permissions",
                "   logic per channel. Then call [`check()`](wix-realtime-backend.PermissionsRouter.html#check) in the body of",
                "   this function and return the permissions object it returns." ],
            "links": [],
            "examples":
              [ { "title": "Grant permissions for a channel based on subscriber type",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true};",
                      "  ",
                      "  if(channel.name === \"MembersOnly\") {",
                      "    if(subscriber.type === \"Member\"){",
                      "      permissions.read = true; ",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  }",
                      "  ",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions for a channel based on subscriber type using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "} );",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add(membersOnlyChannel, (channel, subscriber) => {",
                      "  if(subscriber.type === \"Member\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": false};",
                      "  }",
                      "});",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import wixUsersBackend from `wix-users-backend`;",
                      "",
                      "export async function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true};",
                      "",
                      "  if(channel.name === \"BobsOnly\") {",
                      "    let user = await wixUsersBackend.getUser(subscriber.id);",
                      "    if(user.firstName === \"Bob\") {",
                      "      permissions.read = true;",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  }",
                      "  ",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import wixUsersBackend from `wix-users-backend`;",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  return {\"read\": true};",
                      "} );",
                      "",
                      "const membersOnlyChannel = {\"name\": \"MembersOnly\"};",
                      "",
                      "permissionsRouter.add( membersOnlyChannel, async (channel, subscriber) => {",
                      "  let user = await wixUsersBackend.getUser(subscriber.id);",
                      "  ",
                      "  if(channel.resourceId === \"BobsOnly\") {",
                      "    if(user.firstName === \"Bob\") {",
                      "      return {\"read\": true};",
                      "    }",
                      "    else {",
                      "      return {\"read\": false};",
                      "    }",
                      "  }",
                      "  else {",
                      "    return {\"read\": true};",
                      "  }",
                      "} );",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  return permissionsRouter.check(channel,subscriber);",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "When previewing your site, permissions for read are always granted." ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Channel",
        "locations":
          [ { "lineno": 50,
              "filename": "publisher.js" } ],
        "docs":
          { "summary": "An object representing a channel or channel resource.\n Site visitors can subscribe to a channel or channel resource to receive the \n messages that are published on it. When site visitors subscribe to a channel, they do not \n receive messages published to a resource on that same channel. Similarly, \n when site visitors subscribe to a channel resource, they do not \n receive messages published to that same channel without a specified resource.\n Channel resources inherit their parent channel's permissions, unless specified\n otherwise.",
            "links":
              [ "[publish( )](#publish)" ],
            "examples":
              [ { "title": "Publish to a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "wixRealtimeBackend.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Publish to a resource on a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const channel = {",
                      "  \"name\": \"someChannel\",",
                      "  \"resourceId\": \"someId\"",
                      "};",
                      "",
                      "wixRealtimeBackend.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Channel name. Cannot exceed 140 characters." },
            { "name": "resourceId",
              "type": "string",
              "doc": "ID of a specific channel resource.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ChannelPermissions",
        "locations":
          [ { "lineno": 172,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "An object containing permission settings for a channel.",
            "links":
              [ "[default( )](wix-realtime-backend.PermissionsRouter.html#default)",
                "[add( )](wix-realtime-backend.PermissionsRouter.html#add)",
                "[realtime\\_check\\_permission( )](#realtime_check_permission)" ],
            "examples":
              [ { "title": "Set a default permissions handler",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "permissionsRouter.default( (channel, subscriber) => {",
                      "  // return default permissions",
                      "  return {\"read\": true};",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Set a permissions handler for a specific channel",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const adminAnnouncements = {\"name\": \"announcements\"}",
                      "",
                      "permissionsRouter.add( adminAnnouncements, (channel, subscriber) => {",
                      "  // add permissions check logic and return",
                      "  // permissions for announcements channel",
                      "  if(subscriber.type === \"Admin\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": true};",
                      "  }",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions for a channel based on subscriber type",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true};",
                      "  ",
                      "  if(channel.name === \"MembersOnly\") {",
                      "    if(subscriber.type === \"Member\"){",
                      "      permissions.read = true; ",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  }",
                      "  ",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "read",
              "type": "boolean",
              "doc": "Whether the subscriber has read permissions. Defaults to `true`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PublishOptions",
        "locations":
          [ { "lineno": 67,
              "filename": "publisher.js" } ],
        "docs":
          { "summary": "An object containing options for publishing.",
            "links":
              [ "[publish( )](#publish)" ],
            "examples":
              [ { "title": "Publish to specific users on a channel and include publisher information",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "const message = {",
                      "  \"firstKey\": \"firstValue\",",
                      "  \"secondKey\": \"secondValue\"",
                      "};",
                      "",
                      "const user1 = // get ID of first user to publish to",
                      "const user2 = // get ID of second user to publish to",
                      "",
                      "const options = {",
                      "  \"users\" : [user1, user2],",
                      "  \"includePublisher\": true",
                      "};",
                      "",
                      "wixRealtimeBackend.publish(channel, message, options)",
                      "  .then( () => {",
                      "    // published",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "users",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "User IDs of specific users to publish to." },
            { "name": "includePublisher",
              "type": "boolean",
              "doc": "Whether to include information about the message publisher.\n Defaults to `false`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Subscriber",
        "locations":
          [ { "lineno": 184,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "An object representing a channel subscriber.",
            "links":
              [ "[default( )](wix-realtime-backend.PermissionsRouter.html#default)",
                "[add( )](wix-realtime-backend.PermissionsRouter.html#add)",
                "[check( )](wix-realtime-backend.PermissionsRouter.html#check)",
                "[realtime\\_check\\_permission( )](#realtime_check_permission)" ],
            "examples":
              [ { "title": "Set a permissions handler for a specific channel",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import {permissionsRouter} from 'wix-realtime-backend';",
                      "",
                      "// ...",
                      "",
                      "const adminAnnouncements = {\"name\": \"announcements\"}",
                      "",
                      "permissionsRouter.add( adminAnnouncements, (channel, subscriber) => {",
                      "  // add permissions check logic and return",
                      "  // permissions for announcements channel",
                      "  if(subscriber.type === \"Admin\") {",
                      "    return {\"read\": true};",
                      "  }",
                      "  else {",
                      "    return {\"read\": true};",
                      "  }",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions for a channel based on subscriber type",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true};",
                      "  ",
                      "  if(channel.name === \"MembersOnly\") {",
                      "    if(subscriber.type === \"Member\"){",
                      "      permissions.read = true; ",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  }",
                      "  ",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "The subscriber's user ID." },
            { "name": "type",
              "type": "string",
              "doc": "The type of subscriber.\n\n One of:\n\n + `\"Admin\"`: Subscriber is the site owner.\n + `\"Member\"`: Subscriber is a logged-in site member.\n + `\"Visitor\"`: Subscriber in not logged in." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }