{ "name": "wix-realtime-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "publisher.js" },
  "docs":
    { "summary": "The Realtime API is used to publish messages to subscribers.",
      "description":
        [ "XXXXXXXXXXX XXXXXXXXXXX",
          " XXXXXXXXXXX XXXXXXXXXXX",
          " XXXXXXXXXXX XXXXXXXXXXX",
          "",
          " To use the Realtime API, import `wixRealtimeBackend` from the `wix-realtime-backend` module:",
          "",
          "   ```javascript",
          "   import wixRealtimeBackend from 'wix-realtime-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "publish",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "channel",
              "type": "wix-realtime-backend.Channel",
              "doc": "The channel, and optionally the resource, to \n publish to." },
            { "name": "payload",
              "type": "*",
              "doc": "Message payload." },
            { "name": "options",
              "type": "wix-realtime-backend.PublishOptions",
              "doc": "Options to use when publishing.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the message is published to the channel or channel resource. Does\n not indicate that the message was received." },
        "locations":
          [ { "lineno": 36,
              "filename": "publisher.js" } ],
        "docs":
          { "summary": "Publishes a message to a channel or channel resource.",
            "description":
              [ "The `publish()` function publishes a message to the specified channel or",
                " channel resource. ",
                "",
                " To publish a message to specific users only, specify the users by ID in",
                " the [`PublishOptions`](#PublishOptions) object sent to the `options` parameter.",
                "",
                " XXXX Who's ID is the includePublisher's ID? XXXX" ],
            "links": [],
            "examples":
              [ { "title": "Publish to a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "wixRealtime.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Publish to a resource on a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime';",
                      "",
                      "// ...",
                      "",
                      "const channel = {",
                      "  \"name\": \"someChannel\",",
                      "  \"resourceId\": \"someId\"",
                      "};",
                      "",
                      "wixRealtime.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Publish to specific users on a channel and include publisher information",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "const message = {",
                      "  \"firstKey\": \"firstValue\",",
                      "  \"secondKey\": \"secondValue\"",
                      "};",
                      "",
                      "const user1 = // get ID of first user to publish to",
                      "const user2 = // get ID of second user to publish to",
                      "",
                      "const options = {",
                      "  \"users\" : [user1, user2],",
                      "  \"includePublisher\": true",
                      "};",
                      "",
                      "wixRealtime.publish(channel, message, options)",
                      "  .then( () => {",
                      "    // published",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "realtime_check_permission",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "channel",
              "type": "wix-realtime-backend.Channel",
              "doc": "The channel, and optionally the resource,\n to check permissions for." },
            { "name": "subscriber",
              "type": "wix-realtime-backend.Subscriber",
              "doc": "The subscriber to check permissions\n for." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-realtime-backend.ChannelPermissions" ] },
            "doc": "Fulfilled - The permissions granted to the subscriber\n on the channel or channel resource." },
        "locations":
          [ { "lineno": 75,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "Checks permissions for a subscriber on a channel or channel resource.",
            "description":
              [ "The `realtime_check_permission` hook is triggered when a site visitor subscribes",
                " to a channel in order to check what permissions the subscriber will have. ",
                "",
                " The `realtime_check_permission()` function is not a function that you call from",
                " your code. You define the function in a file named **realtime-permissions.js**",
                " in your site's Backend section. The function is called as described above.",
                "",
                " If this function is not defined, all subscribers will receive the default permissions,",
                " which are `{\"read\": true, \"write\": false}`.",
                "",
                " Implement permissions logic for channels and subscribers by either:",
                "",
                " + Including all permissions logic in the body of this function.",
                " + Use the [`PermissionsRouter`](#PermissionsRouter) to add permissions",
                "   logic per channel. Then call [`check()`](XXXXX#check) in the body of",
                "   this function and return the permissions object it returns." ],
            "links": [],
            "examples":
              [ { "title": "Grant permissions for a channel based on subscriber type",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true, \"write\": false};",
                      "  ",
                      "  if(channel.name === \"MembersOnly\") {",
                      "    if(subscriber.type === \"MEMBER\"){",
                      "      permissions.write = true; ",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions for a channel based on subscriber type using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true, \"write\": false};",
                      "  ",
                      "  if(channel.name === \"MembersOnly\") {",
                      "    if(subscriber.type === \"MEMBER\"){",
                      "      permissions.write = true; ",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "import wixUsersBackend from `wix-users-backend`;",
                      "",
                      "export async function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true, \"write\": false};",
                      "",
                      "  if(channel.name === \"BobsOnly\") {",
                      "    let user = await getUser(subscriber.id);",
                      "    if(user.firstName === \"Bob\") {",
                      "      permissions.write = true;",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  }",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Grant permissions based on user data using the permissions router",
                  "body":
                    [ "// In realtime-permissions.js",
                      "",
                      "export function realtime_check_permission(channel, subscriber) {",
                      "  // set default permissions",
                      "  let permissions =  {\"read\": true, \"write\": false};",
                      "  ",
                      "  if(channel.name === \"MembersOnly\") {",
                      "    if(subscriber.type === \"MEMBER\"){",
                      "      permissions.write = true; ",
                      "    }",
                      "    else {",
                      "      permissions.read = false;",
                      "    }",
                      "  return permissions;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "When previewing your site, permissions for read and write are always granted." ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Channel",
        "locations":
          [ { "lineno": 16,
              "filename": "publisher.js" } ],
        "docs":
          { "summary": "An object representing a channel.",
            "links":
              [ "[publish( )](#publish)" ],
            "examples":
              [ { "title": "Publish to a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "wixRealtime.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Publish to a resource on a channel",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime';",
                      "",
                      "// ...",
                      "",
                      "const channel = {",
                      "  \"name\": \"someChannel\",",
                      "  \"resourceId\": \"someId\"",
                      "};",
                      "",
                      "wixRealtime.publish(channel, \"My message\")",
                      "  .then(() => {",
                      "    // published",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Channel name. Cannot exceed 140 characters." },
            { "name": "resourceId",
              "type": "string",
              "doc": "ID of a specific channel resource.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ChannelPermissions",
        "locations":
          [ { "lineno": 51,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "An object containing permission settings for a channel.",
            "links":
              [ "[XXXX( )](#XXXX)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "read",
              "type": "boolean",
              "doc": "Whether the subscriber has read permissions. Defaults to `true`.",
              "optional": true },
            { "name": "write",
              "type": "boolean",
              "doc": "Whether the subscriber has write permissions. Defaults to `false`.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "PublishOptions",
        "locations":
          [ { "lineno": 26,
              "filename": "publisher.js" } ],
        "docs":
          { "summary": "An object containing option for publishing.",
            "links":
              [ "[publish( )](#publish)" ],
            "examples":
              [ { "title": "Publish to specific users on a channel and include publisher information",
                  "body":
                    [ "import wixRealtimeBackend from 'wix-realtime';",
                      "",
                      "// ...",
                      "",
                      "const channel = {\"name\": \"someChannel\"};",
                      "",
                      "const message = {",
                      "  \"firstKey\": \"firstValue\",",
                      "  \"secondKey\": \"secondValue\"",
                      "};",
                      "",
                      "const user1 = // get ID of first user to publish to",
                      "const user2 = // get ID of second user to publish to",
                      "",
                      "const options = {",
                      "  \"users\" : [user1, user2],",
                      "  \"includePublisher\": true",
                      "};",
                      "",
                      "wixRealtime.publish(channel, message, options)",
                      "  .then( () => {",
                      "    // published",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "users",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "User IDs of specific users to publish to." },
            { "name": "includePublisher",
              "type": "boolean",
              "doc": "Whether to include information about the message publisher.\n Defaults to `false`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Subscriber",
        "locations":
          [ { "lineno": 60,
              "filename": "permissions-router.js" } ],
        "docs":
          { "summary": "An object representing a channel subscriber.",
            "links":
              [ "[XXXX( )](#XXXX)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "The subscriber's user ID." },
            { "name": "type",
              "type": "string",
              "doc": "The type of subscriber.\n\n One of:\n\n + `\"ADMIN\"`: Subscriber is the site owner.\n + `\"MEMBER\"`: Subscriber is a logged-in site member.\n + `\"VISITOR\"`: Subscriber in not logged in." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] } ],
  "extra":
    {  } }