{ "name": "HiddenMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 11,
      "filename": "HiddenMixin.es6" },
  "docs":
    { "summary": "Provides functionality for elements that can be hidden.",
      "description":
        [ "To learn about the behavior of a hidden element,",
          " see the [`hidden`](#hidden) property." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "hidden",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "defaultValue": "false",
        "locations":
          [ { "lineno": 127,
              "filename": "HiddenMixin.es6" } ],
        "docs":
          { "summary": "Indicates if the element is visible or hidden.",
            "description":
              [ "If `hidden` is `true`, the element is not displayed on the page under",
                " any circumstances. A hidden element, unlike a",
                " [`collapsed`]($w.CollapsedMixin.html#collapsed) element, continues to",
                " take up the same space on the page as it did when it was visible.",
                "",
                " If `hidden` is `false`, the element _may_ be displayed on the page.",
                "",
                " However, an element whose `hidden` property is `false` is still not",
                " displayed if:",
                "",
                " + It is [collapsed]($w.CollapsedMixin.html#collapsed).",
                " + Its [parent element]($w.Node.html#parent) is hidden or collapsed.",
                " + It is a slide in a [Slideshow]($w.Slideshow.html) which is",
                "   currently not being displayed.",
                "",
                "",
                " Even if the element is not displayed due to the conditions",
                " mentioned above, if its `hidden` property is set to `false`, it's",
                " displayed when the conditions no longer apply.",
                "",
                " To determine if the element is actually visible, use the",
                " [`isVisible`](#isVisible) property.",
                "",
                " To set the `hidden` property on an element, use the element's",
                " [`hide()`](#hide) or [`show()`](#show) functions.",
                "",
                " If you select **Hidden on load** in the element's Properties panel",
                " in the Editor, the `hidden` property is set to `true` when the page loads." ],
            "links":
              [ "[hide( )](#hide)",
                "[show( )](#show)",
                "[collapse( )]($w.CollapsedMixin.html#collapse)",
                "[expand( )]($w.CollapsedMixin.html#expand)",
                "[collapsed]($w.CollapsedMixin.html#collapsed)",
                "[rendered]($w.Element.html#rendered)" ],
            "examples":
              [ { "title": "Get an element's hidden status",
                  "body":
                    [ "let isHidden = $w(\"#myElement\").hidden;  // false" ],
                  "extra":
                    {  } },
                { "title": "Toggle an element's hidden state",
                  "body":
                    [ "if( $w(\"#myElement\").hidden ) {",
                      "  $w(\"#myElement\").show();",
                      "}",
                      "else {",
                      "  $w(\"#myElement\").hide();",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "An element's `hidden` property is not the same as its\n  [isVisible](#isVisible) property. The `hidden` property\n  indicates whether the element _should_ be displayed, while `isVisible`\n  indicates if it is actually displayed." ] } },
      { "name": "isVisible",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "defaultValue": "true",
        "locations":
          [ { "lineno": 268,
              "filename": "HiddenMixin.es6" } ],
        "docs":
          { "summary": "Indicates if the element is actually visible.",
            "description":
              [ "If `isVisible` is `true`, the element is displayed on the page.",
                "",
                " If `isVisible` is `false`, the element is not displayed on the page.",
                "",
                " The value of the `isVisible` property is calculated based on the",
                " [`hidden`](#hidden), [`collapsed`](#collapsed), and [`rendered`]($w.Element#rendered)",
                " properties of the element and all of its ancestors. It is `true`",
                " only if the conditions exist in the element's property values and the",
                " property values of its ancestors such that the element is actually",
                " displayed on the page." ],
            "links":
              [ "[hidden](#hidden)",
                "[collapsed]($w.CollapsedMixin.html#collapsed)",
                "[rendered]($w.Element.html#rendered)" ],
            "examples":
              [ { "title": "Get whether an element is visible",
                  "body":
                    [ "let isVisible = $w(\"#myElement\").isVisible;  // true" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "An element's `isVisible` property is not the same as its\n [hidden]($w.Element.html#hidden) property. The `isVisible` property\n indicates whether the element is actually displayed, while `hidden`\n indicates if it _should_ be displayed.\n\n The `isVisible` property of an element remains `true` even if\n another element completely covers it so that a user cannot see it." ] } } ],
  "operations":
    [ { "name": "hide",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "effectName",
              "type": "string",
              "doc": "The name of the\n effect to play when hiding the item.",
              "optional": true },
            { "name": "effectOptions",
              "type":
                [ "$w.EffectOptions.ArcEffectOptions",
                  "$w.EffectOptions.BounceEffectOptions",
                  "$w.EffectOptions.FadeEffectOptions",
                  "$w.EffectOptions.FlipEffectOptions",
                  "$w.EffectOptions.FloatEffectOptions",
                  "$w.EffectOptions.FlyEffectOptions",
                  "$w.EffectOptions.FoldEffectOptions",
                  "$w.EffectOptions.GlideEffectOptions",
                  "$w.EffectOptions.PuffEffectOptions",
                  "$w.EffectOptions.RollEffectOptions",
                  "$w.EffectOptions.SlideEffectOptions",
                  "$w.EffectOptions.SpinEffectOptions",
                  "$w.EffectOptions.TurnEffectOptions",
                  "$w.EffectOptions.ZoomEffectOptions" ],
              "doc": "The effect's options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the effect is complete and the element's `hidden` property has been set to `true`." },
        "locations":
          [ { "lineno": 40,
              "filename": "HiddenMixin.es6" } ],
        "docs":
          { "summary": "Hides the element and sets its `hidden` property\n to `true`, using an effect if specified.",
            "description":
              [ "The `hide()` function hides the element and returns a Promise that is",
                " resolved when the effect is complete and the element's [`hidden`](#hidden)",
                " property has been set to `true`.",
                "",
                " To learn about the behavior of a hidden element,",
                " see the [`hidden`](#hidden) property.",
                "",
                " You can optionally apply an effect when hiding the element by providing",
                " an `effectName` value. You can also customize the effect by providing the",
                " optional `effectOptions` object.",
                "",
                " Effects:",
                "",
                " + [`\"arc\"`]($w.EffectOptions.html#ArcEffectOptions)",
                " + [`\"bounce\"`]($w.EffectOptions.html#BounceEffectOptions)",
                " + [`\"fade\"`]($w.EffectOptions.html#FadeEffectOptions)",
                " + [`\"flip\"`]($w.EffectOptions.html#FlipEffectOptions)",
                " + [`\"float\"`]($w.EffectOptions.html#FloatEffectOptions)",
                " + [`\"fly\"`]($w.EffectOptions.html#FlyEffectOptions)",
                " + [`\"fold\"`]($w.EffectOptions.html#FoldEffectOptions)",
                " + [`\"glide\"`]($w.EffectOptions.html#GlideEffectOptions)",
                " + [`\"puff\"`]($w.EffectOptions.html#PuffEffectOptions)",
                " + [`\"roll\"`]($w.EffectOptions.html#RollEffectOptions)",
                " + [`\"slide\"`]($w.EffectOptions.html#SlideEffectOptions)",
                " + [`\"spin\"`]($w.EffectOptions.html#SpinEffectOptions)",
                " + [`\"turn\"`]($w.EffectOptions.html#TurnEffectOptions)",
                " + [`\"zoom\"`]($w.EffectOptions.html#ZoomEffectOptions)",
                "",
                "",
                " You can also hide an element",
                " when the page loads by using the Properties panel in the Editor." ],
            "links":
              [ "[show( )](#show)",
                "[hidden](#hidden)",
                "[collapse( )]($w.CollapsedMixin.html#collapse)" ],
            "examples":
              [ { "title": "Hide an element with no effect",
                  "body":
                    [ "$w(\"#myElement\").hide();" ],
                  "extra":
                    {  } },
                { "title": "Hide an element with the \"fade\" effect",
                  "body":
                    [ "$w(\"#myElement\").hide(\"fade\");" ],
                  "extra":
                    {  } },
                { "title": "Hide an element with the \"fade\" effect and custom options",
                  "body":
                    [ "let fadeOptions = {",
                      "  \"duration\":   2000,",
                      "  \"delay\":      1000",
                      "};",
                      "",
                      "$w(\"#myElement\").hide(\"fade\", fadeOptions);" ],
                  "extra":
                    {  } },
                { "title": "Hide an element with an effect and log a message when the effect is done",
                  "body":
                    [ "$w(\"#myElement\").hide(\"fade\")",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with fade\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Toggle an element's hidden state",
                  "body":
                    [ "if( $w(\"#myElement\").hidden ) {",
                      "  $w(\"#myElement\").show();",
                      "}",
                      "else {",
                      "  $w(\"#myElement\").hide();",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "show",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "effectName",
              "type": "string",
              "doc": "The name of the\n effect to play when showing the item.",
              "optional": true },
            { "name": "effectOptions",
              "type":
                [ "$w.EffectOptions.ArcEffectOptions",
                  "$w.EffectOptions.BounceEffectOptions",
                  "$w.EffectOptions.FadeEffectOptions",
                  "$w.EffectOptions.FlipEffectOptions",
                  "$w.EffectOptions.FloatEffectOptions",
                  "$w.EffectOptions.FlyEffectOptions",
                  "$w.EffectOptions.FoldEffectOptions",
                  "$w.EffectOptions.GlideEffectOptions",
                  "$w.EffectOptions.PuffEffectOptions",
                  "$w.EffectOptions.RollEffectOptions",
                  "$w.EffectOptions.SlideEffectOptions",
                  "$w.EffectOptions.SpinEffectOptions",
                  "$w.EffectOptions.TurnEffectOptions",
                  "$w.EffectOptions.ZoomEffectOptions" ],
              "doc": "The effect's options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the effect is complete and the element's `hidden` property has been set to `false`." },
        "locations":
          [ { "lineno": 186,
              "filename": "HiddenMixin.es6" } ],
        "docs":
          { "summary": "Shows the element and sets its `hidden` property\n to `false`, using an effect if specified.",
            "description":
              [ "The `show()` function shows the element and returns a Promise that is",
                " resolved when the effect is complete and the element's [`hidden`](#hidden)",
                " property has been set to `false`.",
                "",
                " You can optionally apply an effect when showing the element by providing",
                " an `effectName` value. You can also customize the effect by providing the",
                " optional `effectOptions` object.",
                "",
                " Effects:",
                "",
                " + [`\"arc\"`]($w.EffectOptions.html#ArcEffectOptions)",
                " + [`\"bounce\"`]($w.EffectOptions.html#BounceEffectOptions)",
                " + [`\"fade\"`]($w.EffectOptions.html#FadeEffectOptions)",
                " + [`\"flip\"`]($w.EffectOptions.html#FlipEffectOptions)",
                " + [`\"float\"`]($w.EffectOptions.html#FloatEffectOptions)",
                " + [`\"fly\"`]($w.EffectOptions.html#FlyEffectOptions)",
                " + [`\"fold\"`]($w.EffectOptions.html#FoldEffectOptions)",
                " + [`\"glide\"`]($w.EffectOptions.html#GlideEffectOptions)",
                " + [`\"puff\"`]($w.EffectOptions.html#PuffEffectOptions)",
                " + [`\"roll\"`]($w.EffectOptions.html#RollEffectOptions)",
                " + [`\"slide\"`]($w.EffectOptions.html#SlideEffectOptions)",
                " + [`\"spin\"`]($w.EffectOptions.html#SpinEffectOptions)",
                " + [`\"turn\"`]($w.EffectOptions.html#TurnEffectOptions)",
                " + [`\"zoom\"`]($w.EffectOptions.html#ZoomEffectOptions)" ],
            "links":
              [ "[hide( )](#hide)",
                "[hidden](#hidden)",
                "[expand( )]($w.CollapsedMixin.html#expand)" ],
            "examples":
              [ { "title": "Show an element with no effect",
                  "body":
                    [ "$w(\"#myElement\").show();" ],
                  "extra":
                    {  } },
                { "title": "Show an element with the \"fade\" effect",
                  "body":
                    [ "$w(\"#myElement\").show(\"fade\");" ],
                  "extra":
                    {  } },
                { "title": "Show an element with the \"fade\" effect and custom options",
                  "body":
                    [ "let fadeOptions = {",
                      "  \"duration\":   2000,",
                      "  \"delay\":      1000",
                      "};",
                      "",
                      "$w(\"#myElement\").show(\"fade\", fadeOptions);" ],
                  "extra":
                    {  } },
                { "title": "Show an element with an effect and log a message when the effect is done",
                  "body":
                    [ "$w(\"#myElement\").show(\"fade\")",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with fade\");",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Toggle an element's hidden state",
                  "body":
                    [ "if( $w(\"#myElement\").hidden ) {",
                      "  $w(\"#myElement\").show();",
                      "}",
                      "else {",
                      "  $w(\"#myElement\").hide();",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }