{ "name": "CommentsWidget",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "CommentsWidget.js" },
  "docs":
    { "summary": "The [Comments widget](https://support.wix.com/en/article/wix-comments-an-overview) is a customizable widget for site visitors to leave comments and feedback.",
      "description":
        [ "The `CommentsWidget` element is a customizable widget that allows site visitors to leave comments and feedback." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "locked",
        "labels": [],
        "get": false,
        "set": false,
        "type": "void",
        "locations":
          [ { "lineno": 12,
              "filename": "CommentsWidget.js" } ],
        "docs":
          { "summary": "Indicates whether the comments widget is locked.",
            "description":
              [ "If the comments widget is locked, site visitors can't add new comments or edit existing comments.",
                "",
                " To lock or unlock the comments widget, use the element's [`lock()`](#lock) and [`unlock()`](#unlock) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get an elements locked status",
                  "body":
                    [ "let isLocked = $w(\"#myCommentsWidget\").locked;  // false" ],
                  "extra":
                    {  } },
                { "title": "Toggle an elements locked state",
                  "body":
                    [ "if ( $w(\"#myCommentWidget\").locked) {",
                      "    $w(\"#myCommentWidget\").unlock();",
                      "  }",
                      "  else {",
                      "    $w(\"#myCommentWidget\").lock();",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "closeCommentBoxes",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the effect is complete and the element's `hidden` property has been set to `true`." },
        "locations":
          [ { "lineno": 79,
              "filename": "CommentsWidget.js" } ],
        "docs":
          { "summary": "Closes all comment boxes on the comment widget.",
            "description":
              [ "There can be a maximum of two comment boxes on the comment widget. They are displayed at the top and bottom of the widget.",
                "",
                "The `closeCommentBoxes()` function closes both comment boxes." ],
            "links":
              [ "[openNearestCommentBox()](#openNearestCommentBox)" ],
            "examples":
              [ { "title": "Close all comment boxes",
                  "body":
                    [ "$w(\"#myCommentWidget\").closeCommentBoxes();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "lock",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 25,
              "filename": "CommentsWidget.js" } ],
        "docs":
          { "summary": "Locks the comment widget and sets its `locked` property\n to `true`.",
            "description":
              [ "The `lock()` function locks the comment widget from creating, receiving or editing comments. It toggles the [`locked`](#locked) property from `false` to `true`, rendering the comment widget editable." ],
            "links":
              [ "[locked](#locked)",
                "[unlock( )](#unlock)" ],
            "examples":
              [ { "title": "Lock the comments widget",
                  "body":
                    [ "$w(\"#myCommentsWidget\").lock();" ],
                  "extra":
                    {  } },
                { "title": "Toggle an elements locked state",
                  "body":
                    [ "if ( $w(\"#myCommentWidget\").locked) {",
                      "    $w(\"#myCommentWidget\").unlock();",
                      "  }",
                      "  else {",
                      "    $w(\"#myCommentWidget\").lock();",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCreateComment",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "CommentEventCallback",
              "type": "$w.CommentEventCallback",
              "doc": "The comment being created by the comment widget." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 108,
              "filename": "CommentsWidget.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when a new comment is created in the comments widget.",
            "description":
              [ "The `onCreateComment()` function adds an event handler that runs when a new comment is created in the comments widget." ],
            "links": [],
            "examples":
              [ { "title": "Add an event handler for when a new comment is created",
                  "body":
                    [ "$w(\"#wixComments1\").onCreateComment((widgetComment) => { ",
                      "  console.log(widgetComment);",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "openNearestCommentBox",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "commentBoxOptions",
              "type": "$w.CommentBoxOptions",
              "doc": "Effect options for opening the comment box.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the effect is complete and the element's `hidden` property has been set to `true`." },
        "locations":
          [ { "lineno": 53,
              "filename": "CommentsWidget.js" } ],
        "docs":
          { "summary": "Opens the comment box closest to the element that called the function.",
            "description":
              [ "There can be a maximum of two comment boxes on the comment widget. They are displayed at the top and bottom of the widget.",
                "",
                "The `openNearestCommentBox()` function opens the comment box that is closest to the element that called the function." ],
            "links":
              [ "[closeCommentBoxes()](#closeCommentBoxes)" ],
            "examples":
              [ { "title": "Open a comment box with no options",
                  "body":
                    [ "$w(\"#myCommentsWidget\").openNearestCommentBox();" ],
                  "extra":
                    {  } },
                { "title": "Open a comment box with options",
                  "body":
                    [ "const commentBoxOptions = {",
                      "    focus: true,",
                      "    scroll: false",
                      "};",
                      "",
                      "$w(\"#myCommentsWidget\").openNearestCommentBox(commentBoxOptions);" ],
                  "extra":
                    {  } },
                { "title": "Open a comment box with an button click event",
                  "body":
                    [ "$w(\"#button1\").onClick( () => {",
                      "  $w(\"#myCommentsWidget\").openNearestCommentBox();",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setResourceId",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "resourceId",
              "type": "string",
              "doc": "The unique resource ID for the new comment thread." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 93,
              "filename": "CommentsWidget.js" } ],
        "docs":
          { "summary": "Retrieves a comment thread with a unique resource ID, or creates one if it doesn't exist.",
            "description":
              [ "The `setResourceId` function replaces the comments thread in the widget with a different thread. It can create a new comment threads and transition between threads by calling the function. ",
                "",
                "Each comment thread is identified by a unique resource ID that is arbitraily chosen when the function is first called on that thread.",
                "> **Note:** The default reource ID is the enum 'home'. Call set Id with 'home' to return to the original comment thread." ],
            "links": [],
            "examples":
              [ { "title": "Set a comment thread resource ID",
                  "body":
                    [ "$w(\"#myCommentWidget\").setResourceId('thread-2');" ],
                  "extra":
                    {  } },
                { "title": "Navigate between comment threads using button clicks",
                  "body":
                    [ "$w(\"#button1\").onClick(() => {",
                      "  $w(\"#myCommentsWidget\").setResourceId(\"home\");",
                      "});",
                      "",
                      "$w(\"#button2\").onClick(() => {",
                      "    $w(\"#myCommentsWidget\").setResourceId(\"thread-2\");",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "unlock",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 39,
              "filename": "CommentsWidget.js" } ],
        "docs":
          { "summary": "Unlocks the comment widget and sets its `locked` property\n to `false`.",
            "description":
              [ "The `unlock()` function unlocks the comment widget, restoring comment functionality. It toggles the [`locked`](#locked) property from `true` to `false`." ],
            "links":
              [ "[locked](#locked)",
                "[lock( )](#lock)" ],
            "examples":
              [ { "title": "Unlock the comments widget",
                  "body":
                    [ "$w(\"myCommentsWidget\").unlock();" ],
                  "extra":
                    {  } },
                { "title": "Toggle an elements locked state",
                  "body":
                    [ "if ( $w(\"#myCommentWidget\").locked) {",
                      "    $w(\"#myCommentWidget\").unlock();",
                      "  }",
                      "  else {",
                      "    $w(\"#myCommentWidget\").lock();",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }