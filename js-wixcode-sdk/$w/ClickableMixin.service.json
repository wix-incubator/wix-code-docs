{ "name": "ClickableMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 4,
      "filename": "ClickableMixin.es6" },
  "docs":
    { "summary": "Provides functionality for elements that can be clicked.",
      "description":
        [ "This mixin provides event handlers that run when an element is clicked or double-clicked.",
          "",
          " **About Mixins**",
          "",
          " [Mixins](https://support.wix.com/en/article/velo-about-mixins) provide functionality that other elements can inherit and use. ",
          " ",
          " Mixins are not elements. You cannot add mixins to a page in the Editor like other `$w` elements, and mixins are not meant to be used directly ",
          " in your code. ",
          " ",
          " For example, you would not write code like this, because it is out of context: ",
          "",
          " ```javascript",
          " $w(\"#ClickableMixin\").onClick( (event) => {",
          "    let targetId = event.target.id;",
          "   }",
          " );",
          " ```",
          "",
          " Instead, you can code the following if `myButton` is an element that can be clicked and  ",
          " \"mixes in\" `ClickableMixin`. ",
          "",
          "  ```javascript",
          " $w(\"#myButton\").onClick( (event) => {",
          "    let targetId = event.target.id;",
          "   }",
          " );",
          " ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "onClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the element is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 66,
              "filename": "ClickableMixin.es6" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element is clicked.",
            "description":
              [ "An element receives a `click` event when a user clicks on the element",
                " and releases.",
                "",
                " When a user double-clicks an element, two `click` events are fired",
                " before a `doubleClick` event is also fired.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events).",
                " ",
                "![Properties and Events panel](images/properties_and_events.png \"Properties and Events panel\")",
                "",
                " This will automatically add the required code for the selected element and event:",
                "",
                " ```javascript ",
                "    export function button1_click(event) {",
                "       // This function was added from the Properties & Events panel. To learn more, visit http://wix.to/UcBnC-4",
                "       // Add your code for this event here: ",
                "     }  ",
                "```",
                "",
                "",
                "> **Note:** Do not use the Editor Link panel to redirect on click when a link is already ",
                " defined using the `onClick()` function. To avoid unpredictable behavior, remove ",
                " the link from the Editor Link panel.",
                ">",
                ">",
                "> **Deprecation note:** The $w parameter of event handlers is being deprecated. To get",
                " a scoped selector for working with elements in repeater items, use the [$w.at()]($w.html#at) function",
                " and pass it the context property of the event parameter: `$item = $w.at(event.context)`. To learn more, see",
                " [here](https://www.wix.com/velo/forum/wix-tips-and-updates/removal-of-the-w-parameter-from-event-handlers)." ],
            "links":
              [ "[onDblClick( )](#onDblClick)" ],
            "examples":
              [ { "title": "Get the ID of the element that was clicked",
                  "body":
                    [ "$w(\"#myElement\").onClick( (event) => {",
                      "  let targetId = event.target.id;  // \"myElement\"",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Get a mouse click's coordinates",
                  "body":
                    [ "$w(\"#myElement\").onClick( (event) => {",
                      "  let clientX = event.clientX;  // 362",
                      "  let clientY = event.clientY;  // 244",
                      "  let offsetX = event.offsetX;  // 10",
                      "  let offsetY = event.offsetY;  // 12",
                      "  let pageX = event.pageX;      // 362",
                      "  let pageY = event.pageY;      // 376",
                      "  let screenX = event.screenX;  // 3897",
                      "  let screenY = event.screenY;  // 362",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } },
      { "name": "onDblClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the element is clicked." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element to which the event handler was added." },
        "locations":
          [ { "lineno": 107,
              "filename": "ClickableMixin.es6" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element is double-clicked.",
            "description":
              [ "An element receives a `dblClick` event when a user double-clicks on the element",
                " and releases.",
                "",
                " When a user double-clicks an element, two `click` events are fired",
                " before a `doubleClick` event is also fired.",
                "",
                " You can also [define an event handler using the Properties and Events panel](https://support.wix.com/en/article/velo-reacting-to-user-actions-using-events).",
                "",
                "",
                " > **Deprecation note:** The $w parameter of event handlers is being deprecated. To get",
                " a scoped selector for working with elements in repeater items, use the [$w.at()]($w.html#at) function",
                " and pass it the context property of the event parameter: `$item = $w.at(event.context)`. To learn more, see",
                " [here](https://www.wix.com/velo/forum/wix-tips-and-updates/removal-of-the-w-parameter-from-event-handlers)." ],
            "links":
              [ "[onClick( )](#onClick)" ],
            "examples":
              [ { "title": "Get the ID of the element that was double-clicked",
                  "body":
                    [ "$w(\"#myElement\").onDblClick( (event) => {",
                      "  let targetId = event.target.id; // \"myElement\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "dblClick" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }