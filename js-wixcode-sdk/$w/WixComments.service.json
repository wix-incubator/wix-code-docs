{ "name": "WixComments",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "WixComments.js" },
  "docs":
    { "summary": "The [`WixComments`](https://support.wix.com/en/article/wix-comments-an-overview) element is a customizable widget for site visitors to leave comments and feedback.",
      "description":
        [ "The [`WixComments`](https://support.wix.com/en/article/wix-comments-an-overview) element is a customizable widget that allows site visitors to leave feedback in comment threads. A comment thread is a collection of comments and replies that form a heirarchical structure. ",
          "",
          " When a new `WixComments` element is dropped onto the page, its comments are associated with that page by default." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "customClassList",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.CustomClassList",
        "locations":
          [ { "lineno": 166,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "<b>Note: This standard element property is not relevant for this WixComments element.</b>",
            "description":
              [ "> This property is not yet available to all users.",
                "",
                "You can use this property to manipulate the custom CSS classes of an element. For example, ",
                "you can add a custom class to an element or replace an existing class with a new custom class.",
                "",
                "",
                "Custom classes are those that you create on your site, not the predefined global classes",
                "that are provided for each element.  ",
                "",
                "> **Note:** For more information, see [Styling Elements with CSS](https://www.wix.com/velo/reference/$w/styling-elements-with-css) ",
                "> and the [MDN CSS reference docs](https://developer.mozilla.org/en-US/docs/Learn/CSS)." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "locked",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "lineno": 13,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Indicates whether the `WixComments` element is locked.",
            "description":
              [ "If the `WixComments` element is locked, site visitors can't add new comments or edit existing comments.",
                "",
                " To lock or unlock the element, use the [`lock()`](#lock) and [`unlock()`](#unlock) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's locked status",
                  "body":
                    [ "let isLocked = $w(\"#myCommentsWidget\").locked;  // false" ],
                  "extra":
                    {  } },
                { "title": "Toggle an element's locked state",
                  "body":
                    [ "if ($w(\"#myCommentsWidget\").locked) {",
                      "  $w(\"#myCommentsWidget\").unlock();",
                      "  } else {",
                      "    $w(\"#myCommentsWidget\").lock();",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "closeCommentBoxes",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 81,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Closes all comment boxes on the `WixComments` element.",
            "description":
              [ "The `closeCommentBoxes()` function closes all open comment boxes.",
                "",
                "A comment box is the the input area where visitors can write comments.",
                "",
                "There can be up to two comment boxes on the `WixComments` element. They are displayed at the top and bottom of the element." ],
            "links":
              [ "[openNearestCommentBox()](#openNearestCommentBox)" ],
            "examples":
              [ { "title": "Close all comment boxes",
                  "body":
                    [ "$w(\"#myCommentsWidget\").closeCommentBoxes();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "lock",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 27,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Locks the `WixComments` element.",
            "description":
              [ "The `lock()` function locks the `WixComments` element, which blocks visitors from creating or editing comments. It sets the [`locked`](#locked) property to `true`." ],
            "links":
              [ "[locked](#locked)",
                "[unlock( )](#unlock)" ],
            "examples":
              [ { "title": "Lock the comments widget",
                  "body":
                    [ "$w(\"#myCommentsWidget\").lock();" ],
                  "extra":
                    {  } },
                { "title": "Toggle an element's locked state",
                  "body":
                    [ "if ($w(\"#myCommentsWidget\").locked) {",
                      "  $w(\"#myCommentsWidget\").unlock();",
                      "  } else {",
                      "    $w(\"#myCommentsWidget\").lock();",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCommentCountChange",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "callback",
              "type": "$w.OnCommentCountChangeCallback",
              "doc": "The callback function that runs when a comment is added or removed from the `WixComments` element." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 146,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when a comment is added or removed from the `WixComments` element.",
            "description":
              [ "The `onCommentCountChange()` function adds an event handler that runs when a comment is added or removed from the `WixComments` element." ],
            "links": [],
            "examples":
              [ { "title": "Add an event handler for counting comments in the comment widget",
                  "body":
                    [ "$w(\"#myCommentsWidget\").onCommentCountChange( (count) => {",
                      "  console.log(`Comments count: ${count}`);",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Add an event handler to display the comment count in a text element",
                  "body":
                    [ "$w(\"#myCommentsWidget\").onCommentCountChange((count) => {",
                      "  $w('#myText').text = `Total Comments: ${count}`;",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCommentCreate",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "callback",
              "type": "$w.OnCommentCreateCallback",
              "doc": "The callback function that is called when a new comment is created." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 113,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when a new comment is created in the `WixComments` element.",
            "description":
              [ "The `onCommentCreate()` function sets a callback function that is called when a new comment is created in the `WixComments` element." ],
            "links": [],
            "examples":
              [ { "title": "Add an event handler for when a new comment is created",
                  "body":
                    [ "$w(\"#myCommentsWidget\").onCreateComment((widgetComment) => { ",
                      "  console.log(widgetComment);",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "openNearestCommentBox",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "commentBoxOptions",
              "type": "$w.CommentBoxOptions",
              "doc": "Effect options for opening the comment box.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 53,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Opens the comment box closest to the element that called the function.",
            "description":
              [ "The `openNearestCommentBox()` function opens the comment box that is closest to the element that called the function.",
                "",
                "A comment box is the the input area where visitors can write a comment.",
                "",
                "There can be up to two comment boxes on the `WixComments` element. They are displayed at the top and bottom of the element." ],
            "links":
              [ "[closeCommentBoxes()](#closeCommentBoxes)" ],
            "examples":
              [ { "title": "Open a comment box with no options",
                  "body":
                    [ "$w(\"#myCommentsWidget\").openNearestCommentBox();" ],
                  "extra":
                    {  } },
                { "title": "Open a comment box with options",
                  "body":
                    [ "const commentBoxOptions = {",
                      "  focus: true,",
                      "  scroll: false",
                      "};",
                      "",
                      "$w(\"#myCommentsWidget\").openNearestCommentBox(commentBoxOptions);" ],
                  "extra":
                    {  } },
                { "title": "Open a comment box with an button click event",
                  "body":
                    [ "$w(\"#myButton\").onClick( () => {",
                      "  $w(\"#myCommentsWidget\").openNearestCommentBox();",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setResourceId",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "resourceId",
              "type": "string",
              "doc": "The unique resource ID for the new comment thread." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 98,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Retrieves a comment thread with a unique resource ID, or creates one if it doesn't exist.",
            "description":
              [ "The `setResourceId()` function replaces the comments thread in the `WixComments` element with a different comment thread. You can create new comment threads and transition between threads by calling the function. ",
                "",
                "Each comment thread is referenced by a unique resource ID that is arbitrarily chosen when the function is first called on that thread." ],
            "links": [],
            "examples":
              [ { "title": "Set a comment thread resource ID",
                  "body":
                    [ "$w(\"#myCommentsWidget\").setResourceId(\"thread-2\");" ],
                  "extra":
                    {  } },
                { "title": "Navigate between comment threads using button clicks",
                  "body":
                    [ "// Set the resourceId to an image on the page.",
                      "$w(\"#myButton2\").onClick(() => {",
                      "  $w(\"#myCommentsWidget\").setResourceId(\"sunsetImage\");",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "unlock",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 40,
              "filename": "WixComments.js" } ],
        "docs":
          { "summary": "Unlocks the `WixComments` element.",
            "description":
              [ "The `unlock()` function unlocks the `WixComments` element, restoring comment functionality. It sets the [`locked`](#locked) property to `false`." ],
            "links":
              [ "[locked](#locked)",
                "[lock( )](#lock)" ],
            "examples":
              [ { "title": "Unlock the comments widget",
                  "body":
                    [ "$w(\"myCommentsWidget\").unlock();" ],
                  "extra":
                    {  } },
                { "title": "Toggle an element's locked state",
                  "body":
                    [ "if ($w(\"#myCommentsWidget\").locked) {",
                      "  $w(\"#myCommentsWidget\").unlock();",
                      "  } else {",
                      "    $w(\"#myCommentsWidget\").lock();",
                      "  }" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }