{ "name": "UploadButton",
  "memberOf": "$w",
  "mixes":
    [ "$w.FormElement",
      "$w.HiddenCollapsedMixin",
      "$w.DisabledMixin",
      "$w.FocusMixin",
      "$w.StyleMixin",
      "$w.RequiredMixin" ],
  "labels": [],
  "location":
    { "lineno": 58,
      "filename": "UploadButton.es6" },
  "docs":
    { "summary": "An upload button enables site visitors to upload files to your site.",
      "description":
        [ "<h3 id=\"typical-scenario\">Typical File Upload Scenario</h3>",
          "",
          " In a typical scenario, the page from which files are uploaded contains",
          " an upload button and another element, such as a regular button. The site visitor chooses",
          " which file to upload by clicking the upload button and selecting the",
          " file in a native file chooser dialog. At that point the file is stored in",
          " the upload button's [`value`](#value) property as a [`File`](#File) object. Then",
          " the site visitor triggers an event, such as a button click, on the other element.",
          " That element's event handler calls the [`startUpload()`](#startUpload)",
          " function to perform the actual upload. The upload either succeeds and",
          " gives you an [`UploadedFile`](#UploadedFile) object, or fails and gives you",
          " an [`UploadError`](#UploadError) object." ],
      "links": [],
      "examples":
        [ { "title": "Typical file upload scenario",
            "body":
              [ "$w(\"#myUploadButton\").fileType = \"Image\"; // site visitor can choose an image",
                "$w('#myButton').onClick( () => {",
                "  if ($w(\"#myUploadButton\").value.length > 0) {  // site visitor chose a file",
                "    console.log(\"Uploading \" + $w(\"#myUploadButton\").value[0].name);",
                "    $w(\"#myUploadButton\").startUpload()",
                "      .then( (uploadedFile) => {",
                "        console.log(\"Upload successful. File is available here:\");",
                "        console.log(uploadedFile.url);",
                "      } )",
                "      .catch( (uploadError) => {",
                "        console.log(\"File upload error: \" + uploadError.errorCode);",
                "        console.log(uploadError.errorDescription);",
                "      } );",
                "  }",
                "  else {  // site visitor clicked button but didn't choose a file",
                "    console.log(\"Please choose a file to upload.\")",
                "  }",
                "} );",
                "" ],
            "extra":
              { "description": "This example uploads a file when the site visitor clicks on a button. First it sets \n the type of file a site visitor can choose. Then the example\n checks to see if the site visitor has chosen a file. If a file was chosen, it\n triggers the upload and logs the status of the upload when it completes\n successfully or with an error." } } ],
      "extra":
        {  } },
  "properties":
    [ { "name": "buttonLabel",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 96,
              "filename": "UploadButton.es6" },
            { "lineno": 118,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "Sets or gets the label on the upload button.",
            "links": [],
            "examples":
              [ { "title": "Get an upload button's label",
                  "body":
                    [ "let label = $w(\"#myUploadButton\").buttonLabel;  // \"Choose File\"" ],
                  "extra":
                    {  } },
                { "title": "Set an upload button's label",
                  "body":
                    [ "$w(\"#myUploadButton\").buttonLabel = \"Choose File\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "fileType",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 140,
              "filename": "UploadButton.es6" },
            { "lineno": 171,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "Sets or gets the type of file that a site visitor can upload.",
            "description":
              [ "Setting the `fileType` property sets the type of file that",
                " a site visitor can upload. The value of `fileType` can be set to ",
                " `\"Image\"`, `\"Document\"`, `\"Video\"`, or `\"Audio\"`.",
                "",
                " Getting the `fileType` property returns the current type of",
                " file that a site visitor can upload.",
                "",
                " The file types that can be uploaded are",
                " listed [here](https://support.wix.com/en/article/supported-media-file-types-and-file-sizes)." ],
            "links": [],
            "examples":
              [ { "title": "Get an upload button's type",
                  "body":
                    [ "let fileType = $w(\"#myUploadButton\").fileType;" ],
                  "extra":
                    {  } },
                { "title": "Set an upload button's type",
                  "body":
                    [ "$w(\"#myUploadButton\").fileType = \"Document\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "style",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.Style",
        "locations":
          [ { "lineno": 359,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "Gets an object containing information about the upload button's styles.",
            "description":
              [ "The following styles can be used with upload buttons:",
                "",
                " + [`backgroundColor`]($w.Style.html#backgroundColor)",
                " + [`borderColor`]($w.Style.html#borderColor)",
                " + [`borderRadius`]($w.Style.html#borderRadius)",
                " + [`borderWidth`]($w.Style.html#borderWidth)",
                " + [`color`]($w.Style.html#color)",
                "",
                "",
                " Getting or setting an upload button's styles, gets or sets the styles of the",
                " upload button's regular state. It does not set the styles of the upload button's hover,",
                " focus, error, or disabled states." ],
            "links": [],
            "examples":
              [ { "title": "Set the background color",
                  "body":
                    [ "$w(\"#myElement\").style.backgroundColor = \"rgba(255,0,0,0.5)\";" ],
                  "extra":
                    {  } },
                { "title": "Get the background color",
                  "body":
                    [ "let bgColor = $w(\"#myElement\").style.backgroundColor;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "value",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.UploadButton.File" ] },
        "locations":
          [ { "lineno": 197,
              "filename": "UploadButton.es6" },
            { "lineno": 229,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "Returns a list of files that are pending upload.",
            "description":
              [ "Returns a list of [File](#File) objects that a site visitor has selected to",
                " upload after pressing the upload button.",
                "",
                " See how `value` is used in a",
                " [typical file upload scenario](#typical-scenario)." ],
            "links": [],
            "examples":
              [ { "title": "Get the files pending upload",
                  "body":
                    [ "let files = $w(\"#myUploadButton\").value;",
                      "let fileName = files[0].name; // \"mypic.jpg\"",
                      "let fileSize = files[0].size; // 45941" ],
                  "extra":
                    {  } },
                { "title": "Full file upload scenario",
                  "body":
                    [ "$w(\"#myUploadButton\").fileType = \"Image\"; // site visitor can choose an image",
                      "$w('#myButton').onClick( () => {",
                      "  if ($w(\"#myUploadButton\").value.length > 0) {  // site visitor chose a file",
                      "    console.log(\"Uploading \" + $w(\"#myUploadButton\").value[0].name);",
                      "    $w(\"#myUploadButton\").startUpload()",
                      "      .then( (uploadedFile) => {",
                      "        console.log(\"Upload successful. File is available here:\");",
                      "        console.log(uploadedFile.url);",
                      "      } )",
                      "      .catch( (uploadError) => {",
                      "        console.log(\"File upload error: \" + uploadError.errorCode);",
                      "        console.log(uploadError.errorDescription);",
                      "      } );",
                      "  }",
                      "  else {  // site visitor clicked button but didn't choose a file",
                      "    console.log(\"Please choose a file to upload.\")",
                      "  }",
                      "} );",
                      "" ],
                  "extra":
                    { "description": "This example uploads a file when the site visitor clicks on a button. First it sets \n the type of file a site visitor can choose. Then the example\n checks to see if the site visitor has chosen a file. If a file was chosen, it\n triggers the upload and logs the status of the upload when it completes\n successfully or with an error." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "reset",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 331,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "Clears the files that are pending upload.",
            "description":
              [ "The `value` of the upload button contains a list of files that have been",
                " selected to upload. The `reset()` function clears these files." ],
            "links": [],
            "examples":
              [ { "title": "Clears the files pending upload",
                  "body":
                    [ "$w(\"#myUploadButton\").reset();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "startUpload",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "$w.UploadButton.UploadedFile" ] },
            "doc": "Fulfilled - Resolves when the file upload is completed.\nRejected - Rejects if the file upload fails." },
        "locations":
          [ { "lineno": 243,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "Uploads the files that the site visitor has chosen.",
            "description":
              [ "The `startUpload()` function triggers the upload of the files in the",
                " upload button's [value](#value) property.",
                "",
                " See how `startUpload()` is used in a",
                " [typical file upload scenario](#typical-scenario).",
                "",
                " The upload button does not accept files that are larger than 25MB." ],
            "links": [],
            "examples":
              [ { "title": "Start a file upload",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription; // \"Error description\"",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Full file upload scenario",
                  "body":
                    [ "$w(\"#myUploadButton\").fileType = \"Image\"; // site visitor can choose an image",
                      "$w('#myButton').onClick( () => {",
                      "  if ($w(\"#myUploadButton\").value.length > 0) {  // site visitor chose a file",
                      "    console.log(\"Uploading \" + $w(\"#myUploadButton\").value[0].name);",
                      "    $w(\"#myUploadButton\").startUpload()",
                      "      .then( (uploadedFile) => {",
                      "        console.log(\"Upload successful. File is available here:\");",
                      "        console.log(uploadedFile.url);",
                      "      } )",
                      "      .catch( (uploadError) => {",
                      "        console.log(\"File upload error: \" + uploadError.errorCode);",
                      "        console.log(uploadError.errorDescription);",
                      "      } );",
                      "  }",
                      "  else {  // site visitor clicked button but didn't choose a file",
                      "    console.log(\"Please choose a file to upload.\")",
                      "  }",
                      "} );",
                      "" ],
                  "extra":
                    { "description": "This example uploads a file when the site visitor clicks on a button. First it sets \n the type of file a site visitor can choose. Then the example\n checks to see if the site visitor has chosen a file. If a file was chosen, it\n triggers the upload and logs the status of the upload when it completes\n successfully or with an error." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "File",
        "locations":
          [ { "lineno": 23,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "The object used by the `value` property that represents\n files ready for upload.",
            "links":
              [ "[value](#value)" ],
            "examples":
              [ { "title": "Get the files pending upload",
                  "body":
                    [ "let files = $w(\"#myUploadButton\").value;",
                      "let fileName = files[0].name; // \"mypic.jpg\"",
                      "let fileSize = files[0].size; // 45941" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "The file's name." },
            { "name": "size",
              "type": "string",
              "doc": "The file's size in bytes." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadError",
        "locations":
          [ { "lineno": 47,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise when an upload fails.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples":
              [ { "title": "Get upload error information",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription; // \"Error description\"",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "errorCode",
              "type": "string",
              "doc": "Numeric The error's code." },
            { "name": "errorDescription",
              "type": "string",
              "doc": "The error's description." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadedFile",
        "locations":
          [ { "lineno": 33,
              "filename": "UploadButton.es6" } ],
        "docs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise that contains the URL of the successfully uploaded file.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples":
              [ { "title": "Get uploaded file information",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription; // \"Error description\"",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "url",
              "type": "string",
              "doc": "The Wix URL of the uploaded file." },
            { "name": "mediaId",
              "type": "string",
              "doc": "The Wix media ID of the uploaded file." },
            { "name": "title",
              "type": "string",
              "doc": "The title of the uploaded file." },
            { "name": "width",
              "type": "number",
              "doc": "The width of an uploaded image or video file." },
            { "name": "height",
              "type": "number",
              "doc": "The height of an uploaded image or video file." },
            { "name": "duration",
              "type": "number",
              "doc": "The duration (in milliseconds) of an uploaded audio file." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true },
  "relatedContent":
    [ { "icon": "example",
        "text": "Animations Viewer",
        "url": "https://www.wix.com/code/home/forum/wix-tips-and-updates/example-wix-animations" } ],
  "FAQs":
    [ { "title": "What types of files can site visitors upload with an upload button?",
        "markdown": "You can set your upload button to upload images, documents, videos, or audio files using the [`fileType`](https://www.wix.com/code/reference/$w.UploadButton.html#fileType) property. The file types of the images, documents, videos and audio files that can be uploaded are listed [here](https://support.wix.com/en/article/supported-media-file-types-and-file-sizes)." },
      { "title": "How do I use an upload button on my site?",
        "markdown": "The typical file upload scenario is a two-part process. First your site visitor chooses the file to upload and then they trigger the actual upload. This usually requires at least two page elements, an upload button element and a regular button. \n\nThe site visitor chooses which file to upload by clicking the upload button and selecting the file in a native file chooser dialog. (The site visitor can only choose from the specified file type.) Then the site visitor clicks the regular button to trigger some code that performs the upload. [Learn more](https://support.wix.com/en/article/how-to-use-the-upload-button-with-code)." },
      { "title": "How do I get information about files that are pending an upload?",
        "markdown": "Use [`value`](https://www.wix.com/code/reference/$w.UploadButton.html#value) property to check the `name` and `size` of [`File`](https://www.wix.com/code/reference/$w.UploadButton.html#File) objects waiting to be uploaded. " } ] }