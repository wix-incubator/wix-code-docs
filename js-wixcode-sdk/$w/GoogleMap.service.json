{ "name": "GoogleMap",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "GoogleMap.js" },
  "docs":
    { "summary": "A [Google map element](https://www.wix.com/support/html5/article/adding-google-maps)\n that allows you to display a given location.",
      "description":
        [ "A [Google map element](https://www.wix.com/support/html5/article/adding-google-maps) that allows you to display a given location." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "accessibility",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.GoogleMap.Accessibility",
        "locations":
          [ { "lineno": 146,
              "filename": "GoogleMap.js" } ],
        "docs":
          { "summary": "Sets and gets the [Accessible Rich Internet Application (ARIA) attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes) and other accessibility properties for the element.",
            "description":
              [ "ARIA attributes are a set of properties that define ways to make web content and applications more accessible to people with disabilities. The properties provide additional information about the structure, behavior, and state of elements to assistive technologies such as screen readers, braille displays, and voice control software. ",
                "",
                "Set the accessibility properties to design your elements to be more inclusive and usable for visitors with visual, auditory, motor, and or cognitive disabilities. The accessibility object primarily affects how assistive technologies read and present site content. ARIA attributes themselves do not impact SEO, but other accessibility properties, such as `lang`, can influence content indexing and discoverability.",
                "",
                ">**Note:** Incorrect use of ARIA attributes can worsen accessibility for assistive technology users. Use carefully and test with assistive technologies. ",
                "",
                "Learn more about [ARIA attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA)." ],
            "links": [],
            "examples":
              [ { "title": "Set the accessibility properties of an element",
                  "body":
                    [ "$w('#myGoogleMap').accessibility.lang = 'en';" ],
                  "extra":
                    {  } },
                { "title": "Get the accessibility properties of an element",
                  "body":
                    [ "const myGoogleMapAccessibility = $w('#myGoogleMap').accessibility;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "customClassList",
        "labels":
          [ "new" ],
        "get": true,
        "set": false,
        "type": "$w.CustomClassList",
        "locations":
          [ { "lineno": 110,
              "filename": "GoogleMap.js" } ],
        "docs":
          { "summary": "A property that represents an element's custom CSS classes.",
            "description":
              [ "> This property is only available to Wix Studio users.",
                "",
                "You can use this property to manipulate the custom CSS classes of an element. For example, ",
                "you can add a custom class to an element or replace an existing class with a new custom class.",
                "",
                "",
                "Custom classes are those that you create on a site, not the predefined global classes",
                "that are provided for each element.  ",
                "",
                "",
                "Use the following methods to work with the element's custom CSS classes:",
                "+ [`add()`](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/add): Adds custom CSS classes to the class list of an element.",
                "+ [`contains()`](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/contains): Indicates whether the element's class list contains a specified custom CSS class.",
                "+ [`remove()`](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/remove): Removes custom CSS classes from an element's class list.",
                "+ [`replace()`](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/replace): Replaces a custom CSS class of an element with a different custom CSS class.",
                "+ [`toggle()`](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/toggle): Toggles an element's custom CSS class.",
                "+ [`values()`](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/values): Retrieves an array of strings listing an element's custom CSS classes.",
                "",
                "> **Note:** For more information, see [Styling Elements with CSS](https://www.wix.com/velo/reference/$w/styling-elements-with-css) ",
                "> and the [MDN CSS reference docs](https://developer.mozilla.org/en-US/docs/Learn/CSS)." ],
            "links":
              [ "$w.CustomClassList" ],
            "examples":
              [ { "title": "Gets a list of the classes of an element",
                  "body":
                    [ "$w(\"#myElement\").customClassList.values(); // [\"className1\", \"className2\"]" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "location",
        "labels": [],
        "get": true,
        "set": true,
        "type": "$w.GoogleMap.MapLocation",
        "locations":
          [ { "lineno": 29,
              "filename": "GoogleMap.js" },
            { "lineno": 36,
              "filename": "GoogleMap.js" } ],
        "docs":
          { "summary": "Sets or gets the location information of a map's marked location.",
            "description":
              [ "Setting the `location` property to a `MapLocation`",
                " object moves the map's marked location.",
                "",
                " Getting the `location` property returns the location",
                " information of the map's marked location." ],
            "links": [],
            "examples":
              [ { "title": "Get map location info",
                  "body":
                    [ "let myLocation = $w(\"#myGoogleMap\").location;",
                      "",
                      "let locationLatitude = myLocation.latitude;       // 37.77065",
                      "let locationLongitude = myLocation.longitude;     // -122.387301",
                      "let locationDescription = myLocation.description; // \"Wix Office\"" ],
                  "extra":
                    {  } },
                { "title": "Set map location info",
                  "body":
                    [ "$w(\"#myGoogleMap\").location = {",
                      "                                \"latitude\": 37.77065,",
                      "                                \"longitude\": -122.387301,",
                      "                                \"description\":\"Wix Office\"",
                      "                              };" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages":
    [ { "name": "Accessibility",
        "locations":
          [ { "lineno": 169,
              "filename": "GoogleMap.js" } ],
        "docs":
          { "summary": "An object containing attributes to make your Wix elements more accessible.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "lang",
              "type": "string",
              "doc": "Specifies the language of the element's content, enhancing pronunciation accuracy for screen readers and other assistive technologies. \n\nSetting the `lang` property improves multilingual support by ensuring that assistive technologies apply the correct linguistic rules and speech patterns. It also enables search engines to index the element's content accurately, resulting in better visibility and relevance in search results for better SEO optimization. \n\nThe `lang` property's value must be a 2-letter language code in [ISO 639-1 format](https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes). For example, `\"en\"` for english.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "MapLocation",
        "locations":
          [ { "lineno": 16,
              "filename": "GoogleMap.js" } ],
        "docs":
          { "summary": "An object used by the `location` property that\n contains the attributes of a marked map location.",
            "links":
              [ "[location](#location)" ],
            "examples":
              [ { "title": "Get map location info",
                  "body":
                    [ "let myLocation = $w(\"#myGoogleMap\").location;",
                      "",
                      "let locationLatitude = myLocation.latitude;       // 37.77065",
                      "let locationLongitude = myLocation.longitude;     // -122.387301",
                      "let locationDescription = myLocation.description; // \"Wix Office\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "latitude",
              "type": "number",
              "doc": "The latitude of the location. Must be between -90 and 90." },
            { "name": "longitude",
              "type": "number",
              "doc": "The longitude of the location. Must be between -180 and 180." },
            { "name": "description",
              "type": "string",
              "doc": "The description of the location.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true },
  "relatedGuides":
    [ { "path": "./googlemap/guides/CSS Classes.md" } ] }