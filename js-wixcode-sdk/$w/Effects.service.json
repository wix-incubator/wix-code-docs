{ "name": "Effects",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 50,
      "filename": "EffectsMixin.js" },
  "docs":
    { "summary": "Functionality for displaying the [effects](https://support.wix.com/en/article/editor-x-about-click-and-hover-interactions-beta#choosing-and-customizing-effects) defined for an element using Editor X.",
      "description":
        [ ">**Note:** This API can only be used in Editor X.",
          "",
          "Editor X allows you to create [effects](https://support.wix.com/en/article/editor-x-about-click-and-hover-interactions-beta#choosing-and-customizing-effects) that change the way elements are displayed on your site.",
          "The Effects API allows you to programatically display the effects defined for an element. ",
          "",
          "For example, with the API you can trigger an effect using anything happening on your site or in your code. ",
          "This means you can expand the set of effects [triggers](https://support.wix.com/en/article/editor-x-about-click-and-hover-interactions#how-do-interactions-work) provided in Editor X to suit your needs." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "activeEffects",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "string" ] },
        "locations":
          [ { "lineno": 184,
              "filename": "EffectsMixin.js" } ],
        "docs":
          { "summary": "Gets an element's currently applied effects.",
            "description":
              [ "This property contains the names of all of an element's currently applied effects.",
                "",
                ">**Note:**",
                ">This property can only be used in Editor X." ],
            "links": [],
            "examples":
              [ { "title": "Retrieve all of an element's applied effects",
                  "body":
                    [ "const effectList = $w('#myElement').effects.activeEffects; // ['Effect 1', 'Effect 2']" ],
                  "extra":
                    {  } },
                { "title": "Display a different effect for an element each time a button is clicked",
                  "body":
                    [ "$w('#myButton').onClick(() => {",
                      "  // Retrieve the currently displayed effect, if there is one, and a list of all the element's effects.",
                      "  const activeEffect = $w('#myElement').effects.activeEffects[0];",
                      "  const allEffects = $w('#myElement').effects.allEffects;",
                      "  // Find the index of the next effect to display.",
                      "  let newEffectIndex = allEffects.indexOf(activeEffect) + 1;",
                      "  // If the new index is greater than the total number of effects, reset it to 0.",
                      "  if (newEffectIndex > allEffects.length - 1) {",
                      "    newEffectIndex = 0;",
                      "  }",
                      "  // Remove the previous effect and display the new one.",
                      "  $w('#myElement').effects.removeAllEffects();",
                      "  $w('#myElement').effects.applyEffects([allEffects[newEffectIndex]]);",
                      "});" ],
                  "extra":
                    { "description": "This code example changes the effect displayed for an element each time a button is clicked. The code has 3 steps:\n1. Retrieve the currently displayed effect and a list of all the effects defined for the element.\n1. Find the index of the next effect to display in the `allEffects` property's array.\n1. Remove the currently displayed effect and apply the new one." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "allEffects",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "string" ] },
        "locations":
          [ { "lineno": 164,
              "filename": "EffectsMixin.js" } ],
        "docs":
          { "summary": "Gets all of the effects defined for an element.",
            "description":
              [ "This property contains the names of all the effects that were defined for an element using Editor X.",
                "",
                ">**Note:**",
                ">This property can only be used in Editor X." ],
            "links": [],
            "examples":
              [ { "title": "Retrieve all of the effects defined for an element",
                  "body":
                    [ "const effectList = $w('#myElement').effects.allEffects; // ['Effect 1', 'Effect 2']" ],
                  "extra":
                    {  } },
                { "title": "Display a different effect for an element each time a button is clicked",
                  "body":
                    [ "$w('#myButton').onClick(() => {",
                      "  // Retrieve the currently displayed effect, if there is one, and a list of all the element's effects.",
                      "  const activeEffect = $w('#myElement').effects.activeEffects[0];",
                      "  const allEffects = $w('#myElement').effects.allEffects;",
                      "  // Find the index of the next effect to display.",
                      "  let newEffectIndex = allEffects.indexOf(activeEffect) + 1;",
                      "  // If the new index is greater than the total number of effects, reset it to 0.",
                      "  if (newEffectIndex > allEffects.length - 1) {",
                      "    newEffectIndex = 0;",
                      "  }",
                      "  // Remove the previous effect and display the new one.",
                      "  $w('#myElement').effects.removeAllEffects();",
                      "  $w('#myElement').effects.applyEffects([allEffects[newEffectIndex]]);",
                      "});" ],
                  "extra":
                    { "description": "This code example changes the effect displayed for an element each time a button is clicked. The code has 3 steps:\n1. Retrieve the currently displayed effect and a list of all the effects defined for the element.\n1. Find the index of the next effect to display in the `allEffects` property's array.\n1. Remove the currently displayed effect and apply the new one." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "applyEffects",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "effects",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The names of the effects to apply. These are the names defined when creating the effects." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 66,
              "filename": "EffectsMixin.js" } ],
        "docs":
          { "summary": "Applies one or more of an element's effects.",
            "description":
              [ "This function applies effects that you previously defined for an element using Editor X, making the effects visible on your site.",
                "",
                "You can find the names of the effects defined for an element using the [`allEffects`](#allEffects) property.",
                "",
                "The Effects panel in Editor X has two sections, **Adjust** and **Design**, that allow you to adjust the appearance of an element or change its design characteristics.",
                "You can't simultaneously apply 2 effects that both change properties in the same section. ",
                "If you try to do this, only one of the effects is visible on your site. ",
                "You can, however, apply 1 effect that changes the **Adjust** properties and another effect that changes the **Design** properties simultaneously.",
                "",
                "For example, effects for text elements allow changes to these properties:",
                "",
                "![](/effects_UI.png \"Create Effect Panel\")",
                "",
                "If you create 2 effects that each change properties in the **Adjust** section and try to apply them together, only",
                "one is visible on your site. The same is true for 2 effects that change properties in the **Design** section.",
                "",
                ">**Note:** This function can only be used in Editor X." ],
            "links": [],
            "examples":
              [ { "title": "Apply one of an element's effects",
                  "body":
                    [ "$w('#myElement').effects.applyEffects(['My Effect']);" ],
                  "extra":
                    {  } },
                { "title": "Apply several of an element's effects",
                  "body":
                    [ "$w('#myElement').effects.applyEffects(['My Effect 1', 'My Effect 2']);" ],
                  "extra":
                    {  } },
                { "title": "Apply one of an element's effects when a button is double-clicked",
                  "body":
                    [ "$w('#myButton').onDblClick(() => {",
                      "  $w('#myElement').effects.applyEffects(['My Effect']);",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "removeAllEffects",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 146,
              "filename": "EffectsMixin.js" } ],
        "docs":
          { "summary": "Removes all of an element's applied effects.",
            "description":
              [ "This function removes all of an element's previously applied effects. Once you remove effects, they're unapplied from an element and no longer visible on your site.",
                "",
                ">**Note:**",
                ">This function can only be used in Editor X." ],
            "links": [],
            "examples":
              [ { "title": "Remove all of an element's applied effects",
                  "body":
                    [ "$w('#myElement').effects.removeAllEffects();" ],
                  "extra":
                    {  } },
                { "title": "Remove one applied effect on button click and all applied effects on double click",
                  "body":
                    [ "// Remove the most recently added effect on single click.",
                      "$w('#myButton').onClick(() => {",
                      "  const activeEffects = $w('#myElement').effects.activeEffects;",
                      "  if(activeEffects.length > 0){",
                      "    $w('#myElement').effects.removeEffects([activeEffects[activeEffects.length - 1]]);",
                      "  }",
                      "});",
                      "",
                      "// Remove all effects on double click",
                      "$w('#myButton').onDblClick(() => {",
                      "  $w('#myElement').effects.removeAllEffects();",
                      "});" ],
                  "extra":
                    { "description": "This example uses different event handlers to control element effects. \n\nThe code assigns 2 event handlers to the same button. When the button is clicked once, the specified element's \nmost recently applied effect is removed. When the button is double clicked, all the element's applied effects are removed." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "removeEffects",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "effects",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The names of the effects to remove. These are the names defined when creating the effects." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 95,
              "filename": "EffectsMixin.js" } ],
        "docs":
          { "summary": "Removes one or more of an element's effects.",
            "description":
              [ "This function removes an element's previously applied effects. ",
                "Once you remove an effect, it's unapplied from an element and is no longer visible on your site.",
                "",
                "You can find the names of the effects defined for an element using the [`allEffects`](#allEffects) property.",
                "",
                ">**Note:**",
                ">This function can only be used in Editor X." ],
            "links": [],
            "examples":
              [ { "title": "Remove one of an element's effects",
                  "body":
                    [ "$w('#myElement').effects.removeEffects(['My Effect']);" ],
                  "extra":
                    {  } },
                { "title": "Remove several of an element's effects",
                  "body":
                    [ "$w('#myElement').effects.removeEffects(['My Effect 1', 'My Effect 2']);" ],
                  "extra":
                    {  } },
                { "title": "Remove an element's effect when a button is double-clicked",
                  "body":
                    [ "$w('#myButton').onDblClick(() => {",
                      "    $w('#myElement').effects.removeEffects(['My Effect']);",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "toggleEffects",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "effects",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The names of the effects to toggle. These are the names defined when creating the effects." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 114,
              "filename": "EffectsMixin.js" } ],
        "docs":
          { "summary": "Toggles the state of one or more of an element's effects.",
            "description":
              [ "This function toggles the state of the effects specified in the function call.",
                "This means that if an effect included in the call was previously applied, it's removed and is no longer visible on your site. If",
                "an effect included in the call wasn't previously applied, it's applied when you call the function and becomes visible on your site.",
                "",
                "You can find the names of the effects defined for an element using the [`allEffects`](#allEffects) property.",
                "",
                "The Effects panel in Editor X has two sections, **Adjust** and **Design**, that allow you to adjust the appearance of an element or change its design characteristics.",
                "You can't simultaneously apply 2 effects that both change properties in the same section. ",
                "If you try to do this, only one of the effects is visible on your site. ",
                "You can, however, apply 1 effect that changes the **Adjust** properties and another effect that changes the **Design** properties simultaneously.",
                "",
                "For example, effects for text elements allow changes to these properties:",
                "",
                "![](/effects_UI.png \"Create Effect Panel\")",
                "",
                "If you create 2 effects that each change properties in the **Adjust** section and try to apply them together, only",
                "one is visible on your site. The same is true for 2 effects that change properties in the **Design** section.",
                "",
                ">**Note:**",
                ">This function can only be used in Editor X." ],
            "links": [],
            "examples":
              [ { "title": "Toggle one of an element's effects",
                  "body":
                    [ "$w('#myElement').effects.toggleEffects(['My Effect']);" ],
                  "extra":
                    {  } },
                { "title": "Toggle several of an element's effects",
                  "body":
                    [ "$w('#myElement').effects.toggleEffects(['My Effect 1', 'My Effect 2']);" ],
                  "extra":
                    {  } },
                { "title": "Toggle an element's effect every 3 seconds",
                  "body":
                    [ "$w.onReady(() => {",
                      "  // ...",
                      "  setInterval(() => {",
                      "    $w('#myElement').effects.toggleEffects(['My Effect']);",
                      "  }, 3000);",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }