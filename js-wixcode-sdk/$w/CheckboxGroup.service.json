{ "name": "CheckboxGroup",
  "memberOf": "$w",
  "mixes":
    [ "$w.FormElement",
      "$w.HiddenCollapsedMixin",
      "$w.DisabledMixin",
      "$w.FocusMixin",
      "$w.ClickableMixin",
      "$w.StyleMixin",
      "$w.RequiredMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 26,
      "filename": "CheckboxGroup.es6" },
  "docs":
    { "summary": "Checkbox groups are used for selecting any number of the given\n options.",
      "description":
        [ "Checkbox groups consist of a list of [options](#Option). Each",
          " [option](#Option) contains a label, which is what the user sees, and a",
          " value, which is what is used in code and stored in your collections." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "options",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.CheckboxGroup.Option" ] },
        "defaultValue": "An empty array",
        "locations":
          [ { "lineno": 58,
              "filename": "CheckboxGroup.es6" },
            { "lineno": 92,
              "filename": "CheckboxGroup.es6" } ],
        "docs":
          { "summary": "Sets or gets the options of a checkbox group.",
            "description":
              [ "Setting the `options` property sets all the [options](#Option)",
                " available to a user.",
                "",
                " Getting the `options` property returns the current",
                " list of [options](#Option) available to a user.",
                "",
                " You cannot modify the data array in-place. To add, change, or remove",
                " individual checkbox options:",
                "",
                "   1. Store the value of the `options` property in a variable.",
                "   1. Make changes to the options array.",
                "   1. Reset the `options` property with the modified array." ],
            "links": [],
            "examples":
              [ { "title": "Get the list of options and the first option's label and value from a checkbox group",
                  "body":
                    [ "let checkboxGroupOptions = $w(\"#myCheckboxGroup\").options;",
                      "",
                      "let firstLabel = checkboxGroupOptions[0].label;   // \"First Label\"",
                      "let firstValue = checkboxGroupOptions[0].value;   // \"first_value\"" ],
                  "extra":
                    {  } },
                { "title": "Set the list of options for a checkbox group",
                  "body":
                    [ "$w(\"#myCheckboxGroup\").options = [",
                      "  {\"label\": \"Who's on first!\", \"value\": \"first\"},",
                      "  {\"label\": \"What's on second\", \"value\": \"second\"},",
                      "  {\"label\": \"I Don't Know is on third\", \"value\": \"third\"}",
                      "];" ],
                  "extra":
                    {  } },
                { "title": "Add an option to a checkbox group",
                  "body":
                    [ "let opts = $w(\"#myCheckboxGroup\").options;",
                      "opts.push({\"label\": \"New Label\", \"value\": \"New Value\"});",
                      "$w(\"#myCheckboxGroup\").options = opts;",
                      "" ],
                  "extra":
                    { "description": "This example retrieves the options of a checkbox group, adds a new\n option, and then overwrites the old options." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "selectedIndices",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "number" ] },
        "locations":
          [ { "lineno": 211,
              "filename": "CheckboxGroup.es6" },
            { "lineno": 239,
              "filename": "CheckboxGroup.es6" } ],
        "docs":
          { "summary": "Sets or gets the indices of the selected options.",
            "description":
              [ "Setting the `selectedIndices` property sets the options at",
                " each specified index to be a selected option.",
                "",
                " To reset the checkbox group to have no option",
                " selected, set the `selectedIndices` property to an empty array, null, or `undefined`.",
                "",
                " Getting the `selectedIndices` property returns an array of the indices of",
                " all selected options. If no value is selected, the `selectedIndices`",
                " property returns an empty array." ],
            "links": [],
            "examples":
              [ { "title": "Get the indices of the selected options",
                  "body":
                    [ "let selectedIndices = $w(\"#myCheckboxGroup\").selectedIndices; // [0,2]" ],
                  "extra":
                    {  } },
                { "title": "Select the selected options by indices",
                  "body":
                    [ "$w(\"#myCheckboxGroup\").selectedIndices = [0,2];" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "style",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.Style",
        "locations":
          [ { "lineno": 288,
              "filename": "CheckboxGroup.es6" } ],
        "docs":
          { "summary": "Gets an object containing information about the checkbox group's styles.",
            "description":
              [ "The following styles can be used with a checkbox group:",
                "",
                " + [`backgroundColor`]($w.Style.html#backgroundColor)",
                " + [`borderColor`]($w.Style.html#borderColor)",
                " + [`color`]($w.Style.html#color)",
                "",
                "",
                "",
                "",
                " Getting or setting a checkbox group's styles, gets or sets the styles of the",
                " checkbox group's regular state. It does not set the styles of the checkbox group's hover,",
                " focus, error, or disabled states." ],
            "links": [],
            "examples":
              [ { "title": "Set the background color",
                  "body":
                    [ "$w(\"#myElement\").style.backgroundColor = \"rgba(255,0,0,0.5)\";" ],
                  "extra":
                    {  } },
                { "title": "Get the background color",
                  "body":
                    [ "let bgColor = $w(\"#myElement\").style.backgroundColor;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "value",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "string" ] },
        "locations":
          [ { "lineno": 143,
              "filename": "CheckboxGroup.es6" },
            { "lineno": 173,
              "filename": "CheckboxGroup.es6" } ],
        "docs":
          { "summary": "Sets or gets the value of the selected options.",
            "description":
              [ "Setting the `value` property sets the [`options`](#Option)",
                " with those values to be the selected options. You must set the `value`",
                " property to values that exist in the [`options`](#options) list.",
                "",
                " To reset the checkbox group to have no options",
                " selected, set the `value` property to an empty array, `null` or `undefined`.",
                "",
                " Getting the `value` property returns the values of",
                " the currently selected options. If no value is selected, the",
                " `value` property returns an empty array." ],
            "links": [],
            "examples":
              [ { "title": "Get the values of the selected options",
                  "body":
                    [ "let myValue = $w(\"#myCheckboxGroup\").value;  // [\"value1\", \"value2\"]" ],
                  "extra":
                    {  } },
                { "title": "Set the selected options by values",
                  "body":
                    [ "$w(\"#myCheckboxGroup\").value = [\"value1\", \"value2\"];" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "Changing a checkbox group's `value` in code does not trigger an `onChange` event." ] } } ],
  "operations": [],
  "callbacks": [],
  "messages":
    [ { "name": "Option",
        "locations":
          [ { "lineno": 49,
              "filename": "CheckboxGroup.es6" } ],
        "docs":
          { "summary": "An object used by the `options` property that contains the attributes of checkbox item.",
            "links":
              [ "[options](#options)",
                "[value](#value)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "value",
              "type": "string",
              "doc": "The value of the checkbox option. This is what you use in code and is what is stored in your collections." },
            { "name": "label",
              "type": "string",
              "doc": "The label of the checkbox option. This is what a user sees.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true } }