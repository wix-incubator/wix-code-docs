{ "name": "CustomClassList",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "CustomClassList.js" },
  "docs":
    { "summary": "Provides functionality for manipulating custom CSS classes.",
      "description":
        [ "> This property is only available to Wix Studio users.",
          "",
          "CustomClassList provides functionality for manipulating an element's custom CSS classes. For example, ",
          "you can add a custom class to an element or replace an existing class with a new custom class.",
          "",
          "Custom classes are those that you define for a site, not the predefined global classes",
          "that are provided for each element.  ",
          "",
          "You define custom CSS classes in the `global.css` file which can be accessed in the Page Code section of the editor.",
          "",
          "With CustomClassList, you can use code to:",
          "+ [Add](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/add), [remove](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/remove), [replace](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/replace), or [toggle](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/toggle) custom classes.",
          "+ [Retrieve](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/values) a list of an element's CSS classes.",
          "+ Check if an element's class list [contains](https://dev.wix.com/docs/velo/velo-only-apis/$w/custom-class-list/contains) a specific custom CSS class.",
          "",
          "> **Note:** CustomClassList only affects custom classes. If you use it for global classes, there is no effect on the element.  ",
          "",
          "## See also",
          "+ [About CSS Styling](https://dev.wix.com/docs/develop-websites/articles/coding-with-velo/frontend-code/custom-css/about-css-styling)",
          "+ [Styling Elements with CSS](https://dev.wix.com/docs/velo/velo-only-apis/$w/styling-elements-with-css)",
          "+ [About CSS Styling](https://www.youtube.com/watch?v=xynm4m83CqM)" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "add",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "The names of the custom classes to add to an element.",
              "spread": true } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 50,
              "filename": "CustomClassList.js" } ],
        "docs":
          { "summary": "Adds custom CSS classes to an element's class list.",
            "description":
              [ "Adds one or more custom CSS classes to the class list of an element." ],
            "links": [],
            "examples":
              [ { "title": "Add a single class to an element",
                  "body":
                    [ "$w(\"#myElement\").customClassList.add(\"className1\");" ],
                  "extra":
                    {  } },
                { "title": "Add multiple classes to an element",
                  "body":
                    [ "$w(\"#myElement\").customClassList.add(\"className1\", \"className2\");" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "contains",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "Custom class to check." } ],
        "ret":
          { "type": "boolean" },
        "locations":
          [ { "lineno": 82,
              "filename": "CustomClassList.js" } ],
        "docs":
          { "summary": "Indicates whether the element's class list contains a specified custom CSS class.",
            "description":
              [ "Indicates whether the element's class list contains a specified custom CSS class. ",
                "Returns `true` if the element contains the class." ],
            "links": [],
            "examples":
              [ { "title": "Indicate whether an element contains a specified class",
                  "body":
                    [ "$w(\"#myElement\").customClassList.contains(\"className1\"); //true" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "remove",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "The custom class to remove from the element's list of classes.",
              "spread": true } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 62,
              "filename": "CustomClassList.js" } ],
        "docs":
          { "summary": "Removes custom CSS classes from an element's class list.",
            "description":
              [ "Removes one or more custom CSS classes from an element's class list." ],
            "links": [],
            "examples":
              [ { "title": "Remove a single class from an element",
                  "body":
                    [ "$w(\"#myElement\").customClassList.remove(\"className1\");" ],
                  "extra":
                    {  } },
                { "title": "Remove multiple classes from an element",
                  "body":
                    [ "$w(\"#myElement\").customClassList.remove(\"className1\", \"className2\");" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "replace",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "currentClassName",
              "type": "string",
              "doc": "The custom class to replace." },
            { "name": "newClassName",
              "type": "string",
              "doc": "The new class to add." } ],
        "ret":
          { "type": "boolean" },
        "locations":
          [ { "lineno": 97,
              "filename": "CustomClassList.js" } ],
        "docs":
          { "summary": "Replaces a custom CSS class of an element with a different custom CSS class.",
            "description":
              [ "The `replace()` function replaces a custom CSS class of an element with a different custom class. ",
                "If the `currentClassName` is not one of the element's classes, the element's class list is not affected. ",
                "Returns `true` if the replacement is successful." ],
            "links": [],
            "examples":
              [ { "title": "Replace an existing class with a new class",
                  "body":
                    [ "$w(\"#myElement\").customClassList.replace(\"className1, className2\");" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "toggle",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "The custom class to toggle." } ],
        "ret":
          { "type": "boolean" },
        "locations":
          [ { "lineno": 111,
              "filename": "CustomClassList.js" } ],
        "docs":
          { "summary": "Toggles an element's custom CSS class.",
            "description":
              [ "The `toggle()` function either adds or removes an element's custom CSS class.",
                "- Returns `false` when an existing custom class gets removed from the element's class list.",
                "- Returns `true` when the custom class gets added to the element's class list." ],
            "links": [],
            "examples":
              [ { "title": "Toggle to add a missing class",
                  "body":
                    [ "$w(\"#myElement\").customClassList.toggle(\"className1\")  // true" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "values",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Array",
                "typeParams":
                  [ "string" ] } },
        "locations":
          [ { "lineno": 74,
              "filename": "CustomClassList.js" } ],
        "docs":
          { "summary": "Gets an array of strings listing an element's custom CSS classes.",
            "links": [],
            "examples":
              [ { "title": "Get the classes of an element",
                  "body":
                    [ "$w(\"#myElement\").customClassList.values(); // [\"className1\", \"className2\"]" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }