{ "name": "QuickActionBar",
  "memberOf": "$w",
  "mixes":
    [ "$w.HiddenCollapsedMixin",
      "$w.StyleMixin" ],
  "labels": [],
  "location":
    { "lineno": 10,
      "filename": "QuickActionBar.es6" },
  "docs":
    { "summary": "A [quick action bar](https://support.wix.com/en/article/adding-and-setting-up-the-quick-action-bar-on-your-mobile-site)\n helps your visitors contact you instantly from their mobile devices. You can\n choose which actions appear on it and customize the design to match your site.",
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "alignment",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 73,
              "filename": "QuickActionBar.es6" },
            { "lineno": 101,
              "filename": "QuickActionBar.es6" } ],
        "docs":
          { "summary": "Sets or gets a quick action bar's alignment.",
            "description":
              [ "Setting the `alignment` property to `\"right\"` shows the quick action bar on",
                " the right side of the user's device. Setting it to `\"left\"` shows it on the",
                " left side.",
                "",
                " Getting the `alignment` property returns whether the quick action bar is shown",
                " on the left or right side of the user's device." ],
            "links": [],
            "examples":
              [ { "title": "Set the quick action bar alignment",
                  "body":
                    [ "$w(\"#myQuickActionBar\").alignment = \"right\";" ],
                  "extra":
                    {  } },
                { "title": "Get the quick action bar alignment",
                  "body":
                    [ "let alignment = $w(\"#myQuickActionBar\").alignment;  // \"right\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "Only vertical quick action bar designs support the `alignment` property." ] } },
      { "name": "colorScheme",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 121,
              "filename": "QuickActionBar.es6" },
            { "lineno": 145,
              "filename": "QuickActionBar.es6" } ],
        "docs":
          { "summary": "Sets or gets a quick action bar's color scheme.",
            "description":
              [ "One of:",
                "",
                " + `\"grey\"`: Buttons are grey.",
                " + `\"black\"`: Buttons are black.",
                " + `\"brand\"`: Buttons are various colors." ],
            "links": [],
            "examples":
              [ { "title": "Set the color scheme",
                  "body":
                    [ "$w(\"#myQuickActionBar\").colorScheme = \"grey\";" ],
                  "extra":
                    {  } },
                { "title": "Get the color scheme",
                  "body":
                    [ "let colorScheme = $w(\"#myQuickActionBar\").colorScheme;  // \"grey\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "invertColorScheme",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 170,
              "filename": "QuickActionBar.es6" },
            { "lineno": 194,
              "filename": "QuickActionBar.es6" } ],
        "docs":
          { "summary": "Sets or gets whether a quick action bar's color scheme is inverted.",
            "description":
              [ "Setting the `invertColorScheme` property to `true` applies the quick action",
                " bar's colors to the bar's background. Setting it to `false` applies the colors",
                " to the bar's icons.",
                "",
                " Getting the `invertColorScheme` property returns whether the color scheme is",
                " inverted or not." ],
            "links": [],
            "examples":
              [ { "title": "Set whether the color scheme is inverted",
                  "body":
                    [ "$w(\"#myQuickActionBar\").invertColorScheme = true;" ],
                  "extra":
                    {  } },
                { "title": "Get whether the color scheme is inverted",
                  "body":
                    [ "let inverted = $w(\"#myQuickActionBar\").invertColorScheme;  // true" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "showLabels",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 30,
              "filename": "QuickActionBar.es6" },
            { "lineno": 53,
              "filename": "QuickActionBar.es6" } ],
        "docs":
          { "summary": "Sets or gets whether a quick action bar's labels are shown.",
            "description":
              [ "Setting the `showLabels` property to `true` shows labels along with the icons",
                " in the quick action bar. Setting it to `false` hides the labels.",
                "",
                " Getting the `showLabels` property returns whether the labels are shown or not." ],
            "links": [],
            "examples":
              [ { "title": "Set whether the labels are shown",
                  "body":
                    [ "$w(\"#myQuickActionBar\").showLabels = false;" ],
                  "extra":
                    {  } },
                { "title": "Get whether the labels are shown",
                  "body":
                    [ "let showLabels = $w(\"#myQuickActionBar\").showLabels;  // false" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onItemClicked",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.QuickActionBarItemClickedEventHandler",
              "doc": "The name of the\n function or the function expression to run when a quick action bar item is\n clicked." } ],
        "ret":
          { "type": "$w.QuickActionBar",
            "doc": "The quick action bar that triggered the event." },
        "locations":
          [ { "lineno": 221,
              "filename": "QuickActionBar.es6" } ],
        "docs":
          { "summary": "Adds an event handler that runs when an item in a quick action bar is\n clicked.",
            "links": [],
            "examples":
              [ { "title": "Get the information of the item that was clicked",
                  "body":
                    [ "$w(\"#myQuickActionBar\").onItemClicked( (event) => {",
                      "  let itemType = event.item.itemType; // \"search\"",
                      "  let itemLabel = event.item.label;   // \"Search\"",
                      "  let itemLink = event.item.link;     // \"https://www.google.com/search?q=wix\"",
                      "",
                      "  let imageSrc = event.itemIndex;     // 3",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "**Deprecation note:** The $w parameter of event handlers is being deprecated. To get\n a scoped selector for working with elements in repeater items, use the [$w.at()]($w.html#at) function\n and pass it the context property of the event parameter: `$item = $w.at(event.context)`. To learn more, see\n <a href=\"https://www.wix.com/code/home/forum/wix-tips-and-updates/removal-of-the-w-parameter-from-event-handlers\" target=\"_blank\">here</a>." ],
            "eventType": "itemClicked" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }