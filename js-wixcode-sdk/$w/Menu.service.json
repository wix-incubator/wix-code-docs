{ "name": "Menu",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "Menu.js" },
  "docs":
    { "summary": "Menus are used for navigating between site pages..",
      "description":
        [ "Menus help site visitors navigate from page to page on a site. For example: ",
          "",
          " ![Sample menu with submenu](images/menu.png \"Menu\")",
          "",
          " With Velo, you can customize menu items by changing their labels, links, ",
          " where the item opens, and if an item displays as selected. This includes using Velo ",
          " to modify site menus in real time during the visitor's stay on the site.",
          "",
          " The following table lists menu element types and if you can customize them with code.",
          "",
          "",
          " | Menu Type   | Current Velo support   | Submenu support |",
          " | :-------- | :------: | :------- |",
          " | Stylable horizontal menus     | Yes   | Up to 2 additional levels |",
          " | Vertical menus           | Yes   | Up to 1 additional level |",
          " | Drop-down menus          | Yes | Up to 1 additional level |",
          " | Mobile menus                 | No | NA |",
          " | Expandable menus             | No | NA |",
          " | TinyMenu (legacy) menus      | No | NA |",
          "",
          " Learn more about [adding a menu element](https://support.wix.com/en/article/wix-editor-adding-a-site-menu) to your site." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "menuItems",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.Menu.MenuItem" ] },
        "defaultValue": "An array of menu items defined using the Editor.",
        "locations":
          [ { "lineno": 83,
              "filename": "Menu.js" },
            { "lineno": 121,
              "filename": "Menu.js" } ],
        "docs":
          { "summary": "Sets or gets menu items.",
            "description":
              [ "Setting the `menuItems` property sets the items",
                " for a menu element.",
                "",
                " Setting `menuItems` to an empty array (`[]`) does not cause an error. The menu displays ",
                " as an empty box with no background.",
                "",
                " Getting the `menuItems` property returns a `menuItems` array of menu items that have been set using code. If no",
                " items have been set using code, the array defaults to the items defined using the Editor.",
                "",
                " Properties that don't have a value are omitted from the returned array.",
                "",
                " You can't modify the `menuItems` array in-place. To add, change, or remove",
                " individual menu items:",
                "",
                "   1. Store the value of the `menuItems` property in a variable.",
                "   1. Make changes to the variable's array of items.",
                "   1. Reset the `menuItems` property with the variable's modified array." ],
            "links": [],
            "examples":
              [ { "title": "Get menu items",
                  "body":
                    [ "let menuItems = $w('#myMenu').menuItems;",
                      "",
                      "/* Sample array of menu items: ",
                      " *",
                      " * [",
                      " *   {",
                      " *     \"link\": \"https://myairlines.com\",",
                      " *     \"target\": \"_self\",",
                      " *     \"label\": \"Home\",",
                      " *     \"selected\": true,",
                      " *     \"menuItems\": []",
                      " *   },",
                      " *   {",
                      " *     \"link\": \"https://myairlines.com/reservations\",",
                      " *     \"target\": \"_self\",",
                      " *     \"label\": \"Book a Flight\",",
                      " *     \"selected\": false,",
                      " *     \"menuItems\": []",
                      " *   },",
                      " *   {",
                      " *     \"link\": \"https://myairlines.com/frequentflier\",",
                      " *     \"target\": \"_self\",",
                      " *     \"label\": \"Mileage Program\",",
                      " *     \"selected\": false,",
                      " *     \"menuItems\": [",
                      " *       {",
                      " *         \"link\": \"https://myairlines.com//frequentflier/join\",",
                      " *         \"target\": \"_self\",",
                      " *         \"label\": \"Join\",",
                      " *         \"selected\": false,",
                      " *         \"menuItems\": []",
                      " *       },",
                      " *       {",
                      " *         \"link\": \"https://myairlines.com/frequentflier/check\",",
                      " *         \"target\": \"_self\",",
                      " *         \"label\": \"Check Miles\",",
                      " *         \"selected\": false,",
                      " *         \"menuItems\": []",
                      " *       }",
                      " *     ]",
                      " *   }",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set items for a horizontal menu",
                  "body":
                    [ "$w('#myHorizontalMenu').menuItems = [",
                      "  {label: 'Home', 'link': '/', 'selected': true},",
                      "  {label: 'For Rent', 'link': '/rentals'},",
                      "  {label: 'For Sale', 'link': '/purchases'},",
                      "  {label: 'Mortgage calculator', 'link': 'https://www.mortgagecalculator.org/', 'target': '_blank'},",
                      "  {label: 'About Us', 'link': '/about'}",
                      "];" ],
                  "extra":
                    {  } },
                { "title": "Set items for a vertical menu with a submenu",
                  "body":
                    [ "/************************************",
                      " * A vertical menu with a submenu   *",
                      " ************************************/ ",
                      "",
                      " $w('#myVerticalMenu').menuItems = [",
                      "  {label: 'Home', 'link': '/', 'selected': true},",
                      "  {label: 'For Rent', 'link': '/rentals', menuItems: [",
                      "    {'label': 'Long Term', 'link': '/rentals/long'},",
                      "    {'label': 'Short Term', 'link': '/rentals/short'}",
                      "  ]},",
                      "  {label: 'For Sale', 'link': '/purchases'},",
                      "  {label: 'Mortgage calculator', 'link': 'https://www.mortgagecalculator.org/', 'target': '_blank'},",
                      "  {label: 'About Us', 'link': '/about'}",
                      "];" ],
                  "extra":
                    {  } },
                { "title": "Set items for a menu that changes dynamically based on a visitor's role",
                  "body":
                    [ "import { currentMember } from 'wix-members';",
                      "",
                      "$w.onReady(function () {",
                      " ",
                      "  currentMember.getRoles()",
                      "    .then( (roles) => {",
                      "      const foundRole = roles.some(el => el.title === 'Realtor');",
                      "      if (foundRole) {",
                      "        $w(\"#horizontalMenu1\").menuItems = [",
                      "         {label: 'Home', link: '/', selected: false},",
                      "         {label: 'For Rent', link: '/rentals'},",
                      "         {label: 'For Sale', link: '/purchases'},",
                      "         {label: 'Realtors Only!', link: '/realtors'}  // added option based on role",
                      "      ]",
                      "    } else {",
                      "        $w(\"#horizontalMenu1\").menuItems = [",
                      "          {label: 'Home', link: '/', selected: false},",
                      "          {label: 'For Rent', link: '/rentals'},",
                      "          {label: 'For Sale', link: '/purchases'}",
                      "        ]",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "})" ],
                  "extra":
                    { "description": "This example assumes that roles have been defined for the site and checks the visitor's role. If the visitor is a realtor, the visitor\n sees an additional menu item for a hidden \"For Realtors Only\" page." } },
                { "title": "Add a new menu item to an existing menu",
                  "body":
                    [ "let items = $w('#myMenu').menuItems;",
                      "items.push({'label': 'My New Label', 'link': '/mynewlink'});",
                      "$w('#myMenu').menuitems = items;" ],
                  "extra":
                    { "description": "This example retrieves the menu items, adds a new\n item, and then overwrites the old items." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onItemClick",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is clicked." } ],
        "ret":
          { "type": "$w.Menu",
            "doc": "The menu on which the event is now registered." },
        "locations":
          [ { "lineno": 50,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Sets the function that runs when the mouse pointer is clicked\n on a menu item in a menu element.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that the mouse clicked",
                  "body":
                    [ "$w(\"#myMenuItem\").onItemMouseClick( (event) => {",
                      "  let label = event.item.label;  // \"Home\"",
                      "  let value = event.item.value;  // \"https://myairlines.com/\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseClick" } },
      { "name": "onItemDblClick",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is double clicked." } ],
        "ret":
          { "type": "$w.Menu",
            "doc": "The menu on which the event is now registered." },
        "locations":
          [ { "lineno": 63,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Sets the function that runs when the mouse pointer double clicked\n on a menu item in a menu element.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that the mouse double clicked",
                  "body":
                    [ "$w(\"#myMenuItem\").onItemMouseDblClick( (event) => {",
                      "  let label = event.item.label;  // \"Book a Flight\"",
                      "  let value = event.item.value;  // \"https://myairlines.com/reservations\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseDblClick" } },
      { "name": "onItemMouseIn",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is hovered over." } ],
        "ret":
          { "type": "$w.Menu",
            "doc": "The menu on which the event is now registered." },
        "locations":
          [ { "lineno": 18,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Sets the function that runs when a user's mouse hovers over a menu item in a menu element.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that the mouse hovered over",
                  "body":
                    [ "$w(\"#myMenuItem\").onItemMouseIn( (event) => {",
                      "  let label = event.item.label;  // \"Mileage Program\"",
                      "  let value = event.item.value;  // \"https://myairlines.com/frequentflier\"",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Show/hide text if hovering over a menu item",
                  "body":
                    [ "$w(\"#myMenu\").onItemMouseIn(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').show();   // \"You are about to leave the Wix site\"",
                      "  }",
                      "});",
                      "",
                      "$w(\"#myMenu\").onItemMouseOut(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').hide();",
                      "  }",
                      "});" ],
                  "extra":
                    { "description": "This example demonstrates how to show a message if the mouse hovers over a menu \n item that links to an external site." } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseIn" } },
      { "name": "onItemMouseOut",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is not hovered over." } ],
        "ret":
          { "type": "$w.Menu",
            "doc": "The menu on which the event is now registered." },
        "locations":
          [ { "lineno": 34,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Sets the function that runs when the mouse pointer is moved\n off of a menu item in a menu element.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that the mouse no longer hovers over",
                  "body":
                    [ "$w(\"#myMenuItem\").onItemMouseOut( (event) => {",
                      "  let label = event.item.label;  // \"Mileage Program\"",
                      "  let value = event.item.value;  // \"https://myairlines.com/frequentflier\"",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Show/hide text if hovering over a menu item",
                  "body":
                    [ "$w(\"#myMenu\").onItemMouseIn(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').show();   // \"You are about to leave the Wix site\"",
                      "  }",
                      "});",
                      "",
                      "$w(\"#myMenu\").onItemMouseOut(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').hide();",
                      "  }",
                      "});" ],
                  "extra":
                    { "description": "This example demonstrates how to hide a message if the mouse no longer hovers over a menu \n item that links to an external site." } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseOut" } } ],
  "callbacks": [],
  "messages":
    [ { "name": "MenuItem",
        "locations":
          [ { "lineno": 35,
              "filename": "Menu.js" } ],
        "docs":
          { "summary": "An object that contains the attributes of a menu item.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "label",
              "type": "string",
              "doc": "The label of the menu item. This is text that the site visitor sees in the menu and can click to navigate. \n  \n  If not specified, the `label` gets its value from the `link` property, if the link is to a site page. \n  \n  Specifying an empty sting is not supported. In this case, the menu defaults to the menu items as defined in the Editor.\n\n  Minimum: 1 character\n\n  Maximum: 40 characters\n\n  Default: Inferred from the `link` property.",
              "optional": true },
            { "name": "selected",
              "type": "boolean",
              "doc": "Setting `selected` to `true` for a menu item causes the item to appear highlighted in the menu element. \n You can use this property to indicate which page is currently being displayed. \n When not defined explicitly, the value is derived from the currently active page in the menu.\n \n>**Note:** The value of `selected` isn't validated against which page is actually displayed. For example, you can write code that misleadingly sets `selected` to `true` for multiple menu items. Avoid this practice.  \n  \n Default: `false`",
              "optional": true },
            { "name": "link",
              "type": "string",
              "doc": "Optional link for the menu item. This is the link the site visitor navigates to when they click on a menu item. \n + For site pages, format as a URL relative to your site's home page, such as `/about` or `rentals/shortterm`.\n + For external pages, format as an absolute URL, such as `https://www.mortgagecalculator.org/`.\n \n If `link` isn't specified, the corresponding label isn't clickable. \n \n Specifying an empty sting is not supported. In this case, the menu defaults to the menu items as defined in the Editor.\n\n  Minimum: 1 character\n\n  Maximum: 40 characters",
              "optional": true },
            { "name": "target",
              "type": "string",
              "doc": "Whether the page opens in the same or in a new window/tab.\n + `_self`. The page opens in the same window/tab.\n + `_blank`. The page opens in a new window/tab.\n \n > **Note:** `target` doesn't work when previewing your site.\n\n\n Default: `_self`",
              "optional": true },
            { "name": "menuItems",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "$w.Menu.MenuItem" ] },
              "doc": "Optional submenu items. Top-level vertical and drop-down menu items can have \n 1 additional level of submenus. Stylable horizontal menu items can have up to 2 additional levels of submenus.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] } ],
  "extra":
    { "queryable": true } }