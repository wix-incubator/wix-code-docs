{ "name": "Menu",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "Menu.js" },
  "docs":
    { "summary": "Menus are used for navigating between site pages.",
      "description":
        [ "Menus help site visitors navigate from page to page on a site. For example: ",
          "",
          " ![Sample menu with submenu](images/menu.png \"Menu\")",
          "",
          " With Velo, you can customize menu items by changing their labels, links, ",
          " where the item opens, and if an item displays as selected. This includes using Velo ",
          " to modify site menus in real time during the visitor's stay on the site.",
          "",
          " The following table lists available menu element types and if you can customize them with code.",
          "",
          "",
          " | Menu Type   | Velo support   | Submenu support |",
          " | :-------- | :------: | :------- |",
          " | Horizontal menus     | Yes   | Up to 2 additional levels |",
          " | Vertical menus           | Yes   | Up to 1 additional level |",
          " | Drop-down menus          | Yes | Up to 1 additional level |",
          " | [Mobile menus](/$w/menucontainer) | Yes | Up to 1 additional level |",
          " | Expandable menus             | No | NA |",
          " | TinyMenu (legacy) menus      | No | NA |",
          "",
          " Learn more about [adding a menu element](https://support.wix.com/en/article/wix-editor-adding-a-site-menu) to your site." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "menuItems",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.Menu.MenuItem" ] },
        "defaultValue": "An array of menu items defined using the Editor.",
        "locations":
          [ { "lineno": 90,
              "filename": "Menu.js" },
            { "lineno": 123,
              "filename": "Menu.js" } ],
        "docs":
          { "summary": "Sets or gets menu items.",
            "description":
              [ "Setting the `menuItems` property sets the items",
                " for a menu element.",
                "",
                " Getting the `menuItems` property returns a `menuItems` array of menu items that have been set using code. If no",
                " items have been set using code, the array defaults to the items defined using the Editor.",
                "",
                " You can't modify the `menuItems` array in-place. To add, change, or remove",
                " individual menu items:",
                "",
                "   1. Store the value of the `menuItems` property in a variable.",
                "   1. Make changes to the variable's array of items.",
                "   1. Reset the `menuItems` property with the variable's modified array." ],
            "links": [],
            "examples":
              [ { "title": "Get menu items",
                  "body":
                    [ "let menuItems = $w('#myMenu').menuItems;",
                      "",
                      "/* Sample array of menu items: ",
                      " *",
                      " * [",
                      " *   {",
                      " *     \"link\": \"https://myairlines.com\",",
                      " *     \"target\": \"_self\",",
                      " *     \"label\": \"Home\",",
                      " *     \"selected\": true,",
                      " *     \"menuItems\": []",
                      " *   },",
                      " *   {",
                      " *     \"link\": \"https://myairlines.com/reservations\",",
                      " *     \"target\": \"_self\",",
                      " *     \"label\": \"Book a Flight\",",
                      " *     \"selected\": false,",
                      " *     \"menuItems\": []",
                      " *   },",
                      " *   {",
                      " *     \"link\": \"https://myairlines.com/frequentflier\",",
                      " *     \"target\": \"_self\",",
                      " *     \"label\": \"Mileage Program\",",
                      " *     \"selected\": false,",
                      " *     \"menuItems\": [",
                      " *       {",
                      " *         \"link\": \"https://myairlines.com//frequentflier/join\",",
                      " *         \"target\": \"_self\",",
                      " *         \"label\": \"Join\",",
                      " *         \"selected\": false,",
                      " *         \"menuItems\": []",
                      " *       },",
                      " *       {",
                      " *         \"link\": \"https://myairlines.com/frequentflier/check\",",
                      " *         \"target\": \"_self\",",
                      " *         \"label\": \"Check Miles\",",
                      " *         \"selected\": false,",
                      " *         \"menuItems\": []",
                      " *       }",
                      " *     ]",
                      " *   }",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set items for a horizontal menu",
                  "body":
                    [ "$w('#myHorizontalMenu').menuItems = [",
                      "  {label: 'Home', link: '/', selected: true},",
                      "  {label: 'For Rent', link: '/rentals'},",
                      "  {label: 'For Sale', link: '/purchases'},",
                      "  {label: 'Mortgage calculator', link: 'https://www.mortgagecalculator.org/', target: '_blank'},",
                      "  {label: 'About Us', link: '/about'}",
                      "];" ],
                  "extra":
                    {  } },
                { "title": "Set items for a vertical menu with a submenu",
                  "body":
                    [ "$w('#myVerticalMenu').menuItems = [",
                      "  {label: 'Home', link: '/', selected: true},",
                      "  {label: 'For Rent', link: '/rentals', menuItems: [",
                      "    {label: 'Long Term', link: '/rentals/long'},",
                      "    {label: 'Short Term', link: '/rentals/short'}",
                      "  ]},",
                      "  {label: 'For Sale', link: '/purchases'},",
                      "  {label: 'Mortgage calculator', link: 'https://www.mortgagecalculator.org/', target: '_blank'},",
                      "  {label: 'About Us', link: '/about'}",
                      "];" ],
                  "extra":
                    {  } },
                { "title": "Set items for a menu that changes dynamically based on a visitor's role",
                  "body":
                    [ "import { currentMember } from 'wix-members';",
                      "",
                      "$w.onReady(async function  () {",
                      "  $w('#horizontalMenu').menuItems = [",
                      "    {label: 'Home', link: '/', selected: false},",
                      "    {label: 'For Rent', link: '/rentals'},",
                      "    {label: 'For Sale', link: '/purchases'}",
                      "  ]",
                      "  try {",
                      "    const roles = await currentMember.getRoles();",
                      "    const foundRole = roles.some(role => role.title === 'Realtor');",
                      "    if (foundRole) {",
                      "      let items = $w('#horizontalMenu').menuItems;",
                      "      items.push({",
                      "        label: 'Realtors Only',",
                      "        link: '/realtors'",
                      "      });",
                      "      $w('#horizontalMenu').menuItems = items;",
                      "    }",
                      "  } catch (error) {",
                      "    // Handle the error",
                      "    console.error(error);",
                      "  }",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example assumes that roles have been defined for the site and checks the visitor's role. If the visitor is a realtor, the visitor\n sees an additional menu item for a hidden \"For Realtors Only\" page." } },
                { "title": "Add a new menu item to an existing menu",
                  "body":
                    [ "let menuItems = $w('#myMenu').menuItems;",
                      "menuItems.push({label: 'My New Label', link: '/mynewlink'});",
                      "$w('#myMenu').menuItems = menuItems;",
                      "" ],
                  "extra":
                    { "description": "This example retrieves the menu items, adds a new\n item, and then overwrites the old items." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onItemClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is clicked." } ],
        "ret":
          { "type": "$w.Menu.MenuItem",
            "doc": "The menu item on which the event is now registered." },
        "locations":
          [ { "lineno": 49,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when a user clicks a menu item.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that was clicked",
                  "body":
                    [ "$w('#myMenu').onItemClick( (event) => {",
                      "  let label = event.item.label;  // \"Home\"",
                      "  let link = event.item.link;  // \"https://myairlines.com/\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseClick" } },
      { "name": "onItemDblClick",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is double clicked." } ],
        "ret":
          { "type": "$w.Menu.MenuItem",
            "doc": "The menu item on which the event is now registered." },
        "locations":
          [ { "lineno": 61,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when a user double clicks a menu item.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that was double clicked",
                  "body":
                    [ "$w('#myMenu').onItemDblClick( (event) => {",
                      "  let label = event.item.label;  // \"Book a Flight\"",
                      "  let link = event.item.link;  // \"https://myairlines.com/reservations\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseDblClick" } },
      { "name": "onItemMouseIn",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is hovered over." } ],
        "ret":
          { "type": "$w.Menu.MenuItem",
            "doc": "The menu item on which the event is now registered." },
        "locations":
          [ { "lineno": 18,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when a user hovers over a menu item.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that the mouse hovered over",
                  "body":
                    [ "$w('#myMenu').onItemMouseIn( (event) => {",
                      "  let label = event.item.label;  // \"Mileage Program\"",
                      "  let link = event.item.link;  // \"https://myairlines.com/frequentflier\"",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Show/hide text if hovering over a menu item",
                  "body":
                    [ "$w('#myMenu').onItemMouseIn(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').show();   // \"You are about to leave the Wix site\"",
                      "  }",
                      "});",
                      "",
                      "$w('#myMenu').onItemMouseOut(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').hide();",
                      "  }",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to show a message if the mouse hovers over a menu \n item that links to an external site." } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseIn" } },
      { "name": "onItemMouseOut",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.MenuItemMouseEventHandler",
              "doc": "The name of the function or\n the function expression to run when the menu item is not hovered over." } ],
        "ret":
          { "type": "$w.Menu.MenuItem",
            "doc": "The menu item on which the event is now registered." },
        "locations":
          [ { "lineno": 34,
              "filename": "menuItemMouseEvents.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when a user stops hovering over a menu item.",
            "links": [],
            "examples":
              [ { "title": "Get information about the menu item that the mouse stops hovering over",
                  "body":
                    [ "$w('#myMenu').onItemMouseOut( (event) => {",
                      "  let label = event.item.label;  // \"Mileage Program\"",
                      "  let link = event.item.link;  // \"https://myairlines.com/frequentflier\"",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Show/hide text if hovering over a menu item",
                  "body":
                    [ "$w('#myMenu').onItemMouseIn(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').show();   // \"You are about to leave the Wix site\"",
                      "  }",
                      "});",
                      "",
                      "$w('#myMenu').onItemMouseOut(event => {",
                      "  if (event.item.link === 'https://www.mortgagecalculator.org/') {",
                      "    $w('#displayMessageText').hide();",
                      "  }",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to hide a message if the mouse stops hovering over a menu \n item that links to an external site." } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "ItemMouseOut" } } ],
  "callbacks": [],
  "messages":
    [ { "name": "MenuItem",
        "locations":
          [ { "lineno": 35,
              "filename": "Menu.js" } ],
        "docs":
          { "summary": "An object that contains the attributes of a menu item.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "label",
              "type": "string",
              "doc": "The label of the menu item. This is text that the site visitor sees in the menu and can click to navigate. \n  \n If not specified, and the page that the link property references is: \n + An external page or an empty string: The menu defaults to the menu items based on site pages only, as defined in the Editor, and an error is logged to the console. \n + A page nested under a folder: The specific menu item label defaults to the name of the corresponding page as defined in the Editor.\n + A regular, non-nested, site page: The `label` for the menu item gets its value from the name of the page that the `link` property references.\n \n Min: 1 character\n\n Max: 40 characters",
              "optional": true },
            { "name": "selected",
              "type": "boolean",
              "doc": "Setting `selected` to `true` for a menu item causes the item to appear highlighted in the menu element. \n You can use this property to indicate which page is currently being displayed. \n \n >**Note:** The value of `selected` isn't validated against which page is actually displayed. For example, you can write code that misleadingly sets `selected` to `true` for multiple menu items. \n  \n When not defined explicitly using the `selected` property, the `selected` value is derived from the currently-active page in the site's _main_ menu \n (as defined when managing the menu in the Editor) and not derived from a currently-active page in a _custom_ menu.\n\n Default: `false`",
              "optional": true },
            { "name": "link",
              "type": "string",
              "doc": "Optional link for the menu item. This is the link the site visitor navigates to when they click on a menu item. \n The different types of links you can use are:\n\n + `/localPageURL`: Another page on your site, such as `/about` or `/rentals/shortterm`.\n + `/`: Your site's home page.\n + `http(s)://<url>`: An external web address, such as `https://www.mortgagecalculator.org/`.\n + `wix:document://<location>`: A document stored in the Media Manager, such as `wix:document://v1/9bec_52fb06ea/filename.xls`.\n + `mailto:<email-address>?subject=<subject>`: An email, such as `mailto:michael@example.com?subject=Coming%20Soon`.\n + `tel:<phone number>`: A phone number, such as `tel:+1-555-555-5555`.\n \n If `link` isn't specified, the corresponding label isn't clickable. \n \n Specifying an empty string is not supported. The menu defaults to the menu items as defined in the Editor and an error is logged to the console.\n\n Min: 1 character\n\n Max: 40 characters",
              "optional": true },
            { "name": "target",
              "type": "string",
              "doc": "Whether the link opens in the same window/tab or in a new window/tab.\n + `_self`. The page opens in the same window/tab.\n + `_blank`. The page opens in a new window/tab.\n \n > **Note:** `target` doesn't work when previewing your site.\n\n\n Default: `_self`",
              "optional": true },
            { "name": "menuItems",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "$w.Menu.MenuItem" ] },
              "doc": "Menus can have additional levels of submenus. Vertical menus can have \n 1 level of submenus. Horizontal menu items can have 2 additional levels of submenus.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true } }