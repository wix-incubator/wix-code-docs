{ "name": "wix-window",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "window.js" },
  "docs":
    { "summary": "The wix-window module contains functionality that pertains to the\n current browser window.",
      "description":
        [ "To use the window module, import `wixWindow` from the `wix-window` module:",
          "",
          "   ```javascript",
          "   import wixWindow from 'wix-window';",
          "   ```",
          "",
          " The APIs in `wix-window` can only be used in front-end code.",
          "",
          " > Learn more about wix-window in [Getting Started](/getting-started/window-api) and on [Wix Learn](https://www.wix.com/learn/online-course/coding-with-velo/velo-frontend#use-wix-window-api)." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "browserLocale",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 395,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Gets the locale of the site visitor's browser.",
            "description":
              [ "A locale, also known as an IETF language tag, is an abbreviated code",
                " that defines the language, country, and other aspects of the site ",
                " visitor's browser, such as number format and date format.",
                "",
                " Some common locales include:",
                "",
                " + `\"en-US\"`: English, United States",
                " + `\"en-GB\"`: English, British",
                " + `\"es-ES\"`: Spanish, Spain",
                " + `\"de-DE\"`: German, Germany",
                " + `\"ja-JP\"`: Japanese, Japan",
                " + `\"fr-CH\"`: French, Switzerland",
                " + `\"it-IT\"`: Italian, Italy" ],
            "links": [],
            "examples":
              [ { "title": "Get the locale of a visitor's browser",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let browserLocale = wixWindow.browserLocale;  // \"en-US\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "consentPolicy",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-window.ConsentPolicy",
        "locations":
          [ { "lineno": 1294,
              "filename": "window.js" } ],
        "docs":
          { "summary": "The ConsentPolicy API is used to perform actions related to the user's allowed cookies and 3rd-party data transfer, such as for GDPR or CCPA purposes.",
            "description":
              [ "The consent policy helps you comply with [GDPR](https://support.wix.com/en/article/preparing-your-wix-site-for-the-gdpr) and [CCPA](https://support.wix.com/en/article/preparing-your-wix-site-for-ccpa) regulations and lets your users",
                "control their information. The site owner sets up the site consent policy and cookie consent banners in",
                "the site's [Privacy Center](https://www.wix.com/my-account/site-selector/?buttonText=Open%20Privacy%20Center&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcookie-consent-settings-app?referralInfo=corvid-docs).",
                "",
                " To use the ConsentPolicy API, import `{ consentPolicy }` from the `wix-window` module:",
                "",
                "   ```javascript",
                "   import { consentPolicy } from 'wix-window';",
                "   ```",
                "",
                "The APIs in `wix-window.ConsentPolicy` can only be used in front-end code." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "formFactor",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 436,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Gets what kind of device is being used to view the page.",
            "description":
              [ "<br/>",
                "",
                ">**Note:** This property only checks the site visitor's device, and not which [EditorX breakpoint](https://support.wix.com/en/article/editor-x-managing-breakpoints) they are using. ",
                "",
                " The `formFactor` property gets one of:",
                "",
                " + `\"Desktop\"`: When viewed in a desktop browser.",
                " + `\"Mobile\"`: When viewed in a mobile browser.",
                " + `\"Tablet\"`: When viewed in a tablet browser." ],
            "links": [],
            "examples":
              [ { "title": "Get a device's form factor",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let formFactor = wixWindow.formFactor;  // \"Mobile\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "lightbox",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-window.Lightbox",
        "locations":
          [ { "lineno": 375,
              "filename": "window.js" } ],
        "docs":
          { "summary": "A [lightbox](https://support.wix.com/en/article/about-lightboxes) pops up on your site to grab your visitor's attention.",
            "description":
              [ "To use the Lightbox API, import `wixWindow` from the `wix-window` module:",
                "",
                "   ```javascript",
                "   import wixWindow from 'wix-window';",
                "   ```",
                "",
                "The APIs in `wix-window.Lightbox` can only be used in front-end code." ],
            "links": [],
            "examples":
              [ { "title": "Set the lightbox to close after 6 seconds",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "let popup = wixWindow.lightbox;",
                      "",
                      "$w.onReady(function () {",
                      "\tsetTimeout(function(){ ",
                      "\t\tpopup.close();",
                      "\t}, 6000);",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "locale",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 456,
              "filename": "window.js" } ],
        "docs":
          { "summary": "**Deprecated.** The `locale` property is being deprecated. Use the\n[`browserLocale`](https://www.wix.com/velo/reference/wix-window/browserlocale) property instead.",
            "description":
              [ "Gets the locale of the current environment.",
                "",
                "> #### Migration Instructions",
                "> If this property is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wixWindow.browserLocale`](https://www.wix.com/velo/reference/wix-window/browserlocale).",
                ">",
                "> To migrate to the new property:",
                ">",
                "> 1. Look for any code that uses `wixWindow.locale` and replace it with `wixWindow.browserLocale`.",
                ">",
                "> 2. Test your changes to make sure your code behaves as expected.",
                "",
                " A locale, also known as an IETF language tag, is an abbreviated code",
                " that defines the user's language, country, and other aspects of the user",
                " interface such as number format and date format.",
                "",
                " Some common locales include:",
                "",
                " + `\"en-US\"`: English, United States",
                " + `\"en-GB\"`: English, British",
                " + `\"es-ES\"`: Spanish, Spain",
                " + `\"de-DE\"`: German, Germany",
                " + `\"ja-JP\"`: Japanese, Japan",
                " + `\"fr-CH\"`: French, Switzerland",
                " + `\"it-IT\"`: Italian, Italy" ],
            "links": [],
            "examples":
              [ { "title": "Get an environment's locale",
                  "body":
                    [ "// NOTE: This example uses the new wixWindow.browserLocale",
                      "//       property, which replaces wixWindow.locale.",
                      "//       See line 13 for the deprecated example.",
                      "",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let browserLocale = wixWindow.browserLocale;  // \"en-US\"",
                      "",
                      "",
                      "",
                      "// NOTE: This example uses the deprecated",
                      "//       wixWindow.locale property.",
                      "",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let locale = wixWindow.locale;  // \"en-US\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "multilingual",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-window.Multilingual",
        "locations":
          [ { "lineno": 1136,
              "filename": "window.js" } ],
        "docs":
          { "summary": "The Multilingual API is used when working with the languages in a multilingual site.",
            "description":
              [ "A multilingual site is a site that is set up to display in more than one",
                " language. To learn more about enabling multilingual functionality in your",
                " site, see [About Wix Multilingual](https://support.wix.com/en/article/about-wix-multilingual).",
                "",
                " To use the Multilingual API, import `wixWindow` from the `wix-window` module:",
                "",
                "   ```javascript",
                "   import wixWindow from 'wix-window';",
                "   ```",
                "",
                "The APIs in `wix-window.Multilingual` can only be used in front-end code." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "referrer",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 478,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Gets the HTTP referrer header field.",
            "description":
              [ "The `referrer` is the address of the previous web page that the user was",
                " on before arriving at the current page, typically by clicking a link.",
                "",
                " > **Note:** When visitors move from page to page within your site, the `referrer` property",
                " does not contain the address of the page the visitor came from. This is because",
                " Wix sites are built as [single page applications](https://en.wikipedia.org/wiki/Single-page_application).",
                " To get the previous page a visitor was visiting within your site, you can",
                " use [`wix-storage`](wix-storage.html) to store the visitor's current page",
                " and retrieve the visitor's previous page." ],
            "links": [],
            "examples":
              [ { "title": "Get the referrer information",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let referrer = wixWindow.referrer;  // \"http://somesite.com\"" ],
                  "extra":
                    {  } },
                { "title": "Get the previous page within a Wix site",
                  "body":
                    [ "// In Site tab",
                      "",
                      "import {session} from 'wix-storage';",
                      "import wixLocation from 'wix-location';",
                      "",
                      "let previousPageURL;",
                      "",
                      "$w.onReady(function () {",
                      "  previousPageURL = session.getItem(\"page\");",
                      "  session.setItem(\"page\", wixLocation.url);",
                      "});",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to use session storage to know which page\n is the page a site visitor previously visited. The code below needs to be\n placed in the **masterpage.js** file so that it runs on all your site's pages. The\n code retrieves the URL of the page a visitor previously visited from session\n storage. It then stores the URL of the vistor's current page in session\n storage. When the visitor navigates to another page, this stored URL is\n retrieved as the previous page URL." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "rendering",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-window.Rendering",
        "locations":
          [ { "lineno": 335,
              "filename": "window.js" } ],
        "docs":
          { "summary": "The [Rendering API](wix-window.html#rendering-obj) is used to control when code is run as a page is being loaded.",
            "description":
              [ "When possible, the rendering process that runs when your page loads is",
                " split in two in order to improve performance. The first cycle in the process",
                " happens server-side and the second cycle happens client-side. When not",
                " possible, all rendering happens client-side.",
                "",
                " Use the Rendering API to track when and where your code is running to",
                " selectively run parts of your code in certain conditions.",
                "",
                " To use the Rendering API, import `wixWindow` from the `wix-window` module:",
                "",
                "   ```javascript",
                "   import wixWindow from 'wix-window';",
                "   ```" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "viewMode",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 420,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Gets which mode the site is currently being viewed in.",
            "description":
              [ "The `viewMode` property gets either:",
                "",
                " + `\"Preview\"`: When previewing the site using the **Preview** button in the Editor.",
                " + `\"Site\"`: When viewing the published site." ],
            "links": [],
            "examples":
              [ { "title": "Get a window's view mode",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let viewMode = wixWindow.viewMode;  // \"Site\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "warmupData",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-window.WarmupData",
        "locations":
          [ { "lineno": 197,
              "filename": "window.js" } ],
        "docs":
          { "summary": "The Warmup Data API is used to optimize data loading for sites that render both on the server and in the browser, \n allowing costly data fetching operations to be done only once.",
            "description":
              [ "To improve performance the [rendering process](https://support.wix.com/en/article/velo-about-the-page-rendering-process) ",
                " is split in two when possible: once on the server and once in the browser. When that isn't ",
                " possible, all rendering happens in the browser.",
                "",
                " Because rendering can occur twice, ",
                " it's preferred to perform time-consuming tasks only once, such as querying ",
                " collections or working with the results of network requests from external sites. ",
                " If possible, it's best to perform these operations on the server. ",
                "",
                " Requesting the warmup data from the server returns `undefined` in the following situations:",
                " + When browser rendering happens before server-side rendering.",
                " + When there is only browser rendering, for example in case visitors navigate from page to page within a site.",
                "",
                " Your page code must check for these scenarios and provide a fallback alternative for getting the data.",
                "",
                " Use the `warmupData` API and `env` property  of the [Rendering API](https://www.wix.com/velo/reference/wix-window/rendering-obj/env) ",
                " to track when and where your code is running. This lets you selectively run parts of your code.",
                "",
                " > **Notes:**",
                " > + Rendering never occurs server-side when previewing your site.",
                " > + `wix-window.warmupData` replaces the deprecated `wix-window.rendering.warmupData`.",
                " > + Backend rendering only occurs when visitors initially enter the site, and not when visitors navigate from page-to-page within the site.",
                "",
                " To use the Warmup Data API, import `warmupData` from the `wix-window` module:",
                "",
                "   ```javascript",
                "   import { warmupData } from 'wix-window';",
                "   ```" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "copyToClipboard",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "text",
              "type": "string",
              "doc": "The text to copy." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the copy is complete or the site visitor closes the modal popup." },
        "locations":
          [ { "lineno": 550,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Copies text to the site visitor's clipboard.",
            "description":
              [ "The `copyToClipboard()` function copies the specified text to the site visitor's clipboard.",
                "",
                " If the site visitor's browser does not support copying text to the clipboard",
                " programmatically, a modal popup that allows copying will be displayed.",
                " For example, when calling `copyToClipboard` from a Firefox or Edge browser",
                " the site visitor will see something similar to the popup shown below.",
                "",
                " ![Copy To Clipboard Popup](images/copyToClipboardModal.png \"Copy To Clipboard Popup\")",
                "",
                " The Promise returned by `copyToClipboard()` resolves when the",
                " specified text is copied to clipboard or the modal popup is closed.",
                " The Promise is rejected if a `null` value is passed as the `toCopy` parameter",
                " or if the visitor's browser blocks the modal popup from opening." ],
            "links": [],
            "examples":
              [ { "title": "Copy text to clipboard",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.copyToClipboard(\"Text to copy!\")",
                      "  .then( () => {",
                      "    // handle case where text was copied",
                      "  } )",
                      "  .catch( (err) => {",
                      "    // handle case where an error occurred",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getBoundingRect",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-window.WindowSizeInfo" ] },
            "doc": "Fulfilled - An object containing information about the window's size, the document's size, and the current scroll position." },
        "locations":
          [ { "lineno": 536,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Returns information about the window.",
            "description":
              [ "The `getBoundingRect()` function returns a Promise that resolves to an object",
                " containing information about the current window's size, the document's size,",
                " and the current scroll position." ],
            "links": [],
            "examples":
              [ { "title": "Get information about the window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getBoundingRect()",
                      "  .then( (windowSizeInfo) => {",
                      "    let windowHeight = windowSizeInfo.window.height;      // 565",
                      "    let windowWidth = windowSizeInfo.window.width;        // 1269",
                      "    let documentHeight = windowSizeInfo.document.height;  // 780",
                      "    let documentWidth = windowSizeInfo.document.width;    // 1269",
                      "    let scrollX = windowSizeInfo.scroll.x;                // 0",
                      "    let scrollY = windowSizeInfo.scroll.y;                // 120",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getCurrentGeolocation",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "Fulfilled - The coordinates and timestamp of the current location.\nRejected - The user blocked the geolocation popup." },
        "locations":
          [ { "lineno": 653,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Returns the current geolocation of the user.",
            "description":
              [ "The `getCurrentGeolocation()` function returns a Promise that resolves to an",
                " object containing the current geolocation of the user.",
                "",
                " The object contains the following key:value pairs:",
                "",
                " + `\"timestamp\"`: The geolocation timestamp representing the date and time at which the location was retrieved.",
                " + `\"coords\"`: An object that defines the location.",
                "   + `\"latitude\"`: The position's latitude in decimal degrees.",
                "   + `\"longitude\"`: The position's longitude in decimal degrees.",
                "   + `\"altitude\"`: The position's altitude in metres, relative to sea level. This value may be null if the browser cannot provide the data.",
                "   + `\"accuracy\"`: The accuracy in meters of the latitude and longitude properties.",
                "   + `\"altitudeAccuracy\"`: The accuracy in meters of the altitude property. This value may be null.",
                "   + `\"heading\"`: The direction in degrees in which the device is traveling. It indicates how far off from heading true north the device is. If `speed` is `0`, the heading is `NaN`. This value may be null if the browser cannot provide the data.",
                "   + `\"speed\"`: The velocity in meters per second of the device. This value may be null if the browser cannot provide the data.",
                "",
                "",
                "  > **Note:** The `getCurrentGeolocation()` function has the following limitations:",
                "",
                " + On Chrome, the function only works on HTTPS sites.",
                " + On Chrome, Firefox, and Safari, the function only works if the user",
                "   approves a popup. If they do not approve, the promise is rejected.",
                " + Run `getCurrentGeolocation()` with a [`setTimeout()`](https://www.w3schools.com/js/js_timing.asp) in case the browser is set to not detect the locale. Adding the timeout lets you handle the unfulfilled promise." ],
            "links": [],
            "examples":
              [ { "title": "Get the geolocation data",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getCurrentGeolocation()",
                      "  .then( (obj) => {",
                      "    let timestamp = obj.timestamp;                  // 1495027186984",
                      "    let latitude = obj.coords.latitude;             // 32.0971036",
                      "    let longitude = obj.coords.longitude;           // 34.774391099999995",
                      "    let altitude = obj.coords.altitude;             // null",
                      "    let accuracy = obj.coords.accuracy;             // 29",
                      "    let altAccuracy = obj.coords.altitudeAccuracy;  // null",
                      "    let heading = obj.coords.heading;               // null",
                      "    let speed = obj.coords.speed;                   // null",
                      "  } )",
                      "  .catch( (error) => {",
                      "    let errorMsg = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getRouterData",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "Object",
            "doc": "The data returned by the router." },
        "locations":
          [ { "lineno": 634,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Returns the data that a router passed to the page in its response.",
            "description":
              [ "When you create a router and define its functionality in its [router()](wix-router.html#router)",
                " function, you can choose to send data along with the router's [response](wix-router.WixRouterResponse.html).",
                " That data is retrieved in the code of the page that was routed to using the",
                " `getRouterData()` function.",
                "",
                " If you call the `getRouterData()` function from a non-router page or a router",
                " page that wasn't sent any data, the function returns `null`." ],
            "links":
              [ "[router( )](wix-router.html#router)",
                "[WixRouterResponse](wix-router.WixRouterResponse.html)" ],
            "examples":
              [ { "title": "Get the data passed by a router",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "let routerData = wixWindow.getRouterData();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "openLightbox",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "name",
              "type": "string",
              "doc": "The name of the lightbox to open." },
            { "name": "data",
              "type": "Object",
              "doc": "The data to pass to the lightbox.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "Fulfilled - The returned data from the lightbox.\nRejected - The error that caused the rejection." },
        "locations":
          [ { "lineno": 688,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Opens a lightbox and optionally passes it the given data.",
            "description":
              [ "The `openLightbox()` function returns a Promise which is resolved when the",
                " lightbox closes. If the lightbox is closed programmatically using its",
                " [`close()`](wix-window.Lightbox.html#close) function, and the",
                " [`close()`](wix-window.Lightbox.html#close) function was invoked",
                " with a data parameter, then the Promise resolves to that data object.",
                "",
                " If you send a data object to the lightbox, use the [`getContext()`](wix-window.Lightbox.html#getContext)",
                " function in the lightbox's code to access the received data.",
                "",
                " To pass data to the lightbox that is opened, you must open the lightbox",
                " programmatically using the [`openLightbox()`](wix-window.html#openLightbox)",
                " function. If the lightbox is opened automatically when the page loads or",
                " by a link from a page element, data will not be passed to the lightbox.",
                " Therefore, if you want to pass data to the lightbox, make sure",
                " **Automatically display lightbox on pages** is [set](https://support.wix.com/en/article/setting-which-page-your-lightbox-appears-on) to **No** in the",
                " **Lightbox Settings** panel in the Editor and don't set any element's link",
                " to open the lightbox. Instead, create your own method for opening",
                " the lightbox programmatically. For example, you can add a button with an `onClick` event",
                " handler that calls the [`openLightbox()`](wix-window.html#openLightbox) function.",
                "",
                " To pass data back to the page that opened the lightbox, you must close the",
                " lightbox programmatically using the `close()` function. If the lightbox is",
                " closed by the site visitor clicking the 'X' icon, close button, or lightbox",
                " overlay, data will not be passed back the the page that opened the lightbox.",
                " Therefore, if you want to make sure data is passed back to the page that",
                " opened the lightbox, [disable all of the methods mentioned above](https://support.wix.com/en/article/setting-how-your-lightbox-is-closed) and create your own method for closing",
                " the lightbox programmatically. For example, you can add a button with an `onClick` event",
                " handler that calls the `close()` function.",
                "",
                "  > **Notes:** Use the name of the lightbox and not the lightbox's ID when calling",
                " `openLightbox()`. You can find the lightbox's name by selecting the ",
                " lightbox and clicking the settings button.",
                "  >",
                "  > Only call `openLightBox` after the [`onReady`]($w/onready) event has fired." ],
            "links":
              [ "[openModal( )](#openModal)" ],
            "examples":
              [ { "title": "Open a lightbox",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\");" ],
                  "extra":
                    {  } },
                { "title": "Open a lightbox and send it data",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\", dataObj);" ],
                  "extra":
                    {  } },
                { "title": "Open a lightbox and receive data when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\")",
                      "  .then( (data) => {",
                      "    let receivedData = data;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Open a lightbox, send it data, and receive data back when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openLightbox(\"LightboxName\", dataObj)",
                      "  .then( (data) => {",
                      "    let receivedData = data;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "A scenario where information is passed between a page and a lightbox",
                  "body":
                    [ "/*************",
                      " * Page Code *",
                      " *************/",
                      "",
                      "import wixWindow from 'wix-window';",
                      "",
                      "export function openButton_click(event) {",
                      "  wixWindow.openLightbox(\"MyLightBox\", {",
                      "    \"pageSend1\": $w('#pageSend1').value,",
                      "    \"pageSend2\": $w('#pageSend2').value",
                      "  })",
                      "  .then( (data) => {",
                      "    $w('#pageReceive1').text = data.lightBoxSend1;",
                      "    $w('#pageReceive2').text = data.lightBoxSend2;",
                      "  } );",
                      "}",
                      "",
                      "/*****************",
                      " * Lightbox Code *",
                      " *****************/",
                      "",
                      "import wixWindow from 'wix-window';",
                      "",
                      "$w.onReady( function () {",
                      "  let received = wixWindow.lightbox.getContext();",
                      "  $w('#lightBoxReceive1').text = received.pageSend1;",
                      "  $w('#lightBoxReceive2').text = received.pageSend2;",
                      "} );",
                      "",
                      "export function closeButton_click(event) {",
                      "  wixWindow.lightbox.close( {",
                      "    \"lightBoxSend1\": $w('#lightBoxSend1').value,",
                      "    \"lightBoxSend2\": $w('#lightBoxSend2').value",
                      "  } );",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to pass data from a page to a lightbox that\n it opens and from the lightbox back to the page as it closes.\n\n It assumes that the page has:\n\n + An open button that is used to open the lightbox.\n + Two text inputs where information that is to be passed to the lightbox is entered.\n + Two text elements where information that is passed from the lightbox is displayed.\n\n\n It assumes that the lightbox has:\n\n + A close button that is used to close the lightbox.\n + Two text inputs where information that is to be passed to the page is entered.\n + Two text elements where information that is passed from the page is displayed." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "openModal",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "url",
              "type": "string",
              "doc": "The URL of the page to show in the modal window." },
            { "name": "options",
              "type": "wix-window.OpenModalOptions",
              "doc": "The options used for the modal window." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the modal window is closed.\nRejected - The error that caused the rejection." },
        "locations":
          [ { "lineno": 1067,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Opens a modal window that displays the specified web page.",
            "description":
              [ "A modal window displays the page specified by the `url` property over",
                " your current page. Unlike a [lightbox](wix-window.Lightbox.html), which",
                " is opened using the [`openLightbox()`](#openLightbox) function, the window",
                " opened by `openModal()` is not part of your site structure.",
                "",
                " Only one modal window can be open at any given time. Therefore, opening",
                " a modal window closes an already open modal window if there is one.",
                "",
                "  > **Note:** The specified `url` must be an HTTPS URL." ],
            "links":
              [ "[openLightbox( )](#openLightbox)" ],
            "examples":
              [ { "title": "Open a modal window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "  \"width\": 750,",
                      "  \"height\": 500",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Open a modal window and log a message when it is closed",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "    \"width\": 750,",
                      "    \"height\": 500",
                      "  } )",
                      "  .then( () => {",
                      "    console.log(\"Modal closed.\");",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "postMessage",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "message",
              "type": "Object",
              "doc": "The message to send." },
            { "name": "target",
              "type": "string",
              "doc": "The target to send the message to. Must be `\"parent\"` or omitted. Defaults to `\"parent\"`.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "Fulfilled - The data returned from the modal window.\nRejected - The error that caused the rejection." },
        "locations":
          [ { "lineno": 1092,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Sends a message to the page's parent.",
            "description":
              [ "If a page is embedded within another site, using an [HtmlComponent]($w.HtmlComponent.html)",
                " on a Wix site or an [iframe](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)",
                " on a non-Wix site, you can use the `postMessage()` function to send a",
                " message from the inner site to the outer site.",
                "",
                " When the parent site is a Wix site, use the [`onMessage()`]($w.HtmlComponent.html#onMessage)",
                " function to receive the message on the parent page.",
                "",
                " When the parent site is a non-Wix site, use the page's `window.onmessage`",
                " event handler to read the `data` property of the received `MessageEvent`",
                " to receive the message on the parent page." ],
            "links": [],
            "examples":
              [ { "title": "Send a message to a Wix parent site",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the inner site to post a message *",
                      " * * * * * * * * * * * * * * * * * * * * * * */",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.postMessage(dataObj);",
                      "",
                      "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the outer site to receive a message  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " *",
                      " * $w(\"#myHtmlComponent\").onMessage( (event, $x) => {",
                      " *   let message = event.data;",
                      " * } );",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Send a message to a non-Wix parent site",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the inner site to post a message *",
                      " * * * * * * * * * * * * * * * * * * * * * * */",
                      "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.postMessage(dataObj);",
                      "",
                      "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Code for the outer site to receive a message  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " *",
                      " * <script>",
                      " *   window.addEventListener(\"message\", event => {",
                      " *    let message = event.data;",
                      " *   } );",
                      " * </script>",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "scrollBy",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "x",
              "type": "number",
              "doc": "The horizontal offset, in pixels, to scroll by." },
            { "name": "y",
              "type": "number",
              "doc": "The vertical offset, in pixels, to scroll by." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the scroll is complete." },
        "locations":
          [ { "lineno": 614,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Scrolls the page by a given number of pixels.",
            "description":
              [ "The `scrollBy()` function returns a Promise that resolves when the current",
                " page has been scrolled by the given number of pixels,",
                "",
                " The `x` and `y` parameters determine the number of horizontal and vertical",
                " pixels to scroll the current page. Negative numbers scroll up or to the",
                " left and positive numbers scroll down or to the right." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page by a given number of pixels",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollBy(100, 500);" ],
                  "extra":
                    {  } },
                { "title": "Scroll the page by a given number of pixels and log message when done",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollBy(100, 500)",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "scrollTo",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "x",
              "type": "number",
              "doc": "The horizontal position, in pixels, to scroll to." },
            { "name": "y",
              "type": "number",
              "doc": "The vertical position, in pixels, to scroll to." },
            { "name": "options",
              "type": "wix-window.ScrollToOptions",
              "doc": "Scrolling options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the scroll is complete." },
        "locations":
          [ { "lineno": 584,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Scrolls the page to a specific location on the page.",
            "description":
              [ "The `scrollTo()` function returns a Promise that resolves when the current",
                " page has been scrolled to a given location on the page.",
                "",
                " The `x` and `y` parameters determine the top-left pixel that is",
                " displayed on screen after the scroll.",
                "",
                " > **Tip**: To get the coordinates for scrolling, display the Wix Editor Toolbar. In the Editor, ",
                " move the cursor to the top-left pixel where you want the page to scroll to. The **X** ",
                " and **Y** axis **Position** values show the coordinates.",
                "",
                " To scroll to a specific element on the page, see the `$w.Node`",
                " [`scrollTo()`]($w.Node.html) function.",
                "",
                " Use the `options` parameter to specify the options to use when scrolling." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page to a location",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500);" ],
                  "extra":
                    {  } },
                { "title": "Scroll the page to a location and log a message when done",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500)",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Scroll the page to a location without an animation",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500, {\"scrollAnimation\": false});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "trackEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventName",
              "type": "string",
              "doc": "Event name. Applies to both standard and custom events. The following standard events are supported:\n+ `AddPaymentInfo`\n+ `AddProductImpression`\n+ `AddToCart`\n+ `CheckoutStep`\n+ `ClickProduct`\n+ `CompleteRegistration`\n+ `InitiateCheckout`\n+ `Lead`\n+ `Purchase`\n+ `RemoveFromCart`\n+ `Schedule`\n+ `StartPayment`\n+ `ViewContent`" },
            { "name": "parameters",
              "type":
                [ "wix-window.trackingParametersCustomEvent",
                  "wix-window.trackingParametersAddPaymentInfoEvent",
                  "wix-window.trackingParametersAddProductImpressionEvent",
                  "wix-window.trackingParametersAddToCartEvent",
                  "wix-window.trackingParametersCheckoutStepEvent",
                  "wix-window.trackingParametersClickProductEvent",
                  "wix-window.trackingParametersInitiateCheckoutEvent",
                  "wix-window.trackingParametersLeadEvent",
                  "wix-window.trackingParametersPurchaseEvent",
                  "wix-window.trackingParametersRemoveFromCartEvent",
                  "wix-window.trackingParametersStartPaymentEvent",
                  "wix-window.trackingParametersViewContentEvent" ],
              "doc": "The event's parameters. **Note:** The `CompleteRegistration` and `Schedule` events don't take any parameters." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 998,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Sends a tracking event to external analytics tools.",
            "description":
              [ "The `trackEvent()` function sends an event to analytics tools connected",
                " to your site. It can send events to Google Analytics, Facebook Pixel or analytics tools set up with the Google Tag Manager.",
                "",
                " Learn more about:",
                "",
                " + [Marketing Integrations](https://support.wix.com/en/article/about-marketing-integrations)",
                " + [Connecting a Facebook Pixel to Your Wix Site](https://support.wix.com/en/article/connecting-a-facebook-pixel-and-the-conversions-api-to-your-wix-site-7351813)",
                " + [Connecting a Google Analytics Property to Your Wix Site](https://support.wix.com/en/article/tracking-events-on-your-wix-site-with-a-google-analytics-property)",
                " + [Connecting Your Google Tag Manager Account to Your Wix Site](https://support.wix.com/en/article/connecting-your-google-tag-manager-account-to-your-wix-site)",
                "",
                " > **Note:** The `trackEvent()` function only runs on published versions of your site.",
                " It doesn't work when previewing your site.",
                "",
                " The `trackEvent()` function lets you track both standard and custom events.",
                "",
                " The following standard events are supported:",
                "",
                " | Standard Event | Description | Used By |",
                " | -------------- | ------------| ------- |",
                " | `AddPaymentInfo` | When a site visitor saves payment information. | `Google Analytics`, `Facebook Pixel` |",
                " | `AddProductImpression` | When a site visitor views a product. | `Google Analytics` |",
                " | `AddToCart` | When a site visitor adds a product to the shopping cart. | `Google Analytics`, `Facebook Pixel` |",
                " | `CheckoutStep` | When a site visitor completes a checkout step. | `Google Analytics` |",
                " | `ClickProduct` | When a site visitor clicks on a product. | `Google Analytics` |",
                " | `CompleteRegistration` | When a site visitor completes the registration. __Note:__ The `CompleteRegistration` event doesn't take any parameters. | `Facebook Pixel` |",
                " | `InitiateCheckout` | When a site visitor starts the checkout process. | `Google Analytics`, `Facebook Pixel` |",
                " | `Lead` | When a site visitor subscribes to a newsletter or submits a contact form. | `Google Analytics`, `Facebook Pixel` |",
                " | `Purchase` | When the customer successfully completes the checkout process. | `Google Analytics`, `Facebook Pixel` |",
                " | `RemoveFromCart` | When a site visitor removes a product from the shopping cart. | `Google Analytics` |",
                " | `Schedule` | When a site visitor schedules a meeting or makes an appointment. __Note:__ The `Schedule` event doesn't take any parameters. | `Facebook Pixel` |",
                " | `StartPayment` | When a site visitor starts the payment process. | `Google Analytics` |",
                " | `ViewContent` | When a site visitor views a key page, for example the product page. | `Google Analytics`, `Facebook Pixel` |" ],
            "links": [],
            "examples":
              [ { "title": "Send a standard event that doesn't take parameters",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.trackEvent(\"Lead\");" ],
                  "extra":
                    {  } },
                { "title": "Send a standard event with parameters",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.trackEvent(\"ViewContent\", {",
                      "  origin: \"My Sportswear Store\",",
                      "  id: \"P12345\",",
                      "  sku: 20,",
                      "  name: \"Really Fast Running Shoes\",",
                      "  price: 120,",
                      "  currency: \"USD\",",
                      "  category: \"Apparel/Shoes\",",
                      "  brand: \"SomeBrand\",",
                      "  variant: \"Black\",",
                      "  list: \"Product Gallery\",",
                      "  position: 1",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Send a custom event",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.trackEvent(\"CustomEvent\", {",
                      "  eventCategory: \"Sporting Goods\",",
                      "  eventAction: \"FrequentShopper\",",
                      "  eventLabel: \"November\",",
                      "  eventValue: 1,",
                      "  purchase_count: 8,",
                      "  average_purchase_value: 245.24,",
                      "  currency: \"USD\",",
                      "  \"shipping_info\": {",
                      "    method: \"standard overnight\",",
                      "    note: \"leave at the front door\"",
                      "  }",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "CustomType",
        "locations":
          [ { "lineno": 864,
              "filename": "window.js" } ],
        "docs":
          { "summary": "A custom parameter used when sending a CustomEvent track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples": [],
            "extra":
              {  } },
        "members": [],
        "extra":
          {  },
        "labels": [] },
      { "name": "OpenModalOptions",
        "locations":
          [ { "lineno": 1057,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when opening a modal window.",
            "links":
              [ "[openModal( )](#openModal)" ],
            "examples":
              [ { "title": "Open a modal window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.openModal(\"https://en.wikipedia.org/wiki/Wix.com\", {",
                      "  \"width\": 750,",
                      "  \"height\": 500",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "width",
              "type": "number",
              "doc": "Width of the modal window." },
            { "name": "height",
              "type": "number",
              "doc": "Height of the modal window." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ScrollToOptions",
        "locations":
          [ { "lineno": 575,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used for providing options for the `scrollTo()` method.",
            "links":
              [ "[scrollTo( )](#scrollTo)" ],
            "examples":
              [ { "title": "Scroll the page to a location without an animation",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.scrollTo(100, 500, {\"scrollAnimation\": false});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "scrollAnimation",
              "type": "boolean",
              "doc": "Indicates whether to scroll with an animation. Defaults to `true`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "WindowSizeInfo",
        "locations":
          [ { "lineno": 506,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object returned by the `getBoundingRect()` function that contains information about the window's size, the document's size, and the current scroll position.",
            "links":
              [ "[getBoundingRect( )](#getBoundingRect)" ],
            "examples":
              [ { "title": "Get information about the window",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.getBoundingRect()",
                      "  .then( (windowSizeInfo) => {",
                      "    let windowHeight = windowSizeInfo.window.height;      // 565",
                      "    let windowWidth = windowSizeInfo.window.width;        // 1269",
                      "    let documentHeight = windowSizeInfo.document.height;  // 780",
                      "    let documentWidth = windowSizeInfo.document.width;    // 1269",
                      "    let scrollX = windowSizeInfo.scroll.x;                // 0",
                      "    let scrollY = windowSizeInfo.scroll.y;                // 120",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "window",
              "type": "Object",
              "doc": "An object with `height` and `width` key:value pairs containing the size of the viewable area of the current browser window." },
            { "name": "document",
              "type": "Object",
              "doc": "An object with `height` and `width` key:value pairs containing the size of the actual body of the page, which may be larger or smaller than the current window." },
            { "name": "scroll",
              "type": "Object",
              "doc": "An object with `x` and `y` key:value pairs containing the scroll offset of the page within the window from the top-left corner." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParameters",
        "locations":
          [ { "lineno": 755,
              "filename": "window.js" } ],
        "docs":
          { "summary": "Objects used when calling the [`trackEvent()`](wix-window.html#trackEvent) function.",
            "description":
              [ "Objects used when calling the [`trackEvent()`](wix-window.html#trackEvent) function." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "AddPaymentInfoEvent",
              "type": "wix-window.trackingParametersAddPaymentInfoEvent",
              "doc": "Object used for `AddPaymentInfo` events.",
              "optional": true },
            { "name": "AddProductImpressionEvent",
              "type": "wix-window.trackingParametersAddProductImpressionEvent",
              "doc": "Object used for `AddProductImpression` events.",
              "optional": true },
            { "name": "AddToCartEvent",
              "type": "wix-window.trackingParametersAddToCartEvent",
              "doc": "Object used for `AddToCart` events.",
              "optional": true },
            { "name": "CheckoutStepEvent",
              "type": "wix-window.trackingParametersCheckoutStepEvent",
              "doc": "Object used for `CheckoutStep` events.",
              "optional": true },
            { "name": "ClickProductEvent",
              "type": "wix-window.trackingParametersClickProductEvent",
              "doc": "Object used for `ClickProduct` events.",
              "optional": true },
            { "name": "InitiateCheckoutEvent",
              "type": "wix-window.trackingParametersInitiateCheckoutEvent",
              "doc": "Object used for `InitiateCheckout` events.",
              "optional": true },
            { "name": "LeadEvent",
              "type": "wix-window.trackingParametersLeadEvent",
              "doc": "Object used for `Lead` events.",
              "optional": true },
            { "name": "PurchaseEvent",
              "type": "wix-window.trackingParametersPurchaseEvent",
              "doc": "Object used for `Purchase` events.",
              "optional": true },
            { "name": "RemoveFromCartEvent",
              "type": "wix-window.trackingParametersRemoveFromCartEvent",
              "doc": "Object used for `RemoveFromCart` events.",
              "optional": true },
            { "name": "StartPaymentEvent",
              "type": "wix-window.trackingParametersStartPaymentEvent",
              "doc": "Object used for `StartPayment` events.",
              "optional": true },
            { "name": "ViewContentEvent",
              "type": "wix-window.trackingParametersViewContentEvent",
              "doc": "Object used for `ViewContent` events.",
              "optional": true },
            { "name": "CustomEvent",
              "type": "wix-window.trackingParametersCustomEvent",
              "doc": "Object used for custom events.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersAddPaymentInfoEvent",
        "locations":
          [ { "lineno": 747,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an `AddPaymentInfo` track event.",
            "description":
              [ "Objects used when calling the [`trackEvent()`](wix-window.html#trackEvent) function." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "option",
              "type": "string",
              "doc": "Payment type. For example, `Visa` or `PayPal`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersAddProductImpressionEvent",
        "locations":
          [ { "lineno": 785,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an AddProductImpression track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddProductImpression trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddProductImpression\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"contents\": [ {",
                      "    \"sku\": \"P12345\",",
                      "    \"name\": \"Really Fast Running Shoes\",",
                      "    \"category\": \"Apparel/Shoes\",",
                      "    \"price\": 100,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Black\",",
                      "    \"list\": \"Search Results\",",
                      "    \"position\": 1",
                      "  }, {",
                      "    \"sku\": \"P67890\",",
                      "    \"name\": \"Running Shirt\",",
                      "    \"category\": \"Apparel/Shirts\",",
                      "    \"price\": 50,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Blue\",",
                      "    \"list\": \"Search Results\",",
                      "    \"position\": 2",
                      "  } ]",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "contents",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-window.trackingParametersAddProductImpressionEventContents" ] },
              "doc": "`key:value` pairs describing the products." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersAddProductImpressionEventContents",
        "locations":
          [ { "lineno": 795,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an AddProductImpression track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddProductImpression trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddProductImpression\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"contents\": [ {",
                      "    \"sku\": \"P12345\",",
                      "    \"name\": \"Really Fast Running Shoes\",",
                      "    \"category\": \"Apparel/Shoes\",",
                      "    \"price\": 100,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Black\",",
                      "    \"list\": \"Search Results\",",
                      "    \"position\": 1",
                      "  }, {",
                      "    \"sku\": \"P67890\",",
                      "    \"name\": \"Running Shirt\",",
                      "    \"category\": \"Apparel/Shirts\",",
                      "    \"price\": 50,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Blue\",",
                      "    \"list\": \"Search Results\",",
                      "    \"position\": 2",
                      "  } ]",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Product ID.",
              "optional": true },
            { "name": "sku",
              "type": "string",
              "doc": "Stock-keeping unit for the product.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Product name." },
            { "name": "category",
              "type": "string",
              "doc": "Product category. For example, `Accessories/Watches`.",
              "optional": true },
            { "name": "price",
              "type": "number",
              "doc": "Product price.",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.",
              "optional": true },
            { "name": "brand",
              "type": "string",
              "doc": "Brand name of the product.",
              "optional": true },
            { "name": "variant",
              "type": "string",
              "doc": "Product variant such as `green` or `large`.",
              "optional": true },
            { "name": "list",
              "type": "string",
              "doc": "List or collection the product is part of. For example, `Product Gallery` or `Search Results`.",
              "optional": true },
            { "name": "position",
              "type": "string",
              "doc": "Position of the product within a list or collection.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersAddToCartEvent",
        "locations":
          [ { "lineno": 813,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an AddToCart track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send an AddToCart trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"AddToCart\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"id\": \"P12345\",",
                      "  \"name\": \"Really Fast Running Shoes\",",
                      "  \"category\": \"Apparel/Shoes\",",
                      "  \"price\": 120.5,",
                      "  \"currency\": \"USD\",",
                      "  \"brand\": \"SomeBrand\",",
                      "  \"variant\": \"Silver\",",
                      "  \"position\": 2,",
                      "  \"quantity\": 1",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Product ID.",
              "optional": true },
            { "name": "sku",
              "type": "string",
              "doc": "Stock-keeping unit for the product.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Product name." },
            { "name": "price",
              "type": "number",
              "doc": "Product price.",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.",
              "optional": true },
            { "name": "category",
              "type": "string",
              "doc": "Product category. For example, `Accessories/Watches`.",
              "optional": true },
            { "name": "brand",
              "type": "string",
              "doc": "Brand name of the product.",
              "optional": true },
            { "name": "variant",
              "type": "string",
              "doc": "Product variant such as `green` or `large`.",
              "optional": true },
            { "name": "position",
              "type": "string",
              "doc": "List or collection the product is part of. For example, `Product Gallery` or `Search Results`.",
              "optional": true },
            { "name": "quantity",
              "type": "number",
              "doc": "Product quantity.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersCheckoutStepEvent",
        "locations":
          [ { "lineno": 832,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an CheckoutStep track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send an CheckoutStep trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"CheckoutStep\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"step\": \"3\",",
                      "  \"action\": \"Select Shipping\",",
                      "  \"option\": \"Fast Checkout\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "step",
              "type": "string",
              "doc": "Number of the step in the checkout process.\nFor example `2` for `addPaymentInfo` in a checkout flow that consists of the steps `StartPayment`, `addPaymentInfo`, and `Select Shipping`.",
              "optional": true },
            { "name": "action",
              "type": "string",
              "doc": "Action the visitor has taken in this step. For example, `Select Shipping`.",
              "optional": true },
            { "name": "option",
              "type": "string",
              "doc": "Option information on the checkout page. For example the selected payment method.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersClickProductEvent",
        "locations":
          [ { "lineno": 845,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending a ClickProduct track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send a ClickProduct trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"ClickProduct\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"id\": \"P12345\",",
                      "  \"name\": \"Really Fast Running Shoes\",",
                      "  \"category\": \"Apparel/Shoes\",",
                      "  \"price\": 120,",
                      "  \"currency\": \"USD\",",
                      "  \"brand\": \"SomeBrand\",",
                      "  \"variant\": \"Black\",",
                      "  \"position\": 1",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Product ID.",
              "optional": true },
            { "name": "sku",
              "type": "string",
              "doc": "Stock-keeping unit for the product.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Product name." },
            { "name": "price",
              "type": "number",
              "doc": "Product price.",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.",
              "optional": true },
            { "name": "category",
              "type": "string",
              "doc": "Product category. For example, `Accessories/Watches`.",
              "optional": true },
            { "name": "brand",
              "type": "string",
              "doc": "Brand name of the product.",
              "optional": true },
            { "name": "variant",
              "type": "string",
              "doc": "Product variant such as `green` or `large`.",
              "optional": true },
            { "name": "list",
              "type": "string",
              "doc": "List or collection the product is part of. For example, `Product Gallery` or `Search Results`.",
              "optional": true },
            { "name": "position",
              "type": "string",
              "doc": "Position of the product within a list or collection.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersCustomEvent",
        "locations":
          [ { "lineno": 871,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending a CustomEvent track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send a CustomEvent trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.trackEvent(\"CustomEvent\", {",
                      "  eventCategory: \"Sporting Goods\",",
                      "  eventAction: \"FrequentShopper\",",
                      "  eventLabel: \"November\",",
                      "  eventValue: 1,",
                      "  purchase_count: 8,",
                      "  average_purchase_value: 245.24,",
                      "  currency: \"USD\",",
                      "  \"shipping_info\": {",
                      "    method: \"standard overnight\",",
                      "    note: \"leave at the front door\"",
                      "  }",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "eventCategory",
              "type": "string",
              "doc": "Event category. **Note:** Required for Google Analytics and Facebook Pixel.",
              "optional": true },
            { "name": "eventAction",
              "type": "string",
              "doc": "Event action type. **Note:** Required for Google Analytics and Facebook Pixel.",
              "optional": true },
            { "name": "eventLabel",
              "type": "string",
              "doc": "Event label.",
              "optional": true },
            { "name": "eventValue",
              "type": "number",
              "doc": "Event value.",
              "optional": true },
            { "name": "*",
              "type": "wix-window.CustomType",
              "doc": "Any number of custom properties.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersInitiateCheckoutEvent",
        "locations":
          [ { "lineno": 884,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an InitiateCheckout track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send an InitiateCheckout trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"InitiateCheckout\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"contents\": [ {",
                      "    \"sku\": \"P12345\",",
                      "    \"name\": \"Really Fast Running Shoes\",",
                      "    \"category\": \"Apparel/Shoes\",",
                      "    \"price\": 100,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Black\",",
                      "    \"quantity\": 2",
                      "  }, {",
                      "    \"sku\": \"P67890\",",
                      "    \"name\": \"Running Shirt\",",
                      "    \"category\": \"Apparel/Shirts\",",
                      "    \"price\": 50,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Blue\",",
                      "    \"quantity\": 3",
                      "  } ]",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "contents",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-window.trackingParametersInitiateCheckoutEventContents" ] },
              "doc": "`key:value` pairs describing the products." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersInitiateCheckoutEventContents",
        "locations":
          [ { "lineno": 894,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an InitiateCheckout track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send an InitiateCheckout trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"InitiateCheckout\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"contents\": [ {",
                      "    \"sku\": \"P12345\",",
                      "    \"name\": \"Really Fast Running Shoes\",",
                      "    \"category\": \"Apparel/Shoes\",",
                      "    \"price\": 100,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Black\",",
                      "    \"quantity\": 2",
                      "  }, {",
                      "    \"sku\": \"P67890\",",
                      "    \"name\": \"Running Shirt\",",
                      "    \"category\": \"Apparel/Shirts\",",
                      "    \"price\": 50,",
                      "    \"currency\": \"USD\",",
                      "    \"brand\": \"SomeBrand\",",
                      "    \"variant\": \"Blue\",",
                      "    \"quantity\": 3",
                      "  } ]",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Product ID.",
              "optional": true },
            { "name": "sku",
              "type": "string",
              "doc": "Stock-keeping unit for the product.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Product name." },
            { "name": "category",
              "type": "string",
              "doc": "Product category. For example, `Accessories/Watches`.",
              "optional": true },
            { "name": "price",
              "type": "number",
              "doc": "Product price.",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.",
              "optional": true },
            { "name": "brand",
              "type": "string",
              "doc": "Brand name of the product.",
              "optional": true },
            { "name": "variant",
              "type": "string",
              "doc": "Product variant such as `green` or `large`.",
              "optional": true },
            { "name": "quantity",
              "type": "number",
              "doc": "Product quantity.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersLeadEvent",
        "locations":
          [ { "lineno": 910,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending a Lead track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "category",
              "type": "string",
              "doc": "Lead category.",
              "optional": true },
            { "name": "action",
              "type": "string",
              "doc": "Lead action.",
              "optional": true },
            { "name": "label",
              "type": "string",
              "doc": "Lead label.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersPurchaseEvent",
        "locations":
          [ { "lineno": 919,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending a Purchase track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send a Purchase trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"Purchase\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"id\": \"T12345\",",
                      "  \"affiliation\": \"My Store\",",
                      "  \"revenue\": 22.16,",
                      "  \"tax\": 2.85,",
                      "  \"shipping\": 5.34,",
                      "  \"coupon\": \"SUMMER2018\",",
                      "  \"contents\": [ {",
                      "    \"id\": \"ABC123\",",
                      "    \"quantity\": 2,",
                      "    \"price\": 1.99,",
                      "    \"currency\": \"USD\"",
                      "  }, {",
                      "    \"id\": \"XYZ789\",",
                      "    \"quantity\": 1,",
                      "    \"price\": 9.99,",
                      "    \"currency\": \"USD\"",
                      "  } ]",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Transaction ID or order number.",
              "optional": true },
            { "name": "affiliation",
              "type": "string",
              "doc": "Store name.",
              "optional": true },
            { "name": "revenue",
              "type": "number",
              "doc": "Total purchase price. Includes tax and shipping fee.",
              "optional": true },
            { "name": "tax",
              "type": "number",
              "doc": "Total tax.",
              "optional": true },
            { "name": "shipping",
              "type": "number",
              "doc": "Shipping fee.",
              "optional": true },
            { "name": "coupon",
              "type": "string",
              "doc": "Applied coupon code.",
              "optional": true },
            { "name": "contents",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-window.trackingParametersPurchaseEventContents" ] },
              "doc": "`key:value` pairs describing the purchased products." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersPurchaseEventContents",
        "locations":
          [ { "lineno": 935,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an Purchase track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send a Purchase trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"Purchase\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"id\": \"T12345\",",
                      "  \"affiliation\": \"My Store\",",
                      "  \"revenue\": 22.16,",
                      "  \"tax\": 2.85,",
                      "  \"shipping\": 5.34,",
                      "  \"coupon\": \"SUMMER2018\",",
                      "  \"contents\": [ {",
                      "    \"id\": \"ABC123\",",
                      "    \"quantity\": 2,",
                      "    \"price\": 1.99,",
                      "    \"currency\": \"USD\"",
                      "  }, {",
                      "    \"id\": \"XYZ789\",",
                      "    \"quantity\": 1,",
                      "    \"price\": 9.99,",
                      "    \"currency\": \"USD\"",
                      "  } ]",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Product ID.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Product name." },
            { "name": "category",
              "type": "string",
              "doc": "Product category. For example, `Accessories/Watches`.",
              "optional": true },
            { "name": "price",
              "type": "number",
              "doc": "Product price.",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.",
              "optional": true },
            { "name": "brand",
              "type": "string",
              "doc": "Brand name of the product.",
              "optional": true },
            { "name": "variant",
              "type": "string",
              "doc": "Product variant such as `green` or `large`.",
              "optional": true },
            { "name": "quantity",
              "type": "number",
              "doc": "Product quantity.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersRemoveFromCartEvent",
        "locations":
          [ { "lineno": 951,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending a RemoveFromCart track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send a RemoveFromCart trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"RemoveFromCart\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"id\": \"P12346\",",
                      "  \"name\": \"Really Fast Running Shoes\",",
                      "  \"price\": 125.95,",
                      "  \"currency\": \"USD\",",
                      "  \"category\": \"Apparel/Shoes\",",
                      "  \"brand\": \"SomeBrand\",",
                      "  \"variant\": \"Black\",",
                      "  \"position\": 1,",
                      "  \"quantity\": 1",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Product ID.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Product name." },
            { "name": "price",
              "type": "number",
              "doc": "Product price.",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.",
              "optional": true },
            { "name": "category",
              "type": "string",
              "doc": "Product category. For example, `Accessories/Watches`.",
              "optional": true },
            { "name": "brand",
              "type": "string",
              "doc": "Brand name of the product.",
              "optional": true },
            { "name": "variant",
              "type": "string",
              "doc": "Product variant such as `green` or `large`.",
              "optional": true },
            { "name": "position",
              "type": "string",
              "doc": "Position of the product within a list or collection.",
              "optional": true },
            { "name": "quantity",
              "type": "number",
              "doc": "Product quantity.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersStartPaymentEvent",
        "locations":
          [ { "lineno": 969,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending an StartPayment track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send a StartPayment trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "wixWindow.trackEvent(\"StartPayment\", {",
                      "  \"origin\": \"My Sportswear Store\",",
                      "  \"option\": \"CreditCardCompany\"",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "option",
              "type": "string",
              "doc": "Payment type. For example, `Visa` or `PayPal`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "trackingParametersViewContentEvent",
        "locations":
          [ { "lineno": 979,
              "filename": "window.js" } ],
        "docs":
          { "summary": "An object used when sending a ViewContent track event.",
            "links":
              [ "[trackEvent( )](wix-window.html#trackEvent)" ],
            "examples":
              [ { "title": "Send a ViewContent trackEvent",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "// ...",
                      "",
                      "wixWindow.trackEvent(\"ViewContent\", {",
                      "  origin: \"My Sportswear Store\",",
                      "  id: \"P12345\",",
                      "  sku: 20,",
                      "  name: \"Really Fast Running Shoes\",",
                      "  price: 120,",
                      "  currency: \"USD\",",
                      "  category: \"Apparel/Shoes\",",
                      "  brand: \"SomeBrand\",",
                      "  variant: \"Black\",",
                      "  list: \"Product Gallery\",",
                      "  position: 1",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "origin",
              "type": "string",
              "doc": "Event origin. For example, `Music Player` or `Contact Form`.",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Product ID.",
              "optional": true },
            { "name": "sku",
              "type": "string",
              "doc": "Stock-keeping unit for the product.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Product name." },
            { "name": "price",
              "type": "number",
              "doc": "Product price.",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.",
              "optional": true },
            { "name": "category",
              "type": "string",
              "doc": "Product category. For example, `Accessories/Watches`.",
              "optional": true },
            { "name": "brand",
              "type": "string",
              "doc": "Brand name of the product.",
              "optional": true },
            { "name": "variant",
              "type": "string",
              "doc": "Product variant such as `green` or `large`.",
              "optional": true },
            { "name": "list",
              "type": "string",
              "doc": "List or collection the product is part of. For example, `Product Gallery` or `Search Results`.",
              "optional": true },
            { "name": "position",
              "type": "string",
              "doc": "Position of the product within a list or collection.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "scopes":
        [ "frontend" ] },
  "menuSections": "APIs",
  "relatedContent":
    [ { "icon": "article",
        "text": "Processing Payments",
        "url": "https://support.wix.com/en/article/velo-tutorial-processing-payments" },
      { "icon": "article",
        "text": "Sending Tracking and Analytics Events",
        "url": "https://support.wix.com/en/article/velo-tutorial-sending-tracking-and-analytics-events" },
      { "icon": "article",
        "text": "Creating a One-Time Popup",
        "url": "https://support.wix.com/en/article/velo-tutorial-creating-a-one-time-popup" },
      { "icon": "article",
        "text": "Displaying Elements in Mobile Only",
        "url": "https://support.wix.com/en/article/velo-tutorial-displaying-elements-in-mobile-only" },
      { "icon": "article",
        "text": "Writing Code That Only Runs on Mobile Devices",
        "url": "https://support.wix.com/en/article/velo-writing-code-that-only-runs-on-mobile-devices" },
      { "icon": "example",
        "text": "Reviews",
        "url": "https://www.wix.com/velo/example/product-reviews" },
      { "icon": "example",
        "text": "Product Configurator",
        "url": "https://www.wix.com/velo/example/product-configurator" },
      { "icon": "example",
        "text": "Service List",
        "url": "https://www.wix.com/velo/example/service-list" },
      { "icon": "example",
        "text": "Stories",
        "url": "https://www.wix.com/velo/example/stories" } ],
  "FAQs":
    [ { "title": "How do I make my site act differently depending on what device it is being viewed on?",
        "markdown": "You can check the type of device your site is being viewed on using the [`formFactor`](https://www.wix.com/code/reference/wix-window.html#formFactor) property. Note, that when you preview your site in the mobile editor the [`formFactor`](https://www.wix.com/code/reference/wix-window.html#formFactor) property still returns `\"Desktop\"`." },
      { "title": "How do I close a lightbox?",
        "markdown": "Although you can open a lightbox using the top-level wix-window API with the [`openLightbox()`](https://www.wix.com/code/reference/wix-window.html#openLightbox) function, there is no top-level wix-window function for closing lightboxes. That's because once the lightbox is open, control is moved away from the page that opened the lightbox to the lightbox itself. Therefore, to close the lightbox, you have to call the [`wix-window.lightbox.close()`](https://www.wix.com/code/reference/wix-window.lightbox.html#close) function from within the lightbox's code." },
      { "title": "How do I pass data between a page and a lightbox?",
        "markdown": "When you open a lightbox using the [`openLightbox()`](https://www.wix.com/code/reference/wix-window.html#openLightbox) function, you can pass an object containing data to be used in the lightbox. In the lightbox's code, you call the [`getContext()`](https://www.wix.com/code/reference/wix-window.lightbox.html#getContext) function to retrieve the data sent by the [`openLightbox()`](https://www.wix.com/code/reference/wix-window.html#openLightbox) function. \n\nWhen you close the lightbox using the [`close()`](https://www.wix.com/code/reference/wix-window.lightbox.html#close) function, you can pass an object containing data to be used by the page that opened the lightbox. This data is retrieved from the resolution of the Promise returned by the [`openLightbox()`](https://www.wix.com/code/reference/wix-window.html#openLightbox) function.\n" },
      { "title": "How does my site interact with a site that embeds it?",
        "markdown": "You can send messages from your site to a site that embeds it using the [`postMessage()`](https://www.wix.com/code/reference/wix-window.html#postMessage) function. \n\nIf the embedding site is a Wix site, use the [`HTMLComponent.onMessage()`](https://www.wix.com/code/reference/$w.HtmlComponent.html#onMessage) function in the embedding site to receive messages sent from the embedded site.\n\nIf the embedding site is not a Wix site, use the Javascript [window.onmessage](https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onmessage) event handler to read the data property of the received [MessageEvent](https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent) to receive the message on the parent page." } ] }