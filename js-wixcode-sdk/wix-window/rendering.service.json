{ "name": "rendering",
  "memberOf": "wix-window",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 281,
      "filename": "window.es6" },
  "docs":
    { "summary": "The Rendering API is used to control when code is run as a page is being loaded.",
      "description":
        [ "When possible, the rendering process that runs when your page loads is",
          " split in two in order to improve performance. The first cycle in the process",
          " happens server-side and the second cycle happens client-side. When not",
          " possible, all rendering happens client-side.",
          "",
          " Use the Rendering API to track when and where your code is running to",
          " selectively run parts of your code in certain conditions.",
          "",
          " To use the Rendering API, import `wixWindow` from the `wix-window` module:",
          "",
          "   ```javascript",
          "   import wixWindow from 'wix-window';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "env",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 199,
              "filename": "window.es6" } ],
        "docs":
          { "summary": "Gets the current environment the rendering process is running in.",
            "description":
              [ "When possible, the rendering process is split in two in order to",
                " improve performance. The first cycle in the process happens server-side",
                " and the second cycle happens client-side. When not possible, all rendering",
                " happens client-side.",
                "",
                " The `env` property returns `\"backend\"` when rendering on the server",
                " and `\"browser\"` when rendering on the client.",
                "",
                " Use the `env` property in your page's [`onReady()`]($w.html#onReady)",
                " event handler to control where your code runs during the rendering",
                " process and to prevent code that causes side effects from running twice." ],
            "links": [],
            "examples":
              [ { "title": "Use the Rendering API to avoid inserting an item twice",
                  "body":
                    [ "import wixData from 'wix-data';",
                      "import wixWindow from 'wix-window';",
                      "",
                      "let toInsert = {",
                      "  \"field1\": \"Some value\",",
                      "  \"field2\": \"Some other value\"",
                      "};",
                      "",
                      "$w.onReady(function () {",
                      "  if (wixWindow.rendering.env === \"browser\") {",
                      "    return wixData.insert(\"myCollection\", toInsert)",
                      "      .then( (item) => {",
                      "        $w(\"#myText\").text = item.title;",
                      "      } );",
                      "  }",
                      "} );",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to make sure a collection insertion in the `onReady` \n event handler occurs only once." } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "Rendering never occurs server-side when previewing your site." ] } },
      { "name": "renderCycle",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 185,
              "filename": "window.es6" } ],
        "docs":
          { "summary": "**Deprecated:** Gets the current cycle in the rendering process.",
            "description":
              [ "**Deprecation note:** The `renderCycle` property no longer works as expected.",
                " It will always return `1`." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "warmupData",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          [ "boolean",
            "number",
            "string",
            "Object" ],
        "locations":
          [ { "lineno": 230,
              "filename": "window.es6" } ],
        "docs":
          { "summary": "**Deprecated:** Gets data sent from server-side code to client-side code.",
            "description":
              [ "**Deprecation note:** The `warmupData` property can no longer be used in a reliable",
                " manner.",
                "",
                " When possible, the rendering process is split in two in order to",
                " improve performance. The first cycle in the process happens server-side",
                " and the second cycle happens client-side. When not possible, all rendering",
                " happens client-side.",
                "",
                " Pass data from the server-side cycle to the client-side cycle by",
                " returning the data from the [`onReady()`]() function when it is run server-side.",
                " Then retrieve that data client-side by getting the value of the",
                " `warmupData` property." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "Rendering never occurs server-side when previewing your site." ] } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }