{ "name": "WarmupData",
  "memberOf": "wix-window",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 251,
      "filename": "window.es6" },
  "docs":
    { "summary": "The Warmup Data API is used to optimize data loading for sites that render both in the backend code and in the client-side code, allowing costly data fetching operations to be done only once.",
      "description":
        [ "When possible, the [rendering process](https://support.wix.com/en/article/velo-about-the-page-rendering-process) that runs",
          " when your site page initially loads is",
          " split in two in order to improve performance. When not",
          " possible, all rendering happens client-side.",
          "",
          " Because rendering can occur twice, once in the backend code and once in the client-side code, ",
          " it is preferred to perform time-consuming tasks only once, such as querying ",
          " collections or working with the results of network requests from external sites. ",
          " It is best to perform these operations in the backend code if possible.      ",
          "  ",
          " It is important to note that it is possible for the client-side code to either render before the backend code or",
          " to provide the only rendering that occurs (for example, when visitors navigate from page to page within a site, only client-side ",
          " rendering occurs). In these cases, requesting the warmup data from the backend while in the client-side code returns `undefined`. ",
          " The client-side code must ",
          " check for this scenario and provide a fallback alternative for getting the data. ",
          "",
          " Use the `warmupData` API and the `Rendering` API `env` property to track when and where your code is running. ",
          " This lets you selectively run parts of your code in certain conditions.",
          "",
          " > **Notes:** ",
          " > + Rendering never occurs server-side when previewing your site.",
          " > + `wix-window.warmupData` replaces the deprecated `wix-window.rendering.warmupData`. ",
          " > + Backend rendering only occurs when visitors initially enter the site, and not when visitors navigate from page-to-page within the site.",
          "",
          " To use the Warmup Data API, import `warmupData` from the `wix-window` module:",
          "",
          "   ```javascript",
          "   import { warmupData } from 'wix-window';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "get",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "A name representing the data to return to the client-side. Until rendered, the data is `undefined`." } ],
        "ret":
          { "type": "string",
            "doc": "Returns one of the following: \n  + The data corresponding to the `key` that was set with the `warmupData.set()` function in the backend.\n  + `undefined` if not yet set.\n  + `null` if called from backend code." },
        "locations":
          [ { "lineno": 360,
              "filename": "window.es6" } ],
        "docs":
          { "summary": "Gets data from server-side code for use in client-side code.",
            "description":
              [ "A performance best practice is to get warmup data from the backend code for time-consuming operations, such as querying ",
                " collections or working with the results of network requests from external sites. You can write code that",
                " sets the data from these operations as warmup data in backend code. The client-side code can then `get` that data without ",
                " performing the operations again. ",
                "",
                " Getting the `warmupData` data retrieves data that was set in the backend and makes the data accessible ",
                " from the client-side.",
                "",
                " You can only get `warmupData` in the client-side code. ",
                " + This function returns `null` if called from backend code.",
                " + If this function runs before `warmupData.set()`, this function returns `undefined`.",
                "",
                " > **Notes:** ",
                " > + Rendering never occurs server-side when previewing your site.",
                " > + `wix-window.warmupData` replaces the deprecated `wix-window.rendering.warmupData`. ",
                " > + Backend rendering only occurs when visitors initially enter the site, and not when visitors navigate from page-to-page within the site." ],
            "links": [],
            "examples":
              [ { "title": "Get the warmup data on the client-side",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "...",
                      "",
                      "if (wixWindow.rendering.env == \"browser\") {",
                      "  const myMessage = wixWindow.warmupData.get(\"myWarmupMessage\");",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Use warmup data to send already-retrieved query results from the backend to the client-side",
                  "body":
                    [ "import wixData from 'wix-data';",
                      "import wixWindow from 'wix-window';",
                      "",
                      "async function getData() {",
                      "  const results = await wixData.query(\"MyCollection\")",
                      "    .find();",
                      "  if (wixWindow.rendering.env == \"backend\") {",
                      "    wixWindow.warmupData.set(\"myWarmupData\", results.items);",
                      "    wixWindow.warmupData.set(\"myWarmupMessage\", \"Rendering in the backend.\");",
                      "  }",
                      "  return results;",
                      "}",
                      "",
                      "$w.onReady(async function () {",
                      "  const defaultMessage = \"Rendering client-side.\"",
                      "  const dataResults = wixWindow.warmupData.get(\"myWarmupData\") || await getData();",
                      "  const message = wixWindow.warmupData.get(\"myWarmupMessage\") || defaultMessage;",
                      "  $w(\"#retrievedData\").text = JSON.stringify(dataResults);",
                      "  $w(\"#retrievedMessage\").text = message;",
                      "});" ],
                  "extra":
                    { "description": "This example demonstrates how to use `warmupData` to optimize performance between backend and client-side page \n rendering.\n \n The example has a `getData()` function that performs a query on a `MyCollection` collection. \n\n If this operation happens to run in the backend code, the results are set for later client-side use. The `wixWindow.rendering.env` property\n indicates if the run is occurring on the server (`backend`) or on the client-side (`browser`). \n\n When rendering on the client-side, the client-side code checks if the query results already exist. If so, there is no need to perform the same query again. \n If not, the client-side code runs the query. \n\n Two text boxes are defined on the page: `retrievedMessage` displays a message about where the rendering occurred and `retrievedData` displays the query items." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "set",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "A name representing the data to return to the client-side. Key names are unique within a site. Using the same key name within the same site code overwrites the corresponding data." },
            { "name": "data",
              "type": "*",
              "doc": "The data to return to the client-side." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 325,
              "filename": "window.es6" } ],
        "docs":
          { "summary": "Sets data in server-side code for use in client-side code.",
            "description":
              [ "A performance best practice is to set warmup data for time-consuming operations, such as querying ",
                " collections or working with the results of network requests from external sites. You can write code that",
                " sets the data from these operations as warmup data in backend code. The client-side code can then `get` that data without ",
                " performing the operations again. ",
                "",
                " You can only set `warmupData` in the backend. This function has no effect if called from client-side code.",
                "",
                " > **Notes:** ",
                " > + Rendering never occurs server-side when previewing your site.",
                " > + `wix-window.warmupData` replaces the deprecated `wix-window.rendering.warmupData`. ",
                " > + Backend rendering only occurs when visitors initially enter the site, and not when visitors navigate from page-to-page within the site." ],
            "links": [],
            "examples":
              [ { "title": "Set the warmup data in the backend",
                  "body":
                    [ "import wixWindow from 'wix-window';",
                      "",
                      "...",
                      "",
                      "if (wixWindow.rendering.env == \"backend\") {",
                      "  wixWindow.warmupData.set(\"myWarmupMessage\", \"Now rendering in the backend.\");",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Use warmup data to send already-retrieved query results from the backend to the client-side",
                  "body":
                    [ "import wixData from 'wix-data';",
                      "import wixWindow from 'wix-window';",
                      "",
                      "async function getData() {",
                      "  const results = await wixData.query(\"MyCollection\")",
                      "    .find();",
                      "  if (wixWindow.rendering.env == \"backend\") {",
                      "    wixWindow.warmupData.set(\"myWarmupData\", results.items);",
                      "    wixWindow.warmupData.set(\"myWarmupMessage\", \"Rendering in the backend.\");",
                      "  }",
                      "  return results;",
                      "}",
                      "",
                      "$w.onReady(async function () {",
                      "  const defaultMessage = \"Rendering client-side.\"",
                      "  const dataResults = wixWindow.warmupData.get(\"myWarmupData\") || await getData();",
                      "  const message = wixWindow.warmupData.get(\"myWarmupMessage\") || defaultMessage;",
                      "  $w(\"#retrievedData\").text = JSON.stringify(dataResults);",
                      "  $w(\"#retrievedMessage\").text = message;",
                      "});" ],
                  "extra":
                    { "description": "This example demonstrates how to use `warmupData` to optimize performance between backend and client-side page \n rendering.\n \n The example has a `getData()` function that performs a query on a `MyCollection` collection. \n\n If this operation happens to run in the backend code, the results are set for later client-side use. The `wixWindow.rendering.env` property\n indicates if the run is occurring on the server (`backend`) or on the client-side (`browser`). \n\n When rendering on the client-side, the client-side code checks if the query results already exist. If so, there is no need to perform the same query again. \n If not, the client-side code runs the query. \n\n Two text boxes are defined on the page: `retrievedMessage` displays a message about where the rendering occurred and `retrievedData` displays the query items." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }