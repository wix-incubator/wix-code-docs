{ "name": "wix-stores-frontend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "stores-index.js" },
  "docs":
    { "summary": "The wix-stores-frontend module contains functionality for working with your\n site's store from client-side code.",
      "description":
        [ "To use the Stores API, import `wixStoresFrontend` from the `wix-stores-frontend` module:",
          "",
          "   ```javascript",
          "   import wixStoresFrontend from 'wix-stores-frontend';",
          "   ```",
          "> **Note:**",
          " Additional Stores related APIs can be found in the [`$w.CartIcon`](/$w/cart-icon/introduction),",
          "  [`$w.ProductPage`](/$w/product-page/introduction), [`$w.ThankYouPage`](/$w/thank-you-page/introduction), and [`Currencies`](/wix-pay-backend/currencies/introduction) pages." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "cart",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-stores-frontend.Cart",
        "locations":
          [ { "lineno": 54,
              "filename": "stores-index.js" } ],
        "docs":
          { "summary": "The wix-stores-frontend.cart module provides functionality for working with your site's cart from client-side code.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "navigate",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-stores-frontend.Navigate",
        "locations":
          [ { "lineno": 72,
              "filename": "stores-index.js" } ],
        "docs":
          { "summary": "The wix-stores-frontend.navigate module provides functionality for navigating your store from client-side code.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "product",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-stores-frontend.Product",
        "locations":
          [ { "lineno": 63,
              "filename": "stores-index.js" } ],
        "docs":
          { "summary": "The wix-stores-frontend.product module provides functionality for working with your store's products from client-side code.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks":
    [ { "name": "CartChangedHandler",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-frontend.CartObj",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 156,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "Function that runs when a cart changes.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "messages":
    [ { "name": "CartAddress",
        "locations":
          [ { "lineno": 17,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing an address.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "firstName",
              "type": "string",
              "doc": "First name." },
            { "name": "lastName",
              "type": "string",
              "doc": "Last name." },
            { "name": "email",
              "type": "string",
              "doc": "Email address." },
            { "name": "phone",
              "type": "string",
              "doc": "Phone number." },
            { "name": "address",
              "type": "string",
              "doc": "Address." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartAppliedCoupon",
        "locations":
          [ { "lineno": 28,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a coupon applied in a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "code",
              "type": "string",
              "doc": "Coupon code." },
            { "name": "couponId",
              "type": "string",
              "doc": "Coupon unique identifier." },
            { "name": "name",
              "type": "string",
              "doc": "Coupon name." },
            { "name": "couponType",
              "type": "string",
              "doc": "Type of coupon.\n One of:\n\n + `\"BuyXGetY\"`\n + `\"FixedPriceAmount\"`\n + `\"FreeShipping\"`\n + `\"MoneyOffAmount\"`\n + `\"PercentOffRate\"`" },
            { "name": "discountValue",
              "type": "string",
              "doc": "Value of the coupon discount." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartBuyerInfo",
        "locations":
          [ { "lineno": 46,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a visitor who abandoned a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Buyer's unique ID." },
            { "name": "email",
              "type": "string",
              "doc": "Buyer's email address." },
            { "name": "firstName",
              "type": "string",
              "doc": "Buyer's first name." },
            { "name": "lastName",
              "type": "string",
              "doc": "Buyer's last name." },
            { "name": "identityType",
              "type": "string",
              "doc": "Buyer's identity.\n One of:\n\n + `\"ADMIN\"`: Buyer is the site owner.\n + `\"MEMBER\"`: Buyer is a logged-in site member.\n + `\"VISITOR\"`: Buyer is not logged in.\n + `\"CONTACT\"`: A contact has been created for the buyer." },
            { "name": "phone",
              "type": "string",
              "doc": "Buyer's phone number." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartCustomTextField",
        "locations":
          [ { "lineno": 120,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a custom text field.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Field title." },
            { "name": "value",
              "type": "string",
              "doc": "Field value." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartLineItem",
        "locations":
          [ { "lineno": 79,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a line item in a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "number",
              "doc": "Cart line item ID." },
            { "name": "name",
              "type": "string",
              "doc": "Name of the line item." },
            { "name": "notes",
              "type": "string",
              "doc": "Notes about the line item." },
            { "name": "price",
              "type": "string",
              "doc": "Line item price." },
            { "name": "productId",
              "type": "string",
              "doc": "Line item product ID." },
            { "name": "quantity",
              "type": "number",
              "doc": "Line item quantity." },
            { "name": "sku",
              "type": "string",
              "doc": "Line item stock keeping unit." },
            { "name": "totalPrice",
              "type": "string",
              "doc": "Total price charged to the customer for all line items after any applicable discounts." },
            { "name": "weight",
              "type": "string",
              "doc": "Line item weight." },
            { "name": "lineItemType",
              "type": "string",
              "doc": "Type of the line item.\n One of:\n\n + `\"DIGITAL\"`: Digital item.\n + `\"PHYSICAL\"`: Physical item.\n + `\"CUSTOM_AMOUNT_ITEM\"`: Item with a custom price.\n + `\"UNSPECIFIED\"`: Type can't be classified due to an error." },
            { "name": "options",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores-frontend.Option" ] },
              "doc": "Line item options." },
            { "name": "mediaItem",
              "type": "wix-stores-frontend.CartMediaItem",
              "doc": "Media item." },
            { "name": "customTextFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores-frontend.CartCustomTextField" ] },
              "doc": "Custom text." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartMediaItem",
        "locations":
          [ { "lineno": 112,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a line item's primary media.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "Media item type. Currently only `\"IMAGE\"` type supported." },
            { "name": "src",
              "type": "string",
              "doc": "Media item source for media uploaded to Wix (wix:image, wix:video or external URL)." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartObj",
        "locations":
          [ { "lineno": 1,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a shopping cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Unique identifier of the shopping cart." },
            { "name": "appliedCoupon",
              "type": "wix-stores-frontend.CartAppliedCoupon",
              "doc": "Coupon applied in the shopping cart." },
            { "name": "billingAddress",
              "type": "wix-stores-frontend.CartAddress",
              "doc": "Cart billing address." },
            { "name": "buyerInfo",
              "type": "wix-stores-frontend.CartBuyerInfo",
              "doc": "The buyer's information." },
            { "name": "status",
              "type": "string",
              "doc": "Cart status. Either `\"INCOMPLETE\"` or `\"COMPLETE\"`." },
            { "name": "currency",
              "type": "wix-stores-frontend.Currency",
              "doc": "Currency of the shopping cart." },
            { "name": "shippingInfo",
              "type": "wix-stores-frontend.CartShippingInfo",
              "doc": "The shopping cart's shipping information." },
            { "name": "lineItems",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores-frontend.CartLineItem" ] },
              "doc": "Items in the shopping cart." },
            { "name": "totals",
              "type": "wix-stores-frontend.OrderTotals",
              "doc": "The shopping cart's totals." },
            { "name": "weightUnit",
              "type": "string",
              "doc": "The order's units of weight. One of: `\"KG\"`, `\"LB\"`, or `\"UNSPECIFIED_WEIGHT_UNIT\"`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CartShippingInfo",
        "locations":
          [ { "lineno": 71,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing shipping information.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "shippingAddress",
              "type": "wix-stores-frontend.CartAddress",
              "doc": "Shipment address.",
              "optional": true },
            { "name": "pickupInfo",
              "type": "wix-stores-frontend.CartAddress",
              "doc": "Pickup address.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Currency",
        "locations":
          [ { "lineno": 64,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a currency.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "The currency code." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "MediaItem",
        "locations":
          [ { "lineno": 181,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing a media item.",
            "description":
              [ "The `src` property of a `MediaItem` can be an image or video from the [Media Manager](https://support.wix.com/en/article/about-the-media-manager).",
                "",
                " The image source format for Media Manager images is:",
                " `wix:image://v1/<uri>/<filename>#originWidth=<width>&originHeight=<height>[&watermark=<watermark_manifest_string>]`",
                "",
                " The video source format is:",
                " `wix:video://v1/<video_uri>/<filename>#posterUri=<poster_uri>&posterWidth=<width>&posterHeight=<height>`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Media item ID." },
            { "name": "title",
              "type": "string",
              "doc": "Media item title." },
            { "name": "description",
              "type": "string",
              "doc": "Media item description." },
            { "name": "type",
              "type": "string",
              "doc": "Media items type. Can be \"image\" or \"video.\"" },
            { "name": "src",
              "type": "string",
              "doc": "Media item URL." },
            { "name": "thumbnail",
              "type": "string",
              "doc": "Thumbnail URL for videos only.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Option",
        "locations":
          [ { "lineno": 104,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing a line item option.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "option",
              "type": "string",
              "doc": "Name of the product option." },
            { "name": "selection",
              "type": "string",
              "doc": "Selected option." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "OrderTotals",
        "locations":
          [ { "lineno": 128,
              "filename": "carts.js" } ],
        "docs":
          { "summary": "An object representing an order's totals.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "subtotal",
              "type": "number",
              "doc": "The subtotal of all the order's line items, excluding tax." },
            { "name": "shipping",
              "type": "number",
              "doc": "The total shipping price, including tax." },
            { "name": "tax",
              "type": "string",
              "doc": "The total amount of tax." },
            { "name": "discount",
              "type": "number",
              "doc": "The total calculated discount amount." },
            { "name": "total",
              "type": "number",
              "doc": "The total price." },
            { "name": "weight",
              "type": "number",
              "doc": "The total weight of the order's items." },
            { "name": "quantity",
              "type": "number",
              "doc": "The total quantity of the the order's line items." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PagingOptions",
        "locations":
          [ { "lineno": 122,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing paging options.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "limit",
              "type": "number",
              "doc": "Maximum number of variants to retrieve. Defaults to 300.",
              "optional": true },
            { "name": "skip",
              "type": "number",
              "doc": "Number of variants to skip before the retrieved variants. Defaults to 0.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductChoices",
        "locations":
          [ { "lineno": 110,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing a product variant's option choices.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionKey",
              "type": "string",
              "doc": "Value of the choice. This key name is\n dependent on the product option. For example, if a product\n has a size option, this key value will be something like \"Size\" and its value\n will be something like \"Large\".\n\n `optionKey` is not case-sensitive. Therefore the values for the option keys \"`Size`\", \"`SIZE`\", and \"`size`\" are combined." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOption",
        "locations":
          [ { "lineno": 45,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing an option for a store product.",
            "links":
              [ "[getProduct( )](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionType",
              "type": "string",
              "doc": "Option type. Either `\"color\"` or `\"drop_down\"`." },
            { "name": "name",
              "type": "string",
              "doc": "Option name." },
            { "name": "choices",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores-frontend.ProductOptionsChoice" ] },
              "doc": "Option choices." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptions",
        "locations":
          [ { "lineno": 33,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing all the available options for a store product, such as \"Size\" or \"Color\".",
            "description":
              [ "An option cannot be changed if it has choices and variants. To change an option, reset its variants with [`resetVariantData()`](wix-stores-backend.html#resetVariantData). For each option, you can define a maximum of six choices." ],
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionKey",
              "type": "wix-stores-frontend.ProductOption",
              "doc": "Name of the option. This key name\n is dependent on the options added to the product. For example, if a product has a size\n option, this key will be something like `\"Size\"`.\n\n `optionKey` is not case-sensitive. Therefore the values for the option keys \"`Size`\", \"`SIZE`\", and \"`size`\" are combined." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailability",
        "locations":
          [ { "lineno": 1,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object returned by the `getProductOptionsAvailability()` function representing the availability of a product.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "availableForPurchase",
              "type": "boolean",
              "doc": "Whether the product with the specified option choices is available for purchase." },
            { "name": "productOptions",
              "type": "wix-stores-frontend.ProductOptions",
              "doc": "An object representing all the available options for a store product." },
            { "name": "mainMedia",
              "type": "string",
              "doc": "Main product media item (image or video) URL." },
            { "name": "mediaItems",
              "type": "wix-stores-frontend.MediaItem",
              "doc": "List of product media items." },
            { "name": "selectedVariant",
              "type": "wix-stores-frontend.ProductOptionsAvailabilitySelectedVariant",
              "doc": "The variant of the product selected using the specified option choices if there is one." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailabilitySelectedVariant",
        "locations":
          [ { "lineno": 55,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing the product variant selected using the `getProductOptionsAvailability()` function.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sku",
              "type": "string",
              "doc": "Product variant stock keeping unit value." },
            { "name": "currency",
              "type": "string",
              "doc": "Product variant currency." },
            { "name": "price",
              "type": "number",
              "doc": "Product variant price. The variant price must be greater than its discount." },
            { "name": "discountedPrice",
              "type": "number",
              "doc": "Discounted product variant price." },
            { "name": "formattedPrice",
              "type": "string",
              "doc": "Product variant price formatted with the currency." },
            { "name": "formattedDiscountedPrice",
              "type": "string",
              "doc": "Discounted product variant price formatted with the currency." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the product variant is shown in the store." },
            { "name": "inStock",
              "type": "boolean",
              "doc": "Whether the product variant is in stock." },
            { "name": "weight",
              "type": "number",
              "doc": "Product variant weight." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsChoice",
        "locations":
          [ { "lineno": 13,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing an options choice for a store product, such as choice \"Small\" for the option \"Size.\"",
            "description":
              [ "You can define between one and thirty choices for each option." ],
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "value",
              "type": "number",
              "doc": "Choice value." },
            { "name": "description",
              "type": "number",
              "doc": "Choice description." },
            { "name": "media",
              "type": "wix-stores-frontend.ProductOptionsChoiceMedia",
              "doc": "Choice media." },
            { "name": "inStock",
              "type": "boolean",
              "doc": "Whether the product with this choice is in stock." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the product with this option is visible." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsChoiceMedia",
        "locations":
          [ { "lineno": 25,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing the choice media.",
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "mainMedia",
              "type": "string",
              "doc": "Main choice media item (image or video thumbnail) URL." },
            { "name": "mediaItems",
              "type": "wix-stores-frontend.MediaItem",
              "doc": "List of choice media items." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductVariantOptions",
        "locations":
          [ { "lineno": 101,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing the selection of specific variants of a product. Use only one of\n `choices` or `variantIds`.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "choices",
              "type": "Object",
              "doc": "Choices of the retrieved variants.",
              "optional": true },
            { "name": "variantIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of the variants to retrieve.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "QuickViewOptions",
        "locations":
          [ { "lineno": 226,
              "filename": "products.js" } ],
        "docs":
          { "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "quantity",
              "type": "number",
              "doc": "Product quantity to be displayed in the Quick View. Defaults to 1." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "VariantInfo",
        "locations":
          [ { "lineno": 148,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object containing variant information to use when creating or updating variants.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "Variant currency." },
            { "name": "price",
              "type": "number",
              "doc": "Variant price. The variant price must be greater than its discount. If the variant price has been updated, changes to the product price do not affect the variant price." },
            { "name": "discountedPrice",
              "type": "number",
              "doc": "Discounted variant price." },
            { "name": "formattedPrice",
              "type": "string",
              "doc": "Variant price formatted with the currency." },
            { "name": "formattedDiscountedPrice",
              "type": "string",
              "doc": "Discounted variant price formatted with the currency." },
            { "name": "pricePerUnit",
              "type": "number",
              "doc": "Price per unit." },
            { "name": "formattedPricePerUnit",
              "type": "string",
              "doc": "Price per unit formatted with currency symbol." },
            { "name": "weight",
              "type": "number",
              "doc": "Variant weight." },
            { "name": "sku",
              "type": "string",
              "doc": "Variant stock keeping unit value." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the variant is visible in the store." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "VariantItem",
        "locations":
          [ { "lineno": 137,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing a product variant item.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Unique variant ID." },
            { "name": "choices",
              "type": "Object",
              "doc": "Choices of the retrieved variant in the form of an object containing a key:value pair for each variant choice. For example, if a variant has a size option, this key value will be something like \"Size\" and its value will be something like \"Large\"." },
            { "name": "variant",
              "type": "wix-stores-frontend.VariantInfo",
              "doc": "Variant information." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Variants",
        "locations":
          [ { "lineno": 128,
              "filename": "products.js" } ],
        "docs":
          { "summary": "An object representing product variants.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "items",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores-frontend.VariantItem" ] },
              "doc": "List of variant items that match the specified choices or variant IDs." },
            { "name": "length",
              "type": "number",
              "doc": "Number of items in the current results page." },
            { "name": "totalCount",
              "type": "number",
              "doc": "Total number of variants with the specified choices." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "scopes":
        [ "frontend" ] } }
