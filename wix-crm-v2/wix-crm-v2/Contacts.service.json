{
  "name": "Contacts",
  "memberOf": "wix-crm-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-crm.v2-contact",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createContact",
      "params": [
        {
          "name": "info",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": "Contact info.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.CreateContactOptions"
            }
          ],
          "doc": "Create contact options.",
          "required": false
        }
      ],
      "requiredFields": [
        "info"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Contacts.CreateContactResponse"
                }
              ]
            }
          }
        ],
        "doc": "Contact.\n"
      },
      "docs": {
        "summary": "Creates a new contact.",
        "description": [
          "The `createContact()` function returns a Promise\nthat resolves to the new contact when it is created.\n\nThe `info` parameter object must include a name, phone number, or email address.\n If all 3 of these parameters are missing,\n the contact won't be created.\n\nBy default, if the call contains an email already in use by another contact, the new contact won't be created. To override this behavior, set `allowDuplicates` in the `options` object to `true`.\n"
        ],
        "examples": [
          {
            "title": "Create a new contact using a name and email (dashboard page code)",
            "body": [
              "import { contacts } from 'wix-crm.v2';",
              "",
              "/* Sample contact info value:",
              " * {",
              " *   name: {",
              " *     first: 'John',",
              " *     last: 'Doe'",
              " *   },",
              " *   emails: {",
              " *     items: [",
              " *       {",
              " *         email: 'johndoe1@example.com',",
              " *       }",
              " *     ]",
              " *   }",
              " * }",
              " */",
              "",
              "export async function myCreateContactFunction(info) {",
              "  ",
              "  try {",
              "    const newContact = await contacts.createContact(info);    ",
              "    console.log('Successfully created a new contact:', newContact);",
              "    ",
              "    return newContact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": 1,",
              " *   \"source\": {",
              " *     \"sourceType\": \"WIX_CODE\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"lastActivity\": {",
              " *     \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *     \"activityType\": \"CONTACT_CREATED\"",
              " *   },",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"johndoe1@example.com\",",
              " *     \"phone\": \"6465676359\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"John\",",
              " *       \"last\": \"Doe\"",
              " *     },",
              " *     \"emails\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"UNTAGGED\",",
              " *           \"email\": \"johndoe1@example.com\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"phones\": {},",
              " *     \"addresses\": {},",
              " *     \"extendedFields\": {",
              " *       \"items\": {",
              " *         \"contacts.displayByLastName\": \"Doe John\",",
              " *         \"invoices.vatId\": \"\",",
              " *         \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *         \"contacts.displayByFirstName\": \"John Doe\"",
              " *       }",
              " *     }",
              " *   },",
              " *   \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *   \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *   \"_updatedDate\": \"2023-12-24T12:50:46.047Z\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Create a new contact using a name and email (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contact info value:",
              " * {",
              " *   name: {",
              " *     first: 'John',",
              " *     last: 'Doe'",
              " *   },",
              " *   emails: {",
              " *     items: [",
              " *       {",
              " *         email: 'johndoe1@example.com',",
              " *       }",
              " *     ]",
              " *   }",
              " * }",
              " */",
              "",
              "export const myCreateContactFunction = webMethod(Permissions.Anyone, async (info) => {",
              "  ",
              "  try {",
              "    const elevatedCreateContact = elevate(contacts.createContact);",
              "    const newContact = await elevatedCreateContact(info);    ",
              "    console.log('Successfully created a new contact:', newContact);",
              "    ",
              "    return newContact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": 1,",
              " *   \"source\": {",
              " *     \"sourceType\": \"WIX_CODE\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"lastActivity\": {",
              " *     \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *     \"activityType\": \"CONTACT_CREATED\"",
              " *   },",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"johndoe1@example.com\",",
              " *     \"phone\": \"6465676359\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"John\",",
              " *       \"last\": \"Doe\"",
              " *     },",
              " *     \"emails\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"UNTAGGED\",",
              " *           \"email\": \"johndoe1@example.com\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"phones\": {},",
              " *     \"addresses\": {},",
              " *     \"extendedFields\": {",
              " *       \"items\": {",
              " *         \"contacts.displayByLastName\": \"Doe John\",",
              " *         \"invoices.vatId\": \"\",",
              " *         \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *         \"contacts.displayByFirstName\": \"John Doe\"",
              " *       }",
              " *     }",
              " *   },",
              " *   \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *   \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *   \"_updatedDate\": \"2023-12-24T12:50:46.047Z\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Create a new contact, full object with options ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample info value:",
              " * {",
              " *   name: {",
              " *     first: 'John',",
              " *     last: 'Doe'",
              " *   },",
              " *   emails: {",
              " *     items: [",
              " *       {",
              " *         tag: 'UNTAGGED',",
              " *         email: 'johndoe1@example.com',",
              " *         _id: '37db3bde-83c0-4ca2-8097-88964a2f343b'",
              " *       }",
              " *     ]",
              " *   },",
              " *   company: 'Wix',",
              " *   jobTitle: 'Writer',",
              " *   phones: {",
              " *     items: [",
              " *       {",
              " *         phone: '6465676359',",
              " *         countryCode: 'US',",
              " *         primary: 'true',",
              " *         tag: 'MOBILE' ",
              " *       }",
              " *     ]",
              " *   },",
              " *   birthdate: '1995-04-25',",
              " *   locale: 'en-us',",
              " *   labelKeys: {",
              " *     items: [",
              " *       'custom.contact'",
              " *     ]",
              " *   },",
              " *   extendedFields': {",
              " *     items: {",
              " *       custom.nickname: 'Jonny'",
              " *     }",
              " *   },",
              " *   addresses: {",
              " *     items: [",
              " *       {",
              " *         tag: 'HOME',",
              " *         address: {",
              " *           addressLine1: '3 Park Ave',",
              " *           city: 'NY',",
              " *           subdivision: 'US-NY',",
              " *           country: 'US',",
              " *           postalCode: '10010'",
              " *         }",
              " *       ]",
              " *     }",
              " *   }",
              " * }",
              " * ",
              " * Sample options value: ",
              " * { ",
              " *   allowDuplicates: true ",
              " * }",
              " */",
              "",
              "export const myCreateContactFunction = webMethod(Permissions.Anyone, async (info, options) => {",
              "  ",
              "  try {",
              "    const elevatedCreateContact = elevate(contacts.createContact);",
              "    const newContact = await elevatedCreateContact(info, options);",
              "    console.log('Successfully created a new contact:', newContact);",
              "",
              "    return newContact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": 1,",
              " *   \"source\": {",
              " *     \"sourceType\": \"WIX_CODE\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"lastActivity\": {",
              " *     \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *     \"activityType\": \"CONTACT_CREATED\"",
              " *   },",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"johndoe1@example.com\",",
              " *     \"phone\": \"6465676359\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"John\",",
              " *       \"last\": \"Doe\"",
              " *     },",
              " *     \"emails\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"UNTAGGED\",",
              " *           \"email\": \"johndoe1@example.com\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *         },",
              " *       ]",
              " *     },",
              " *     \"phones\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"MOBILE\",",
              " *           \"countryCode\": \"US\",",
              " *           \"phone\": \"646-567-6359\",",
              " *           \"e164Phone\": \"+16465676359\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"ed1d7da0-b4a1-4164-81b7-c49dedc25dd7\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"addresses\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"HOME\",",
              " *           \"address\": {",
              " *             \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *             \"addressLine1\": \"3 Park Ave\",",
              " *             \"city\": \"NY\",",
              " *             \"subdivision\": \"US-NY\",",
              " *             \"country\": \"US\",",
              " *             \"postalCode\": \"10010\"",
              " *           },",
              " *           \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"company\": \"Wix\",",
              " *     \"jobTitle\": \"Writer\",",
              " *     \"birthdate\": \"1995-04-25\",",
              " *     \"locale\": \"en-us\",",
              " *     \"labelKeys\": {",
              " *       \"items\": [",
              " *         \"custom.contact\"",
              " *       ]",
              " *     },",
              " *     \"extendedFields\": {",
              " *       \"items\": {",
              " *         \"contacts.displayByLastName\": \"Doe John\",",
              " *         \"invoices.vatId\": \"\",",
              " *         \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *         \"contacts.displayByFirstName\": \"John Doe\",",
              " *         \"custom.nickname\": \"Jonny\"",
              " *       }",
              " *     }",
              " *   },",
              " *   \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *   \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *   \"_updatedDate\": \"2023-12-24T12:50:46.047Z\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Create a new contact with custom labels ",
            "body": [
              "/**********************************",
              " * Backend code - contacts.web.js *",
              " **********************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts, labels } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "",
              "export const createContactWithLabels = webMethod(Permissions.Anyone, async (contactInfo) => {",
              "",
              "try {  ",
              "  const elevatedQueryLabels = elevate(labels.queryLabels);",
              "  const myLabels = await elevatedQueryLabels()",
              "   .eq('labelType', \"USER_DEFINED\")",
              "   .find();",
              "  ",
              "  const items = myLabels.items;",
              "  const labelKeys = items.map(label => {",
              "    return label.key",
              "  });",
              "  ",
              "  contactInfo.labelKeys.items = labelKeys;",
              "  ",
              "  const elevatedContact = elevate(contacts.createContact);",
              "  const newContact = await elevatedContact(contactInfo);",
              "  ",
              "  return newContact;",
              "  ",
              "  } catch (error) {",
              "    // Handle the error",
              "    console.log(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " *************/",
              "",
              "import { createContactWithLabels } from 'backend/contacts.web'",
              "",
              "// Retrieve contact info when a form's submit button is clicked",
              "export async function submitButton_click(event) {",
              "",
              "  try {",
              "    const contactInfo = {",
              "      name: {",
              "        first: $w('#firstNameInput').value,",
              "        last: $w('#lastNameInput').value,",
              "      },",
              "      emails: {",
              "        items: [",
              "          {",
              "            email: $w('#emailInput').value,",
              "          }",
              "        ]",
              "      },",
              "      labelKeys: {",
              "        items: []",
              "      }",
              "    };",
              "",
              "  // Call backend function to create a contact with labels",
              "  const newContact = await createContactWithLabels(contactInfo);",
              "  console.log('Contact created successfully:', newContact);",
              "",
              "    return contactInfo;",
              "  } catch (error) {",
              "    // Handle the error",
              "    console.error('Error creating contact:', error);",
              "  }",
              "}"
            ],
            "extra": {
              "description": "This function creates a new contact with the user-defined labels retrieved by a query."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createContact",
      "isAdminMethod": true
    },
    {
      "name": "deleteContact",
      "params": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "contactId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a contact who is not a site member or contributor.",
        "description": [
          "The `deleteContact()` function returns a Promise\nthat resolves when the specified contact is deleted.\n\n Deleting a contact permanently removes them from your Contact List.\n\n If the contact is also a site member,\nthe member must be deleted first,\nand then the contact can be deleted.\n"
        ],
        "examples": [
          {
            "title": "Delete a contact (dashboard page code)",
            "body": [
              "import { contacts } from 'wix-crm.v2';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847' */",
              "",
              "export async function myDeleteContactFunction(contactId) {",
              "  ",
              "  try {",
              "    await contacts.deleteContact(contactId);",
              "    console.log('Contact deleted.');",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to void */"
            ]
          },
          {
            "title": "Delete a contact (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847' */",
              "",
              "export const myDeleteContactFunction = webMethod(Permissions.Anyone, async (contactId) => {",
              "  try {",
              "    const elevatedDeleteContact = elevate(contacts.deleteContact);",
              "    await elevatedDeleteContact(contactId);",
              "    console.log('Contact deleted.');",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteContact",
      "isAdminMethod": true
    },
    {
      "name": "getContact",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to retrieve.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.GetContactOptions"
            }
          ],
          "doc": "Get contact options.",
          "required": false
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Contacts.Contact"
                }
              ]
            }
          }
        ],
        "doc": "The requested contact.\n"
      },
      "docs": {
        "summary": "Retrieves a contact.",
        "description": [
          "The `getContact()` function returns a Promise\nthat resolves when the contact is found.\n\n#### Getting Merged Contacts\nWhen a source contact is merged into a target contact, the source contact is deleted. When calling `getContact()` for a merged contact,\nyou can use the source or target contact ID. In both cases, the target contact is returned.\n\nThis is supported only when calling `getContact()`on merged contacts. Previously deleted source contact IDs can't be passed to any other function.\n"
        ],
        "examples": [
          {
            "title": "Get a contact by ID (dashboard page code)",
            "body": [
              "import { contacts } from 'wix-crm.v2';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847' */",
              "",
              "export async function myGetContactFunction(id) {",
              "  ",
              "  try {",
              "    const contact = await contacts.getContact(id);    ",
              "    const contactId = contact._id;",
              "    const contactName = contact.info.name.first;",
              " ",
              "    return contact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": 1,",
              " *   \"source\": {",
              " *     \"sourceType\": \"WIX_CODE\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"lastActivity\": {",
              " *     \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *     \"activityType\": \"CONTACT_CREATED\"",
              " *   },",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"johndoe1@example.com\",",
              " *     \"phone\": \"6465676359\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"John\",",
              " *       \"last\": \"Doe\"",
              " *     },",
              " *     \"emails\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"UNTAGGED\",",
              " *           \"email\": \"johndoe1@example.com\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *         },",
              " *       ]",
              " *     },",
              " *     \"phones\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"MOBILE\",",
              " *           \"countryCode\": \"US\",",
              " *           \"phone\": \"646-567-6359\",",
              " *           \"e164Phone\": \"+16465676359\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"ed1d7da0-b4a1-4164-81b7-c49dedc25dd7\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"addresses\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"HOME\",",
              " *           \"address\": {",
              " *             \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *             \"addressLine1\": \"3 Park Ave\",",
              " *             \"city\": \"NY\",",
              " *             \"subdivision\": \"US-NY\",",
              " *             \"country\": \"US\",",
              " *             \"postalCode\": \"10010\"",
              " *           },",
              " *           \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"company\": \"Wix\",",
              " *     \"jobTitle\": \"Writer\",",
              " *     \"birthdate\": \"1995-04-25\",",
              " *     \"locale\": \"en-us\",",
              " *     \"labelKeys\": {",
              " *       \"items\": [",
              " *         \"custom.contact\"",
              " *       ]",
              " *     },",
              " *     \"extendedFields\": {",
              " *       \"items\": {",
              " *         \"contacts.displayByLastName\": \"Doe John\",",
              " *         \"invoices.vatId\": \"\",",
              " *         \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *         \"contacts.displayByFirstName\": \"John Doe\",",
              " *         \"custom.nickname\": \"Jonny\"",
              " *       }",
              " *     }",
              " *   },",
              " *   \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *   \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *   \"_updatedDate\": \"2023-12-24T12:50:46.047Z\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Get a contact by ID (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847' */",
              "",
              "export const myGetContactFunction = webMethod(Permissions.Anyone, async (id) => {",
              "  ",
              "  try {",
              "    const elevatedGetContact = elevate(contacts.getContact);",
              "    const contact = await elevatedGetContact(id);    ",
              "    const contactId = contact._id;",
              "    const contactName = contact.info.name.first;",
              " ",
              "    return contact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": 1,",
              " *   \"source\": {",
              " *     \"sourceType\": \"WIX_CODE\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"lastActivity\": {",
              " *     \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *     \"activityType\": \"CONTACT_CREATED\"",
              " *   },",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"johndoe1@example.com\",",
              " *     \"phone\": \"6465676359\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"John\",",
              " *       \"last\": \"Doe\"",
              " *     },",
              " *     \"emails\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"UNTAGGED\",",
              " *           \"email\": \"johndoe1@example.com\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *         },",
              " *       ]",
              " *     },",
              " *     \"phones\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"MOBILE\",",
              " *           \"countryCode\": \"US\",",
              " *           \"phone\": \"646-567-6359\",",
              " *           \"e164Phone\": \"+16465676359\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"ed1d7da0-b4a1-4164-81b7-c49dedc25dd7\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"addresses\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"HOME\",",
              " *           \"address\": {",
              " *             \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *             \"addressLine1\": \"3 Park Ave\",",
              " *             \"city\": \"NY\",",
              " *             \"subdivision\": \"US-NY\",",
              " *             \"country\": \"US\",",
              " *             \"postalCode\": \"10010\"",
              " *           },",
              " *           \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"company\": \"Wix\",",
              " *     \"jobTitle\": \"Writer\",",
              " *     \"birthdate\": \"1995-04-25\",",
              " *     \"locale\": \"en-us\",",
              " *     \"labelKeys\": {",
              " *       \"items\": [",
              " *         \"custom.contact\"",
              " *       ]",
              " *     },",
              " *     \"extendedFields\": {",
              " *       \"items\": {",
              " *         \"contacts.displayByLastName\": \"Doe John\",",
              " *         \"invoices.vatId\": \"\",",
              " *         \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *         \"contacts.displayByFirstName\": \"John Doe\",",
              " *         \"custom.nickname\": \"Jonny\"",
              " *       }",
              " *     }",
              " *   },",
              " *   \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *   \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *   \"_updatedDate\": \"2023-12-24T12:50:46.047Z\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Get a contact with specified returned fields ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " *",
              " * Sample options value: ",
              " * {",
              " *   fields: ['createdDate'],",
              " *   fieldsets: ['BASIC']",
              " * }",
              " */",
              "",
              "export const myGetContactFunction = webMethod(Permissions.Anyone, async (id) => {",
              "  try {",
              "    const elevatedGetContact = elevate(contacts.getContact);",
              "    const contact = await elevatedGetContact(id);    ",
              "    const contactId = contact._id;",
              "    const contactName = contact.info.name.first;",
              " ",
              "    return contact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/*",
              " * Promise resolves to:",
              " * {",
              " *   \"revision\": 1,",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"johndoe1@example.com\",",
              " *     \"phone\": \"6465676359\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"John\",",
              " *       \"last\": \"Doe\"",
              " *     }",
              " *   },",
              " *   \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *   \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *   \"_updatedDate\": \"2023-12-24T12:50:46.049Z\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Force update a contact ",
            "body": [
              "/**********************************",
              " * Backend code - contacts.web.js *",
              " **********************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const overwriteContactInfo = webMethod(Permissions.Anyone, async (contactId, updatedContactInfo) => {",
              "",
              "  try {",
              "    // Retrieve the contact",
              "    const elevateGetContact = elevate(contacts.getContact);",
              "    const contact = await elevateGetContact(contactId);",
              "    // Extract revision number",
              "    const revisionNumber = { revision: contact.revision };",
              "    // Update the contact",
              "    const elevateUpdateContact = elevate(contacts.updateContact);",
              "    const updatedContact = await elevateUpdateContact(contactId, updatedContactInfo, revisionNumber);",
              "    ",
              "    return updatedContact;",
              "  } catch (error) {",
              "    // Handle the error",
              "    console.log(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " *************/",
              "",
              "import { overwriteContactInfo } from 'backend/contacts.web';",
              "",
              "$w.onReady(async function () {",
              "  const contactId = \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\";",
              "  const updatedContactInfo = {",
              "    name: {",
              "      first: \"John\",",
              "      last: \"Mitchell\"",
              "    }",
              "  };",
              "  async function updateContactName(){",
              "",
              "    try {",
              "      const updatedContact = await overwriteContactInfo(contactId, updatedContactInfo);",
              "",
              "      return updatedContact;",
              "    } catch(error){",
              "      console.log(error);",
              "    }",
              "  }",
              "  const result = await updateContactName();",
              "    const first = result.contact.info.name.first;",
              "    const last = result.contact.info.name.last;",
              "    console.log(`Updated contact name: ${first} ${last}`);",
              "});",
              ""
            ],
            "extra": {
              "description": "The page code passes a contact ID with updated contact information to the backend `overwriteContactInfo()` function. The `overwriteContactInfo()` function retrieves the contact, extracts the revision number, then passes it to `contacts.updateContact()`. This allows the contact to be updated without needing to specify the revision. >**Note:** This code example always retrieves the latest revision before updating a contact. "
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getContact",
      "isAdminMethod": true
    },
    {
      "name": "labelContact",
      "params": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to add labels to.",
          "required": true
        },
        {
          "name": "labelKeys",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to add to the contact.\n\nLabel keys must exist to be added to the contact.\nContact labels can be created with the\n`findOrCreateLabel()` function. You can use the\n `queryLabels()` function to view the currently existing labels.",
          "required": true
        }
      ],
      "requiredFields": [
        "contactId",
        "labelKeys"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Contacts.LabelContactResponse"
                }
              ]
            }
          }
        ],
        "doc": "Updated contact.\n"
      },
      "docs": {
        "summary": "Adds labels to a contact.",
        "description": [
          "The `labelContact()` function returns a Promise\nthat resolves when the specified labels are added to the contact.\n - **To create new labels:** Use `findOrCreateLabel()`.\n- **To find labels:** Use `findOrCreateLabel()`, `getLabel()`, or `queryLabels()`.\n"
        ],
        "examples": [
          {
            "title": "Add a label to a contact (dashboard page code)",
            "body": [
              "import { contacts } from 'wix-crm.v2';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " * ",
              " * Sample labelKeys value:",
              " * [",
              " *   'custom.at-risk',",
              " *   'custom.active-customer'",
              " * ]",
              " * ",
              " */",
              "",
              "export async function myLabelContactFunction(contactId, labelKeys) {",
              "  ",
              "  try {",
              "    const labeledContact = await contacts.labelContact(contactId, labelKeys);  ",
              "    console.log('Successfully added labels to contact');",
              "  ",
              "    return labeledContact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"contact\": {",
              " *     \"revision\": 2,",
              " *     \"source\": {",
              " *       \"sourceType\": \"WIX_CODE\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"lastActivity\": {",
              " *       \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *       \"activityType\": \"CONTACT_CREATED\"",
              " *     },",
              " *     \"primaryInfo\": {",
              " *       \"email\": \"johndoe1@example.com\",",
              " *       \"phone\": \"6465676359\"",
              " *     },",
              " *     \"info\": {",
              " *       \"name\": {",
              " *         \"first\": \"John\",",
              " *         \"last\": \"Doe\"",
              " *       },",
              " *       \"emails\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"johndoe1@example.com\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"phones\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"MOBILE\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"646-567-6359\",",
              " *             \"e164Phone\": \"+16465676359\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"ed1d7da0-b4a1-4164-81b7-c49dedc25dd7\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"addresses\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"address\": {",
              " *               \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *               \"addressLine1\": \"3 Park Ave\",",
              " *               \"city\": \"NY\",",
              " *               \"subdivision\": \"US-NY\",",
              " *               \"country\": \"US\",",
              " *               \"postalCode\": \"10010\"",
              " *             },",
              " *             \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"company\": \"Wix\",",
              " *       \"jobTitle\": \"Writer\",",
              " *       \"birthdate\": \"1995-04-25\",",
              " *       \"locale\": \"en-us\",",
              " *       \"labelKeys\": {",
              " *         \"items\": [",
              " *           \"custom.contact\",",
              " *           \"custom.at-risk\",",
              " *           \"custom.active-customer\"",
              " *         ]",
              " *       },",
              " *       \"extendedFields\": {",
              " *         \"items\": {",
              " *           \"contacts.displayByLastName\": \"Doe John\",",
              " *           \"invoices.vatId\": \"\",",
              " *           \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *           \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *           \"contacts.displayByFirstName\": \"John Doe\",",
              " *           \"custom.nickname\": \"Jonny\"",
              " *         }",
              " *       }",
              " *     },",
              " *     \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *     \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *     \"_updatedDate\": \"2023-12-25T06:13:54.362Z\"",
              " *   }",
              " * }",
              " * ",
              " */",
              ""
            ]
          },
          {
            "title": "Add a label to a contact (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " * ",
              " * Sample labelKeys value:",
              " * [",
              " *   'custom.at-risk',",
              " *   'custom.active-customer'",
              " * ]",
              " * ",
              " */",
              "",
              "export const myLabelContactFunction = webMethod(Permissions.Anyone, async (contactId, labelKeys) => {",
              "  ",
              "  try {",
              "    const elevatedLabelContact = elevate(contacts.labelContact);",
              "    const labeledContact = await elevatedLabelContact(contactId, labelKeys);  ",
              "    console.log('Successfully added labels to contact');",
              "  ",
              "    return labeledContact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"contact\": {",
              " *     \"revision\": 2,",
              " *     \"source\": {",
              " *       \"sourceType\": \"WIX_CODE\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"lastActivity\": {",
              " *       \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *       \"activityType\": \"CONTACT_CREATED\"",
              " *     },",
              " *     \"primaryInfo\": {",
              " *       \"email\": \"johndoe1@example.com\",",
              " *       \"phone\": \"6465676359\"",
              " *     },",
              " *     \"info\": {",
              " *       \"name\": {",
              " *         \"first\": \"John\",",
              " *         \"last\": \"Doe\"",
              " *       },",
              " *       \"emails\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"johndoe1@example.com\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"phones\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"MOBILE\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"646-567-6359\",",
              " *             \"e164Phone\": \"+16465676359\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"ed1d7da0-b4a1-4164-81b7-c49dedc25dd7\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"addresses\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"address\": {",
              " *               \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *               \"addressLine1\": \"3 Park Ave\",",
              " *               \"city\": \"NY\",",
              " *               \"subdivision\": \"US-NY\",",
              " *               \"country\": \"US\",",
              " *               \"postalCode\": \"10010\"",
              " *             },",
              " *             \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"company\": \"Wix\",",
              " *       \"jobTitle\": \"Writer\",",
              " *       \"birthdate\": \"1995-04-25\",",
              " *       \"locale\": \"en-us\",",
              " *       \"labelKeys\": {",
              " *         \"items\": [",
              " *           \"custom.contact\",",
              " *           \"custom.at-risk\",",
              " *           \"custom.active-customer\"",
              " *         ]",
              " *       },",
              " *       \"extendedFields\": {",
              " *         \"items\": {",
              " *           \"contacts.displayByLastName\": \"Doe John\",",
              " *           \"invoices.vatId\": \"\",",
              " *           \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *           \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *           \"contacts.displayByFirstName\": \"John Doe\",",
              " *           \"custom.nickname\": \"Jonny\"",
              " *         }",
              " *       }",
              " *     },",
              " *     \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *     \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *     \"_updatedDate\": \"2023-12-25T06:13:54.362Z\"",
              " *   }",
              " * ",
              " */",
              ""
            ]
          },
          {
            "title": "Create a new label and add it to a contact ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts, labels } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " * ",
              " * Sample displayName value: 'Supplier'",
              " */",
              "",
              "export const addNewLabelToContact = webMethod(Permissions.Anyone, async (displayName, contactId) => {",
              "  ",
              "  try {",
              "    const elevatedCreateLabel = elevate(labels.findOrCreateLabel);",
              "    const elevatedLabelContact = elevate(contacts.labelContact);",
              "    const newLabel = await elevatedCreateLabel(displayName);",
              "    const labelKeys = [newLabel.label.key];",
              "    // Retrieve the new label's key",
              "    if (newLabel.newLabel) {",
              "      // Label contact",
              "      const contact = await elevatedLabelContact(contactId, labelKeys);",
              "      const contactLabels = contact.contact.info.labelKeys.items;",
              "",
              "      return contactLabels;",
              "    }",
              "    else {",
              "      return \"Label was not added to contact.\";",
              "    }",
              "  } catch (error) {",
              "    // Handle the error",
              "    console.log(error);",
              "  }",
              "});",
              "",
              "/* Promise resolves to: ",
              " * [",
              " *   \"custom.contact\",",
              " *   \"custom.supplier\"",
              " *  ]",
              " */",
              ""
            ],
            "extra": {
              "description": "This function creates a new label, gets the label's key, and then adds the label to the contact."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "labelContact",
      "isAdminMethod": true
    },
    {
      "name": "mergeContacts",
      "params": [
        {
          "name": "targetContactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Target contact ID.",
          "required": true
        },
        {
          "name": "targetContactRevision",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Target contact revision number, which increments by 1 each time the contact is updated.\nTo prevent conflicting changes,\nthe target contact's current revision must be passed.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.MergeContactsOptions"
            }
          ],
          "doc": "Merge contacts options.",
          "required": false
        }
      ],
      "requiredFields": [
        "targetContactId",
        "targetContactRevision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Contacts.MergeContactsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Merges source contacts into a target contact.",
        "description": [
          "Merging contacts has these effects on the target contact:\n\n- No target contact data is overwritten or deleted.\n- Arrays (emails, phones, addresses, and labels) are merged from the source contacts into the target contact.\n- If merging more than one source contact, the 1st source is given precedence, then the 2nd, and so on.\n\nSource contacts are deleted when merging.\nHowever, if a source contact is a site member or collaborator,\nthe `mergeContacts()` function fails because site collaborators and members can't be deleted.\nSite members and collaborators can only be target contacts.\n\nAfter merging, if you call the `getContact()` function with a deleted source contact ID, the target contact ID is returned. This is only supported when calling `getContact()`. Previously deleted source contact IDs can't be passed in any other function.\n"
        ],
        "examples": [
          {
            "title": "Get revision ID and merge contacts (dashboard page code)",
            "body": [
              "import { contacts } from 'wix-crm.v2';",
              "",
              "/*",
              " * Sample targetContactId value: '5518ee7f-270e-40c4-b756-dad56e8f0ffc'",
              " * ",
              " * Sample targetContactRevision value: Extract from `getContact()` return object",
              " * ",
              " * Sample options value:",
              " *  {",
              " *    sourceContactIds: [",
              " *      'ce6475cf-55d7-411c-8cb1-7f62be2429dd',",
              " *      'cb591d0e-a308-4f19-a9b9-5fb26ee7a11f'",
              " *    ]",
              " *  }",
              "*/",
              "",
              "export async function mergeContactsFunction(targetContactId, targetContactRevision, options) {",
              "  ",
              "  try{",
              "    const targetContact = await contacts.getContact(targetContactId);",
              "    ",
              "    // Extract revision from target contact",
              "    targetContactRevision = targetContact.revision;",
              "    const mergedContact = await contacts.mergeContacts(targetContactId, targetContactRevision, options);",
              "    console.log(\"successfully merged contacts!\");",
              "",
              "    return mergedContact.contact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": 3,",
              " *   \"source\": {",
              " *     \"sourceType\": \"WIX_CODE\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"lastActivity\": {",
              " *     \"activityDate\": \"2024-01-09T12:41:24.295Z\",",
              " *     \"activityType\": \"CONTACT_MERGED\"",
              " *   },",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"sally.smith@example.com\",",
              " *     \"phone\": \"524-624-2486\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"Sally\",",
              " *       \"last\": \"Smith\"",
              " *     },",
              " *     \"emails\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"UNTAGGED\",",
              " *           \"email\": \"sally.smith@example.com\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"fa2a8be4-b0d9-4926-adb3-463ef487787b\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"phones\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"MOBILE\",",
              " *           \"countryCode\": \"US\",",
              " *           \"phone\": \"524-624-2486\",",
              " *           \"e164Phone\": \"+15246242486\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"73382a58-55c6-4b1c-8af1-ffe60a7e5485\"",
              " *         },",
              " *         {",
              " *           \"tag\": \"WORK\",",
              " *           \"countryCode\": \"US\",",
              " *           \"phone\": \"214-268-2998\",",
              " *           \"e164Phone\": \"+12142682998\",",
              " *           \"primary\": false,",
              " *           \"_id\": \"69bd9ea5-31e3-4e68-97a7-1c74031f26cd\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"addresses\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"HOME\",",
              " *           \"address\": {",
              " *             \"formatted\": \"NY\",",
              " *             \"city\": \"NY\"",
              " *           },",
              " *           \"_id\": \"f22294bf-349b-47bb-9229-8a0d2ca9cb78\"",
              " *         },",
              " *         {",
              " *           \"tag\": \"WORK\",",
              " *           \"address\": {",
              " *             \"formatted\": \"12 Park Ave\\nNY\\nUnited States\",",
              " *             \"addressLine1\": \"12 Park Ave\",",
              " *             \"city\": \"NY\",",
              " *             \"country\": \"US\"",
              " *           },",
              " *           \"_id\": \"471391d8-285f-405b-ae44-bda559088ac1\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"labelKeys\": {",
              " *       \"items\": [",
              " *         \"custom.active-customer\",",
              " *         \"custom.contact\",",
              " *         \"contacts.customers\",",
              " *         \"custom.anonymous\"",
              " *       ]",
              " *     },",
              " *     \"extendedFields\": {",
              " *       \"items\": {",
              " *         \"contacts.displayByLastName\": \"Smith Sally\",",
              " *         \"invoices.vatId\": \"\",",
              " *         \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.subscriptionStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.effectiveEmail\": \"sally.smith@example.com\",",
              " *         \"custom.age\": 24,",
              " *         \"contacts.displayByFirstName\": \"Sally Smith\",",
              " *         \"custom.nickname\": \"Silly\"",
              " *       }",
              " *     }",
              " *   },",
              " *   \"_id\": \"5518ee7f-270e-40c4-b756-dad56e8f0ffc\",",
              " *   \"_createdDate\": \"2023-12-28T11:44:11.331Z\",",
              " *   \"_updatedDate\": \"2024-01-09T12:41:24.295Z\"",
              " * }",
              " */",
              ""
            ],
            "extra": {
              "description": "This function uses `getContact()` to extract the `revision` for the target contact, then merges the source contacts into the target contact."
            }
          },
          {
            "title": "Get revision ID and merge contacts (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/*",
              " * Sample targetContactId value: '5518ee7f-270e-40c4-b756-dad56e8f0ffc'",
              " * ",
              " * Sample targetContactRevision value: Extract from `getContact()` return object",
              " * ",
              " * Sample options value:",
              " *  {",
              " *    sourceContactIds: [",
              " *      'ce6475cf-55d7-411c-8cb1-7f62be2429dd',",
              " *      'cb591d0e-a308-4f19-a9b9-5fb26ee7a11f'",
              " *    ]",
              " *  }",
              "*/",
              "",
              "export const mergeContactsFunction = webMethod(Permissions.Anyone, async (targetContactId, targetContactRevision, options) => {",
              "  ",
              "  try{",
              "    const elevateGetContactRevision = elevate(contacts.getContact);",
              "    const elevatedMergeContacts = elevate(contacts.mergeContacts);",
              "    const targetContact = await elevateGetContactRevision(targetContactId);",
              "    ",
              "    // Extract revision from target contact",
              "    targetContactRevision = targetContact.revision;",
              "    const mergedContact = await elevatedMergeContacts(targetContactId, targetContactRevision, options);",
              "    console.log(\"successfully merged contacts!\");",
              "",
              "    return mergedContact.contact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": 3,",
              " *   \"source\": {",
              " *     \"sourceType\": \"WIX_CODE\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"lastActivity\": {",
              " *     \"activityDate\": \"2024-01-09T12:41:24.295Z\",",
              " *     \"activityType\": \"CONTACT_MERGED\"",
              " *   },",
              " *   \"primaryInfo\": {",
              " *     \"email\": \"sally.smith@example.com\",",
              " *     \"phone\": \"524-624-2486\"",
              " *   },",
              " *   \"info\": {",
              " *     \"name\": {",
              " *       \"first\": \"Sally\",",
              " *       \"last\": \"Smith\"",
              " *     },",
              " *     \"emails\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"UNTAGGED\",",
              " *           \"email\": \"sally.smith@example.com\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"fa2a8be4-b0d9-4926-adb3-463ef487787b\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"phones\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"MOBILE\",",
              " *           \"countryCode\": \"US\",",
              " *           \"phone\": \"524-624-2486\",",
              " *           \"e164Phone\": \"+15246242486\",",
              " *           \"primary\": true,",
              " *           \"_id\": \"73382a58-55c6-4b1c-8af1-ffe60a7e5485\"",
              " *         },",
              " *         {",
              " *           \"tag\": \"WORK\",",
              " *           \"countryCode\": \"US\",",
              " *           \"phone\": \"214-268-2998\",",
              " *           \"e164Phone\": \"+12142682998\",",
              " *           \"primary\": false,",
              " *           \"_id\": \"69bd9ea5-31e3-4e68-97a7-1c74031f26cd\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"addresses\": {",
              " *       \"items\": [",
              " *         {",
              " *           \"tag\": \"HOME\",",
              " *           \"address\": {",
              " *             \"formatted\": \"NY\",",
              " *             \"city\": \"NY\"",
              " *           },",
              " *           \"_id\": \"f22294bf-349b-47bb-9229-8a0d2ca9cb78\"",
              " *         },",
              " *         {",
              " *           \"tag\": \"WORK\",",
              " *           \"address\": {",
              " *             \"formatted\": \"12 Park Ave\\nNY\\nUnited States\",",
              " *             \"addressLine1\": \"12 Park Ave\",",
              " *             \"city\": \"NY\",",
              " *             \"country\": \"US\"",
              " *           },",
              " *           \"_id\": \"471391d8-285f-405b-ae44-bda559088ac1\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"labelKeys\": {",
              " *       \"items\": [",
              " *         \"custom.active-customer\",",
              " *         \"custom.contact\",",
              " *         \"contacts.customers\",",
              " *         \"custom.anonymous\"",
              " *       ]",
              " *     },",
              " *     \"extendedFields\": {",
              " *       \"items\": {",
              " *         \"contacts.displayByLastName\": \"Smith Sally\",",
              " *         \"invoices.vatId\": \"\",",
              " *         \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.subscriptionStatus\": \"NOT_SET\",",
              " *         \"emailSubscriptions.effectiveEmail\": \"sally.smith@example.com\",",
              " *         \"custom.age\": 24,",
              " *         \"contacts.displayByFirstName\": \"Sally Smith\",",
              " *         \"custom.nickname\": \"Silly\"",
              " *       }",
              " *     }",
              " *   },",
              " *   \"_id\": \"5518ee7f-270e-40c4-b756-dad56e8f0ffc\",",
              " *   \"_createdDate\": \"2023-12-28T11:44:11.331Z\",",
              " *   \"_updatedDate\": \"2024-01-09T12:41:24.295Z\"",
              " * }",
              " */",
              ""
            ],
            "extra": {
              "description": "This function uses `getContact()` to extract the `revision` for the target contact, then merges the source contacts into the target contact."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "mergeContacts",
      "isAdminMethod": true
    },
    {
      "name": "unlabelContact",
      "params": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to remove labels from.",
          "required": true
        },
        {
          "name": "labelKeys",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to remove from the contact.",
          "required": true
        }
      ],
      "requiredFields": [
        "contactId",
        "labelKeys"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Contacts.UnlabelContactResponse"
                }
              ]
            }
          }
        ],
        "doc": "Updated contact.\n"
      },
      "docs": {
        "summary": "Removes labels from a contact.",
        "description": [
          " The `unlabelContact()` function returns a Promise\n that resolves when the specified labels are removed from the contact.\n\nIf a label is no longer needed and you want to remove it from all contacts, you can remove it with the Labels `deleteLabel()` function.\n"
        ],
        "examples": [
          {
            "title": "Remove a label from a contact (dashboard page code)",
            "body": [
              "import { contacts } from 'wix-crm.v2';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " * ",
              " * Sample labelKeys value:",
              " * [",
              " *   'custom.at-risk'",
              " * ]",
              " * ",
              " */",
              "",
              "export async function myUnlabelContactFunction(contactId, labelKeys) {",
              "  ",
              "  try {",
              "    const contact = await contacts.unlabelContact(contactId, labelKeys);",
              "    console.log('Successfully removed label from contact');",
              "   ",
              "    return contact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"contact\": {",
              " *     \"revision\": 3,",
              " *     \"source\": {",
              " *       \"sourceType\": \"WIX_CODE\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"lastActivity\": {",
              " *       \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *       \"activityType\": \"CONTACT_CREATED\"",
              " *     },",
              " *     \"primaryInfo\": {",
              " *       \"email\": \"johndoe1@example.com\",",
              " *       \"phone\": \"6465676359\"",
              " *     },",
              " *     \"info\": {",
              " *       \"name\": {",
              " *         \"first\": \"John\",",
              " *         \"last\": \"Doe\"",
              " *       },",
              " *       \"emails\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"johndoe1@example.com\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"phones\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"MOBILE\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"646-567-6359\",",
              " *             \"e164Phone\": \"+16465676359\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"ed1d7da0-b4a1-4164-81b7-c49dedc25dd7\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"addresses\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"address\": {",
              " *               \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *               \"addressLine1\": \"3 Park Ave\",",
              " *               \"city\": \"NY\",",
              " *               \"subdivision\": \"US-NY\",",
              " *               \"country\": \"US\",",
              " *               \"postalCode\": \"10010\"",
              " *             },",
              " *             \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"company\": \"Wix\",",
              " *       \"jobTitle\": \"Writer\",",
              " *       \"birthdate\": \"1995-04-25\",",
              " *       \"locale\": \"en-us\",",
              " *       \"labelKeys\": {",
              " *         \"items\": [",
              " *           \"custom.contact\" ",
              " *         ]",
              " *       },",
              " *       \"extendedFields\": {",
              " *         \"items\": {",
              " *           \"contacts.displayByLastName\": \"Doe John\",",
              " *           \"invoices.vatId\": \"\",",
              " *           \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *           \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *           \"contacts.displayByFirstName\": \"John Doe\",",
              " *           \"custom.nickname\": \"Jonny\"",
              " *         }",
              " *       }",
              " *     },",
              " *     \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *     \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *     \"_updatedDate\": \"2023-12-25T06:13:54.362Z\"",
              " *   }",
              " * }",
              " * ",
              " */",
              ""
            ]
          },
          {
            "title": "Remove a label from a contact (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " * ",
              " * Sample labelKeys value:",
              " * [",
              " *   'custom.at-risk'",
              " * ]",
              " * ",
              " */",
              "",
              "export const myUnlabelContactFunction = webMethod(Permissions.Anyone, async (contactId, labelKeys) => {",
              "  ",
              "  try {",
              "    const elevatedUnlabelContact = elevate(contacts.unlabelContact);",
              "    const contact = await elevatedUnlabelContact(contactId, labelKeys);",
              "    console.log('Successfully removed label from contact');",
              "   ",
              "    return contact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"contact\": {",
              " *     \"revision\": 3,",
              " *     \"source\": {",
              " *       \"sourceType\": \"WIX_CODE\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"lastActivity\": {",
              " *       \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *       \"activityType\": \"CONTACT_CREATED\"",
              " *     },",
              " *     \"primaryInfo\": {",
              " *       \"email\": \"johndoe1@example.com\",",
              " *       \"phone\": \"6465676359\"",
              " *     },",
              " *     \"info\": {",
              " *       \"name\": {",
              " *         \"first\": \"John\",",
              " *         \"last\": \"Doe\"",
              " *       },",
              " *       \"emails\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"johndoe1@example.com\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"phones\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"MOBILE\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"646-567-6359\",",
              " *             \"e164Phone\": \"+16465676359\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"ed1d7da0-b4a1-4164-81b7-c49dedc25dd7\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"addresses\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"address\": {",
              " *               \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *               \"addressLine1\": \"3 Park Ave\",",
              " *               \"city\": \"NY\",",
              " *               \"subdivision\": \"US-NY\",",
              " *               \"country\": \"US\",",
              " *               \"postalCode\": \"10010\"",
              " *             },",
              " *             \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"company\": \"Wix\",",
              " *       \"jobTitle\": \"Writer\",",
              " *       \"birthdate\": \"1995-04-25\",",
              " *       \"locale\": \"en-us\",",
              " *       \"labelKeys\": {",
              " *         \"items\": [",
              " *           \"custom.contact\" ",
              " *         ]",
              " *       },",
              " *       \"extendedFields\": {",
              " *         \"items\": {",
              " *           \"contacts.displayByLastName\": \"Doe John\",",
              " *           \"invoices.vatId\": \"\",",
              " *           \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *           \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *           \"contacts.displayByFirstName\": \"John Doe\",",
              " *           \"custom.nickname\": \"Jonny\"",
              " *         }",
              " *       }",
              " *     },",
              " *     \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *     \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *     \"_updatedDate\": \"2023-12-25T06:13:54.362Z\"",
              " *   }",
              " * }",
              " * ",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "unlabelContact",
      "isAdminMethod": true
    },
    {
      "name": "updateContact",
      "params": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to update.",
          "required": true
        },
        {
          "name": "info",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": "Contact info.",
          "required": true
        },
        {
          "name": "revision",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Revision number.\nWhen updating, include the existing `revision`\nto prevent conflicting updates.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.UpdateContactOptions"
            }
          ],
          "doc": "Contact update options.",
          "required": false
        }
      ],
      "requiredFields": [
        "contactId",
        "info",
        "revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Contacts.UpdateContactResponse"
                }
              ]
            }
          }
        ],
        "doc": "Updated contact.\n"
      },
      "docs": {
        "summary": "Updates a contact's properties.",
        "description": [
          "The `updateContact()` function returns a Promise that resolves\nwhen the specified contact's information is updated.\n\nEach time the contact is updated, `revision` increments by 1. The existing `revision` must be included when updating the contact. This ensures you're working with the latest contact information, and prevents unintended overwrites.\n"
        ],
        "examples": [
          {
            "title": "Update a contact by adding a phone number (dashboard page code)",
            "body": [
              "import { contacts } from 'wix-crm.v2';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " * ",
              " * Sample revision value: '5'",
              " * ",
              " * Sample info object:",
              " * {",
              " *   phones: {",
              " *     items: [",
              " *       {",
              " *         countryCode:\"US\",",
              " *         phone:\"6465676359\",",
              " *         primary:true,",
              " *         tag:\"MOBILE\"",
              " *       },",
              " *       {",
              " *         phone: \"2421642341\",",
              " *         countryCode: \"US\",",
              " *         primary: false,",
              " *         tag: \"HOME\"",
              " *       }",
              " *     ]",
              " *   }",
              " * }",
              " */",
              "",
              "export async function myUpdateContactFunction(contactId, info, revision, options) {",
              "  ",
              "  try {",
              "    const updatedContact = await contacts.updateContact(contactId, info, revision, options);    ",
              "    console.log('Successfully updated contact:', updatedContact)",
              " ",
              "    return updatedContact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"contact\": {",
              " *     \"revision\": 17,",
              " *     \"source\": {",
              " *       \"sourceType\": \"WIX_CODE\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"lastActivity\": {",
              " *       \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *       \"activityType\": \"CONTACT_CREATED\"",
              " *     },",
              " *     \"primaryInfo\": {",
              " *       \"email\": \"johndoe1@example.com\",",
              " *       \"phone\": \"646-567-6359\"",
              " *     },",
              " *     \"info\": {",
              " *       \"name\": {",
              " *         \"first\": \"John\",",
              " *         \"last\": \"Doe\"",
              " *       },",
              " *       \"emails\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"johndoe1@example.com\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *           },",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"john.doe.at.home@example.com\",",
              " *             \"primary\": false,",
              " *             \"_id\": \"06eef938-13d2-49f3-8097-60686ab4ddd2\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"phones\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"MOBILE\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"646-567-6359\",",
              " *             \"e164Phone\": \"+16465676359\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"01e597c0-76c6-4791-bb77-8b3309f893d1\"",
              " *           },",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"2421642341\",",
              " *             \"primary\": false,",
              " *             \"_id\": \"cbbae95c-e1d5-48c4-a3ec-531ee2bf51fb\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"addresses\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"address\": {",
              " *               \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *               \"addressLine1\": \"3 Park Ave\",",
              " *               \"city\": \"NY\",",
              " *               \"subdivision\": \"US-NY\",",
              " *               \"country\": \"US\",",
              " *               \"postalCode\": \"10010\"",
              " *             },",
              " *             \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"company\": \"Wix\",",
              " *       \"jobTitle\": \"Writer\",",
              " *       \"birthdate\": \"1995-04-25\",",
              " *       \"locale\": \"en-us\",",
              " *       \"labelKeys\": {",
              " *         \"items\": [",
              " *           \"custom.contact\"",
              " *         ]",
              " *       },",
              " *       \"extendedFields\": {",
              " *         \"items\": {",
              " *           \"contacts.displayByLastName\": \"Doe John\",",
              " *           \"invoices.vatId\": \"\",",
              " *           \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *           \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *           \"contacts.displayByFirstName\": \"John Doe\",",
              " *           \"custom.nickname\": \"Jonny\"",
              " *         }",
              " *       }",
              " *     },",
              " *     \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *     \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *     \"_updatedDate\": \"2023-12-25T07:31:48.270Z\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Update a contact by adding a phone number (export from backend code)",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample contactId value: '2712ae1d-3f64-46c2-ac3a-94a6c2e29847'",
              " * ",
              " * Sample revision value: '5'",
              " * ",
              " * Sample info object:",
              " * {",
              " *   phones: {",
              " *     items: [",
              " *       {",
              " *         countryCode:\"US\",",
              " *         phone:\"6465676359\",",
              " *         primary:true,",
              " *         tag:\"MOBILE\"",
              " *       },",
              " *       {",
              " *         phone: \"2421642341\",",
              " *         countryCode: \"US\",",
              " *         primary: false,",
              " *         tag: \"HOME\"",
              " *       }",
              " *     ]",
              " *   }",
              " * }",
              " */",
              "",
              "export const myUpdateContactFunction = webMethod(Permissions.Anyone, async (contactId, info, options) => {",
              "  ",
              "  try {",
              "    const elevatedUpdateContact = elevate(contacts.updateContact);",
              "    const updatedContact = await elevatedUpdateContact(contactId, info, options);    ",
              "    console.log('Successfully updated contact:', updatedContact)",
              " ",
              "    return updatedContact;  ",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"contact\": {",
              " *     \"revision\": 17,",
              " *     \"source\": {",
              " *       \"sourceType\": \"WIX_CODE\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"lastActivity\": {",
              " *       \"activityDate\": \"2023-12-24T11:50:46.048Z\",",
              " *       \"activityType\": \"CONTACT_CREATED\"",
              " *     },",
              " *     \"primaryInfo\": {",
              " *       \"email\": \"johndoe1@example.com\",",
              " *       \"phone\": \"646-567-6359\"",
              " *     },",
              " *     \"info\": {",
              " *       \"name\": {",
              " *         \"first\": \"John\",",
              " *         \"last\": \"Doe\"",
              " *       },",
              " *       \"emails\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"johndoe1@example.com\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"37db3bde-83c0-4ca2-8097-88964a2f343b\"",
              " *           },",
              " *           {",
              " *             \"tag\": \"UNTAGGED\",",
              " *             \"email\": \"john.doe.at.home@example.com\",",
              " *             \"primary\": false,",
              " *             \"_id\": \"06eef938-13d2-49f3-8097-60686ab4ddd2\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"phones\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"MOBILE\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"646-567-6359\",",
              " *             \"e164Phone\": \"+16465676359\",",
              " *             \"primary\": true,",
              " *             \"_id\": \"01e597c0-76c6-4791-bb77-8b3309f893d1\"",
              " *           },",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"countryCode\": \"US\",",
              " *             \"phone\": \"2421642341\",",
              " *             \"primary\": false,",
              " *             \"_id\": \"cbbae95c-e1d5-48c4-a3ec-531ee2bf51fb\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"addresses\": {",
              " *         \"items\": [",
              " *           {",
              " *             \"tag\": \"HOME\",",
              " *             \"address\": {",
              " *               \"formatted\": \"3 Park Ave\\nNY, New York 10010\\nUnited States\",",
              " *               \"addressLine1\": \"3 Park Ave\",",
              " *               \"city\": \"NY\",",
              " *               \"subdivision\": \"US-NY\",",
              " *               \"country\": \"US\",",
              " *               \"postalCode\": \"10010\"",
              " *             },",
              " *             \"_id\": \"eeb4e174-fd0f-4ce8-8cac-dc152f284228\"",
              " *           }",
              " *         ]",
              " *       },",
              " *       \"company\": \"Wix\",",
              " *       \"jobTitle\": \"Writer\",",
              " *       \"birthdate\": \"1995-04-25\",",
              " *       \"locale\": \"en-us\",",
              " *       \"labelKeys\": {",
              " *         \"items\": [",
              " *           \"custom.contact\"",
              " *         ]",
              " *       },",
              " *       \"extendedFields\": {",
              " *         \"items\": {",
              " *           \"contacts.displayByLastName\": \"Doe John\",",
              " *           \"invoices.vatId\": \"\",",
              " *           \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
              " *           \"emailSubscriptions.subscriptionStatus\": \"UNSUBSCRIBED\",",
              " *           \"contacts.displayByFirstName\": \"John Doe\",",
              " *           \"custom.nickname\": \"Jonny\"",
              " *         }",
              " *       }",
              " *     },",
              " *     \"_id\": \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\",",
              " *     \"_createdDate\": \"2023-12-24T11:50:46.049Z\",",
              " *     \"_updatedDate\": \"2023-12-25T07:31:48.270Z\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Force update a contact ",
            "body": [
              "/**********************************",
              " * Backend code - contacts.web.js *",
              " **********************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { contacts } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const overwriteContactInfo = webMethod(Permissions.Anyone, async (contactId, updatedContactInfo) => {",
              "",
              "  try {",
              "    // Retrieve the contact",
              "    const elevateGetContact = elevate(contacts.getContact);",
              "    const contact = await elevateGetContact(contactId);",
              "    // Extract revision number",
              "    const revisionNumber = { revision: contact.revision };",
              "    // Update the contact",
              "    const elevateUpdateContact = elevate(contacts.updateContact);",
              "    const updatedContact = await elevateUpdateContact(contactId, updatedContactInfo, revisionNumber);",
              "    ",
              "    return updatedContact;",
              "  } catch (error) {",
              "    console.log(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " *************/",
              "",
              "import { overwriteContactInfo } from 'backend/contacts.web';",
              "",
              "$w.onReady(async function () {",
              "  const contactId = \"2712ae1d-3f64-46c2-ac3a-94a6c2e29847\";",
              "  const updatedContactInfo = {",
              "    name: {",
              "      first: \"John\",",
              "      last: \"Mitchell\"",
              "    }",
              "  };",
              "  async function updateContactName(){",
              "",
              "    try {",
              "      const updatedContact = await overwriteContactInfo(contactId, updatedContactInfo);",
              "",
              "      return updatedContact;",
              "    } catch(error){",
              "      // Handle the error",
              "      console.log(error);",
              "    }",
              "  }",
              "  const result = await updateContactName();",
              "    const first = result.contact.info.name.first;",
              "    const last = result.contact.info.name.last;",
              "    console.log(`Updated contact name: ${first} ${last}`);",
              "});",
              ""
            ],
            "extra": {
              "description": "The page code passes a contact ID with updated contact information to the backend `overwriteContactInfo()` function. The `overwriteContactInfo()` function retrieves the contact, extracts the revision number, then passes it to `contacts.updateContact()`. This allows the contact to be updated without needing to specify the revision. >**Note:** This code example always retrieves the latest revision before updating a contact. "
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateContact",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ActivityIcon",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Icon name"
        },
        {
          "name": "url",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Icon url"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Address",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number, as free text."
        },
        {
          "name": "addressLine1",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number, as free text."
        },
        {
          "name": "addressLine2",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Free text providing more detailed address information,\nsuch as apartment, suite, or floor."
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "City name."
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "2-letter country code in an\n[ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format."
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Postal or zip code."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.StreetAddress"
            }
          ],
          "doc": "Street address object, with number and name in separate fields."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Code for a subdivision (such as state, prefecture, or province) in an\n[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Physical address"
        ]
      }
    },
    {
      "name": "AddressLocation",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Address's latitude."
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Address's longitude."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number, as free text."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.StreetAddress"
            }
          ],
          "doc": "Street address object, with number and name in separate fields."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AssigneesWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of site contributor user IDs."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkAddSegmentToContactsRequest",
      "members": [
        {
          "name": "contactIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of Contact ids"
        },
        {
          "name": "existsSegmentIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of existing segment ids"
        },
        {
          "name": "segmentId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Segment id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkAddSegmentToContactsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.BulkActionMetadata"
            }
          ],
          "doc": "Metadata on the bulk action"
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ItemMetadata"
                  }
                ]
              }
            }
          ],
          "doc": "List of action results"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteContactsOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object.\n\nPossible filters:\n`$eq`, `$exists`, `$gt`, `$gte`, `$hasAll`, `$hasSome`, `$in`, `$lt`, `$lte`, `$ne`, `$startsWith`.\n\nFor a detailed list of supported filters, see\nfiltering and sorting for\n[contact properties](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#contact-properties-filtering-sorting-and-searching),\n[extended fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#extended-fields-filtering-sorting-and-searching),\nand [custom fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#custom-fields-filtering-sorting-and-searching).\n\nExample:\n`{ \"filter\": { \"info.name.last\": \"Smith\" } }`\n"
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match, up to 100 characters.\n\nSearchable fields:\n\n- `info.name.first`\n- `info.name.last`\n- `info.emails.email`\n- `info.phones.phone`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteContactsRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object.\n\nPossible filters:\n`$eq`, `$exists`, `$gt`, `$gte`, `$hasAll`, `$hasSome`, `$in`, `$lt`, `$lte`, `$ne`, `$startsWith`.\n\nFor a detailed list of supported filters, see\nfiltering and sorting for\n[contact properties](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#contact-properties-filtering-sorting-and-searching),\n[extended fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#extended-fields-filtering-sorting-and-searching),\nand [custom fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#custom-fields-filtering-sorting-and-searching).\n\nExample:\n`{ \"filter\": { \"info.name.last\": \"Smith\" } }`\n"
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match, up to 100 characters.\n\nSearchable fields:\n\n- `info.name.first`\n- `info.name.last`\n- `info.emails.email`\n- `info.phones.phone`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteContactsResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Bulk job ID.\nThe job's status can be retrieved with\n[Get Bulk Job](https://dev.wix.com/api/rest/contacts/contacts/bulk-jobs/get-bulk-job) or\n[List Bulk Jobs](https://dev.wix.com/api/rest/contacts/contacts/bulk-jobs/list-bulk-jobs)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkLabelAndUnlabelContactsOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter options.\nLabels will be removed from contacts that meet the `filter` and `search` criteria.\n\nSee\n[Field Support for Filtering, Sorting, and Searching](https://dev.wix.com/api/rest/contacts/contacts/sort-and-filter#contacts_contacts_sort-and-filter_field-support-for-filtering-sorting-and-searching)\nfor a list of supported filters and fields.\n"
        },
        {
          "name": "labelKeysToAdd",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to add to the contacts.\n\nLabel keys must exist to be added to the contact.\n Contact labels can be created or retrieved with\n [`findOrCreateLabel()`](wix-crm-v2/labels/findorcreatelabel)\n or\n [`queryLabels()`](wix-crm-v2/labels/queryLabels).\n"
        },
        {
          "name": "labelKeysToRemove",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to remove from the contacts."
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match, up to 100 characters.\nLabels will be removed from contacts that meet the `filter` and `search` criteria.\n\nSee\n[Field Support for Filtering, Sorting, and Searching](https://dev.wix.com/api/rest/contacts/contacts/sort-and-filter#contacts_contacts_sort-and-filter_field-support-for-filtering-sorting-and-searching)\nfor a list of searchable fields.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkLabelAndUnlabelContactsRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter options.\nLabels will be removed from contacts that meet the `filter` and `search` criteria.\n\nSee\n[Field Support for Filtering, Sorting, and Searching](https://dev.wix.com/api/rest/contacts/contacts/sort-and-filter#contacts_contacts_sort-and-filter_field-support-for-filtering-sorting-and-searching)\nfor a list of supported filters and fields.\n"
        },
        {
          "name": "labelKeysToAdd",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to add to the contacts.\n\nLabel keys must exist to be added to the contact.\n Contact labels can be created or retrieved with\n [`findOrCreateLabel()`](wix-crm-v2/labels/findorcreatelabel)\n or\n [`queryLabels()`](wix-crm-v2/labels/queryLabels).\n"
        },
        {
          "name": "labelKeysToRemove",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to remove from the contacts."
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match, up to 100 characters.\nLabels will be removed from contacts that meet the `filter` and `search` criteria.\n\nSee\n[Field Support for Filtering, Sorting, and Searching](https://dev.wix.com/api/rest/contacts/contacts/sort-and-filter#contacts_contacts_sort-and-filter_field-support-for-filtering-sorting-and-searching)\nfor a list of searchable fields.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkLabelAndUnlabelContactsResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Bulk job ID.\nThe job's status can be retrieved with\n[Get Bulk Job](https://dev.wix.com/api/rest/contacts/contacts/bulk-jobs/get-bulk-job) or\n[List Bulk Jobs](https://dev.wix.com/api/rest/contacts/contacts/bulk-jobs/list-bulk-jobs)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveSegmentFromContactsRequest",
      "members": [
        {
          "name": "contactIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of Contact ids"
        },
        {
          "name": "segmentId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Segment id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveSegmentFromContactsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.BulkActionMetadata"
            }
          ],
          "doc": "Metadata on the bulk action"
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ItemMetadata"
                  }
                ]
              }
            }
          ],
          "doc": "List of action results"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateContactsOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object.\n\nPossible filters:\n`$eq`, `$exists`, `$gt`, `$gte`, `$hasAll`, `$hasSome`, `$in`, `$lt`, `$lte`, `$ne`, `$startsWith`.\n\nFor a detailed list of supported filters, see\nfiltering and sorting for\n[contact properties](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#contact-properties-filtering-sorting-and-searching),\n[extended fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#extended-fields-filtering-sorting-and-searching),\nand [custom fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#custom-fields-filtering-sorting-and-searching).\n\nExample:\n`{ \"filter\": { \"info.name.last\": \"Smith\" } }`\n"
        },
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": "Contact info."
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match, up to 100 characters.\n\nSearchable fields:\n\n- `info.name.first`\n- `info.name.last`\n- `info.emails.email`\n- `info.phones.phone`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateContactsRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object.\n\nPossible filters:\n`$eq`, `$exists`, `$gt`, `$gte`, `$hasAll`, `$hasSome`, `$in`, `$lt`, `$lte`, `$ne`, `$startsWith`.\n\nFor a detailed list of supported filters, see\nfiltering and sorting for\n[contact properties](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#contact-properties-filtering-sorting-and-searching),\n[extended fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#extended-fields-filtering-sorting-and-searching),\nand [custom fields](https://dev.wix.com/api/rest/contacts/contacts/sorting,-filtering,-and-searching#custom-fields-filtering-sorting-and-searching).\n\nExample:\n`{ \"filter\": { \"info.name.last\": \"Smith\" } }`\n"
        },
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": "Contact info."
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match, up to 100 characters.\n\nSearchable fields:\n\n- `info.name.first`\n- `info.name.last`\n- `info.emails.email`\n- `info.phones.phone`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateContactsResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Bulk job ID.\nThe job's status can be retrieved with\n[Get Bulk Job](https://dev.wix.com/api/rest/contacts/contacts/bulk-jobs/get-bulk-job) or\n[List Bulk Jobs](https://dev.wix.com/api/rest/contacts/contacts/bulk-jobs/list-bulk-jobs)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpsertContactsOptions",
      "members": [
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ContactInfo"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "returnFullEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpsertContactsRequest",
      "members": [
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ContactInfo"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "returnFullEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpsertContactsResponse",
      "members": [
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.BulkUpsertContactsResponseMetadata"
            }
          ],
          "doc": ""
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.Item"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpsertContactsResponseMetadata",
      "members": [
        {
          "name": "totalCreated",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "totalFailure",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "totalSuccess",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "totalUpdated",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Contact",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the contact was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the contact was last updated."
        },
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": "Contact's details."
        },
        {
          "name": "lastActivity",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactActivity"
            }
          ],
          "doc": "Details about the contact's last action in the site."
        },
        {
          "name": "primaryInfo",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PrimaryContactInfo"
            }
          ],
          "doc": "Contact's primary phone and email.\n\nThis property reflects the email address in `contactInfo.emails` where `primary` is `true`."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the contact is updated.\nTo prevent conflicting changes,\nthe existing `revision` must be used when updating a contact."
        },
        {
          "name": "source",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactSource"
            }
          ],
          "doc": "Details about the contact's source."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactActivity",
      "members": [
        {
          "name": "activityDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time of the last action."
        },
        {
          "name": "activityType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's last action in the site.\n\nSome possible values:\n`\"GENERAL\"`, `\"CONTACT_CREATED\"`, `\"MEMBER_LOGIN\"`, `\"MEMBER_REGISTER\"`,\n`\"MEMBER_STATUS_CHANGED\"`, `\"FORM_SUBMITTED\"`, `\"INBOX_FORM_SUBMITTED\"`,\n`\"INBOX_PAYMENT_REQUEST_PAID\"`, `\"INBOX_MESSAGE_TO_CUSTOMER\"`,\n`\"INBOX_MESSAGE_FROM_CUSTOMER\"`, `\"NEWSLETTER_SUBSCRIPTION_FORM_SUBMITTED\"`,\n`\"NEWSLETTER_SUBSCRIPTION_UNSUBSCRIBE\"`, `\"NEWSLETTER_SUBSCRIPTION_SUBSCRIBE\"`,\n`\"NEWSLETTER_SUBSCRIPTION_PENDING\"`, `\"NEWSLETTER_SUBSCRIPTION_NOT_SET\"`, `\"ECOM_PURCHASE\"`,\n`\"ECOM_CART_ABANDON\"`, `\"ECOM_CHECKOUT_BUYER\"`, `\"BOOKINGS_APPOINTMENT\"`,\n`\"HOTELS_RESERVATION\"`, `\"HOTELS_PURCHASE\"`, `\"HOTELS_CONFIRMATION\"`,\n`\"HOTELS_CANCEL\"`, `\"VIDEO_PURCHASE\"`, `\"VIDEO_RENT\"`,\n`\"CASHIER_BUTTON_PURCHASE\"`, `\"ARENA_NEW_LEAD\"`, `\"EVENTS_RSVP\"`,\n`\"INVOICE_PAY\"`, `\"INVOICE_OVERDUE\"`, `\"PRICE_QUOTE_ACCEPT\"`,\n`\"PRICE_QUOTE_EXPIRE\"`, `\"RESTAURANTS_ORDER\"`, `\"RESTAURANTS_RESERVATION\"`,\n`\"SHOUTOUT_OPEN\"`, `\"SHOUTOUT_CLICK\"`, `\"CONTACT_MERGED\"`,\n`\"PHONE_SUBSCRIPTION_SUBSCRIBE\"`, `\"PHONE_SUBSCRIPTION_PENDING\"`, `\"PHONE_SUBSCRIPTION_NOT_SET\"`,\n`\"PHONE_SUBSCRIPTION_UNSUBSCRIBE\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactAddedToSegment",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "The contact that was added"
        },
        {
          "name": "segmentId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the segment to which the contact was added"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactAddress",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street address ID."
        },
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Address"
            }
          ],
          "doc": "Street address."
        },
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Address type.\n\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nSupported values: `\"UNTAGGED\"`, `\"HOME\"`, `\"WORK\"`, `\"BILLING\"`, `\"SHIPPING\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactAddressesWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ContactAddress"
                  }
                ]
              }
            }
          ],
          "doc": "List of up to 50 addresses."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactChanged",
      "members": [
        {
          "name": "currentContact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "The Contact after the changes"
        },
        {
          "name": "previousContact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "The Contact before the changes"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactEmail",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email ID."
        },
        {
          "name": "email",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email address."
        },
        {
          "name": "primary",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates whether this is the contact's primary email address.\nWhen changing `primary` to `true` for an email,\nthe contact's other emails become `false`.\nIt also affects the subscription status to marketing emails that are decided based on the primary email."
        },
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email type.\n\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nSupported values: `\"UNTAGGED\"`, `\"MAIN\"`, `\"HOME\"`, `\"WORK\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactEmailSubscriptionUpdated",
      "members": [
        {
          "name": "_updatedDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the contact was updated with the email subscription or deliverability status."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The updated contact ID."
        },
        {
          "name": "primaryEmail",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PrimaryEmail"
            }
          ],
          "doc": "The primary email of the contact with the updated subscription and deliverability status."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The revision of the contact."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactEmailsWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ContactEmail"
                  }
                ]
              }
            }
          ],
          "doc": "List of up to 50 email addresses."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactInfo",
      "members": [
        {
          "name": "addresses",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactAddressesWrapper"
            }
          ],
          "doc": "Contact's street addresses."
        },
        {
          "name": "birthdate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Birth date in `YYYY-MM-DD` format. For example, `2020-03-15`."
        },
        {
          "name": "company",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's company name."
        },
        {
          "name": "emails",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactEmailsWrapper"
            }
          ],
          "doc": "Contact's email addresses."
        },
        {
          "name": "extendedFields",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ExtendedFieldsWrapper"
            }
          ],
          "doc": "Additional custom fields.\nThis includes fields managed by Wix, by 3rd-party apps, and by the site.\n\nEmpty fields are not returned.\n"
        },
        {
          "name": "jobTitle",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's job title.\nCorresponds to the **Position** field in the Dashboard."
        },
        {
          "name": "labelKeys",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.LabelsWrapper"
            }
          ],
          "doc": "List of label keys applied to the contact.\n\nLabel keys must exist to be added to the contact.\nContact labels can be created with the\n`findOrCreateLabel()` function. You can use the\n `queryLabels()` function to view the currently existing labels.\n\n"
        },
        {
          "name": "locale",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Locale in\n[IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.\nTypically, this is a lowercase 2-letter language code,\nfollowed by a hyphen, followed by an uppercase 2-letter country code.\nFor example, `en-US` for U.S. English, and `de-DE` for Germany German."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactName"
            }
          ],
          "doc": "Contact's first and last name."
        },
        {
          "name": "phones",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactPhonesWrapper"
            }
          ],
          "doc": "Contact's phone numbers."
        },
        {
          "name": "picture",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactPicture"
            }
          ],
          "doc": "Contact's profile picture."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactMerged",
      "members": [
        {
          "name": "sourceContactIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of contacts that were merged into the target contact."
        },
        {
          "name": "targetContact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Updated target contact."
        },
        {
          "name": "targetContactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact the source contacts were merged into."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactName",
      "members": [
        {
          "name": "first",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's first name."
        },
        {
          "name": "last",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's last name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactPhone",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone ID."
        },
        {
          "name": "countryCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "[ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code."
        },
        {
          "name": "e164Phone",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "[ITU E.164-formatted](https://www.itu.int/rec/T-REC-E.164/)\nphone number.\nAutomatically generated using `phone` and `countryCode`, pending both values are valid."
        },
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone number."
        },
        {
          "name": "primary",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this is the contact's primary phone number.\nWhen changing `primary` to `true` for a phone,\nthe contact's `primary` field for other phones becomes `false`.\nIt also affects the subscription status to SMS messages that are decided based on the primary phone."
        },
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone type.\n\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nSupported values: `\"UNTAGGED\"`, `\"MAIN\"`, `\"HOME\"`,`\"MOBILE\"`, `\"WORK\"`, `\"FAX\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactPhoneSubscriptionUpdated",
      "members": [
        {
          "name": "_updatedDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the contact was updated with the SMS subscription status."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The updated contact ID."
        },
        {
          "name": "primaryPhone",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PrimaryPhone"
            }
          ],
          "doc": "The primary phone of the contact with the updated subscription status."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The revision of the contact."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactPhonesWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ContactPhone"
                  }
                ]
              }
            }
          ],
          "doc": "List of up to 50 phone numbers."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactPicture",
      "members": [
        {
          "name": "image",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Image.\nThis can contain an image URL or a Wix Media image ID."
        }
      ],
      "docs": {
        "description": [
          "TEST contact picture description"
        ]
      }
    },
    {
      "name": "ContactPrimaryInfoUpdated",
      "members": [
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The updated contact ID."
        },
        {
          "name": "previousPrimaryEmailSubscriptionStatus",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PrimarySubscriptionStatus"
            }
          ],
          "doc": "previous primary email subscription status"
        },
        {
          "name": "previousPrimaryPhoneSubscriptionStatus",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PrimarySubscriptionStatus"
            }
          ],
          "doc": "previous primary phone subscription status"
        },
        {
          "name": "primaryEmailUpdated",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indication whether the primary email was updated."
        },
        {
          "name": "primaryPhoneUpdated",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indication whether primary phone was updated."
        }
      ],
      "docs": {
        "description": [
          "This message is an internal message used by this app and it is used to trigger\nthe update of the subscription status of the contact asynchronously.\nIt is published after a contact is created/updated/merged."
        ]
      }
    },
    {
      "name": "ContactRemovedFromSegment",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "The contact that was removed"
        },
        {
          "name": "segmentId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the segment from which the contact was removed"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactSource",
      "members": [
        {
          "name": "appId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App ID, if the contact was created by an app."
        },
        {
          "name": "sourceType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Some possible values:\n\n`\"OTHER\"`, `\"ADMIN\"`, `\"WIX_APP\"`, `\"IMPORT\"`, `\"THIRD_PARTY\"`,\n`\"WIX_BOOKINGS\"`, `\"WIX_CHAT\"`, `\"WIX_EMAIL_MARKETING\"`, `\"WIX_EVENTS\"`,\n`\"WIX_FORMS\"`, `\"WIX_GROUPS\"`, `\"WIX_HOTELS\"`, `\"WIX_MARKET_PLACE\"`,\n`\"WIX_MUSIC\"`, `\"WIX_RESTAURANTS\"`, `\"WIX_SITE_MEMBERS\"`, `\"WIX_STORES\"`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactSubmitted",
      "members": [
        {
          "name": "activity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactActivity"
            }
          ],
          "doc": "Submitted activity"
        },
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Submitted Contact (after processing)"
        },
        {
          "name": "passThroughData",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pass through data, submitted with the contact"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactsFacet",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of contacts the facet is applied to."
        },
        {
          "name": "facetDisplayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Human-readable name. Shown in the Wix UI."
        },
        {
          "name": "facetKey",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Facet key, automatically generated."
        },
        {
          "name": "facetType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Type of facet."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Scope for facet keys.\nWhen a facet key exists in a namespace,\neach key is unique within that namespace.\n\nCurrently, facets not created by Wix are in the `custom` namespace.\n"
        },
        {
          "name": "namespaceDisplayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Human-readable display name."
        },
        {
          "name": "queryFilter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter used for query contacts of this facet"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountContactsRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountContactsResponse",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateContactOptions",
      "members": [
        {
          "name": "allowDuplicates",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Controls whether the call will succeed\nif the new contact information contains an email or a phone number already used by another contact.\n\nIf set to `true`,\nthe call will succeed even if an email address or phone number is used by another contact.\nIf set to `false`,\nthe call will fail if the given email address is used by another contact or,\nif the email address is not given and the given phone number is used by another contact.\n\nDefault: `false`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateContactRequest",
      "members": [
        {
          "name": "allowDuplicates",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Controls whether the call will succeed\nif the new contact information contains an email or a phone number already used by another contact.\n\nIf set to `true`,\nthe call will succeed even if an email address or phone number is used by another contact.\nIf set to `false`,\nthe call will fail if the given email address is used by another contact or,\nif the email address is not given and the given phone number is used by another contact.\n\nDefault: `false`\n"
        },
        {
          "name": "info",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": "Contact info."
        }
      ],
      "docs": {
        "description": [
          "Contact creation options."
        ]
      }
    },
    {
      "name": "CreateContactResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Contact."
        }
      ],
      "docs": {
        "description": [
          "Contact."
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor returned in last query response. Should not be provided on first page request"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of contacts to load (default = 50, max = 1000)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next result page"
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous result page"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteContactOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteContactRequest",
      "members": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteContactResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DuplicateContactExists",
      "members": [
        {
          "name": "duplicateContactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "duplicateEmail",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "duplicatePhone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Error",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFieldsWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Set of key-value pairs.\n\nContact's extended fields which allow you to store additional information about your contacts.\n\n To view or create extended fields, use\n`findOrCreateExtendedField()`,\n`getExtendedField()`, or\n`queryExtendedFields()` in the Extended Fields API.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GeneratePictureUploadUrlOptions",
      "members": [
        {
          "name": "mimeType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Mime Type. Must be one of:\n`image/png`, `image/jpeg`.\nDefaults to `image/png`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GeneratePictureUploadUrlRequest",
      "members": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact whose picture is being updated."
        },
        {
          "name": "mimeType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Mime Type. Must be one of:\n`image/png`, `image/jpeg`.\nDefaults to `image/png`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GeneratePictureUploadUrlResponse",
      "members": [
        {
          "name": "uploadUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL to upload the image"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetContactOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of projected fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n`id` and `revision` are always returned.\n\nSupported properties:\n`source`, `createdDate`, `updatedDate`, `lastActivity`, `primaryInfo`,\n`info.name`, `info.emails`, `info.phones`, `info.addresses`, `info.company`,\n`info.jobTitle`, `info.picture`, `info.birthdate`, `info.locale`,\n`info.labelKeys`, `info.locations`, `info.extendedFields`\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n\n- `BASIC`: Returns `id`, `revision`, `primaryInfo`, `info.name`.\n- `COMMUNICATION_DETAILS`: Returns `id`, `revision`, `primaryInfo`, `info.name`, `info.emails`, `info.phones`, `info.addresses`.\n- `EXTENDED`: Returns `id`, `revision`, `primaryInfo`, `info.name`, `info.extendedFields`.\n- `FULL`: Returns all fields.\n\nDefault: If `fields` is omitted from the request, `FULL`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetContactRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to retrieve."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of projected fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n`id` and `revision` are always returned.\n\nSupported properties:\n`source`, `createdDate`, `updatedDate`, `lastActivity`, `primaryInfo`,\n`info.name`, `info.emails`, `info.phones`, `info.addresses`, `info.company`,\n`info.jobTitle`, `info.picture`, `info.birthdate`, `info.locale`,\n`info.labelKeys`, `info.locations`, `info.extendedFields`\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n\n- `BASIC`: Returns `id`, `revision`, `primaryInfo`, `info.name`.\n- `COMMUNICATION_DETAILS`: Returns `id`, `revision`, `primaryInfo`, `info.name`, `info.emails`, `info.phones`, `info.addresses`.\n- `EXTENDED`: Returns `id`, `revision`, `primaryInfo`, `info.name`, `info.extendedFields`.\n- `FULL`: Returns all fields.\n\nDefault: If `fields` is omitted from the request, `FULL`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetContactResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "The requested contact."
        },
        {
          "name": "responseType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact response type.\n\n- `REGULAR`: The specified contact was returned.\n- `IMPLICIT`: Not used.\n- `MERGED`: The specified contact was previously merged with another contact, and the new contact was\n"
        }
      ],
      "docs": {
        "description": [
          "The requested contact."
        ]
      }
    },
    {
      "name": "GroupInfo",
      "members": [
        {
          "name": "groupIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Group IDs"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentityInfo",
      "members": [
        {
          "name": "email",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Login email"
        },
        {
          "name": "emailVerificationRequired",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates that the member is required to verify their email"
        },
        {
          "name": "emailVerified",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicate whether the email is verified"
        },
        {
          "name": "signupDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Signup date"
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Identity status"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Item",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": ""
        },
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Metadata"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LabelAndUnlabelContactOptions",
      "members": [
        {
          "name": "labelKeysToRemove",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to remove from the contact.\n\nYou can use the `queryLabels()` function to view the currently existing labels.\n\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LabelAndUnlabelContactRequest",
      "members": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        },
        {
          "name": "labelKeysToAdd",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys applied to the contact.\n\nLabel keys must exist to be added to the contact.\nContact labels can be created with the\n`findOrCreateLabel()` function. You can use the\n `queryLabels()` function to view the currently existing labels.\n"
        },
        {
          "name": "labelKeysToRemove",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to remove from the contact.\n\nYou can use the `queryLabels()` function to view the currently existing labels.\n\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LabelAndUnlabelContactResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Updated contact."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LabelContactOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LabelContactRequest",
      "members": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to add labels to."
        },
        {
          "name": "labelKeys",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to add to the contact.\n\nLabel keys must exist to be added to the contact.\nContact labels can be created with the\n`findOrCreateLabel()` function. You can use the\n `queryLabels()` function to view the currently existing labels.\n\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LabelContactResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Updated contact."
        }
      ],
      "docs": {
        "description": [
          "Updated contact."
        ]
      }
    },
    {
      "name": "LabelsWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of contact label keys.\n[Contact labels](https://support.wix.com/en/article/adding-labels-to-contacts-in-your-contact-list)\nhelp categorize contacts.\n\nLabel keys must exist to be added to the contact.\nContact labels can be created or retrieved with\n[Find or Create Label](https://dev.wix.com/api/rest/contacts/labels/find-or-create-label)\nor\n[List Labels](https://dev.wix.com/api/rest/contacts/labels/list-labels)\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListContactsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of projected fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n`id` and `revision` are always returned.\n\nSupported properties:\n`source`, `createdDate`, `updatedDate`, `lastActivity`, `primaryInfo`,\n`info.name`, `info.emails`, `info.phones`, `info.addresses`, `info.company`,\n`info.jobTitle`, `info.picture`, `info.birthdate`, `info.locale`,\n`info.labelKeys`, `info.locations`, `info.extendedFields`\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported values:\n- `'BASIC'`\n- `'COMMUNICATION_DETAILS'`\n- `'EXTENDED'`\n- `'FULL'`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Paging"
            }
          ],
          "doc": "Pagination, defaults to offset = 0 and limit = 50 (max limit 1,000)."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Sorting"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListContactsRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of projected fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n`id` and `revision` are always returned.\n\nSupported properties:\n`source`, `createdDate`, `updatedDate`, `lastActivity`, `primaryInfo`,\n`info.name`, `info.emails`, `info.phones`, `info.addresses`, `info.company`,\n`info.jobTitle`, `info.picture`, `info.birthdate`, `info.locale`,\n`info.labelKeys`, `info.locations`, `info.extendedFields`\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported values:\n- `'BASIC'`\n- `'COMMUNICATION_DETAILS'`\n- `'EXTENDED'`\n- `'FULL'`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Paging"
            }
          ],
          "doc": "Pagination, defaults to offset = 0 and limit = 50 (max limit 1,000)."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Sorting"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListContactsResponse",
      "members": [
        {
          "name": "contacts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.Contact"
                  }
                ]
              }
            }
          ],
          "doc": "List of contacts."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PagingMetadata"
            }
          ],
          "doc": "Details on the paged set of results returned."
        }
      ],
      "docs": {
        "description": [
          "List of contacts."
        ]
      }
    },
    {
      "name": "ListFacetsOptions",
      "members": [
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Language for localization"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Paging"
            }
          ],
          "doc": "Allow paginating, default: offset = 0 and limit = 1000"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListFacetsRequest",
      "members": [
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Language for localization"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Paging"
            }
          ],
          "doc": "Allow paginating, default: offset = 0 and limit = 1000"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListFacetsResponse",
      "members": [
        {
          "name": "facets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ContactsFacet"
                  }
                ]
              }
            }
          ],
          "doc": "List of facets."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PagingMetadata"
            }
          ],
          "doc": "Details on the paged set of results returned."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LocationsWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of location ids."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberInfo",
      "members": [
        {
          "name": "groupInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.GroupInfo"
            }
          ],
          "doc": "Group info. For more details see [here](https://github.com/wix-private/crm/blob/master/members-groups/api/src/main/proto/com/wixpress/members/groups/Groups.proto)"
        },
        {
          "name": "identityInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.IdentityInfo"
            }
          ],
          "doc": "Identity info. For more details see [here](https://github.com/wix-private/identity/blob/master/iam/identity/identity-service/proto/wix/iam/identity/v1/identity.proto)"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID. For more details see [here](https://github.com/wix-private/identity/blob/master/iam/memberid/proto/wix/iam/member/v1/member_id_service.proto)"
        },
        {
          "name": "profileInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ProfileInfo"
            }
          ],
          "doc": "Profile info. For more details see [here](https://github.com/wix-private/app-market/blob/master/members/members-profiles-api/proto/com/wixpress/members/profiles/profile.proto)"
        },
        {
          "name": "sessionInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.SessionInfo"
            }
          ],
          "doc": "Session info. For more details see [here](https://github.com/wix-private/identity/blob/master/iam/session/session-management/proto/wix/iam/session/v1/session.proto)"
        },
        {
          "name": "userInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.UserInfo"
            }
          ],
          "doc": "User info. For more details see [here](https://dev.wix.com/docs/rest/internal-only/identity/user-member-connection-v1/user-member-connection-object)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MergeContactsOptions",
      "members": [
        {
          "name": "sourceContactIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of up to 5 contacts to merge into the target contact.\nIf merging more than one source contact,\nthe first source is given precedence, then the second, and so on."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MergeContactsRequest",
      "members": [
        {
          "name": "sourceContactIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of up to 5 contacts to merge into the target contact.\nIf merging more than one source contact,\nthe first source is given precedence, then the second, and so on."
        },
        {
          "name": "targetContactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Target contact ID."
        },
        {
          "name": "targetContactRevision",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Target contact revision number, which increments by 1 each time the contact is updated.\nTo prevent conflicting changes,\nthe target contact's current revision must be passed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MergeContactsResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Updated target contact."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Metadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "action",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'CREATED'`\n- `'UNKNOWN'`\n- `'UPDATED'`"
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Error"
            }
          ],
          "doc": ""
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to return."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of items returned in this response"
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The offset which was requested"
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A flag that indicates the server failed to calculate 'total' field"
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The total number of items that match the query"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of items returned in this response"
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Cursors"
            }
          ],
          "doc": "Cursors to navigate through result pages. Returned if cursor paging was used"
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The offset which was requested. Returned if offset paging was used"
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A flag that indicates the server failed to calculate 'total' field"
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The total number of items that match the query. Returned if offset paging was used and 'too_many_to_count' flag is not set"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PreviewMergeContactsOptions",
      "members": [
        {
          "name": "sourceContactIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of up to 5 contacts to merge into the target contact.\nIf merging more than one source contact,\nthe first source is given precedence, then the second, and so on."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PreviewMergeContactsRequest",
      "members": [
        {
          "name": "sourceContactIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of up to 5 contacts to merge into the target contact.\nIf merging more than one source contact,\nthe first source is given precedence, then the second, and so on."
        },
        {
          "name": "targetContactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Target contact ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PreviewMergeContactsResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Preview of the updated target contact."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PrimaryContactInfo",
      "members": [
        {
          "name": "email",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary email address.\n\nThis property reflects the email address in `info.emails`\nwhere `primary` is `true`."
        },
        {
          "name": "phone",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary phone number.\n\nThis property reflects the phone number in `contactInfo.phones` where `primary` is `true`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PrimaryEmail",
      "members": [
        {
          "name": "deliverabilityStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Indicates last reported status of sent emails.\n\n- `NOT_SET`: No status reported. Default.\n- `VALID`: Emails are being successfully delivered.\n- `BOUNCED`: The last email to the recipient bounced or was rejected.\n- `SPAM_COMPLAINT`: Recipient registered a spam complaint\nwith their email provider.\n- `INACTIVE`: Multiple emails have been delivered without any kind of engagement from the recipient."
        },
        {
          "name": "email",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary email address.\n\nThis property reflects the email address in `info.emails`\nwhere `primary` is `true`."
        },
        {
          "name": "subscriptionStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Indicates the recipient's opt-in or opt-out status for marketing emails.\n\n- `NOT_SET`: No status specified. Default.\n- `PENDING`: Subscription confirmation was requested,\nbut recipient hasn't confirmed yet.\n- `SUBSCRIBED`: Recipient has opted in to marketing emails.\n- `UNSUBSCRIBED`: Recipient has opted out of marketing emails."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PrimaryPhone",
      "members": [
        {
          "name": "countryCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "[ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the primary phone."
        },
        {
          "name": "e164Phone",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "[ITU E.164-formatted](https://www.itu.int/rec/T-REC-E.164/)\nphone number.\nAutomatically generated using `phone` and `countryCode`,\nas long as both of those values are valid."
        },
        {
          "name": "formattedPhone",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Formatted phone. Automatically generated using phone and countryCode."
        },
        {
          "name": "phone",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary phone number.\n\nThis property reflects the phone number in `info.phones`\nwhere `primary` is `true`."
        },
        {
          "name": "subscriptionStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Indicates the recipient's opt-in or opt-out status for SMS messages.\n\n- `NO_SUBSCRIPTION_STATUS`: No status exists. This is the status when the phone is not a valid E164 phone.\n- `NOT_SET`: No status specified. Default when the phone is a valid E164 phone.\n- `PENDING`: Subscription confirmation was requested,\nbut recipient hasn't confirmed yet.\n- `SUBSCRIBED`: Recipient has opted in to SMS messages.\n- `UNSUBSCRIBED`: Recipient has opted out of SMS messages."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PrimarySubscriptionStatus",
      "members": [
        {
          "name": "subscriptionStatus",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subscription status"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ProfileInfo",
      "members": [
        {
          "name": "muted",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicate whether the member is muted"
        },
        {
          "name": "nickname",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Nickname"
        },
        {
          "name": "photo",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Profile photo"
        },
        {
          "name": "privacyStatus",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Privacy status"
        },
        {
          "name": "reported",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicate whether the member is reported"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of projected fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n`id` and `revision` are always returned.\n\nSupported properties:\n`source`, `createdDate`, `updatedDate`, `lastActivity`, `primaryInfo`,\n`info.name`, `info.emails`, `info.phones`, `info.addresses`, `info.company`,\n`info.jobTitle`, `info.picture`, `info.birthdate`, `info.locale`,\n`info.labelKeys`, `info.locations`, `info.extendedFields`\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\nIf both `fields` and `fieldsets` are sent in the request,\nthe union of both lists is returned.\n\n- `BASIC`: Returns `id`, `revision`, `primaryInfo`, `info.name`.\n- `COMMUNICATION_DETAILS`: Returns `id`, `revision`, `primaryInfo`, `info.name`, `info.emails`, `info.phones`, `info.addresses`.\n- `EXTENDED`: Returns `id`, `revision`, `primaryInfo`, `info.name`, `info.extendedFields`.\n- `FULL`: Returns all fields.\n\nDefault: If `fields` is omitted from the request, `FULL`.\n"
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object.\nSee [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\nfor more information.\n\nFor a detailed list of supported filters, see\n[Supported Filters](https://dev.wix.com/api/rest/contacts/contacts/supported-filters).\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Paging"
            }
          ],
          "doc": "Pagination options."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sorting options.\nSee [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination)\nfor more information.\n\nMax: 1 sort object\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryContactsOptions",
      "members": [
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match.\n\nSupported properties:\n`info.name.first`, `info.name.last`, `info.emails.email`, `info.phones.phone`\n\nMax: 100 characters\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryContactsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Query"
            }
          ],
          "doc": "Query options."
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Plain text search for an exact match.\n\nSupported properties:\n`info.name.first`, `info.name.last`, `info.emails.email`, `info.phones.phone`\n\nMax: 100 characters\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryContactsResponse",
      "members": [
        {
          "name": "contacts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.Contact"
                  }
                ]
              }
            }
          ],
          "doc": "List of contacts."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PagingMetadata"
            }
          ],
          "doc": "Details on the paged set of results returned."
        }
      ],
      "docs": {
        "description": [
          "List of contacts."
        ]
      }
    },
    {
      "name": "QueryFacetsOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Only allowed fields:\n#info.extendedFields.emailSubscriptions.effectiveEmail ($exists)\n#info.extendedFields.emailSubscriptions.subscriptionStatus ($eq, $ne, $in, $nin)\n#info.extendedFields.emailSubscriptions.deliverabilityStatus ($eq, $ne, $in, $nin)"
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Language for localization"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Paging"
            }
          ],
          "doc": "Allow paginating, default: offset = 0 and limit = 1000"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryFacetsRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Only allowed fields:\n#info.extendedFields.emailSubscriptions.effectiveEmail ($exists)\n#info.extendedFields.emailSubscriptions.subscriptionStatus ($eq, $ne, $in, $nin)\n#info.extendedFields.emailSubscriptions.deliverabilityStatus ($eq, $ne, $in, $nin)"
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Language for localization"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Paging"
            }
          ],
          "doc": "Allow paginating, default: offset = 0 and limit = 1000"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryFacetsResponse",
      "members": [
        {
          "name": "facets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.ContactsFacet"
                  }
                ]
              }
            }
          ],
          "doc": "List of facets."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PagingMetadata"
            }
          ],
          "doc": "Details on the paged set of results returned."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Search",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.CursorPaging"
            }
          ],
          "doc": "Cursor pointing to page of results. 'cursorPaging.cursor' can not be used together with 'filter' or 'sort'"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of projected fields to return.\n\nIf used in the request,\nall the fields contained in `fields` and `fieldsets` are returned.\nIf left blank, `fieldsets` is used to determine which fields to return.\n\nFor a list of valid projected fields, see\n[Valid Contact Projection Fields](https://dev.wix.com/api/rest/contacts/contacts/fieldsets-and-projected-fields#contacts_contacts_fieldsets-and-projected-fields_valid-contact-projection-fields).\n"
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Predefined sets of fields to return.\n\nDefaults to `FULL`.\nIgnored if left empty when `fields` is used in the request.\n\nFor more information,\nsee [Contact Fieldsets](https://dev.wix.com/api/rest/contacts/contacts/fieldsets-and-projected-fields#contacts_contacts_fieldsets-and-projected-fields_contact-fieldsets).\n"
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)"
        },
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.SearchDetails"
            }
          ],
          "doc": "free text to match in searchable fields"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfSearchPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchContactsOptions",
      "members": [
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Search"
            }
          ],
          "doc": "Search object. Encapsulates filter, sorting, paging and other details"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchContactsRequest",
      "members": [
        {
          "name": "search",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Search"
            }
          ],
          "doc": "Search object. Encapsulates filter, sorting, paging and other details"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchContactsResponse",
      "members": [
        {
          "name": "contacts",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Contacts.Contact"
                  }
                ]
              }
            }
          ],
          "doc": "List of contacts."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.PagingMetadataV2"
            }
          ],
          "doc": "Details on the paged set of results returned."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchDetails",
      "members": [
        {
          "name": "expression",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "search term or expression"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "fields to search in. if empty - server will search in own default fieldsDefault searchable fields:\n\n- `info.name.first`\n- `info.name.last`\n- `info.emails.email`\n- `info.phones.phone`\n"
        },
        {
          "name": "fuzzy",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "flag if should use auto fuzzy search (allowing typos by a managed proximity algorithm)"
        },
        {
          "name": "mode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "boolean search mode. Default is `OR`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SearchPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.CursorPaging"
            }
          ],
          "doc": "Cursor pointing to page of results. 'cursorPaging.cursor' can not be used together with 'filter' or 'sort'"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SegmentsWrapper",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of Contact segment IDs"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SessionInfo",
      "members": [
        {
          "name": "lastMobileLogin",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Last mobile login"
        },
        {
          "name": "lastWebLogin",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Last web login"
        },
        {
          "name": "mobileAppNames",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of mobile apps that the member has ever logged in to"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Field to sort by.\n\nSupported properties:\n`createdDate`, `lastActivity.activityDate`, `primaryInfo.email`, `info.name.first`, `info.name.last`, `info.company`,\n`info.jobTitle`, `info.birthdate`\n"
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order.\nUse `ASC` for ascending order or `DESC` for descending order.\n\nDefaults to `ASC`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street name."
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street number."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Subdivision",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision short code"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Full subdivision name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SyncSubmitContactRequest",
      "members": [
        {
          "name": "activity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactActivity"
            }
          ],
          "doc": ""
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "contactInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "hideFromContactList",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": ""
        },
        {
          "name": "passThroughData",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "sourceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "sourceType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Need to resolve source in allocator, because of server sign"
        },
        {
          "name": "submitOperation",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'CREATE'`\n- `'UNKNOWN'`\n- `'UPDATE'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SyncSubmitContactResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnlabelContactOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnlabelContactRequest",
      "members": [
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to remove labels from."
        },
        {
          "name": "labelKeys",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of label keys to remove from the contact."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnlabelContactResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Updated contact."
        }
      ],
      "docs": {
        "description": [
          "Updated contact."
        ]
      }
    },
    {
      "name": "UpdateContactOptions",
      "members": [
        {
          "name": "allowDuplicates",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Controls whether the call will succeed if the new contact information contains an email already used by another contact.\n\nIf set to `true`, the call will succeed even if an email address is used by another contact. If set to `false`, the call will fail if an email address is used by another contact.\n\nDefaults to `false`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateContactRequest",
      "members": [
        {
          "name": "allowDuplicates",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Controls whether the call will succeed\nif the new contact information contains an email or a phone number already used by another contact.\n\nIf set to `true`,\nthe call will succeed even if an email address or phone number is used by another contact.\nIf set to `false`,\nthe call will fail if the given email address is used by another contact or,\nif the email address is not given and the given phone number is used by another contact.\n\nDefault: `false`\n"
        },
        {
          "name": "contactId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact to update."
        },
        {
          "name": "info",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": "Contact info."
        },
        {
          "name": "revision",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Revision number.\nWhen updating, include the existing `revision`\nto prevent conflicting updates."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateContactResponse",
      "members": [
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Updated contact."
        }
      ],
      "docs": {
        "description": [
          "Updated contact."
        ]
      }
    },
    {
      "name": "UpsertContactRequest",
      "members": [
        {
          "name": "info",
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.ContactInfo"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpsertContactResponse",
      "members": [
        {
          "name": "action",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'CREATED'`\n- `'UNKNOWN'`\n- `'UPDATED'`"
        },
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Contacts.Contact"
            }
          ],
          "doc": "Upserted contact."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UserInfo",
      "members": [
        {
          "name": "role",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "User role"
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "User ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
