{
  "name": "Tasks",
  "memberOf": "wix-crm-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-crm.v2-task",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "countTasks",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.CountTasksOptions"
            }
          ],
          "doc": "Filtering options.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Tasks.CountTasksResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Counts the number of tasks.",
        "description": [
          "The total count includes both tasks with a `status` of\n`ACTION_NEEDED` and those with a `status` of `COMPLETED`.`\n\nOptionally, you can pass a filter to count only tasks based\non the provided criteria."
        ],
        "examples": [
          {
            "title": "Count the total number of tasks ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export async function myCountTasksFunction() {",
              "",
              "  try {",
              "    const elevatedCountTasks = elevate(tasks.countTasks);",
              "    const count = await elevatedCountTasks();",
              "",
              "    return count;",
              "  } catch(error){",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"count\": 9",
              " * }",
              " */"
            ]
          },
          {
            "title": " Count the number of completed tasks ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample options value: ",
              " * {",
              " *   'filter' : {",
              " *     'status': 'COMPLETED'",
              " *   }",
              " * }",
              " */",
              "",
              "export async function myCountTasksFunction(options) {",
              "",
              "  try {",
              "    const elevatedCountTasks = elevate(tasks.countTasks);",
              "    const count = await elevatedCountTasks(options);",
              "",
              "    return count;",
              "  } catch(error){",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"count\": 9",
              " * }",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "countTasks",
      "isAdminMethod": true
    },
    {
      "name": "createTask",
      "params": [
        {
          "name": "task",
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "Task to create.",
          "required": true
        }
      ],
      "requiredFields": [
        "task"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Tasks.Task"
                }
              ]
            }
          }
        ],
        "doc": "The created task.\n"
      },
      "docs": {
        "summary": "Creates a new task.",
        "description": [
          "All fields in the `task` object are optional. If you don't pass any fields in the `task` object, the function returns a task with the following core properties:\n- `_id`\n- `_createdDate`\n- `_updatedDate`\n- `status`\n- `source`\n- `revision`\n"
        ],
        "examples": [
          {
            "title": "Create a new task ",
            "body": [
              "",
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample task value:",
              " * {",
              " *   contact: {",
              " *     _id: '5518ee7f-270e-40c4-b756-dad56e8f0ffc'",
              " *   },",
              " *   description: 'Send a follow up email',",
              " *   dueDate: new Date(2024, 1, 31),",
              " *   status: 'ACTION_NEEDED',",
              " *   title: 'Follow up'",
              " * }",
              "*/",
              "",
              "export async function myCreateTaskFunction(task) {",
              "  ",
              "  try {     ",
              "    const elevatedCreateTask = elevate(tasks.createTask);",
              "    const newTask = await elevatedCreateTask(task);",
              "    console.log('Successfully created a new task:', newTask);",
              "",
              "    return newTask;",
              "  }",
              "  catch(error){",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": \"1\",",
              " *   \"title\": \"Follow up\",",
              " *   \"description\": \"Send a follow up email\",",
              " *   \"dueDate\": \"2024-01-31T00:00:00.000Z\",",
              " *   \"status\": \"ACTION_NEEDED\",",
              " *   \"source\": {",
              " *     \"sourceType\": \"APP\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"contact\": {",
              " *     \"firstName\": \"Sally\",",
              " *     \"lastName\": \"Smith\",",
              " *     \"email\": \"sally.smith@example.com\",",
              " *     \"phone\": \"+1 524-624-2486\",",
              " *     \"_id\": \"5518ee7f-270e-40c4-b756-dad56e8f0ffc\"",
              " *   },",
              " *   \"_id\": \"37c2c378-8085-4ef7-8a3e-6f341248e757\",",
              " *   \"_createdDate\": \"2024-01-18T12:16:37.452Z\",",
              " *   \"_updatedDate\": \"2024-01-18T12:16:37.452Z\"",
              " * }",
              "*/"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createTask",
      "isAdminMethod": true
    },
    {
      "name": "deleteTask",
      "params": [
        {
          "name": "taskId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the task to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "taskId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a task by ID.",
        "description": [],
        "examples": [
          {
            "title": "Delete a task ",
            "body": [
              "",
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample taskId value:",
              " * '3194f3f2-945f-4810-8905-d02b24f9e790'",
              " */",
              "",
              "export async function myDeleteTaskFunction(taskId) {",
              "    try {",
              "        const elevatedDeleteTask = elevate(tasks.deleteTask);",
              "        await elevatedDeleteTask(taskId);",
              "",
              "        console.log('Task deleted.')",
              "    } catch (error) {",
              "        console.log(error);",
              "        //Handle the error",
              "    }",
              "}"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteTask",
      "isAdminMethod": true
    },
    {
      "name": "getTask",
      "params": [
        {
          "name": "taskId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the task to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "taskId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Tasks.Task"
                }
              ]
            }
          }
        ],
        "doc": "The retrieved task.\n"
      },
      "docs": {
        "summary": "Retrieves a task by ID.",
        "description": [],
        "examples": [
          {
            "title": "Get a task ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample taskId value:",
              " * '3194f3f2-945f-4810-8905-d02b24f9e790'",
              " */",
              "",
              "export async function myGetTaskFunction(taskId) {",
              "    ",
              "  try {",
              "      const elevatedGetTask = elevate(tasks.getTask);",
              "      const task = await elevatedGetTask(taskId);",
              "      ",
              "      return task;",
              "  } catch(error){",
              "      console.log(error);",
              "      // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * { ",
              " *   \"revision\": \"1\",",
              " *   \"title\": \"Follow up\",",
              " *   \"description\": \"Send a follow up email\",",
              " *   \"status\": \"ACTION_NEEDED\",",
              " *   \"source\": {",
              " *     \"sourceType\": \"APP\",",
              " *     \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *   },",
              " *   \"contact\": {",
              " *     \"firstName\": \"Sally\",",
              " *     \"lastName\": \"Smith\",",
              " *     \"email\": \"sally.smith@example.com\",",
              " *     \"phone\": \"+1 524-624-2486\",",
              " *     \"_id\": \"5518ee7f-270e-40c4-b756-dad56e8f0ffc\"",
              " *   },",
              " *   \"_id\": \"3194f3f2-945f-4810-8905-d02b24f9e790\",",
              " *   \"_createdDate\": \"2024-01-18T11:35:29.092Z\",",
              " *   \"_updatedDate\": \"2024-01-18T11:35:29.092Z\"",
              " * }",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getTask",
      "isAdminMethod": true
    },
    {
      "name": "moveTaskAfter",
      "params": [
        {
          "name": "taskId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The task ID to move.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.MoveTaskAfterOptions"
            }
          ],
          "doc": "Options for moving the task.",
          "required": false
        }
      ],
      "requiredFields": [
        "taskId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Moves a task specified by ID to be placed after another task in the display.",
        "description": [
          "You can reposition a task to be first in the display by ommitting `beforeTaskId`."
        ],
        "examples": [
          {
            "title": "Update the display order of tasks ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample taskId value: ",
              " * '37c2c378-8085-4ef7-8a3e-6f341248e757'",
              " *",
              " * Sample options value:",
              " * {",
              " *   beforeTaskId: '3a49f901-62d5-4ca2-a8e8-395c562a3f7b'",
              " * }",
              " */",
              "",
              "export async function myMoveTaskAfterFunction(taskId, options) {",
              "",
              "  try {",
              "      const elevatedMoveTaskAfter = elevate(tasks.moveTaskAfter);",
              "      await elevatedMoveTaskAfter(taskId, options);",
              "",
              "      console.log('Successfuly updated task display.');",
              "  } catch (error) {",
              "      console.log(error);",
              "      // Handle the error",
              "  }   ",
              "}"
            ],
            "extra": {
              "description": "This function moves a specified task to be displayed after another task using the `moveTaskAfter()` function."
            }
          },
          {
            "title": "Move a task to the top of the display. ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample taskId value: ",
              " * '37c2c378-8085-4ef7-8a3e-6f341248e757'",
              " */",
              "",
              "export async function myMoveTaskAfterFunction(taskId) {",
              "  ",
              "  try {",
              "    const elevatedMoveTaskAfter = elevate(tasks.moveTaskAfter);",
              "    await elevatedMoveTaskAfter(taskId);",
              "  ",
              "    console.log('Moved task to top of display');",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }   ",
              "}"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "moveTaskAfter",
      "isAdminMethod": true
    },
    {
      "name": "queryTasks",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-crm-v2.Tasks.TasksQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a query to retrieve a list of tasks.",
        "description": [
          "",
          "The `queryTasks()` function builds a query to retrieve a list of tasks and returns a `TasksQueryBuilder` object. ",
          "",
          "The returned object contains the query definition which is typically used to run the query using the `find()` function. You can refine the query by chaining `TasksQueryBuilder` functions onto the query. `TasksQueryBuilder` functions enable you to sort, filter, and control the results that `queryTasks()` returns. ",
          "",
          "`queryTasks()` tuns with these `TasksQueryBuilder` defaults, which you can override: ",
          "- `skip(0)`",
          "- `limit(50)`",
          "- `descending(\"createdDate\")`",
          "",
          "The functions that are chained to `queryTasks()` are applied in the order they are called. For example, if you apply `ascending('_createdDate')` and then `descending('_updatedDate')`, the results are sorted first by the created date and then, if there are multiple results with the same date, the items are sorted by the updated date.",
          "",
          "The following `TasksQueryBuilder` functions are supported for `queryTasks()`. For a full description of the `Task` object, see the object returned for the `items` property in `TasksQueryResult`.",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-crm-v2.Tasks.TasksQueryBuilder#eq),[`ne()`](wix-crm-v2.Tasks.TasksQueryBuilder#ne),[`exists()`](wix-crm-v2.Tasks.TasksQueryBuilder#exists),[`in()`](wix-crm-v2.Tasks.TasksQueryBuilder#in),[`hasSome()`](wix-crm-v2.Tasks.TasksQueryBuilder#hasSome),[`startsWith()`](wix-crm-v2.Tasks.TasksQueryBuilder#startsWith),[`ascending()`](wix-crm-v2.Tasks.TasksQueryBuilder#ascending),[`descending()`](wix-crm-v2.Tasks.TasksQueryBuilder#descending)|",
          "|`_createdDate`|[`eq()`](wix-crm-v2.Tasks.TasksQueryBuilder#eq),[`ne()`](wix-crm-v2.Tasks.TasksQueryBuilder#ne),[`exists()`](wix-crm-v2.Tasks.TasksQueryBuilder#exists),[`in()`](wix-crm-v2.Tasks.TasksQueryBuilder#in),[`hasSome()`](wix-crm-v2.Tasks.TasksQueryBuilder#hasSome),[`lt()`](wix-crm-v2.Tasks.TasksQueryBuilder#lt),[`le()`](wix-crm-v2.Tasks.TasksQueryBuilder#le),[`gt()`](wix-crm-v2.Tasks.TasksQueryBuilder#gt),[`ge()`](wix-crm-v2.Tasks.TasksQueryBuilder#ge),[`ascending()`](wix-crm-v2.Tasks.TasksQueryBuilder#ascending),[`descending()`](wix-crm-v2.Tasks.TasksQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-crm-v2.Tasks.TasksQueryBuilder#eq),[`ne()`](wix-crm-v2.Tasks.TasksQueryBuilder#ne),[`exists()`](wix-crm-v2.Tasks.TasksQueryBuilder#exists),[`in()`](wix-crm-v2.Tasks.TasksQueryBuilder#in),[`hasSome()`](wix-crm-v2.Tasks.TasksQueryBuilder#hasSome),[`lt()`](wix-crm-v2.Tasks.TasksQueryBuilder#lt),[`le()`](wix-crm-v2.Tasks.TasksQueryBuilder#le),[`gt()`](wix-crm-v2.Tasks.TasksQueryBuilder#gt),[`ge()`](wix-crm-v2.Tasks.TasksQueryBuilder#ge),[`ascending()`](wix-crm-v2.Tasks.TasksQueryBuilder#ascending),[`descending()`](wix-crm-v2.Tasks.TasksQueryBuilder#descending)|",
          "|`dueDate`|[`eq()`](wix-crm-v2.Tasks.TasksQueryBuilder#eq),[`ne()`](wix-crm-v2.Tasks.TasksQueryBuilder#ne),[`exists()`](wix-crm-v2.Tasks.TasksQueryBuilder#exists),[`in()`](wix-crm-v2.Tasks.TasksQueryBuilder#in),[`hasSome()`](wix-crm-v2.Tasks.TasksQueryBuilder#hasSome),[`lt()`](wix-crm-v2.Tasks.TasksQueryBuilder#lt),[`le()`](wix-crm-v2.Tasks.TasksQueryBuilder#le),[`gt()`](wix-crm-v2.Tasks.TasksQueryBuilder#gt),[`ge()`](wix-crm-v2.Tasks.TasksQueryBuilder#ge),[`ascending()`](wix-crm-v2.Tasks.TasksQueryBuilder#ascending),[`descending()`](wix-crm-v2.Tasks.TasksQueryBuilder#descending)|",
          "|`status`|[`eq()`](wix-crm-v2.Tasks.TasksQueryBuilder#eq),[`ne()`](wix-crm-v2.Tasks.TasksQueryBuilder#ne),[`exists()`](wix-crm-v2.Tasks.TasksQueryBuilder#exists),[`in()`](wix-crm-v2.Tasks.TasksQueryBuilder#in),[`hasSome()`](wix-crm-v2.Tasks.TasksQueryBuilder#hasSome)|",
          "|`contact.id`|[`eq()`](wix-crm-v2.Tasks.TasksQueryBuilder#eq),[`ne()`](wix-crm-v2.Tasks.TasksQueryBuilder#ne),[`exists()`](wix-crm-v2.Tasks.TasksQueryBuilder#exists),[`in()`](wix-crm-v2.Tasks.TasksQueryBuilder#in),[`hasSome()`](wix-crm-v2.Tasks.TasksQueryBuilder#hasSome),[`startsWith()`](wix-crm-v2.Tasks.TasksQueryBuilder#startsWith)|"
        ],
        "examples": [
          {
            "title": "Retrieve all tasks ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export async function myQueryTasksFunction() {",
              "",
              "  try {",
              "    const elevatedQueryTasks = elevate(tasks.queryTasks);",
              "    const queryResults = await elevatedQueryTasks()",
              "      .find();",
              "",
              "    const items = queryResults.items;",
              "    const firstItem = items[0];",
              "    const pageSize = queryResults.pageSize;",
              "    const hasNext = queryResults.hasNext();",
              "    const hasPrev = queryResults.hasPrev();",
              "    const length = queryResults.length;",
              "    const query = queryResults.query;",
              "    console.log('Retrieved items:', items);",
              "",
              "    return items;",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * [",
              " *   {",
              " *     \"revision\": \"1\",",
              " *     \"title\": \"Send email\",",
              " *     \"status\": \"ACTION_NEEDED\",",
              " *     \"source\": {",
              " *       \"sourceType\": \"APP\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"contact\": {",
              " *       \"firstName\": \"Julie\",",
              " *       \"lastName\": \"Jones\",",
              " *       \"email\": \"julie.jones@example.com\",",
              " *       \"phone\": \"+1 516-569-2772\",",
              " *       \"_id\": \"719784da-0361-4f86-b4a4-b38409d7bce1\"",
              " *     },",
              " *     \"_id\": \"37e5d602-adad-4ba3-ba3d-06384394fb9e\",",
              " *     \"_createdDate\": \"2024-01-18T13:47:38.292Z\",",
              " *     \"_updatedDate\": \"2024-01-18T13:47:38.292Z\"",
              " *   },",
              " *   {",
              " *     \"revision\": \"1\",",
              " *     \"title\": \"Update Contact\",",
              " *     \"description\": \"Add new label to sontact\",",
              " *     \"dueDate\": \"2024-03-15T00:00:00.000Z\",",
              " *     \"status\": \"ACTION_NEEDED\",",
              " *     \"source\": {",
              " *       \"sourceType\": \"APP\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"contact\": {",
              " *       \"firstName\": \"Julie\",",
              " *       \"lastName\": \"Jones\",",
              " *       \"email\": \"julie.jones@example.com\",",
              " *       \"phone\": \"+1 516-569-2772\",",
              " *       \"_id\": \"719784da-0361-4f86-b4a4-b38409d7bce1\"",
              " *     },",
              " *     \"_id\": \"cdc52d55-e3e8-4fb4-8413-f15838e352b1\",",
              " *     \"_createdDate\": \"2024-01-18T13:46:18.198Z\",",
              " *     \"_updatedDate\": \"2024-01-18T13:46:18.198Z\"",
              " *   },",
              " *   {",
              " *     \"revision\": \"1\",",
              " *     \"title\": \"Follow up\",",
              " *     \"dueDate\": \"2024-01-26T10:00:00.000Z\",",
              " *     \"status\": \"ACTION_NEEDED\",",
              " *     \"source\": {",
              " *       \"sourceType\": \"USER\",",
              " *       \"userId\": \"162e6672-d392-42f8-bf79-999ee633c92a\"",
              " *     },",
              " *     \"contact\": {",
              " *       \"firstName\": \"Jane\",",
              " *       \"lastName\": \"Doe\",",
              " *       \"email\": \"jane.doe1@example.com\",",
              " *       \"phone\": \"+1 214-533-2543\",",
              " *       \"_id\": \"dfcb4c01-7336-4b59-ae43-957cb89952ce\"",
              " *     },",
              " *     \"_id\": \"3a49f901-62d5-4ca2-a8e8-395c562a3f7b\",",
              " *     \"_createdDate\": \"2024-01-18T13:40:56.414Z\",",
              " *     \"_updatedDate\": \"2024-01-18T13:40:56.414Z\"",
              " *   },",
              " *   {",
              " *     \"revision\": \"1\",",
              " *     \"title\": \"Follow up\",",
              " *     \"description\": \"Send a follow up email\",",
              " *     \"status\": \"ACTION_NEEDED\",",
              " *     \"source\": {",
              " *       \"sourceType\": \"APP\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"contact\": {",
              " *       \"firstName\": \"Sally\",",
              " *       \"lastName\": \"Smith\",",
              " *       \"email\": \"sally.smith@example.com\",",
              " *       \"phone\": \"+1 524-624-2486\",",
              " *       \"_id\": \"5518ee7f-270e-40c4-b756-dad56e8f0ffc\"",
              " *     },",
              " *     \"_id\": \"3194f3f2-945f-4810-8905-d02b24f9e790\",",
              " *     \"_createdDate\": \"2024-01-18T11:35:29.092Z\",",
              " *     \"_updatedDate\": \"2024-01-18T11:35:29.092Z\"",
              " *   }",
              " * ]",
              "/*"
            ]
          },
          {
            "title": "Retrieve all completed tasks ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export async function queryCompletedTasksFunction() {",
              "",
              "  try {",
              "    const elevatedQueryTasks = elevate(tasks.queryTasks);",
              "    const queryResults = await elevatedQueryTasks()",
              "      .eq(\"status\", \"COMPLETED\")",
              "      .ascending(\"_createdDate\")",
              "      .find();",
              "",
              "    const items = queryResults.items;",
              "    const firstItem = items[0];",
              "    const pageSize = queryResults.pageSize;",
              "    const hasNext = queryResults.hasNext();",
              "    const hasPrev = queryResults.hasPrev();",
              "    const length = queryResults.length;",
              "    const query = queryResults.query;",
              "    console.log('Retrieved items:', items);",
              "",
              "    return items;",
              "  } catch (error) {",
              "    console.log(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              "* [",
              " *   {",
              " *     \"revision\": \"2\",",
              " *     \"title\": \"Follow up\",",
              " *     \"description\": \"Send a follow up email\",",
              " *     \"status\": \"COMPLETED\",",
              " *     \"source\": {",
              " *       \"sourceType\": \"APP\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"contact\": {",
              " *       \"firstName\": \"Sally\",",
              " *       \"lastName\": \"Smith\",",
              " *       \"email\": \"sally.smith@example.com\",",
              " *       \"phone\": \"+1 524-624-2486\",",
              " *       \"_id\": \"5518ee7f-270e-40c4-b756-dad56e8f0ffc\"",
              " *     },",
              " *     \"_id\": \"3194f3f2-945f-4810-8905-d02b24f9e790\",",
              " *     \"_createdDate\": \"2024-01-18T11:35:29.092Z\",",
              " *     \"_updatedDate\": \"2024-01-18T14:50:25.210Z\"",
              " *   },",
              " *   {",
              " *     \"revision\": \"2\",",
              " *     \"title\": \"Send email\",",
              " *     \"status\": \"COMPLETED\",",
              " *     \"source\": {",
              " *       \"sourceType\": \"APP\",",
              " *       \"appId\": \"151e476a-715e-ec33-db9a-a7ff4d51f70a\"",
              " *     },",
              " *     \"contact\": {",
              " *       \"firstName\": \"Julie\",",
              " *       \"lastName\": \"Jones\",",
              " *       \"email\": \"julie.jones@example.com\",",
              " *       \"phone\": \"+1 516-569-2772\",",
              " *       \"_id\": \"719784da-0361-4f86-b4a4-b38409d7bce1\"",
              " *     },",
              " *     \"_id\": \"37e5d602-adad-4ba3-ba3d-06384394fb9e\",",
              " *     \"_createdDate\": \"2024-01-18T13:47:38.292Z\",",
              " *     \"_updatedDate\": \"2024-01-18T14:50:29.878Z\"",
              " *   }",
              " * ]",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryTasks",
      "isAdminMethod": true
    },
    {
      "name": "updateTask",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Task ID.",
          "required": true
        },
        {
          "name": "task",
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.UpdateTask"
            }
          ],
          "doc": "Task to update.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "task",
        "task.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-crm-v2.Tasks.Task"
                }
              ]
            }
          }
        ],
        "doc": "The updated task.\n"
      },
      "docs": {
        "summary": "Updates a task.",
        "description": [
          "Each time the task is updated, `revision` increments by 1.\nThe existing `revision` must be included when updating the task.\nThis ensures you're working with the latest task\nand prevents unintended overwrites."
        ],
        "examples": [
          {
            "title": "Partially update a task ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value:",
              " * '3a49f901-62d5-4ca2-a8e8-395c562a3f7b'",
              " *",
              " * Sample task value:",
              " * {",
              " *   revision: 2,",
              " *   status: 'COMPLETED',",
              " *   title: 'Send email",
              " * }",
              " */",
              " ",
              " export async function myUpdateTaskFunction(_id, task) {",
              "  try {",
              "      const elevatedUpdateTask = elevate(tasks.updateTask);",
              "      const updatedTask = await elevatedUpdateTask(_id, task);",
              "      ",
              "      return updatedTask;",
              "  } catch (error) {",
              "      console.log(error);",
              "      // Handle the error",
              "  }   ",
              "}",
              "",
              "/* Promise resolves to: ",
              " * {",
              " *   \"revision\": \"3\",",
              " *   \"title\": \"Send email\",",
              " *   \"dueDate\": \"2024-02-08T10:00:00.000Z\",",
              " *   \"status\": \"COMPLETED\",",
              " *   \"source\": {",
              " *     \"sourceType\": \"USER\",",
              " *     \"userId\": \"162e6672-d392-42f8-bf79-999ee633c92a\"",
              " *   },",
              " *   \"contact\": {",
              " *     \"firstName\": \"Jane\",",
              " *     \"lastName\": \"Doe\",",
              " *     \"email\": \"jane.doe1@example.com\",",
              " *     \"phone\": \"+1 214-533-2543\",",
              " *     \"_id\": \"dfcb4c01-7336-4b59-ae43-957cb89952ce\"",
              " *   },",
              " *   \"_id\": \"3a49f901-62d5-4ca2-a8e8-395c562a3f7b\",",
              " *   \"_createdDate\": \"2024-01-18T13:40:56.414Z\",",
              " *   \"_updatedDate\": \"2024-01-18T15:44:52.606Z\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Update task ",
            "body": [
              "import { tasks } from 'wix-crm.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value:",
              " * '3a49f901-62d5-4ca2-a8e8-395c562a3f7b'",
              " *",
              " * Sample task value:",
              " * {",
              " *   revision: 3,",
              " *   contact: {",
              " *      _id: 'dfcb4c01-7336-4b59-ae43-957cb89952ce'",
              " *   },",
              " *   description: 'Send follow up email email',",
              " *   dueDate: new Date(2024, 3, 16),",
              " *   status: 'ACTION_NEEDED',",
              " *   title: 'Follow up'",
              " * }",
              " */",
              "",
              "export async function myUpdateTaskFunction(_id, task) {",
              "",
              "  try {",
              "      const elevatedUpdateTask = elevate(tasks.updateTask);",
              "      const updatedTask = await elevatedUpdateTask(_id, task);",
              "      ",
              "      return updatedTask;",
              "  } catch (error) {",
              "      console.log(error);",
              "      // Handle the error",
              "  }   ",
              "}",
              "",
              "",
              "",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"revision\": \"4\",",
              " *   \"title\": \"Follow up\",",
              " *   \"description\": \"Send follow up email email\",",
              " *   \"dueDate\": \"2024-04-16T00:00:00.000Z\",",
              " *   \"status\": \"ACTION_NEEDED\",",
              " *   \"source\": {",
              " *     \"sourceType\": \"USER\",",
              " *     \"userId\": \"162e6672-d392-42f8-bf79-999ee633c92a\"",
              " *   },",
              " *   \"contact\": {",
              " *     \"firstName\": \"Jane\",",
              " *     \"lastName\": \"Doe\",",
              " *     \"email\": \"jane.doe1@example.com\",",
              " *     \"phone\": \"+1 214-533-2543\",",
              " *     \"_id\": \"dfcb4c01-7336-4b59-ae43-957cb89952ce\"",
              " *   },",
              " *   \"_id\": \"3a49f901-62d5-4ca2-a8e8-395c562a3f7b\",",
              " *   \"_createdDate\": \"2024-01-18T13:40:56.414Z\",",
              " *   \"_updatedDate\": \"2024-01-18T15:49:53.065Z\"",
              " * }",
              " */"
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateTask",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactInfo",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact associated with the task."
        },
        {
          "name": "email",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's primary email."
        },
        {
          "name": "firstName",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's first name."
        },
        {
          "name": "imageUrl",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's image url."
        },
        {
          "name": "lastName",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's last name."
        },
        {
          "name": "phone",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact's primary phone."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ContactNotFoundError",
      "members": [
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountTasksOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountTasksRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountTasksResponse",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of tasks that match the provided filter."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTaskRequest",
      "members": [
        {
          "name": "task",
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "Task to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTaskResponse",
      "members": [
        {
          "name": "task",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "The created task."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Tasks.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCompletedTasksRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "An optional filter of tasks to count. See 'queryTasks' for supported filter options."
        },
        {
          "name": "taskIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Optional list of tasks ids of the tasks to delete. If the list is not provided the filter is used."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCompletedTasksResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTaskRequest",
      "members": [
        {
          "name": "taskId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the task to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTaskResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTaskRequest",
      "members": [
        {
          "name": "taskId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the task to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTaskResponse",
      "members": [
        {
          "name": "task",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "The retrieved task."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MoveTaskAfterOptions",
      "members": [
        {
          "name": "beforeTaskId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The task ID after which the moved task is positioned in the display.\nIf `beforeTaskId` is not provided, the moved task is positioned first in the display of tasks."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MoveTaskAfterRequest",
      "members": [
        {
          "name": "beforeTaskId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The task ID after which the moved task is positioned in the display.\nIf `beforeTaskId` is not provided, the moved task is positioned first in the display of tasks."
        },
        {
          "name": "taskId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The task ID to move."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MoveTaskAfterResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTasksInternalRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.QueryV2"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTasksInternalResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.PagingMetadataV2"
            }
          ],
          "doc": "Details on the paged set of results returned."
        },
        {
          "name": "tasks",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Tasks.Task"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved Tasks"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTasksRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.CursorQuery"
            }
          ],
          "doc": "Query options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTasksResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata."
        },
        {
          "name": "tasks",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Tasks.Task"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved tasks."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-crm-v2.Tasks.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfQueryV2PagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RepositionTask",
      "members": [
        {
          "name": "position",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The position of the last task that was re-positioned"
        },
        {
          "name": "taskId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The id of the last task that was re-positioned"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SendTasksReminderRequest",
      "members": [
        {
          "name": "reminderType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The reminder type"
        },
        {
          "name": "taskIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Ids of the tasks to remind"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SendTasksReminderResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Task",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the task was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Task ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the task was last updated."
        },
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.ContactInfo"
            }
          ],
          "doc": "Information about the contact associated with the task."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the task."
        },
        {
          "name": "dueDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Due date for the task."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the task is updated. To prevent conflicting changes, the existing `revision` must be used when updating a task."
        },
        {
          "name": "source",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.TaskSource"
            }
          ],
          "doc": "Details about the task source."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of the task.\n\nSupported values: `\"ACTION_NEEDED\"`, `\"COMPLETED\"`.\n"
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Title of the task."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TaskAssigned",
      "members": [
        {
          "name": "assigneeId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The id of the assignee"
        },
        {
          "name": "task",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "The task that was assigned"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TaskNotFoundError",
      "members": [
        {
          "name": "taskId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The task id that was not found"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TaskOverdue",
      "members": [
        {
          "name": "task",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "The overdue task"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TaskSource",
      "members": [
        {
          "name": "appId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App ID, if the task was created by an app."
        },
        {
          "name": "sourceType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "How the task was created.\n\nSupported values: `\"APP\"`, `\"USER\"`."
        },
        {
          "name": "userId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "User ID, if the task was created by a user."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTask",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the task was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Task ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the task was last updated."
        },
        {
          "name": "contact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.ContactInfo"
            }
          ],
          "doc": "Information about the contact associated with the task."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the task."
        },
        {
          "name": "dueDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Due date for the task."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the task is updated. To prevent conflicting changes, the existing `revision` must be used when updating a task."
        },
        {
          "name": "source",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.TaskSource"
            }
          ],
          "doc": "Details about the task source."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of the task.\n\nSupported values: `\"ACTION_NEEDED\"`, `\"COMPLETED\"`.\n"
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Title of the task."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTaskOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTaskRequest",
      "members": [
        {
          "name": "task",
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "Task to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTaskResponse",
      "members": [
        {
          "name": "task",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-crm-v2.Tasks.Task"
            }
          ],
          "doc": "The updated task."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
