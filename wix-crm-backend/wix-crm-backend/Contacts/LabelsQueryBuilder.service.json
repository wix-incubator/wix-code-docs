{ "name": "LabelsQueryBuilder",
  "memberOf": "wix-crm-backend.Contacts",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "queryLabels.js" },
  "docs":
    { "summary": "Contains functionality for refining a labels query.",
      "description":
        [ "The `LabelsQueryBuilder` allows you to run, sort, and control",
          "which results a query returns.",
          "",
          "Typically, you build a query using the `queryLabels()` function,",
          "refine the query by chaining `LabelsQueryBuilder` functions, and then execute the",
          "query by chaining the [`find()`](#find) function.",
          "",
          "For example, the following code returns the first 5 labels that were created",
          "by sorting them in ascending order:",
          "",
          "```javascript",
          "import { contacts } from 'wix-crm-backend';",
          "",
          "contacts.queryLabels()",
          " .ascending(\"_createdDate\")",
          " .limit(5)",
          " .find()",
          " .then( (results) => {",
          "   return results.items;",
          " });",
          "```",
          "",
          "> **Note:**",
          "> Only visitors with",
          "> **Manage Contacts** [permissions](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Froles-and-permissions)",
          "> can query labels.",
          "> You can override the permissions by setting the `suppressAuth` option to `true`",
          "> in the [`find()`](wix-crm-backend/contacts/labelsquerybuilder/find) function." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "ascending",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The properties used in the sort.\n\nSupported properties:\n\n- `_createdDate`\n- `_updatedDate`\n- `displayName`",
              "spread": true } ],
        "ret":
          { "type": "wix-crm-backend.Contacts.LabelsQueryBuilder",
            "doc": "A `LabelsQueryBuilder` object that contains the refined query." },
        "locations":
          [ { "lineno": 35,
              "filename": "queryLabels.js" } ],
        "docs":
          { "summary": "Adds a sort to a query, sorting by the specified properties in ascending order.",
            "description":
              [ "The `ascending()` function refines a `LabelsQueryBuilder` to sort in ascending order of",
                "the specified properties. If you specify more than one property,",
                "`ascending()` sorts the results in ascending order by each property in the",
                "order they are listed.",
                "",
                "You can sort the following types:",
                "",
                "+ Number: Sorts numerically.",
                "+ Date: Sorts by date and time.",
                "+ String: Sorts lexicographically, so `\"abc\"` comes after `\"XYZ\"`.",
                "",
                "If a property contains a number as a String, that value will be sorted",
                "alphabetically and not numerically. Items that do not have a value for the",
                "specified sort property are ranked lowest." ],
            "links": [],
            "examples":
              [ { "title": "Add an `ascending` sort to a query",
                  "body":
                    [ "const query = contacts.queryLabels().descending(\"_createdDate\");" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add an `ascending` sort, and run it",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myqueryLabelsFunction() {",
                      "",
                      "  return contacts.queryLabels()",
                      "    .ascending(\"_createdDate\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "        const query = results.query;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "descending",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The properties used in the sort.\n\nSupported properties:\n\n- `_createdDate`\n- `_updatedDate`\n- `displayName`",
              "spread": true } ],
        "ret":
          { "type": "wix-crm-backend.Contacts.LabelsQueryBuilder",
            "doc": "A `LabelsQueryBuilder` object that contains the refined query." },
        "locations":
          [ { "lineno": 67,
              "filename": "queryLabels.js" } ],
        "docs":
          { "summary": "Adds a sort to a query, sorting by the specified properties in descending order.",
            "description":
              [ "The `descending()` function refines a `LabelsQueryBuilder` to sort in ascending order of",
                "the specified properties. If you specify more than one property,",
                "`descending()` sorts the results in descending order by each property in the",
                "order they are listed.",
                "",
                "You can sort the following types:",
                "",
                "+ Number: Sorts numerically.",
                "+ Date: Sorts by date and time.",
                "+ String: Sorts lexicographically, so `\"abc\"` comes after `\"XYZ\"`.",
                "",
                "If a property contains a number as a String, that value will be sorted",
                "alphabetically and not numerically. Items that do not have a value for the",
                "specified sort property are ranked lowest." ],
            "links": [],
            "examples":
              [ { "title": "Add an `descending` sort to a query",
                  "body":
                    [ "const query = contacts.queryLabels().descending(\"_createdDate\");" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add an `descending` sort, and run it",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myqueryLabelsFunction() {",
                      "",
                      "  return contacts.queryLabels()",
                      "    .descending(\"_createdDate\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "        const query = results.query;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "find",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.LabelsQueryResult" ] },
            "doc": "Fulfilled - The results of a contacts query, containing the retrieved items.\nWhen you execute a query with the [`find()`](wix-crm-backend.LabelsQueryBuilder.html#find)\nfunction, it returns a Promise that resolves to a `LabelsQueryResult` object.\nThis object contains the items that match the query, information about the\nquery itself, and functions for paging through the query results." },
        "locations":
          [ { "lineno": 137,
              "filename": "queryLabels.js" } ],
        "docs":
          { "summary": "Returns the items that match the query.",
            "description":
              [ "The `find()` function returns a Promise that resolves to the results found",
                "by the query and some information about the results. The Promise is",
                "rejected if `find()` is called with incorrect permissions or if any of the",
                "functions used to refine the query are invalid.",
                "",
                "> **Note:**",
                "> Only visitors with",
                "> **Manage Contacts** [permissions](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Froles-and-permissions)",
                "> can query labels.",
                "> You can override the permissions by setting the `suppressAuth` option to `true`." ],
            "links": [],
            "examples":
              [ { "title": "Run a query with no sorting",
                  "body":
                    [ "const queryResults = contacts.queryLabels().find();" ],
                  "extra":
                    {  } },
                { "title": "Perform a `find` on a query",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myQueryLabelsFunction() {",
                      "",
                      "  return contacts.queryLabels()",
                      "    .find({",
                      "      suppressAuth: false",
                      "    })",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "        const query = results.query;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "limit",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "limit",
              "type": "string",
              "doc": "Limit the number of items to return, which is also the [`pageSize`](wix-crm-backend.ContactsQueryResult.html#pageSize) of the results object." } ],
        "ret":
          { "type": "wix-crm-backend.Contacts.LabelsQueryBuilder",
            "doc": "A `LabelsQueryBuilder` object that contains the refined query." },
        "locations":
          [ { "lineno": 99,
              "filename": "queryLabels.js" } ],
        "docs":
          { "summary": "Limits the number of items the query returns.",
            "description":
              [ "The `limit()` function defines the number of results a query returns in each",
                "page. Only one page of results is retrieved at a time. The [`next()`](wix-crm-backend.LabelsQueryResult.html#next)",
                "and [`prev()`](wix-crm-backend.LabelsQueryResult.html#prev) functions are used to",
                "navigate the pages of a query result.",
                "",
                "By default, `limit` is set to `50`.",
                "",
                "The maximum value that `limit()` can accept is `1000`." ],
            "links": [],
            "examples":
              [ { "title": "Add a `limit` to a query",
                  "body":
                    [ "const query = contacts.queryLabels().limit(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a `limit`, and run it",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myQueryLabelsFunction() {",
                      "",
                      "  return contacts.queryLabels()",
                      "    .limit(10)",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0) {",
                      "        const items = results.items;",
                      "        const firstItem = items[0];",
                      "        const pageSize = results.pageSize;",
                      "        const hasNext = results.hasNext();",
                      "        const hasPrev = results.hasPrev();",
                      "        const length = results.length;",
                      "        const query = results.query;",
                      "",
                      "        return items;",
                      "      } else {",
                      "        // Handle case where no matching items found",
                      "      }",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "skip",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "skip",
              "type": "string",
              "doc": "The number of items to skip in the query results before returning the results." } ],
        "ret":
          { "type": "wix-crm-backend.Contacts.LabelsQueryBuilder",
            "doc": "A `LabelsQueryBuilder` object that contains the refined query." },
        "locations":
          [ { "lineno": 118,
              "filename": "queryLabels.js" } ],
        "docs":
          { "summary": "Sets the number of items to skip before returning query results.",
            "description":
              [ "The `skip()` function defines the number of results to skip in the query",
                "results before returning new query results.",
                "",
                "For example, if you query your contacts and 50 items match your query, but",
                "you set `skip` to 10, the results returned will skip the first 10 items",
                "that match and return the 11th through 50th items.",
                "",
                "By default, `skip` is set to 0." ],
            "links": [],
            "examples":
              [ { "title": "Add a skip to a query",
                  "body":
                    [ "const query = contacts.queryLabels().skip(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a skip, and run it",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export async function myQueryLabelsFunction() {",
                      "  try {",
                      "",
                      "    const results = await contacts.queryLabels()",
                      "      .skip(10)",
                      "      .find();",
                      "",
                      "    if (results.items.length > 0) {",
                      "      const items = results.items;",
                      "      const firstItem = items[0];",
                      "      const pageSize = results.pageSize;",
                      "      const hasNext = results.hasNext();",
                      "      const hasPrev = results.hasPrev();",
                      "      const length = results.length;",
                      "      const query = results.query;",
                      "",
                      "      return items;",
                      "    } else {",
                      "      // Handle case where no matching items found",
                      "    }",
                      "",
                      "  } catch (error) {",
                      "    console.error(error);",
                      "    // Handle the error",
                      "  }",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }