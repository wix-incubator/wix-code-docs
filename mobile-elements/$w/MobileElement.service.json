{ "name": "MobileElement",
  "memberOf": "$w",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "MobileElement.js" },
  "docs":
    { "summary": "Provides basic functionality for mobile elements.",
      "description":
        [ "<blockquote class=\"important\">",
          "",
          "__Important:__",
          "+ This API is only relevant for custom widgets in [Branded Apps](https://www.wix.com/app-builder).",
          "+ Custom widgets are not yet available to all users. ",
          "+ This API is in [Developer Preview](https://www.wix.com/velo/reference/api-overview/developer-preview) and is subject to change. ",
          "",
          "</blockquote>",
          "",
          "",
          " `MobileElement` is a mixin that provides basic properties, functions, and event handlers for elements on the mobile widget.",
          "",
          " **About Mixins**",
          "",
          " [Mixins](https://support.wix.com/en/article/velo-about-mixins) provide functionality that other elements can inherit and use. ",
          " ",
          " Mixins are not elements. You cannot add mixins to the Editor like other `$w` elements, and mixins are not meant to be used directly ",
          " in your code. ",
          " ",
          " For example, you would not write code like this, because it is out of context: ",
          "",
          " ```javascript",
          "  $w(\"#MobileElement\").onPressIn( (event) => {",
          "    let targetId = event.target.id; ",
          "  });",
          " ```",
          "",
          " Instead, you can code the following if `myElement` is an element that ",
          " \"mixes in\" `MobileElement`. ",
          "",
          "  ```javascript",
          "  $w(\"#myElement\").onPressIn( (event) => {",
          "    let targetId = event.target.id; ",
          "  });",
          " ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "id",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 63,
              "filename": "MobileElement.js" } ],
        "docs":
          { "summary": "Gets the mobile element's ID.",
            "description":
              [ "The `id` property is the the mobile element's unique identifier. It is used when selecting mobile",
                " elements using the [`$w()`]($w.html#$w) function." ],
            "links": [],
            "examples":
              [ { "title": "Get the mobile element's ID",
                  "body":
                    [ "let myId = $w('#myMobileElement').id; // 'myMobileElement'" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "parent",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.Node",
        "defaultValue": "null",
        "locations":
          [ { "lineno": 77,
              "filename": "MobileElement.js" } ],
        "docs":
          { "summary": "Gets the mobile element's parent element.",
            "description":
              [ "Some mobile elements can contain other elements. This occurs when you drag",
                " a mobile element onto a container element. The container is the `parent` of",
                " all the elements it contains." ],
            "links": [],
            "examples":
              [ { "title": "Get the parent mobile element and the parent's ID",
                  "body":
                    [ "let parentElement = $w('#myMobileElement').parent;",
                      "",
                      "let parentId = parentElement.id; // 'container1'" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "type",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 93,
              "filename": "MobileElement.js" } ],
        "docs":
          { "summary": "Gets the mobile element's type.",
            "description":
              [ "Possible values include:",
                "",
                " - `$w.MobileButton`",
                " - `$w.MobileSwitch`",
                " - `$w.MobilePicker`",
                " - `$w.MobileText`",
                " - `$w.MobileTextInput`" ],
            "links": [],
            "examples":
              [ { "title": "Get the mobile element's type",
                  "body":
                    [ "let myType = $w('#myMobileElement').type; // '$w.Type'" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }