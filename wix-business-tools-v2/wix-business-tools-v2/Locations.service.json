{
  "name": "Locations",
  "memberOf": "wix-business-tools-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-business-tools.v2-location",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "archiveLocation",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the location to archive.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-business-tools-v2.Locations.ArchiveLocationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Archives a location.",
        "description": [
          "The `archiveLocation()` function returns a Promise that resolves to the archived location.\n\nThe `archiveLocation()` function changes a location's `archived` property to `true`.\n\n> **Notes:**\n> + A location's status isn't affected by this function.\n> + An archived location can't be updated.\n> + It's currently not possible to unarchive locations.\n> + A default location can't be archived."
        ],
        "examples": [
          {
            "title": "Archive a location (dashboard page code) ",
            "body": [
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '0a965e36-4071-4df0-905b-75458817430a' */",
              "",
              "export async function myArchiveLocationFunction(_id) {",
              "  try {",
              "    const elevatedArchiveLocation = elevate(locations.archiveLocation);",
              "    const archivedLocation = await elevatedArchiveLocation(_id);",
              "    console.log('Location has been archived:', archivedLocation);",
              "",
              "    return archivedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"0a965e36-4071-4df0-905b-75458817430a\"",
              " *   \"address\": {",
              " *     \"streetAddress\": {",
              " *       \"apt\": \"\",",
              " *       \"name\": \"New Road\",",
              " *       \"number\": \"12\"",
              " *     },",
              " *     \"city\": \"Kolkata\",",
              " *     \"postalCode\": \"70027\"",
              " *   },",
              " *   \"archived\": true,",
              " *   \"default\": false,",
              " *   \"description\": \"New store in India!\",",
              " *   \"email\": \"store@example.com\",",
              " *   \"name\": \"India Store\",",
              " *   \"phone\": \"0208 209 9087\",",
              " *   \"revision\": \"2\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"Asia/Calcutta\",",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Archive a location (export from backend code) ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '0a965e36-4071-4df0-905b-75458817430a' */",
              "",
              "export const myArchiveLocationFunction = webMethod(Permissions.Anyone, async (_id) => {",
              "  try {",
              "    const elevatedArchiveLocation = elevate(locations.archiveLocation);",
              "    const archivedLocation = await elevatedArchiveLocation(_id);",
              "    console.log('Location has been archived:', archivedLocation);",
              "",
              "    return archivedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"0a965e36-4071-4df0-905b-75458817430a\"",
              " *   \"address\": {",
              " *     \"streetAddress\": {",
              " *       \"apt\": \"\",",
              " *       \"name\": \"New Road\",",
              " *       \"number\": \"12\"",
              " *     },",
              " *     \"city\": \"Kolkata\",",
              " *     \"postalCode\": \"70027\"",
              " *   },",
              " *   \"archived\": true,",
              " *   \"default\": false,",
              " *   \"description\": \"New store in India!\",",
              " *   \"email\": \"store@example.com\",",
              " *   \"name\": \"India Store\",",
              " *   \"phone\": \"0208 209 9087\",",
              " *   \"revision\": \"2\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"Asia/Calcutta\",",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Archive a location ",
            "body": [
              "/******************************************",
              " * Backend code - archive-location.web.js *",
              " *****************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const archiveLocationById = webMethod(Permissions.Anyone, async (locationId) => {",
              "  try {",
              "    const elevatedArchiveLocation = elevate(locations.archiveLocation);",
              "    const archivedLocation = await elevatedArchiveLocation(locationId);",
              "",
              "    return archivedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "export const listLocations = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedListLocations = elevate(locations.listLocations);",
              "    const results = await elevatedListLocations();",
              "",
              "    return results.locations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { archiveLocationById, listLocations } from 'backend/archive-location.web';",
              "",
              "$w.onReady(async () => {",
              "  await populateStoresDropdown();",
              "",
              "  $w('#archiveLocationBtn').onClick(async () => {",
              "    const locationId = $w('#locationsDropdown').value;",
              "    const archivedLocation = await archiveLocationById(locationId);",
              "",
              "    console.log('The following location has been archived', archivedLocation);",
              "    $w('#archivedMessage').show();",
              "  });",
              "});",
              "",
              "async function populateStoresDropdown() {",
              "  const locations = await listLocations();",
              "  const dropdownOptions = locations.map((location) => {",
              "    return {",
              "      label: location.name,",
              "      value: location._id",
              "    }",
              "  });",
              "",
              "  $w('#locationsDropdown').options = dropdownOptions;",
              "}",
              ""
            ],
            "extra": {
              "description": "This code uses the value of user's chosen location from a dropdown on the page and archives it."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "archiveLocation",
      "isAdminMethod": true
    },
    {
      "name": "createLocation",
      "params": [
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Location to create.",
          "required": true
        }
      ],
      "requiredFields": [
        "location",
        "location.address",
        "location.name",
        "location.timeZone"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-business-tools-v2.Locations.Location"
                }
              ]
            }
          }
        ],
        "doc": "Created location.\n"
      },
      "docs": {
        "summary": "Creates a location.",
        "description": [
          "The `createLocation()` function returns a Promise that resolves to the created location."
        ],
        "examples": [
          {
            "title": "Create a new location (dashboard page code) ",
            "body": [
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample location value:",
              " * {",
              " *   address: {",
              " *     formatted: '12 5th Street, New York'",
              " *   },",
              " *   name: 'New York Store',",
              " *   timeZone: 'America/New_York'",
              " * }",
              " */",
              "",
              "export async function myCreateLocationFunction(location) {",
              "  try {",
              "    const elevatedCreateLocation = elevate(locations.createLocation);",
              "    const newLocation = await elevatedCreateLocation(location);",
              "    console.log('Created new location:', newLocation);",
              "    ",
              "    return newLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"125e9107-2d4b-4790-bb49-37e7983ff9b1\",",
              " *   \"address\": {",
              " *     \"formatted\": \"12 5th Street, New York\"",
              " *   },",
              " *   \"archived\": false,",
              " *   \"default\": false,",
              " *   \"name\": \"New York Store\",",
              " *   \"revision\": \"1\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"America/New_York\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Create a new location (export from backend code) ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample location value:",
              " * {",
              " *   address: {",
              " *     formatted: '12 5th Street, New York'",
              " *   },",
              " *   name: 'New York Store',",
              " *   timeZone: 'America/New_York'",
              " * }",
              " */",
              "",
              "export const myCreateLocationFunction = webMethod(Permissions.Anyone, async (location) => {",
              "  try {",
              "    const elevatedCreateLocation = elevate(locations.createLocation);",
              "    const newLocation = await elevatedCreateLocation(location);",
              "    console.log('Created new location:', newLocation);",
              "",
              "    return newLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"125e9107-2d4b-4790-bb49-37e7983ff9b1\",",
              " *   \"address\": {",
              " *     \"formatted\": \"12 5th Street, New York\"",
              " *   },",
              " *   \"archived\": false,",
              " *   \"default\": false,",
              " *   \"name\": \"New York Store\",",
              " *   \"revision\": \"1\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"America/New_York\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Create a new location ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample location value:",
              " * {",
              " *   address: {",
              " *     city: 'London',",
              " *     country: 'GB',",
              " *     formatted: '123 London Street, London',",
              " *     location: {",
              " *       latitude: 51.505577,",
              " *       longitude: -0.068600",
              " *     },",
              " *     postalCode: 'N1 1AA',",
              " *     streetAddress: {",
              " *       apt: '',",
              " *       name: 'London Street',",
              " *       number: '123'",
              " *     },",
              " *     subdivision: 'GB-ENG'",
              " *   },",
              " *   businessSchedule: {",
              " *     periods: [",
              " *       {",
              " *         closeDay: 'MONDAY',",
              " *         closeTime: '18:00',",
              " *         openDay: 'MONDAY',",
              " *         openTime: '08:00'",
              " *       },",
              " *       {",
              " *         closeDay: 'TUESDAY',",
              " *         closeTime: '18:00',",
              " *         openDay: 'TUESDAY',",
              " *         openTime: '08:00'",
              " *       },",
              " *       {",
              " *         closeDay: 'WEDNESDAY',",
              " *         closeTime: '18:00',",
              " *         openDay: 'WEDNESDAY',",
              " *         openTime: '08:00'",
              " *       },",
              " *       {",
              " *         closeDay: 'THURSDAY',",
              " *         closeTime: '18:00',",
              " *         openDay: 'THURSDAY',",
              " *         openTime: '08:00'",
              " *       },",
              " *       {",
              " *         closeDay: 'FRIDAY',",
              " *         closeTime: '18:00',",
              " *         openDay: 'FRIDAY',",
              " *         openTime: '08:00'",
              " *       },",
              " *     ],",
              " *     specialHourPeriod: [",
              " *       {",
              " *         comment: 'Half price in the lead up to Christmas!',",
              " *         endDate: '2023-12-24T23:59:00Z',",
              " *         isClosed: false,",
              " *         startDate: '2023-12-01T00:00:00Z'",
              " *       }",
              " *     ]",
              " *   },",
              " *   description: 'Our brand new location in London City Center!',",
              " *   email: 'london@example.com',",
              " *   fax: '011-44-20-12345678',",
              " *   name: 'London Store',",
              " *   phone: '0208 123 4567',",
              " *   status: 'ACTIVE',",
              " *   timeZone: 'Europe/London'",
              " * }",
              " */",
              "",
              "export const myCreateLocationFunction = webMethod(Permissions.Anyone, async (location) => {",
              "  try {",
              "    const elevatedCreateLocation = elevate(locations.createLocation);",
              "    const newLocation = await elevatedCreateLocation(location);",
              "    console.log('Created new location:', newLocation);",
              "",
              "    return newLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"4ae3bbc8-fb78-4eb7-8bc5-1fec19c7dbfc\",",
              " *   \"address\": {",
              " *     \"city\": \"London\",",
              " *     \"country\": \"GB\",",
              " *     \"formatted\": \"123 London Street, London\",",
              " *     \"location\": {",
              " *       \"latitude\": 51.505577,",
              " *       \"longitude\": -0.0686",
              " *     },",
              " *     \"postalCode\": \"N1 1AA\",",
              " *     \"streetAddress\": {",
              " *       \"apt\": \"\",",
              " *       \"name\": \"London Street\",",
              " *       \"number\": \"123\"",
              " *     },",
              " *     \"subdivision\": \"GB-ENG\"",
              " *   },",
              " *   \"archived\": false,",
              " *   \"businessSchedule\": {",
              " *     \"periods\": [",
              " *       {",
              " *         \"closeDay\": \"MONDAY\",",
              " *         \"closeTime\": \"18:00\",",
              " *         \"openDay\": \"MONDAY\",",
              " *         \"openTime\": \"08:00\"",
              " *       },",
              " *       {",
              " *         \"closeDay\": \"TUESDAY\",",
              " *         \"closeTime\": \"18:00\",",
              " *         \"openDay\": \"TUESDAY\",",
              " *         \"openTime\": \"08:00\"",
              " *       },",
              " *       {",
              " *         \"closeDay\": \"WEDNESDAY\",",
              " *         \"closeTime\": \"18:00\",",
              " *         \"openDay\": \"WEDNESDAY\",",
              " *         \"openTime\": \"08:00\"",
              " *       },",
              " *       {",
              " *         \"closeDay\": \"THURSDAY\",",
              " *         \"closeTime\": \"18:00\",",
              " *         \"openDay\": \"THURSDAY\",",
              " *         \"openTime\": \"08:00\"",
              " *       },",
              " *       {",
              " *         \"closeDay\": \"FRIDAY \",",
              " *         \"closeTime\": \"18:00\",",
              " *         \"openDay\": \"FRIDAY\",",
              " *         \"openTime\": \"08:00\"",
              " *       }",
              " *     ],",
              " *     \"specialHourPeriod\": [",
              " *       {",
              " *         \"comment\": \"Half price in the lead up to Christmas!\",",
              " *         \"endDate\": \"2023-12-24T23:59:00Z\",",
              " *         \"isClosed\": false,",
              " *         \"startDate\": \"2023-12-01T00:00:00Z\"",
              " *       }",
              " *     ]",
              " *   },",
              " *   \"description\": \"Our brand new location in London City Center!\",",
              " *   \"default\": false,",
              " *   \"email\": \"london@example.com\",",
              " *   \"fax\": \"011-44-20-12345678\",",
              " *   \"name\": \"London Store\",",
              " *   \"phone\": \"0208 123 4567\",",
              " *   \"revision\": \"1\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"Europe/London\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Create a new location from input on the site's page ",
            "body": [
              "/*****************************************",
              " * Backend code - create-location.web.js *",
              " ****************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const createNewLocation = webMethod(Permissions.Anyone, async (location) => {",
              "  try {",
              "    const elevatedCreateLocation = elevate(locations.createLocation);",
              "    const newLocation = await elevatedCreateLocation(location);",
              "",
              "    return newLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { createNewLocation } from 'backend/create-location.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#createLocationBtn').onClick(async () => {",
              "    const location = {",
              "      address: {",
              "        streetAddress: {",
              "            number: $w('#streetNumber').value,",
              "            name: $w('#streetName').value",
              "        },",
              "        city: $w('#city').value,",
              "        postalCode: $w('#postalCode').value,",
              "      },",
              "      description: $w('#description').value,",
              "      email: $w('#email').value,",
              "      name: $w('#name').value,",
              "      phone: $w('#phone').value,",
              "      timeZone: $w('#timeZone').value",
              "    };",
              "",
              "    const newLocation = await createNewLocation(location);",
              "    console.log('You have successfully created a new location.\\n', newLocation);",
              "    $w('#newLocationSuccessMsg').show();",
              "  });",
              "});",
              ""
            ],
            "extra": {
              "description": "This code takes the values a user inputs into a form on the page, and uses them as the values for the properties of a new location. This page is accessible to only company managers so they can add locations to the database."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createLocation",
      "isAdminMethod": true
    },
    {
      "name": "getLocation",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the location to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-business-tools-v2.Locations.Location"
                }
              ]
            }
          }
        ],
        "doc": "Retrieved location.\n"
      },
      "docs": {
        "summary": "Retrieves a location.",
        "description": [
          "The `getLocation()` function returns a Promise that resolves to the retrieved location."
        ],
        "examples": [
          {
            "title": "Get a location (dashboard page code) ",
            "body": [
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '0a965e36-4071-4df0-905b-75458817430a' */",
              "",
              "",
              "export async function myGetLocationFunction(_id) {",
              "  try {",
              "    const elevatedGetLocation = elevate(locations.getLocation);",
              "    const myLocation = await elevatedGetLocation(_id);",
              "    console.log('Here are the details of the location:', myLocation);",
              "",
              "    return myLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"0a965e36-4071-4df0-905b-75458817430a\",",
              " *   \"address\": {",
              " *     \"streetAddress\": {",
              " *       \"apt\": \"\",",
              " *       \"name\": \"Calle Miguel Hidalgo\",",
              " *       \"number\": \"15\"",
              " *     },",
              " *     \"city\": \"La Reforma\",",
              " *     \"postalCode\": \"22000\"",
              " *   },",
              " *   \"archived\": false,",
              " *   \"default\": false,",
              " *   \"description\": \"Our brand new, budget store in the heart of Mexico City!\",",
              " *   \"email\": \"store@example.com\",",
              " *   \"phone\": \"+52 55 1234 5678\",",
              " *   \"name\": \"Mexico Store\",",
              " *   \"revision\": \"2\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"America/Mexico_City\"",
              " * }",
              " */"
            ]
          },
          {
            "title": "Get a location (export from backend code) ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '0a965e36-4071-4df0-905b-75458817430a' */",
              "",
              "export const myGetLocationFunction = webMethod(Permissions.Anyone, async (_id) => {",
              "  try {",
              "    const elevatedGetLocation = elevate(locations.getLocation);",
              "    const myLocation = await elevatedGetLocation(_id);",
              "    console.log('Here are the details of the location:', myLocation);",
              "",
              "    return myLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"0a965e36-4071-4df0-905b-75458817430a\",",
              " *   \"address\": {",
              " *     \"streetAddress\": {",
              " *       \"apt\": \"\",",
              " *       \"name\": \"Calle Miguel Hidalgo\",",
              " *       \"number\": \"15\"",
              " *     },",
              " *     \"city\": \"La Reforma\",",
              " *     \"postalCode\": \"22000\"",
              " *   },",
              " *   \"archived\": false,",
              " *   \"default\": false,",
              " *   \"description\": \"Our brand new, budget store in the heart of Mexico City!\",",
              " *   \"email\": \"store@example.com\",",
              " *   \"phone\": \"+52 55 1234 5678\",",
              " *   \"name\": \"Mexico Store\",",
              " *   \"revision\": \"2\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"America/Mexico_City\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Get a location's properties ",
            "body": [
              "/**************************************",
              " * Backend code - get-location.web.js *",
              " *************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const getLocationById = webMethod(Permissions.Anyone, async (locationId) => {",
              "  try {",
              "    const elevatedGetLocation = elevate(locations.getLocation);",
              "    const myLocation = await elevatedGetLocation(locationId);",
              "",
              "    return myLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "export const listLocations = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedListLocations = elevate(locations.listLocations);",
              "    const results = await elevatedListLocations();",
              "",
              "    return results.locations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { getLocationById, listLocations } from 'backend/get-location.web';",
              "",
              "$w.onReady(async () => {",
              "  await populateStoresDropdown();",
              "",
              "  $w('#getLocationBtn').onClick(async () => {",
              "    const locationId = $w('#locationsDropdown').value;",
              "    const myLocation = await getLocationById(locationId);",
              "",
              "    console.log('Here are the details of the location:', myLocation);",
              "    $w('#locationDetails').text = myLocation;",
              "  });",
              "});",
              "",
              "async function populateStoresDropdown() {",
              "  const locations = await listLocations();",
              "  const dropdownOptions = locations.map((location) => {",
              "    return {",
              "      label: location.name,",
              "      value: location._id",
              "    }",
              "  });",
              "",
              "  $w('#locationsDropdown').options = dropdownOptions;",
              "}",
              ""
            ],
            "extra": {
              "description": "This code uses the value of user's chosen location from a dropdown on the page and retrieves all of the location's information."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getLocation",
      "isAdminMethod": true
    },
    {
      "name": "listLocations",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.ListLocationsOptions"
            }
          ],
          "doc": "Options to use when retrieving a list of locations.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-business-tools-v2.Locations.ListLocationsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of locations.",
        "description": [
          "Retrieves a list of up to 1,000 locations, given the provided filters, sorting, and paging."
        ],
        "examples": [
          {
            "title": "List all locations (dashboard page code) ",
            "body": [
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export async function myGetLocationFunction(_id) {",
              "  try {",
              "    const elevatedGetLocation = elevate(locations.getLocation);",
              "    const myLocations = await elevatedGetLocation(_id);",
              "    console.log('Locations:', myLocations);",
              "    ",
              "    return myLocations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"locations\": [",
              " *     {",
              " *       \"_id\": \"6a7a7356-a122-4de6-943c-3ea9e66f0d0a\",",
              " *       \"address\": {",
              " *         \"city\": \"Costa Mesa\",",
              " *         \"country\": \"US\",",
              " *         \"formatted\": \"Location1980, Placentia Avenue, Costa Mesa, CA, USA\",",
              " *         \"location\": {",
              " *           \"latitude\": 33.6463497,",
              " *           \"longitude\": -117.931867",
              " *         },",
              " *         \"postalCode\": \"92627\"",
              " *         \"streetAddress\": {",
              " *           \"apt\": \"\",",
              " *           \"name\": \"Placentia Avenue\",",
              " *           \"number\": \"1980\"",
              " *         },",
              " *         \"subdivision\": \"CA\",",
              " *       },",
              " *       \"archived\": false,",
              " *       \"businessSchedule\": {",
              " *         \"periods\": [],",
              " *         \"specialHourPeriod\": []",
              " *       },",
              " *       \"default\": true,",
              " *       \"email\": \"\",",
              " *       \"fax\": \"\",",
              " *       \"name\": \"Costa Mesa Store\",",
              " *       \"phone\": \"\",",
              " *       \"revision\": \"1\",",
              " *       \"status\": \"ACTIVE\",",
              " *       \"timeZone\": \"America/Los_Angeles\"",
              " *     },",
              " *     {",
              " *       \"_id\": \"6a0c5611-0610-4fc2-9eda-a5614ffaf141\",",
              " *       \"address\": {",
              " *         \"city\": \"Kingston\",",
              " *         \"country\": \"CA\",",
              " *         \"formatted\": \"222, Stuart Street, Kingston, ON, Canada\",",
              " *         \"location\": {",
              " *           \"latitude\": 44.2236494,",
              " *           \"longitude\": -76.4992216",
              " *         },",
              " *         \"postalCode\": \"K7L 2W1\"",
              " *         \"streetAddress\": {",
              " *           \"apt\": \"\",",
              " *           \"name\": \"Stuart Street\",",
              " *           \"number\": \"222\"",
              " *         },",
              " *         \"subdivision\": \"ON\",",
              " *       },",
              " *       \"archived\": false,",
              " *       \"businessSchedule\": {",
              " *         \"periods\": [],",
              " *         \"specialHourPeriod\": []",
              " *       },",
              " *       \"default\": false,",
              " *       \"email\": \"\",",
              " *       \"fax\": \"\",",
              " *       \"name\": \"Kingston Store\",",
              " *       \"phone\": \"\",",
              " *       \"revision\": \"1\",",
              " *       \"status\": \"ACTIVE\",",
              " *       \"timeZone\": \"America/Los_Angeles\"",
              " *     }",
              " *   ],",
              " *   \"pagingMetadata\": {",
              " *     \"count\": 2,",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "List all locations (export from backend code) ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const myListLocationsFunction = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedListLocations = elevate(locations.listLocations);",
              "    const myLocations = await elevatedListLocations();",
              "    console.log('Locations:', myLocations);",
              "",
              "    return myLocations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"locations\": [",
              " *     {",
              " *       \"_id\": \"6a7a7356-a122-4de6-943c-3ea9e66f0d0a\",",
              " *       \"address\": {",
              " *         \"city\": \"Costa Mesa\",",
              " *         \"country\": \"US\",",
              " *         \"formatted\": \"Location1980, Placentia Avenue, Costa Mesa, CA, USA\",",
              " *         \"location\": {",
              " *           \"latitude\": 33.6463497,",
              " *           \"longitude\": -117.931867",
              " *         },",
              " *         \"postalCode\": \"92627\"",
              " *         \"streetAddress\": {",
              " *           \"apt\": \"\",",
              " *           \"name\": \"Placentia Avenue\",",
              " *           \"number\": \"1980\"",
              " *         },",
              " *         \"subdivision\": \"CA\",",
              " *       },",
              " *       \"archived\": false,",
              " *       \"businessSchedule\": {",
              " *         \"periods\": [],",
              " *         \"specialHourPeriod\": []",
              " *       },",
              " *       \"default\": true,",
              " *       \"email\": \"\",",
              " *       \"fax\": \"\",",
              " *       \"name\": \"Costa Mesa Store\",",
              " *       \"phone\": \"\",",
              " *       \"revision\": \"1\",",
              " *       \"status\": \"ACTIVE\",",
              " *       \"timeZone\": \"America/Los_Angeles\"",
              " *     },",
              " *     {",
              " *       \"_id\": \"6a0c5611-0610-4fc2-9eda-a5614ffaf141\",",
              " *       \"address\": {",
              " *         \"city\": \"Kingston\",",
              " *         \"country\": \"CA\",",
              " *         \"formatted\": \"222, Stuart Street, Kingston, ON, Canada\",",
              " *         \"location\": {",
              " *           \"latitude\": 44.2236494,",
              " *           \"longitude\": -76.4992216",
              " *         },",
              " *         \"postalCode\": \"K7L 2W1\"",
              " *         \"streetAddress\": {",
              " *           \"apt\": \"\",",
              " *           \"name\": \"Stuart Street\",",
              " *           \"number\": \"222\"",
              " *         },",
              " *         \"subdivision\": \"ON\",",
              " *       },",
              " *       \"archived\": false,",
              " *       \"businessSchedule\": {",
              " *         \"periods\": [],",
              " *         \"specialHourPeriod\": []",
              " *       },",
              " *       \"default\": false,",
              " *       \"email\": \"\",",
              " *       \"fax\": \"\",",
              " *       \"name\": \"Kingston Store\",",
              " *       \"phone\": \"\",",
              " *       \"revision\": \"1\",",
              " *       \"status\": \"ACTIVE\",",
              " *       \"timeZone\": \"America/Los_Angeles\"",
              " *     }",
              " *   ],",
              " *   \"pagingMetadata\": {",
              " *     \"count\": 2,",
              " *     \"hasNext\": false",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "List all locations ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample options value:",
              " * {",
              " *   includeArchived: true,",
              " *   paging: {",
              " *     limit: 3,",
              " *     offset: 0",
              " *   },",
              " *   sort: {",
              " *     fieldName: 'name',",
              " *     order: 'ASC'",
              " *   }",
              " * }",
              " */",
              "",
              "export const myListLocationsFunction = webMethod(Permissions.Anyone, async (options) => {",
              "  try {",
              "    const elevatedListLocations = elevate(locations.listLocations);",
              "    const myLocations = await elevatedListLocations(options);",
              "    console.log('Locations:', myLocations);",
              "",
              "    return myLocations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"locations\": [",
              " *     {",
              " *       \"_id\": \"6a0c5611-0610-4fc2-9eda-a5614ffaf141\",",
              " *       \"address\": {",
              " *         \"city\": \"Buenos Aires\",",
              " *         \"country\": \"AR\",",
              " *         \"formatted\": \"456, Example Street, Buenos Aires, Argentina\",",
              " *         \"location\": {",
              " *           \"latitude\": -34.6037,",
              " *           \"longitude\": -58.3816",
              " *         },",
              " *         \"postalCode\": \"C1234\",",
              " *         \"streetAddress\": {",
              " *           \"apt\": \"\",",
              " *           \"name\": \"Example Street\",",
              " *           \"number\": \"456\"",
              " *         },",
              " *         \"subdivision\": \"\"",
              " *       },",
              " *       \"archived\": false,",
              " *       \"businessSchedule\": {",
              " *         \"periods\": [],",
              " *         \"specialHourPeriod\": []",
              " *       },",
              " *       \"default\": false,",
              " *       \"email\": \"\",",
              " *       \"fax\": \"\",",
              " *       \"name\": \"Buenos Aires Store\",",
              " *       \"phone\": \"\",",
              " *       \"revision\": \"1\",",
              " *       \"status\": \"ACTIVE\",",
              " *       \"timeZone\": \"America/Argentina/Buenos_Aires\"",
              " *     },",
              " *     {",
              " *       \"_id\": \"6a0c5611-0610-4fc2-9eda-a5614ffaf142\",",
              " *       \"address\": {",
              " *         \"city\": \"Paris\",",
              " *         \"country\": \"FR\",",
              " *         \"formatted\": \"789, Rue de l'Exemple, Paris, France\",",
              " *         \"location\": {",
              " *           \"latitude\": 48.8566,",
              " *           \"longitude\": 2.3522",
              " *         },",
              " *         \"postalCode\": \"75001\",",
              " *         \"streetAddress\": {",
              " *           \"apt\": \"\",",
              " *           \"name\": \"Rue de l'Exemple\",",
              " *           \"number\": \"789\"",
              " *         },",
              " *         \"subdivision\": \"\"",
              " *       },",
              " *       \"archived\": false,",
              " *       \"businessSchedule\": {",
              " *         \"periods\": [],",
              " *         \"specialHourPeriod\": []",
              " *       },",
              " *       \"default\": false,",
              " *       \"email\": \"\",",
              " *       \"fax\": \"\",",
              " *       \"name\": \"Paris Store\",",
              " *       \"phone\": \"\",",
              " *       \"revision\": \"1\",",
              " *       \"status\": \"ACTIVE\",",
              " *       \"timeZone\": \"Europe/Paris\"",
              " *     },",
              " *     {",
              " *       \"_id\": \"6a7a7356-a122-4de6-943c-3ea9e66f0d0a\",",
              " *       \"address\": {",
              " *         \"city\": \"Vienna\",",
              " *         \"country\": \"AT\",",
              " *         \"formatted\": \"Examplestraße 123, Vienna, Austria\",",
              " *         \"location\": {",
              " *           \"latitude\": 48.8566,",
              " *           \"longitude\": 2.3522",
              " *         },",
              " *         \"postalCode\": \"12345\",",
              " *         \"streetAddress\": {",
              " *           \"apt\": \"\",",
              " *           \"name\": \"Examplestraße\",",
              " *           \"number\": \"123\"",
              " *         },",
              " *         \"subdivision\": \"\"",
              " *       },",
              " *       \"archived\": false,",
              " *       \"businessSchedule\": {",
              " *         \"periods\": [],",
              " *         \"specialHourPeriod\": []",
              " *       },",
              " *       \"default\": true,",
              " *       \"email\": \"\",",
              " *       \"fax\": \"\",",
              " *       \"name\": \"Vienna Store\",",
              " *       \"phone\": \"\",",
              " *       \"revision\": \"1\",",
              " *       \"status\": \"ACTIVE\",",
              " *       \"timeZone\": \"Europe/Vienna\"",
              " *     }",
              " *   ],",
              " *   \"pagingMetadata\": {",
              " *     \"count\": 3,",
              " *     \"hasNext\": true",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Archive a location ",
            "body": [
              "/******************************************",
              " * Backend code - archive-location.web.js *",
              " *****************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const archiveLocationById = webMethod(Permissions.Anyone, async (locationId) => {",
              "  try {",
              "    const elevatedArchiveLocation = elevate(locations.archiveLocation);",
              "    const archivedLocation = await elevatedArchiveLocation(locationId);",
              "",
              "    return archivedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "export const listLocations = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedListLocations = elevate(locations.listLocations);",
              "    const results = await elevatedListLocations();",
              "",
              "    return results.locations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { archiveLocationById, listLocations } from 'backend/archive-location.web';",
              "",
              "$w.onReady(async () => {",
              "  await populateStoresDropdown();",
              "",
              "  $w('#archiveLocationBtn').onClick(async () => {",
              "    const locationId = $w('#locationsDropdown').value;",
              "    const archivedLocation = await archiveLocationById(locationId);",
              "",
              "    console.log('The following location has been archived', archivedLocation);",
              "    $w('#archivedMessage').show();",
              "  });",
              "});",
              "",
              "async function populateStoresDropdown() {",
              "  const locations = await listLocations();",
              "  const dropdownOptions = locations.map((location) => {",
              "    return {",
              "      label: location.name,",
              "      value: location._id",
              "    }",
              "  });",
              "",
              "  $w('#locationsDropdown').options = dropdownOptions;",
              "}",
              ""
            ],
            "extra": {
              "description": "This code uses the value of user's chosen location from a dropdown on the page and archives it."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listLocations",
      "isAdminMethod": true
    },
    {
      "name": "queryLocations",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-business-tools-v2.Locations.LocationsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a query to retrieve a list of locations. ",
        "description": [
          "",
          "",
          "The `queryLocations()` function builds a query to retrieve a list of up to 1,000 locations and returns a `LocationsQueryBuilder` object. ",
          "",
          "The returned object contains the query definition which is typically used to run the query using the `find()` function. ",
          "",
          "You can refine the query by chaining `LocationsQueryBuilder` functions onto the query. `LocationsQueryBuilder` functions enable you to sort, filter, and control the results that `queryLocations()` returns. The functions that are chained to `queryLocations()` are applied in the order they are called. ",
          "",
          "`queryLocations()` runs with the following `LocationsQueryBuilder` defaults that you can override: ",
          "- `skip`: `0`",
          "- `limit`: `50`",
          "",
          "The following `QueryLocationsBuilder` functions are supported for the `queryLocations()` function. For a full description of the Locations object, see the object returned for the `items` property in `LocationsQueryResult`.",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`name`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`description`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`default`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome)|",
          "|`status`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome)|",
          "|`locationType`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome)|",
          "|`fax`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`timeZone`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`email`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`phone`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.country`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.subdivision`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.city`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.postalCode`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.streetAddress.number`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.streetAddress.name`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.streetAddress.apt`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.formattedAddress`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.hint`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`address.geocode.latitude`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`lt()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#lt),[`le()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#le),[`gt()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#gt),[`ge()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ge)|",
          "|`address.geocode.longitude`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`lt()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#lt),[`le()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#le),[`gt()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#gt),[`ge()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ge)|",
          "|`businessSchedule.periods.openDay`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome)|",
          "|`businessSchedule.periods.openTime`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`businessSchedule.periods.closeDay`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome)|",
          "|`businessSchedule.periods.closeTime`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`businessSchedule.specialHourPeriod.startDate`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`businessSchedule.specialHourPeriod.endDate`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`businessSchedule.specialHourPeriod.isClosed`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome)|",
          "|`businessSchedule.specialHourPeriod.comment`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`startsWith()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#startsWith)|",
          "|`revision`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome),[`lt()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#lt),[`le()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#le),[`gt()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#gt),[`ge()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ge)|",
          "|`archived`|[`eq()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#eq),[`ne()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#ne),[`exists()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#exists),[`in()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#in),[`hasSome()`](wix-business-tools-v2.Locations.LocationsQueryBuilder#hasSome)|"
        ],
        "examples": [
          {
            "title": "Retrieve all locations (dashboard page code) ",
            "body": [
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export async function myQueryLocationsFunction() {",
              "  try {",
              "    const elevatedQueryLocations = elevate(locations.queryLocations);",
              "    const myLocations = await elevatedQueryLocations().find();",
              "    const items = myLocations.items;",
              "    console.log('Locations:', items);",
              "",
              "    return items;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Returns items:",
              " * [",
              " *   {",
              " *     \"_id\": \"5c6e81a4-5270-4f66-9688-49d1fd9153ef\",",
              " *     \"address\": {",
              " *       \"city\": \"Amsterdam\",",
              " *       \"country\": \"NL\",",
              " *       \"formatted\": \"CityHub, Bellamystraat, Amsterdam, Netherlands\",",
              " *       \"location\": {",
              " *         \"latitude\": 52.3672879,",
              " *         \"longitude\": 4.867098899999998",
              " *       },",
              " *       \"postalCode\": \"1053 BE\",",
              " *       \"streetAddress\": {",
              " *         \"apt\": \"\",",
              " *         \"name\": \"Bellamystraat\",",
              " *         \"number\": \"3\"",
              " *       },",
              " *       \"subdivision\": \"NH\"",
              " *     },",
              " *     \"archived\": false,",
              " *     \"businessSchedule\": {",
              " *       \"periods\": [],",
              " *       \"specialHourPeriod\": []",
              " *     },",
              " *     \"default\": false,",
              " *     \"email\": \"amsterdam.store@example.com\",",
              " *     \"fax\": \"+31 20 765 4321\",",
              " *     \"name\": \"Bellamystraat\",",
              " *     \"phone\": \"+31 20 123 4567\",",
              " *     \"status\": \"ACTIVE\",",
              " *     \"timeZone\": \"Europe/Amsterdam\",",
              " *     \"revision\": \"1\"",
              " *   },",
              " *   {",
              " *     \"_id\": \"e3b2c1ff-2bf2-41da-9f4a-983c8799074a\",",
              " *     \"address\": {",
              " *       \"city\": \"Brisbane City\",",
              " *       \"country\": \"AU\",",
              " *       \"formatted\": \"Arise, Margaret Street, Brisbane City QLD, Australia\",",
              " *       \"location\": {",
              " *         \"latitude\": -27.4718535,",
              " *         \"longitude\": 153.0288312",
              " *       },",
              " *       \"postalCode\": \"4000\",",
              " *       \"streetAddress\": {",
              " *         \"apt\": \"\",",
              " *         \"name\": \"Margaret Street\",",
              " *         \"number\": \"222\"",
              " *       },",
              " *       \"subdivision\": \"QLD\"",
              " *     },",
              " *     \"archived\": false,",
              " *     \"businessSchedule\": {",
              " *       \"periods\": [],",
              " *       \"specialHourPeriod\": []",
              " *     },",
              " *     \"default\": false,",
              " *     \"email\": \"australia.store@examp;e.com\",",
              " *     \"fax\": \"+61 2 9876 5432\",",
              " *     \"name\": \"Margaret Street\",",
              " *     \"phone\": \"+61 2 1234 5678\",",
              " *     \"revision\": \"1\",",
              " *     \"status\": \"ACTIVE\",",
              " *     \"timeZone\": \"Australia/Brisbane\"",
              " *   }",
              " * ]",
              " */",
              ""
            ]
          },
          {
            "title": "Retrieve all locations (export from backend code) ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const myQueryLocationsFunction = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedQueryLocations = elevate(locations.queryLocations);",
              "    const myLocations = await elevatedQueryLocations().find();",
              "    const items = myLocations.items;",
              "    console.log('Locations:', items);",
              "",
              "    return items;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Returns items:",
              " * [",
              " *   {",
              " *     \"_id\": \"5c6e81a4-5270-4f66-9688-49d1fd9153ef\",",
              " *     \"address\": {",
              " *       \"city\": \"Amsterdam\",",
              " *       \"country\": \"NL\",",
              " *       \"formatted\": \"CityHub, Bellamystraat, Amsterdam, Netherlands\",",
              " *       \"location\": {",
              " *         \"latitude\": 52.3672879,",
              " *         \"longitude\": 4.867098899999998",
              " *       },",
              " *       \"postalCode\": \"1053 BE\",",
              " *       \"streetAddress\": {",
              " *         \"apt\": \"\",",
              " *         \"name\": \"Bellamystraat\",",
              " *         \"number\": \"3\"",
              " *       },",
              " *       \"subdivision\": \"NH\"",
              " *     },",
              " *     \"archived\": false,",
              " *     \"businessSchedule\": {",
              " *       \"periods\": [],",
              " *       \"specialHourPeriod\": []",
              " *     },",
              " *     \"default\": false,",
              " *     \"email\": \"amsterdam.store@example.com\",",
              " *     \"fax\": \"+31 20 765 4321\",",
              " *     \"name\": \"Bellamystraat\",",
              " *     \"phone\": \"+31 20 123 4567\",",
              " *     \"status\": \"ACTIVE\",",
              " *     \"timeZone\": \"Europe/Amsterdam\",",
              " *     \"revision\": \"1\"",
              " *   },",
              " *   {",
              " *     \"_id\": \"e3b2c1ff-2bf2-41da-9f4a-983c8799074a\",",
              " *     \"address\": {",
              " *       \"city\": \"Brisbane City\",",
              " *       \"country\": \"AU\",",
              " *       \"formatted\": \"Arise, Margaret Street, Brisbane City QLD, Australia\",",
              " *       \"location\": {",
              " *         \"latitude\": -27.4718535,",
              " *         \"longitude\": 153.0288312",
              " *       },",
              " *       \"postalCode\": \"4000\",",
              " *       \"streetAddress\": {",
              " *         \"apt\": \"\",",
              " *         \"name\": \"Margaret Street\",",
              " *         \"number\": \"222\"",
              " *       },",
              " *       \"subdivision\": \"QLD\"",
              " *     },",
              " *     \"archived\": false,",
              " *     \"businessSchedule\": {",
              " *       \"periods\": [],",
              " *       \"specialHourPeriod\": []",
              " *     },",
              " *     \"default\": false,",
              " *     \"email\": \"australia.store@examp;e.com\",",
              " *     \"fax\": \"+61 2 9876 5432\",",
              " *     \"name\": \"Margaret Street\",",
              " *     \"phone\": \"+61 2 1234 5678\",",
              " *     \"revision\": \"1\",",
              " *     \"status\": \"ACTIVE\",",
              " *     \"timeZone\": \"Australia/Brisbane\"",
              " *   }",
              " * ]",
              " */",
              ""
            ]
          },
          {
            "title": "Retrieve locations using multiple filters ",
            "body": [
              "/****************************************",
              " * Backend code - query-location.web.js *",
              " ***************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const queryLocationsByNameStart = webMethod(Permissions.Anyone, async (searchInput) => {",
              "  try {",
              "    const elevatedQueryLocations = elevate(locations.queryLocations)",
              "    const result = await elevatedQueryLocations()",
              "      .startsWith('name', searchInput)",
              "      .eq('status', 'ACTIVE')",
              "      .find();",
              "",
              "    return result.items;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { queryLocationsByNameStart } from 'backend/query-location.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#getBranchLocations').onClick(async () => {",
              "    const searchName = $w('#search').value;",
              "    const locations = await queryLocationsByNameStart(searchName);",
              "",
              "    const dropdownOptions = locations.map((location) => {",
              "      return {",
              "        label: location.name,",
              "        value: location._id",
              "      }",
              "    });",
              "    $w('#locationsDropdown').options = dropdownOptions;",
              "  });",
              "});",
              ""
            ],
            "extra": {
              "description": "This is an example of a page where user searches for locations, and the search results populates a dropdown. The query only returns active locations."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryLocations",
      "isAdminMethod": true
    },
    {
      "name": "setDefaultLocation",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the location to set as the default location.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-business-tools-v2.Locations.SetDefaultLocationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Sets a new default location.",
        "description": [
          "The `setDefaultLocation()` function returns a Promise that resolves to the new default location.\n\n> **Notes:**\n> + There can be only one default location per site.\n> + The `setDefaultLocation()` function changes the value of the `default` property of both the new and old default locations objects.\n> + The default location can't be archived."
        ],
        "examples": [
          {
            "title": "Set the default location (dashboard page code) ",
            "body": [
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '0a965e36-4071-4df0-905b-75458817430a' */",
              "",
              "export async function changeDefaultLocation(_id) {",
              "  try {",
              "    const elevatedSetDefaultLocation = elevate(locations.setDefaultLocation);",
              "    const myDefaultLocation = await elevatedSetDefaultLocation(_id);",
              "    console.log('Default location has been changed to:', myDefaultLocation);",
              "",
              "    return myDefaultLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   location: {",
              " *     \"_id\": \"0a965e36-4071-4df0-905b-75458817430a\",",
              " *     \"address\": {",
              " *       \"streetAddress\": {",
              " *         \"apt\": \"34\",",
              " *         \"name\": \"Musterstraße\",",
              " *         \"number\": \"5\"",
              " *       },",
              " *       \"city\": \"Berlin\",",
              " *       \"postalCode\": \"53782\"",
              " *     },",
              " *     \"archived\": false,",
              " *     \"default\": true,",
              " *     \"description\": \"Our brand new store in Germany\",",
              " *     \"email\": \"store@example.com\",",
              " *     \"name\": \"Germany Store\",",
              " *     \"phone\": \"0208 209 9087\",",
              " *     \"revision\": \"2\",",
              " *     \"status\": \"ACTIVE\",",
              " *     \"timeZone\": \"Europe/Berlin\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Set the default location (export from backend code) ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '0a965e36-4071-4df0-905b-75458817430a' */",
              "",
              "export const changeDefaultLocation = webMethod(Permissions.Anyone, async (_id) => {",
              "  try {",
              "    const elevatedSetDefaultLocation = elevate(locations.setDefaultLocation);",
              "    const myDefaultLocation = await elevatedSetDefaultLocation(_id);",
              "    console.log('Default location has been changed to:', myDefaultLocation);",
              "",
              "    return myDefaultLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   location: {",
              " *     \"_id\": \"0a965e36-4071-4df0-905b-75458817430a\",",
              " *     \"address\": {",
              " *       \"streetAddress\": {",
              " *         \"apt\": \"34\",",
              " *         \"name\": \"Musterstraße\",",
              " *         \"number\": \"5\"",
              " *       },",
              " *       \"city\": \"Berlin\",",
              " *       \"postalCode\": \"53782\"",
              " *     },",
              " *     \"archived\": false,",
              " *     \"default\": true,",
              " *     \"description\": \"Our brand new store in Germany\",",
              " *     \"email\": \"store@example.com\",",
              " *     \"name\": \"Germany Store\",",
              " *     \"phone\": \"0208 209 9087\",",
              " *     \"revision\": \"2\",",
              " *     \"status\": \"ACTIVE\",",
              " *     \"timeZone\": \"Europe/Berlin\"",
              " *   }",
              " * }",
              " */",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "setDefaultLocation",
      "isAdminMethod": true
    },
    {
      "name": "updateLocation",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location ID.",
          "required": true
        },
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.UpdateLocation"
            }
          ],
          "doc": "Updated location details.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "location",
        "location.address",
        "location.name",
        "location.timeZone"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-business-tools-v2.Locations.Location"
                }
              ]
            }
          }
        ],
        "doc": "Updated location.\n"
      },
      "docs": {
        "summary": "Updates a location.",
        "description": [
          "The `updateLocation()` function returns a Promise that resolves to the updated location.\n\nEach time a location is updated, its `revision` increments by 1. The current `revision` must be passed when updating the comment. This ensures you're working with the latest location and prevents unintended overwrites.\n\n> **Notes:**\n> + Currently, it isn't possible to partially update a location. You must pass the full location object in the `location` parameter.\n> + Any fields which are not included in the `location` parameter will be overwritten to `null`."
        ],
        "examples": [
          {
            "title": "Update a location's details (dashboard page code) ",
            "body": [
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '4ae3bbc8-fb78-4eb7-8bc5-1fec19c7dbfc'",
              " * ",
              " * Sample location value:",
              " * {",
              " *   address: {",
              " *     city: 'Roma',",
              " *     country: 'IT',",
              " *     formatted: 'Via Roma 123, 00100 Roma',",
              " *     location: {",
              " *       latitude: 41.9028,",
              " *       longitude: 12.4964",
              " *     },",
              " *     postalCode: '00100',",
              " *     streetAddress: {",
              " *       apt: '',",
              " *       name: 'Via Roma',",
              " *       number: '123'",
              " *     },",
              " *     subdivision: 'IT-RM'",
              " *   },",
              " *   businessSchedule: {",
              " *     periods: [",
              " *       {",
              " *         closeDay: 'SATURDAY',",
              " *         closeTime: '24:00',",
              " *         openDay: 'MONDAY',",
              " *         openTime: '00:00'",
              " *       }",
              " *     ],",
              " *     specialHourPeriod: [",
              " *       {",
              " *         comment: 'Half price in the lead up to Christmas!',",
              " *         endDate: '2023-12-24T23:59:00Z',",
              " *         isClosed: false,",
              " *         startDate: '2023-12-01T00:00:00Z'",
              " *       }",
              " *     ]",
              " *   },",
              " *   description: 'Our store in Rome is open 24/6!',",
              " *   email: '24.6.rome@example.com',",
              " *   fax: '+39 06 1234 5679',",
              " *   name: 'Rome 24/6',",
              " *   phone: '+39 06 1234 5678',",
              " *   status: 'ACTIVE',",
              " *   timeZone: 'Europe/Rome'",
              " * }",
              " */",
              "",
              "export async function myCreateLocationFunction(_id, location) {",
              "  try {",
              "    const elevatedCreateLocation = elevate(locations.createLocation);",
              "    const updatedLocation = await elevatedCreateLocation(_id, location);",
              "    console.log('Location details have been successfully updated:', updatedLocation);",
              "",
              "    return updatedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"4ae3bbc8-fb78-4eb7-8bc5-1fec19c7dbfc\"",
              " *   \"address\": {",
              " *     \"city\": \"Roma\",",
              " *     \"country\": \"IT\",",
              " *     \"formatted\": \"Via Roma 123, 00100 Roma\",",
              " *     \"location\": {",
              " *       \"latitude\": 41.9028,",
              " *       \"longitude\": 12.4964",
              " *     },",
              " *     \"postalCode\": \"00100\",",
              " *     \"streetAddress\": {",
              " *       \"apt\": \"\",",
              " *       \"name\": \"Via Roma\",",
              " *       \"number\": \"123\"",
              " *     },",
              " *     \"subdivision\": 'IT-RM'",
              " *   },",
              " *   \"archived\": false,",
              " *   \"businessSchedule\": {",
              " *     \"periods\": [",
              " *       {",
              " *         \"closeDay\": \"MONDAY\",",
              " *         \"closeTime\": \"00:00\",",
              " *         \"openDay\": \"SATURDAY\",",
              " *         \"openTime\": \"24:00\"",
              " *       }",
              " *     ],",
              " *     \"specialHourPeriod\": [",
              " *       {",
              " *         \"comment\": \"Half price in the lead up to Christmas!\",",
              " *         \"endDate\": \"2023-12-24T23:59:00Z\",",
              " *         \"isClosed\": false,",
              " *         \"startDate\": \"2023-12-01T00:00:00Z\"",
              " *       }",
              " *     ]",
              " *   },",
              " *   \"default\": false,",
              " *   \"description\": \"Our store in Rome is open 24/6!\",",
              " *   \"email\": \"24.6.rome@example.com\",",
              " *   \"fax\": \"+39 06 1234 5679\",",
              " *   \"name\": \"Rome 24/6\",",
              " *   \"phone\": \"+39 06 1234 5678\",",
              " *   \"revision\": \"2\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"Europe/Rome\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Update a location's details (export from backend code) ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample _id value: '4ae3bbc8-fb78-4eb7-8bc5-1fec19c7dbfc'",
              " * ",
              " * Sample location value:",
              " * {",
              " *   address: {",
              " *     city: 'Roma',",
              " *     country: 'IT',",
              " *     formatted: 'Via Roma 123, 00100 Roma',",
              " *     location: {",
              " *       latitude: 41.9028,",
              " *       longitude: 12.4964",
              " *     },",
              " *     postalCode: '00100',",
              " *     streetAddress: {",
              " *       apt: '',",
              " *       name: 'Via Roma',",
              " *       number: '123'",
              " *     },",
              " *     subdivision: 'IT-RM'",
              " *   },",
              " *   businessSchedule: {",
              " *     periods: [",
              " *       {",
              " *         closeDay: 'SATURDAY',",
              " *         closeTime: '24:00',",
              " *         openDay: 'MONDAY',",
              " *         openTime: '00:00'",
              " *       }",
              " *     ],",
              " *     specialHourPeriod: [",
              " *       {",
              " *         comment: 'Half price in the lead up to Christmas!',",
              " *         endDate: '2023-12-24T23:59:00Z',",
              " *         isClosed: false,",
              " *         startDate: '2023-12-01T00:00:00Z'",
              " *       }",
              " *     ]",
              " *   },",
              " *   description: 'Our store in Rome is open 24/6!',",
              " *   email: '24.6.rome@example.com',",
              " *   fax: '+39 06 1234 5679',",
              " *   name: 'Rome 24/6',",
              " *   phone: '+39 06 1234 5678',",
              " *   status: 'ACTIVE',",
              " *   timeZone: 'Europe/Rome'",
              " * }",
              " */",
              "",
              "export const myCreateLocationFunction = webMethod(Permissions.Anyone, async (_id, location) => {",
              "  try {",
              "    const elevatedCreateLocation = elevate(locations.createLocation);",
              "    const updatedLocation = await elevatedCreateLocation(_id, location);",
              "    console.log('Location details have been successfully updated:', updatedLocation);",
              "",
              "    return updatedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"_id\": \"4ae3bbc8-fb78-4eb7-8bc5-1fec19c7dbfc\"",
              " *   \"address\": {",
              " *     \"city\": \"Roma\",",
              " *     \"country\": \"IT\",",
              " *     \"formatted\": \"Via Roma 123, 00100 Roma\",",
              " *     \"location\": {",
              " *       \"latitude\": 41.9028,",
              " *       \"longitude\": 12.4964",
              " *     },",
              " *     \"postalCode\": \"00100\",",
              " *     \"streetAddress\": {",
              " *       \"apt\": \"\",",
              " *       \"name\": \"Via Roma\",",
              " *       \"number\": \"123\"",
              " *     },",
              " *     \"subdivision\": 'IT-RM'",
              " *   },",
              " *   \"archived\": false,",
              " *   \"businessSchedule\": {",
              " *     \"periods\": [",
              " *       {",
              " *         \"closeDay\": \"MONDAY\",",
              " *         \"closeTime\": \"00:00\",",
              " *         \"openDay\": \"SATURDAY\",",
              " *         \"openTime\": \"24:00\"",
              " *       }",
              " *     ],",
              " *     \"specialHourPeriod\": [",
              " *       {",
              " *         \"comment\": \"Half price in the lead up to Christmas!\",",
              " *         \"endDate\": \"2023-12-24T23:59:00Z\",",
              " *         \"isClosed\": false,",
              " *         \"startDate\": \"2023-12-01T00:00:00Z\"",
              " *       }",
              " *     ]",
              " *   },",
              " *   \"default\": false,",
              " *   \"description\": \"Our store in Rome is open 24/6!\",",
              " *   \"email\": \"24.6.rome@example.com\",",
              " *   \"fax\": \"+39 06 1234 5679\",",
              " *   \"name\": \"Rome 24/6\",",
              " *   \"phone\": \"+39 06 1234 5678\",",
              " *   \"revision\": \"2\",",
              " *   \"status\": \"ACTIVE\",",
              " *   \"timeZone\": \"Europe/Rome\"",
              " * }",
              " */",
              ""
            ]
          },
          {
            "title": "Overwrite a location's data ",
            "body": [
              "/*****************************************",
              " * Backend code - update-location.web.js *",
              " ****************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const updateLocation = webMethod(Permissions.Anyone, async (locationId, location) => {",
              "  try {",
              "    const elevatedUpdateLocation = elevate(locations.updateLocation);",
              "    const updatedLocation = await elevatedUpdateLocation(locationId, location);",
              "",
              "    return updatedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "export const listLocations = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedListLocations = elevate(locations.listLocations);",
              "    const results = await elevatedListLocations();",
              "",
              "    return results.locations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "export const getLocationById = webMethod(Permissions.Anyone, async (locationId) => {",
              "  try {",
              "    const elevatedGetLocation = elevate(locations.getLocation);",
              "    const myLocation = await elevatedGetLocation(locationId);",
              "",
              "    return myLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { updateLocation, listLocations, getLocationById } from 'backend/update-location.web';",
              "",
              "$w.onReady(async () => {",
              "  await populateStoresDropdown();",
              "",
              "  $w('#update').onClick(async () => {",
              "    const locationId = $w('#locationsDropdown').value;",
              "    const currentLocationValues = await getLocationById(locationId);",
              "",
              "    const location = {",
              "      name: $w('#newName').value,",
              "      address: {",
              "        streetAddress: {",
              "          number: $w('#streetNumber').value,",
              "          name: $w('#streetName').value",
              "        },",
              "        city: $w('#city').value,",
              "        postalCode: $w('#postalCode').value,",
              "      },",
              "      timeZone: $w('#timeZone').value,",
              "      description: $w('#description').value,",
              "      email: $w('#email').value,",
              "      phone: $w('#phone').value,",
              "      // Must use the current revision value",
              "      revision: currentLocationValues.revision",
              "    };",
              "",
              "    const updatedLocation = await updateLocation(locationId, location);",
              "    console.log('Location details have been successfully updated to the following:\\n', updatedLocation);",
              "    $w('#updateSuccessMsg').show();",
              "  });",
              "});",
              "",
              "async function populateStoresDropdown() {",
              "  const locations = await listLocations();",
              "  const dropdownOptions = locations.map((location) => {",
              "    return {",
              "      label: location.name,",
              "      value: location._id",
              "    };",
              "  });",
              "",
              "  $w('#locationsDropdown').options = dropdownOptions;",
              "};"
            ],
            "extra": {
              "description": "This code uses the user's input into a form on the page to overwrite the data of a location which they choose from a dropdown list on the page. To make this accessible to only company managers so they can update locations in the database, make a members-only page."
            }
          },
          {
            "title": "Partially update a location's data without overwriting other properties ",
            "body": [
              "/*****************************************",
              " * Backend code - update-location.web.js *",
              " ****************************************/",
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { locations } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const updateLocation = webMethod(Permissions.Anyone, async (locationId, location) => {",
              "  try {",
              "    const elevatedUpdateLocation = elevate(locations.updateLocation);",
              "    const updatedLocation = await elevatedUpdateLocation(locationId, location);",
              "",
              "    return updatedLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "export const listLocations = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedListLocations = elevate(locations.listLocations);",
              "    const results = await elevatedListLocations();",
              "",
              "    return results.locations;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "export const getLocationById = webMethod(Permissions.Anyone, async (locationId) => {",
              "  try {",
              "    const elevatedGetLocation = elevate(locations.getLocation);",
              "    const myLocation = await elevatedGetLocation(locationId);",
              "",
              "    return myLocation;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { updateLocation, listLocations, getLocationById } from 'backend/update-location.web';",
              "",
              "$w.onReady(async () => {",
              "  await populateStoresDropdown();",
              "",
              "  $w('#update').onClick(async () => {",
              "    // set location to current value and only change relevant properties' values",
              "    const locationId = $w('#locationsDropdown').value;",
              "    const location = await getLocationById(locationId);",
              "",
              "    location.email = $w('#email').value;",
              "    location.phone = $w('#phone').value;",
              "",
              "    const updatedLocation = await updateLocation(locationId, location);",
              "    console.log('Location details have been successfully updated to the following:\\n', updatedLocation);",
              "    $w('#updateSuccessMsg').show();",
              "  });",
              "});",
              "",
              "async function populateStoresDropdown() {",
              "  const locations = await listLocations();",
              "  const dropdownOptions = locations.map((location) => {",
              "    return {",
              "      label: location.name,",
              "      value: location._id",
              "    };",
              "  });",
              "",
              "  $w('#locationsDropdown').options = dropdownOptions;",
              "}"
            ],
            "extra": {
              "description": "This code shows an example of the user using an input form to change just a couple ofa location's properties - phone and email - while avoiding overwriting the other properties with a null value. This page is accessible to only company managers so they can update locations in the database."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateLocation",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "Address",
      "members": [
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "City name."
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format."
        },
        {
          "name": "formatted",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Full address of the location."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.AddressLocation"
            }
          ],
          "doc": "Geographic coordinates of location."
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Postal or zip code."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.StreetAddress"
            }
          ],
          "doc": "Street address. Includes street name, number, and apartment number in separate fields."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressLocation",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Latitude of the location. Must be between -90 and 90."
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Longitude of the location. Must be between -180 and 180."
        }
      ],
      "docs": {
        "description": [
          "Address Geolocation"
        ]
      }
    },
    {
      "name": "ArchiveLocation",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ArchiveLocationRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the location to archive."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ArchiveLocationResponse",
      "members": [
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Archived location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateLocationRequest",
      "members": [
        {
          "name": "locations",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.Location"
                  }
                ]
              }
            }
          ],
          "doc": "Locations to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateLocationResponse",
      "members": [
        {
          "name": "failedLocations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.FailedCreateLocation"
                  }
                ]
              }
            }
          ],
          "doc": "Locations that failed."
        },
        {
          "name": "successfulLocations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.Location"
                  }
                ]
              }
            }
          ],
          "doc": "Locations that were created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateLocationRequest",
      "members": [
        {
          "name": "locations",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.Location"
                  }
                ]
              }
            }
          ],
          "doc": "Locations to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateLocationResponse",
      "members": [
        {
          "name": "failedLocations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.FailedUpdateLocation"
                  }
                ]
              }
            }
          ],
          "doc": "Locations that failed."
        },
        {
          "name": "successfulLocations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.Location"
                  }
                ]
              }
            }
          ],
          "doc": "Locations that were updated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BusinessSchedule",
      "members": [
        {
          "name": "periods",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.TimePeriod"
                  }
                ]
              }
            }
          ],
          "doc": "Weekly recurring time periods when the business is regularly open or the service is available. Limited to 100 time periods."
        },
        {
          "name": "specialHourPeriod",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.SpecialHourPeriod"
                  }
                ]
              }
            }
          ],
          "doc": "Exceptions to the business's regular hours. The business can be open or closed during the exception."
        }
      ],
      "docs": {
        "description": [
          "Business schedule. Regular and exceptional time periods when the business is open or the service is available."
        ]
      }
    },
    {
      "name": "CreateLocationRequest",
      "members": [
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Location to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateLocationResponse",
      "members": [
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Created location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FailedCreateLocation",
      "members": [
        {
          "name": "errorMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error message."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Location that couldn't be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FailedUpdateLocation",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location that couldn't be updated."
        },
        {
          "name": "errorMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error message."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLocationRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the location to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLocationResponse",
      "members": [
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Retrieved location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListLocationsOptions",
      "members": [
        {
          "name": "includeArchived",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to include `archived` locations in the response.\n\nDefault: `false`\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Paging"
            }
          ],
          "doc": "Pagination options."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Sorting"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListLocationsRequest",
      "members": [
        {
          "name": "includeArchived",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to include `archived` locations in the response.\n\nDefault: `false`\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Paging"
            }
          ],
          "doc": "Pagination.\n\nDefault values:\n`offset`: 0\n`limit`: 50 (Max: 1000)\n"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Sorting"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListLocationsResponse",
      "members": [
        {
          "name": "locations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.Location"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved locations."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.PagingMetadata"
            }
          ],
          "doc": "Paging info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Location",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location ID."
        },
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Address"
            }
          ],
          "doc": "Address."
        },
        {
          "name": "archived",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the location is archived. Archived locations can't be updated.\n\n__Note:__ [Archiving a location](#archivelocation)\ndoesn't affect its `status`."
        },
        {
          "name": "businessSchedule",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.BusinessSchedule"
            }
          ],
          "doc": "Business schedule. Array of weekly recurring time periods when the location is open for business. Limited to 100 time periods.\n\n__Note:__ Not supported by Wix Bookings.\n"
        },
        {
          "name": "default",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this is the default location. There can only be one default location per site. The default location can't be archived."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location description."
        },
        {
          "name": "email",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email address."
        },
        {
          "name": "fax",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Fax number."
        },
        {
          "name": "locationType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location type.\n\nSupported values: `BRANCH`, `OFFICES`, `RECEPTION`, `HEADQUARTERS`.\n\n**Note**: This field is currently not supported.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location name."
        },
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone number."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the location is updated.\nTo prevent conflicting changes, the existing revision must be used when updating a location."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location status.\n\nSupported values: `ACTIVE`, `INACTIVE`.\n\nDefault: `ACTIVE`\n\n__Notes:__\n- [Archiving a location](#archivelocation)\ndoesn't affect the location's status.\n- `INACTIVE` status is currently not supported.\n"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Timezone in `America/New_York` format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load.\n\nDefault: `50`\n\nMax: `1000`\n"
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order.\n\nDefault: `0`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLocationsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Query"
            }
          ],
          "doc": "Information about the filters, sorting, and paging."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLocationsResponse",
      "members": [
        {
          "name": "locations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.Locations.Location"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved locations."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.PagingMetadata"
            }
          ],
          "doc": "Paging info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SetDefaultLocation",
      "members": [
        {
          "name": "currDefaultLocationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Current default location id."
        },
        {
          "name": "prevDefaultLocationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Previous default location id."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SetDefaultLocationRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the location to set as the default location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SetDefaultLocationResponse",
      "members": [
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "New default location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SpecialHourPeriod",
      "members": [
        {
          "name": "comment",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Additional info about the exception. For example, \"We close earlier on New Year's Eve.\""
        },
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "End date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)."
        },
        {
          "name": "isClosed",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the business is closed (or the service is not available) during the exception.\n\nDefault: `true`.\n"
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Start date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)."
        }
      ],
      "docs": {
        "description": [
          "Exception to the business's regular hours. The business can be open or closed during the exception."
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "apt",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Apartment number."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street name."
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street number."
        }
      ],
      "docs": {
        "description": [
          "Street address. Includes street name, number, and apartment number in separate fields."
        ]
      }
    },
    {
      "name": "TimePeriod",
      "members": [
        {
          "name": "closeDay",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Day of the week the period ends on."
        },
        {
          "name": "closeTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Time the period ends in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are `00:00` to `24:00`, where `24:00` represents\nmidnight at the end of the specified day.\n\n__Note:__ If `openDay` and `closeDay` specify the same day of the week `closeTime` must be later than `openTime`.\n"
        },
        {
          "name": "openDay",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Day of the week the period starts on."
        },
        {
          "name": "openTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Time the period starts in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are `00:00` to `24:00`, where `24:00` represents\nmidnight at the end of the specified day."
        }
      ],
      "docs": {
        "description": [
          "Weekly recurring time periods when the business is regularly open or the service is available."
        ]
      }
    },
    {
      "name": "UpdateLocation",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location ID."
        },
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Address"
            }
          ],
          "doc": "Address."
        },
        {
          "name": "archived",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the location is archived. Archived locations can't be updated.\n\n__Note:__ [Archiving a location](#archivelocation)\ndoesn't affect its `status`."
        },
        {
          "name": "businessSchedule",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.BusinessSchedule"
            }
          ],
          "doc": "Business schedule. Array of weekly recurring time periods when the location is open for business. Limited to 100 time periods.\n\n__Note:__ Not supported by Wix Bookings.\n"
        },
        {
          "name": "default",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this is the default location. There can only be one default location per site. The default location can't be archived."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location description."
        },
        {
          "name": "email",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email address."
        },
        {
          "name": "fax",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Fax number."
        },
        {
          "name": "locationType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location type.\n\nSupported values: `BRANCH`, `OFFICES`, `RECEPTION`, `HEADQUARTERS`.\n\n**Note**: This field is currently not supported.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location name."
        },
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone number."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the location is updated.\nTo prevent conflicting changes, the existing revision must be used when updating a location."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location status.\n\nSupported values: `ACTIVE`, `INACTIVE`.\n\nDefault: `ACTIVE`\n\n__Notes:__\n- [Archiving a location](#archivelocation)\ndoesn't affect the location's status.\n- `INACTIVE` status is currently not supported.\n"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Timezone in `America/New_York` format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateLocationRequest",
      "members": [
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Location to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateLocationResponse",
      "members": [
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.Locations.Location"
            }
          ],
          "doc": "Updated location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
