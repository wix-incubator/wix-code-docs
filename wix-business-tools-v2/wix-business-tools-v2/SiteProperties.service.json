{
  "name": "SiteProperties",
  "memberOf": "wix-business-tools-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-business-tools.v2-properties",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "getSiteProperties",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.GetSitePropertiesOptions"
            }
          ],
          "doc": "Field options.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-business-tools-v2.SiteProperties.PropertiesReadResponse"
                }
              ]
            }
          }
        ],
        "doc": "The resulting properties for the requested site.\n"
      },
      "docs": {
        "summary": "Retrieves site properties",
        "description": [
          "The `getSiteProperties()` function returns a promise that resolves to the site properties."
        ],
        "examples": [
          {
            "title": "Get Site Properties ",
            "body": [
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const myGetSitePropertiesFunction = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    const elevatedGetSiteProperties = elevate(siteProperties.getSiteProperties);",
              "    const mySiteProperties = await elevatedGetSiteProperties();",
              "",
              "    console.log('Success! Site properties:', mySiteProperties);",
              "    return mySiteProperties;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"properties\": {",
              " *     \"address\": {",
              " *       \"apartmentNumber\": \"\",",
              " *       \"city\": \"Radlett\",",
              " *       \"coordinates\": {",
              " *         \"latitude\": 51.6855755,",
              " *         \"longitude\": -0.3241171999999999",
              " *       }",
              " *       \"country\": \"GB\",",
              " *       \"googleFormattedAddress\": \"10 Watford Road, Radlett, UK\",",
              " *       \"hint\": {",
              " *         \"placement\": \"BEFORE\",",
              " *         \"text\": \"Located on the ground floor\"",
              " *       },",
              " *       \"isPhysical\": true,",
              " *       \"state\": \"Greater London\",",
              " *       \"street\": \"Watford Road\",",
              " *       \"streetNumber\": \"10\",",
              " *       \"zip\": \"WD7 8LD\",",
              " *     },",
              " *     \"businessConfig\": \"UNKNOWN\",",
              " *     \"businessName\": \"Kids Clothes For You\",",
              " *     \"businessSchedule\": {",
              " *       \"periods\": [",
              " *         {",
              " *           \"closeDay\": \"MONDAY\",",
              " *           \"closeTime\": \"18:00\",",
              " *           \"openDay\": \"MONDAY\",",
              " *           \"openTime\": \"08:00\"",
              " *         },",
              " *         {",
              " *           \"closeDay\": \"TUESDAY\",",
              " *           \"closeTime\": \"18:00\",",
              " *           \"openDay\": \"TUESDAY\",",
              " *           \"openTime\": \"08:00\"",
              " *         },",
              " *         {",
              " *           \"closeDay\": \"WEDNESDAY\",",
              " *           \"closeTime\": \"18:00\",",
              " *           \"openDay\": \"WEDNESDAY\",",
              " *           \"openTime\": \"08:00\"",
              " *         },",
              " *         {",
              " *           \"closeDay\": \"THURSDAY\",",
              " *           \"closeTime\": \"18:00\",",
              " *           \"openDay\": \"THURSDAY\",",
              " *           \"openTime\": \"08:00\"",
              " *         },",
              " *         {",
              " *           \"closeDay\": \"FRIDAY\",",
              " *           \"closeTime\": \"18:00\",",
              " *           \"openDay\": \"FRIDAY\",",
              " *           \"openTime\": \"08:00\"",
              " *         }",
              " *       ],",
              " *       \"specialHourPeriod\": [",
              " *         {",
              " *           \"comment\": \"Half price in the lead up to Christmas!\",",
              " *           \"endDate\": \"2023-12-24T23:59:00Z\",",
              " *           \"isClosed\": false,",
              " *           \"startDate\": \"2023-12-01T00:00:00Z\"",
              " *         }",
              " *       ]",
              " *     },",
              " *     \"categories\": {",
              " *       \"businessTermId\": \"38194ba8-1218-431c-a007-09c26c75ee0d\"",
              " *       \"primary\": \"other\",",
              " *       \"secondary\": [",
              " *         \"Local Business\"",
              " *       ],",
              " *     },",
              " *     \"consentPolicy\": {",
              " *       \"advertising\": true,",
              " *       \"analytics\": true,",
              " *       \"dataToThirdParty\": true,",
              " *       \"essential\": true,",
              " *       \"functional\": true",
              " *     },",
              " *     \"description\": \"Clothes for little people, for a little price!\",",
              " *     \"email\": \"kidsclothes@example.com\",",
              " *     \"fax\": \"011-44-20-12345678\",",
              " *     \"language\": \"en\",",
              " *     \"locale\": {",
              " *       \"languageCode\": \"en\",",
              " *       \"country\": \"GB\"",
              " *     },",
              " *     \"logo\": \"a8a52b_bf5596e614d8484e9f1d429ac256e1ad~mv2.jpeg\",",
              " *     \"paymentCurrency\": \"GBP\",",
              " *     \"phone\": \"0208 123 4569\",",
              " *     \"siteDisplayName\": \"Business Tools\",",
              " *     \"timeZone\": \"Europe/London\",",
              " *     \"trackClicksAnalytics\": false",
              " *   },",
              " *   \"version\": \"60\"",
              " * }",
              " */",
              ""
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "Get Business Name and Description from Site Properties ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample options value:",
              " * {",
              " *   fields: [",
              " *     'businessName',",
              " *     'description'",
              " *   ]",
              " * }",
              " */",
              "",
              "export const myGetSitePropertiesFunction = webMethod(Permissions.Anyone, async (options) => {",
              "  try {",
              "    const elevatedGetSiteProperties = elevate(siteProperties.getSiteProperties);",
              "    const mySiteProperties = await elevatedGetSiteProperties(options);",
              "",
              "    console.log('Success! Site properties:', mySiteProperties);",
              "    return mySiteProperties;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to:",
              " * {",
              " *   \"properties\": {",
              " *     \"businessName\": \"Kids Clothes For You\",",
              " *     \"description\": \"Clothes for little people, for a little price!\",",
              " *     \"trackClicksAnalytics\": false",
              " *   },",
              " *   \"version\": \"60\"",
              " * }",
              " */",
              ""
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "getSiteProperties() with choice of fields ",
            "body": [
              "/*********************************************",
              " * Backend code - get-site-properties.web.js *",
              " ********************************************/",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const displaySiteProperties = webMethod(Permissions.Anyone, async (options) => {",
              "  try {",
              "    const elevatedGetSiteProperties = elevate(siteProperties.getSiteProperties);",
              "    const mySiteProperties = await elevatedGetSiteProperties(options);",
              "",
              "    console.log('Success! Site properties:', mySiteProperties);",
              "    return mySiteProperties;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { displaySiteProperties } from 'backend/get-site-properties.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#submit').onClick(async () => {",
              "    const checkedFields = getFields();",
              "    ",
              "    if (!checkedFields.length) {",
              "      $w('#chooseAFieldsMsg').show();",
              "      setTimeout(() => {",
              "        $w('#chooseAFieldsMsg').hide();",
              "      }, 10000);",
              "    } else {",
              "      const fieldOptions = {",
              "        fields: checkedFields",
              "      }",
              "      const mySiteProperties = await displaySiteProperties(fieldOptions);",
              "",
              "      console.log('Chosen site properties are being displayed on the page:', mySiteProperties);",
              "      $w('#siteProperties').text = mySiteProperties;",
              "    }",
              "",
              "  });",
              "});",
              "",
              "function getFields() {",
              "  const checkedFields = [];",
              "  if ($w('#address').checked) {",
              "      checkedFields.push('address');",
              "  }",
              "  if ($w('#businessConfig').checked) {",
              "      checkedFields.push('businessConfig');",
              "  }",
              "  if ($w('#businessSchedule').checked) {",
              "      checkedFields.push('businessSchedule');",
              "  }",
              "  if ($w('#categories').checked) {",
              "      checkedFields.push('categories');",
              "  }",
              "  if ($w('#consentPolicy').checked) {",
              "      checkedFields.push('consentPolicy');",
              "  }",
              "  if ($w('#description').checked) {",
              "      checkedFields.push('description');",
              "  }",
              "  if ($w('#email').checked) {",
              "      checkedFields.push('email');",
              "  }",
              "  if ($w('#fax').checked) {",
              "      checkedFields.push('fax');",
              "  }",
              "  if ($w('#language').checked) {",
              "      checkedFields.push('language');",
              "  }",
              "  if ($w('#locale').checked) {",
              "      checkedFields.push('locale');",
              "  }",
              "  if ($w('#logo').checked) {",
              "      checkedFields.push('logo');",
              "  }",
              "  if ($w('#paymentCurrency').checked) {",
              "      checkedFields.push('paymentCurrency');",
              "  }",
              "  if ($w('#phone').checked) {",
              "      checkedFields.push('phone');",
              "  }",
              "  if ($w('#siteDisplayName').checked) {",
              "      checkedFields.push('siteDisplayName');",
              "  }",
              "  if ($w('#timeZone').checked) {",
              "      checkedFields.push('timeZone');",
              "  }",
              "  if ($w('#trackClicksAnalytics').checked) {",
              "      checkedFields.push('trackClicksAnalytics');",
              "  }",
              "",
              "  return checkedFields;",
              "}"
            ],
            "extra": {
              "description": "This code is an example of a webpage where the user uses checkboxes to indicate which of the site's details they want to view. "
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getSiteProperties",
      "isAdminMethod": true
    },
    {
      "name": "updateBusinessContact",
      "params": [
        {
          "name": "businessContact",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.BusinessContactData"
            }
          ],
          "doc": "The site's business contact information.",
          "required": true
        },
        {
          "name": "fields",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The properties of `businessContact` to be updated. Properties not explicitly specified here are ignored. Properties included here but excluded from `businessContact` are cleared.",
          "required": true
        }
      ],
      "requiredFields": [
        "businessContact",
        "fields"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a site's business contact information.",
        "description": [
          "The `updateBusinessContact()` function returns a Promise that resolves when the site's contact information is updated.\n\n**Note:**\n> + Only the fields included in the `fields` parameter will be updated, even if they are included in the `businessContact` parameter."
        ],
        "examples": [
          {
            "title": "Update Business Contact ",
            "body": [
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample businessContact value:",
              " * {",
              " *   address: {",
              " *     apartmentNumber: '',",
              " *     city: 'New York',",
              " *     coordinates: {",
              " *       latitude: 40.7128,",
              " *       longitude: -74.0060",
              " *     },",
              " *     country: 'US',",
              " *     googleFormattedAddress: '123 Broadway, New York, NY 10001',",
              " *     hint: {",
              " *       placement: 'BEFORE',",
              " *       text: 'On the corner - front entrance on 5th Avenue'",
              " *     },",
              " *     isPhysical: true,",
              " *     state: 'NY',",
              " *     street: 'Broadway',",
              " *     streetNumber: '123',",
              " *     zip: '10001'",
              " *   },",
              " *   email: 'mainaddress@example.com',",
              " *   fax: '011-1-212-555-6789',",
              " *   phone: '212-555-1234'",
              " * }",
              " * ",
              " * Sample fields value: ['address', 'email', 'fax', 'phone']",
              " */",
              "",
              "export const myUpdateBusinessContactFunction = webMethod(Permissions.Anyone, async (businessContact, fields) => {",
              "  try {",
              "    const elevatedUpdateBusinessContact = elevate(siteProperties.updateBusinessContact);",
              "    await elevatedUpdateBusinessContact(businessContact, fields);",
              "",
              "    console.log('Successfully updated business contact');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */",
              ""
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "Update email of business contact ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample businessContact value:",
              " * {",
              " *   email: 'mainaddress@example.com'",
              " * }",
              " * ",
              " * Sample fields value: ['email']",
              " */",
              "",
              "export const myUpdateBusinessContactFunction = webMethod(Permissions.Anyone, async (businessContact, fields) => {",
              "  try {",
              "    const elevatedUpdateBusinessContact = elevate(siteProperties.updateBusinessContact);",
              "    await elevatedUpdateBusinessContact(businessContact, fields);",
              "",
              "    console.log('Successfully updated business contact');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */"
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "updateBusinessContact() for only specific fields ",
            "body": [
              "/*************************************************",
              " * Backend code - update-business-contact.web.js *",
              " ************************************************/",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const contactDetailsUpdate = webMethod(Permissions.Anyone, async (businessContact, fields) => {",
              "  try {",
              "    const elevatedUpdateBusinessContact = elevate(siteProperties.updateBusinessContact);",
              "    await elevatedUpdateBusinessContact(businessContact, fields);",
              "",
              "    console.log('Success! Contact Details Updated');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { contactDetailsUpdate } from 'backend/update-business-contact.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#submit').onClick(async () => {",
              "    const paramDetails = getParamDetails();",
              "    ",
              "    if (!paramDetails.checkedFields.length) {",
              "      $w('#changeAFieldsMsg').show();",
              "      setTimeout(() => {",
              "        $w('#changeAFieldsMsg').hide();",
              "      }, 10000);",
              "    } else {",
              "      const isUpdated = await contactDetailsUpdate(paramDetails.updateDetails, paramDetails.checkedFields);",
              "",
              "      if (isUpdated) {",
              "        console.log('Business Contact successfully updated');",
              "        $w('#successfulUpdateMsg').show();",
              "        setTimeout(() => {",
              "          $w('#successfulUpdateMsg').hide();",
              "        }, 10000);",
              "      }",
              "    }",
              "  });",
              "});",
              "",
              "function getParamDetails() {",
              "  const checkedFields = [];",
              "  const updateDetails = {}",
              "  if ($w('#address').value.length) {",
              "      checkedFields.push('address');",
              "      updateDetails.address = $w('#address').value;",
              "  }",
              "  if ($w('#email').value.length) {",
              "      checkedFields.push('email');",
              "      updateDetails.email = $w('#email').value;",
              "  }",
              "  if ($w('#fax').value.length) {",
              "      checkedFields.push('fax');",
              "      updateDetails.fax = $w('#fax').value;",
              "  }",
              "  if ($w('#phone').value.length) {",
              "      checkedFields.push('phone');",
              "      updateDetails.phone = $w('#phone').value;",
              "  }",
              "",
              "  return {updateDetails, checkedFields};",
              "}",
              ""
            ],
            "extra": {
              "description": "This code is an example of a webpage where the user updates the business' contact details. If they don't enter text for a specific field, it won't overwrite. Access to this page would be given only to managers."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateBusinessContact",
      "isAdminMethod": true
    },
    {
      "name": "updateBusinessProfile",
      "params": [
        {
          "name": "businessProfile",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.BusinessProfileData"
            }
          ],
          "doc": "The site's business profile.",
          "required": true
        },
        {
          "name": "fields",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The properties of `businessProfile` to be updated. Properties not explicitly specified here are ignored. Properties included here but excluded from `businessProfile` are cleared.",
          "required": true
        }
      ],
      "requiredFields": [
        "businessProfile",
        "fields"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a site's business profile information.",
        "description": [
          "The `updateBusinessProfile()` function returns a Promise that resolves when the site's business profile information is updated.\n\n**Note:**\n> + Only the fields included in the `fields` parameter are updated, even if they are included in the `businessProfile` parameter."
        ],
        "examples": [
          {
            "title": "Update Business Profile ",
            "body": [
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample businessProfile value:",
              " * {",
              " *   description: 'Whatever the occasion, we have what you need.',",
              " *   logo: 'a8a52b_bf5596e614d8484e9f1d429ac256e1ad~mv2.jpeg'",
              " * }",
              " * ",
              " * Sample fields value: ['description', 'logo']",
              " */",
              "",
              "export const myUpdateBusinessProfileFunction = webMethod(Permissions.Anyone, async (businessProfile, fields) => {",
              "  try {",
              "    const elevatedUpdateBusinessProfile = elevate(siteProperties.updateBusinessProfile);",
              "    await elevatedUpdateBusinessProfile(businessProfile, fields);",
              "",
              "    console.log('Successfully updated business profile');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */",
              ""
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "Update description of business profile ",
            "body": [
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample businessProfile value:",
              " * {",
              " *   description: 'We have what you need, whatever the occasion.'",
              " * }",
              " * ",
              " * Sample fields value: ['description']",
              " */",
              "",
              "export const myUpdateBusinessProfileFunction = webMethod(Permissions.Anyone, async (businessProfile, fields) => {",
              "  try {",
              "    const elevatedUpdateBusinessProfile = elevate(siteProperties.updateBusinessProfile);",
              "    await elevatedUpdateBusinessProfile(businessProfile, fields);",
              "",
              "    console.log('Successfully updated business profile');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */"
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "updateBusinessProfile() for only specific fields ",
            "body": [
              "/*************************************************",
              " * Backend code - update-business-profile.web.js *",
              " ************************************************/",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const profileDetailsUpdate = webMethod(Permissions.Anyone, async (businessProfile, fields) => {",
              "  try {",
              "    const elevatedUpdateBusinessProfile = elevate(siteProperties.updateBusinessProfile);",
              "    await elevatedUpdateBusinessProfile(businessProfile, fields);",
              "",
              "    console.log('Success! Profile Details Updated');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { profileDetailsUpdate } from 'backend/update-business-profile.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#submit').onClick(async () => {",
              "    const paramDetails = getParamDetails();",
              "    ",
              "    if (!paramDetails.checkedFields.length) {",
              "      $w('#changeAFieldsMsg').show();",
              "      setTimeout(() => {",
              "        $w('#changeAFieldsMsg').hide();",
              "      }, 10000);",
              "    } else {",
              "      const isUpdated = await profileDetailsUpdate(paramDetails.updateDetails, paramDetails.checkedFields);",
              "",
              "      if (isUpdated) {",
              "        console.log('Business Profile successfully updated');",
              "        $w('#successfulUpdateMsg').show();",
              "        setTimeout(() => {",
              "          $w('#successfulUpdateMsg').hide();",
              "        }, 10000);",
              "      }",
              "    }",
              "  });",
              "});",
              "",
              "function getParamDetails() {",
              "  const checkedFields = [];",
              "  const updateDetails = {};",
              "  if ($w('#description').value.length) {",
              "      checkedFields.push('description');",
              "      updateDetails.description = $w('#description').value;",
              "  }",
              "  if ($w('#logo').value.length) {",
              "      checkedFields.push('logo');",
              "      updateDetails.logo = $w('#logo').value;",
              "  }",
              "",
              "  return {updateDetails, checkedFields};",
              "}"
            ],
            "extra": {
              "description": "This code is an example of a webpage where the user updates the business' description or logo. If they don't enter text for a specific field, it won't overwrite. Access to this page would be given only to managers."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateBusinessProfile",
      "isAdminMethod": true
    },
    {
      "name": "updateBusinessSchedule",
      "params": [
        {
          "name": "businessSchedule",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.BusinessSchedule"
            }
          ],
          "doc": "The site's business schedule in the site time zone.",
          "required": true
        }
      ],
      "requiredFields": [
        "businessSchedule"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates the default location's business schedule.",
        "description": [
          "The `updateBusinessSchedule()` function returns a Promise that resolves when the site's business schedule is updated.\n\n**Note:**\n> + The `updateBusinessSchedule()` function overwrites the current business schedule. `businessSchedule` is an array, so it must be written in its entirety. Therefore, you must modify the existing array and pass it in the function call."
        ],
        "examples": [
          {
            "title": "Update Business Schedule ",
            "body": [
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample businessSchedule value:",
              " * {",
              " *   \"periods\": [",
              " *     {",
              " *       \"closeDay\": \"MONDAY\",",
              " *       \"closeTime\": \"13:00\",",
              " *       \"openDay\": \"MONDAY\",",
              " *       \"openTime\": \"08:00\"",
              " *     },",
              " *     {",
              " *       \"closeDay\": \"TUESDAY\",",
              " *       \"closeTime\": \"13:00\",",
              " *       \"openDay\": \"TUESDAY\",",
              " *       \"openTime\": \"08:00\"",
              " *     },",
              " *     {",
              " *       \"closeDay\": \"WEDNESDAY\",",
              " *       \"closeTime\": \"18:00\",",
              " *       \"openDay\": \"WEDNESDAY\",",
              " *       \"openTime\": \"08:00\"",
              " *     },",
              " *     {",
              " *       \"closeDay\": \"THURSDAY\",",
              " *       \"closeTime\": \"13:00\",",
              " *       \"openDay\": \"THURSDAY\",",
              " *       \"openTime\": \"08:00\"",
              " *     },",
              " *     {",
              " *       \"closeDay\": \"FRIDAY\",",
              " *       \"closeTime\": \"18:00\",",
              " *       \"openDay\": \"FRIDAY\",",
              " *       \"openTime\": \"08:00\"",
              " *     }",
              " *   ],",
              " *   \"specialHourPeriod\": [",
              " *     {",
              " *       \"comment\": \"Closed between Christmas and New Year\",",
              " *       \"endDate\": \"2023-12-31T23:59:00Z\",",
              " *       \"isClosed\": true,",
              " *       \"startDate\": \"2023-12-25T00:00:00Z\"",
              " *     }",
              " *   ]",
              " * }",
              " */",
              "",
              "export const myUpdateBusinessScheduleFunction = webMethod(Permissions.Anyone, async (businessSchedule) => {",
              "  try {",
              "    const elevatedUpdateBusinessSchedule = elevate(siteProperties.updateBusinessSchedule);",
              "    await elevatedUpdateBusinessSchedule(businessSchedule);",
              "",
              "    console.log('Success! Updated schedule');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */",
              ""
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "updateBusinessSchedule() based on user input ",
            "body": [
              "/**************************************************",
              " * Backend code - update-business-schedule.web.js *",
              " *************************************************/",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const scheduleUpdate = webMethod(Permissions.Anyone, async (businessSchedule) => {",
              "  try {",
              "    const elevatedUpdateBusinessSchedule = elevate(siteProperties.updateBusinessSchedule);",
              "    await elevatedUpdateBusinessSchedule(businessSchedule);",
              "",
              "    console.log('Success! Schedule Updated');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "",
              "",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { scheduleUpdate } from 'backend/update-business-schedule.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#submit').onClick(async () => {",
              "    const newSchedule = newScheduleAsArrays();",
              "    const isUpdated = await scheduleUpdate(newSchedule);",
              "",
              "    if (isUpdated) {",
              "      console.log('Schedule successfully updated');",
              "      $w('#successfulUpdateMsg').show();",
              "      setTimeout(() => {",
              "        $w('#successfulUpdateMsg').hide();  ",
              "      }, 10000);",
              "    }",
              "  });",
              "});",
              "",
              "function newScheduleAsArrays() {",
              "  const newPeriods = [];",
              "  if ($w('#addSchedule1').checked) {",
              "    newPeriods.push({",
              "      openDay: $w('#openDay1').value,",
              "      openTime: $w('#openTime1').value,",
              "      closeDay: $w('#closeDay1').value,",
              "      closeTime: $w('#closeTime1').value",
              "    })",
              "  };",
              "  if ($w('#addSchedule2').checked) {",
              "    newPeriods.push({",
              "      openDay: $w('#openDay2').value,",
              "      openTime: $w('#openTime2').value,",
              "      closeDay: $w('#closeDay2').value,",
              "      closeTime: $w('#closeTime2').value",
              "    })",
              "  };",
              "  if ($w('#addSchedule3').checked) {",
              "    newPeriods.push({",
              "      openDay: $w('#openDay3').value,",
              "      openTime: $w('#openTime3').value,",
              "      closeDay: $w('#closeDay3').value,",
              "      closeTime: $w('#closeTime3').value",
              "    })",
              "  };",
              "  if ($w('#addSchedule4').checked) {",
              "    newPeriods.push({",
              "      openDay: $w('#openDay4').value,",
              "      openTime: $w('#openTime4').value,",
              "      closeDay: $w('#closeDay4').value,",
              "      closeTime: $w('#closeTime4').value",
              "    })",
              "  };",
              "  if ($w('#addSchedule5').checked) {",
              "    newPeriods.push({",
              "      openDay: $w('#openDay5').value,",
              "      openTime: $w('#openTime5').value,",
              "      closeDay: $w('#closeDay5').value,",
              "      closeTime: $w('#closeTime5').value",
              "    })",
              "  };",
              "",
              "  const newSpecialHour = [];",
              "  if ($w('#addSpecialHour').checked) {",
              "    newSpecialHour.push({",
              "      startDate: $w('#specialDateStart').value,",
              "      endDate: $w('#specialDateEnd').value,",
              "      isClosed: $w('#specialDateIsClosed').checked,",
              "      comment: $w('#specialDateComment').value",
              "    })",
              "  };",
              "",
              "  return {periods: newPeriods, specialHourPeriod: newSpecialHour};",
              "}",
              ""
            ],
            "extra": {
              "description": "This code is an example of a webpage for users with manager-level access to update the business' schedule. There is a form with checkboxes to indicate addition of another set of opening times (up to a maximum of 5) or the addition of a special hour. If the checkbox is checked, another form will appear with relevant dropdown choices - the values of the options are compatible with the required input (e.g. for 'Monday' option, value is 'MONDAY')."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateBusinessSchedule",
      "isAdminMethod": true
    },
    {
      "name": "updateConsentPolicy",
      "params": [
        {
          "name": "consentPolicy",
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.ConsentPolicy"
            }
          ],
          "doc": "Default consent policy defined by the site owner. Can be further limited by site visitors.",
          "required": true
        }
      ],
      "requiredFields": [
        "consentPolicy"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a site's consent policy.",
        "description": [
          "The `updateConsentPolicy()` function returns a Promise that resolves when the site's consent policy is updated."
        ],
        "examples": [
          {
            "title": "Update Consent Policy ",
            "body": [
              "",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "/* Sample objectArg value:",
              " * {",
              " *   advertising: true,",
              " *   analytics: true,",
              " *   dataToThirdParty: true,",
              " *   essential: true,",
              " *   functional: true",
              " * }",
              " */",
              "",
              "export const myUpdateConsentPolicyFunction = webMethod(Permissions.Anyone, async (consentPolicy) => {",
              "  try {",
              "    const elevatedUpdateConsentPolicy = elevate(siteProperties.updateConsentPolicy);",
              "    await elevatedUpdateConsentPolicy(consentPolicy);",
              "",
              "    console.log('Success! Updated policy');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */",
              ""
            ],
            "extra": {
              "description": "<blockquote class=\"warning\">This example uses <a href=\"https://www.wix.com/velo/reference/wix-auth/elevate\"><code>elevate()</code></a>, which enables site visitors to call functions without the required permissions. Exercise caution when using <code>elevate()</code> to prevent security vulnerabilities.</blockquote>"
            }
          },
          {
            "title": "updateConsentPolicy - Practical Example ",
            "body": [
              "/***********************************************",
              " * Backend code - update-consent-policy.web.js *",
              " **********************************************/",
              "import { Permissions, webMethod } from 'wix-web-module';",
              "import { siteProperties } from 'wix-business-tools.v2';",
              "import { elevate } from 'wix-auth';",
              "",
              "export const myUpdateConsentPolicyFunction = webMethod(Permissions.Anyone, async (consentPolicy) => {",
              "  try {",
              "    const elevatedUpdateConsentPolicy = elevate(siteProperties.updateConsentPolicy);",
              "    await elevatedUpdateConsentPolicy(consentPolicy);",
              "",
              "    console.log('Success! Updated policy');",
              "    return true;",
              "  } catch (error) {",
              "    console.error(error);",
              "    throw new Error(error);",
              "  }",
              "});",
              "  ",
              "  ",
              "/*************",
              " * Page code *",
              " ************/",
              "",
              "import { myUpdateConsentPolicyFunction } from 'backend/update-consent-policy.web';",
              "",
              "$w.onReady(() => {",
              "  $w('#submit').onClick(async () => {",
              "    const updatedPolicy = {",
              "      advertising: $w('#advertising').checked,",
              "      analytics: $w('#analytics').checked,",
              "      dataToThirdParty: $w('#dataToThirdParty').checked,",
              "      essential: $w('#essential').checked,",
              "      functional: $w('#functional').checked",
              "    }",
              "    const isUpdated = await myUpdateConsentPolicyFunction(updatedPolicy);",
              "",
              "    if (isUpdated) {",
              "        console.log('Consent policy successfully updated');",
              "        $w('#successfulUpdateMsg').show();",
              "        setTimeout(() => {",
              "          $w('#successfulUpdateMsg').hide();  ",
              "        }, 10000);",
              "      }",
              "  });",
              "});",
              ""
            ],
            "extra": {
              "description": "This code is an example of a webpage where users can update the consent policy, using checkboxes to indicate the values. This page is only accessible to managers."
            }
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateConsentPolicy",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "Address",
      "members": [
        {
          "name": "apartmentNumber",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Apartment number."
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "City name."
        },
        {
          "name": "coordinates",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.GeoCoordinates"
            }
          ],
          "doc": "Geographic coordinates of location."
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Two-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format."
        },
        {
          "name": "googleFormattedAddress",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Google-formatted version of this address."
        },
        {
          "name": "hint",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.AddressHint"
            }
          ],
          "doc": "Extra information to be displayed in the address."
        },
        {
          "name": "isPhysical",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this address represents a physical location."
        },
        {
          "name": "state",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "State."
        },
        {
          "name": "street",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street name."
        },
        {
          "name": "streetNumber",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street number."
        },
        {
          "name": "zip",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Zip or postal code."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressHint",
      "members": [
        {
          "name": "placement",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Where the extra text should be displayed."
        },
        {
          "name": "text",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Extra text displayed next to, or instead of, the actual address."
        }
      ],
      "docs": {
        "description": [
          "Extra information on displayed addresses.\nThis is used for display purposes. Used to add additional data about the address, such as \"In the passage\".\nFree text. In addition the user can state where he wants that additional description - before, after, or instead\nthe address string."
        ]
      }
    },
    {
      "name": "BulkPropertiesReadRequest",
      "members": [
        {
          "name": "sites",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Sites ids."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkPropertiesReadResponse",
      "members": [
        {
          "name": "sites",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "referenceType": "wix-business-tools-v2.SiteProperties.PropertiesReadResponse"
                  }
                ]
              }
            }
          ],
          "doc": "The ID of the resolved MetaSite for the request."
        }
      ],
      "docs": {
        "description": [
          "The resulting properties for the requested site."
        ]
      }
    },
    {
      "name": "BusinessContactData",
      "members": [
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Address"
            }
          ],
          "doc": "Publicly-available business address."
        },
        {
          "name": "email",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Publicly-available business email address."
        },
        {
          "name": "fax",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Publicly-available business fax number."
        },
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Publicly-available business phone number."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BusinessProfileData",
      "members": [
        {
          "name": "businessName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Business name."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Site description."
        },
        {
          "name": "logo",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Path to the site's logo in Wix Media (without Wix Media base URL)."
        },
        {
          "name": "siteDisplayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Site display name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BusinessSchedule",
      "members": [
        {
          "name": "periods",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.SiteProperties.TimePeriod"
                  }
                ]
              }
            }
          ],
          "doc": "Weekly recurring time periods when the business is regularly open or the service is available. Limited to 100 time periods."
        },
        {
          "name": "specialHourPeriod",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.SiteProperties.SpecialHourPeriod"
                  }
                ]
              }
            }
          ],
          "doc": "Exceptions to the business's regular hours. The business can be open or closed during the exception."
        }
      ],
      "docs": {
        "description": [
          "Business schedule. Regular and exceptional time periods when the business is open or the service is available."
        ]
      }
    },
    {
      "name": "Categories",
      "members": [
        {
          "name": "businessTermId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Business Term Id"
        },
        {
          "name": "primary",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Primary site category."
        },
        {
          "name": "secondary",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Secondary site category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ChangeContext",
      "members": [
        {
          "name": "propertiesChange",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.PropertiesChange"
            }
          ],
          "doc": "Properties were updated."
        },
        {
          "name": "siteCloned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.SiteCloned"
            }
          ],
          "doc": "Properties were cloned on site cloning."
        },
        {
          "name": "siteCreated",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.SiteCreated"
            }
          ],
          "doc": "Default properties were created on site creation."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfChangeContextPayloadOneOf",
            "members": [
              "propertiesChange",
              "siteCloned",
              "siteCreated"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ChangeContextPayloadOneOf",
      "members": [
        {
          "name": "propertiesChange",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.PropertiesChange"
            }
          ],
          "doc": "Properties were updated."
        },
        {
          "name": "siteCloned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.SiteCloned"
            }
          ],
          "doc": "Properties were cloned on site cloning."
        },
        {
          "name": "siteCreated",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.SiteCreated"
            }
          ],
          "doc": "Default properties were created on site creation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConsentPolicy",
      "members": [
        {
          "name": "advertising",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the site uses cookies that collect information allowing better customization of the experience for a current visitor."
        },
        {
          "name": "analytics",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the site uses cookies that collect analytics about how the site is used (in order to improve it)."
        },
        {
          "name": "dataToThirdParty",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "CCPA compliance flag."
        },
        {
          "name": "essential",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the site uses cookies that are essential to site operation."
        },
        {
          "name": "functional",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the site uses cookies that affect site performance and other functional measurements."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GeoCoordinates",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Latitude of the location. Must be between -90 and 90."
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Longitude of the location. Must be between -180 and 180."
        }
      ],
      "docs": {
        "description": [
          "Geocoordinates for a particular address."
        ]
      }
    },
    {
      "name": "GetSitePropertiesOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of fields to return.\nIf omitted, all fields are returned."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Locale",
      "members": [
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Two-letter country code in [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) format."
        },
        {
          "name": "languageCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Two-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Multilingual",
      "members": [
        {
          "name": "autoRedirect",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to redirect to user language."
        },
        {
          "name": "supportedLanguages",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.SiteProperties.SupportedLanguage"
                  }
                ]
              }
            }
          ],
          "doc": "Supported languages list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Properties",
      "members": [
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Address"
            }
          ],
          "doc": "Address."
        },
        {
          "name": "businessConfig",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values: `FITNESS SERVICE`, `RESTAURANT`, `BLOG`, `STORE`, `EVENT`, `UNKNOWN`.\n\nSite business type.\n"
        },
        {
          "name": "businessName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Business name."
        },
        {
          "name": "businessSchedule",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.BusinessSchedule"
            }
          ],
          "doc": "Business schedule. Regular and exceptional time periods when the business is open or the service is available.\n\n__Note:__ Not supported by Wix Bookings.\n"
        },
        {
          "name": "categories",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Categories"
            }
          ],
          "doc": "Site categories."
        },
        {
          "name": "consentPolicy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.ConsentPolicy"
            }
          ],
          "doc": "Cookie policy the site owner defined for their site (before the users interacts with/limits it)."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Site description."
        },
        {
          "name": "email",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Email address."
        },
        {
          "name": "externalSiteUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "External site url that uses Wix as its headless business solution"
        },
        {
          "name": "fax",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Fax number."
        },
        {
          "name": "language",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Site language.\n\nTwo-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n"
        },
        {
          "name": "locale",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Locale"
            }
          ],
          "doc": "Site locale."
        },
        {
          "name": "logo",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Path to the site's logo in Wix Media (without Wix Media base URL)."
        },
        {
          "name": "multilingual",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Multilingual"
            }
          ],
          "doc": "Supported languages of a site and the primary language."
        },
        {
          "name": "paymentCurrency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Site currency format used to bill customers.\n\nThree-letter currency code in [ISO-4217 alphabetic](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) format.\n"
        },
        {
          "name": "phone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phone number."
        },
        {
          "name": "siteDisplayName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Site display name."
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Timezone in `America/New_York` format."
        },
        {
          "name": "trackClicksAnalytics",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Track clicks analytics"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PropertiesChange",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PropertiesReadRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of fields to return.\nIf omitted, all fields are returned."
        }
      ],
      "docs": {
        "description": [
          "The parameters of a site properties read request."
        ]
      }
    },
    {
      "name": "PropertiesReadResponse",
      "members": [
        {
          "name": "properties",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Properties"
            }
          ],
          "doc": "Properties for the requested site."
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Current version of the stored property site. For internal use."
        }
      ],
      "docs": {
        "description": [
          "The resulting properties for the requested site."
        ]
      }
    },
    {
      "name": "PropertiesUpdateRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The properties to be updated. Properties not explicitly specified here are ignored. Properties included here but excluded from `properties` are cleared."
        },
        {
          "name": "properties",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Properties"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          "The request used to update a site's properties."
        ]
      }
    },
    {
      "name": "PropertiesUpdateResponse",
      "members": [
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The new version of the stored properties after the update. For internal use."
        }
      ],
      "docs": {
        "description": [
          "The details resulting from an update operation."
        ]
      }
    },
    {
      "name": "SiteCloned",
      "members": [
        {
          "name": "originMetaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Origin site id."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteCreated",
      "members": [
        {
          "name": "originTemplateId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Origin template site id."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SitePropertiesEvent",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Set of properties that were updated - corresponds to the fields in \"properties\"."
        },
        {
          "name": "properties",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Properties"
            }
          ],
          "doc": "Updated properties."
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Version of the site's properties represented by this update."
        }
      ],
      "docs": {
        "description": [
          "The actual update event for a particular notification."
        ]
      }
    },
    {
      "name": "SitePropertiesFullNotification",
      "members": [
        {
          "name": "changeContext",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.ChangeContext"
            }
          ],
          "doc": "Context of the notification"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The site ID for which this snapshot applies."
        },
        {
          "name": "properties",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Properties"
            }
          ],
          "doc": "Snapshot properties."
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Version of the site's properties current snapshot."
        }
      ],
      "docs": {
        "description": [
          "Snapshot of latest site properties."
        ]
      }
    },
    {
      "name": "SitePropertiesNotification",
      "members": [
        {
          "name": "changeContext",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.ChangeContext"
            }
          ],
          "doc": "Context of the notification"
        },
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.SitePropertiesEvent"
            }
          ],
          "doc": "The actual update event."
        },
        {
          "name": "metasiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The site ID for which this update notification applies."
        },
        {
          "name": "translations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-business-tools-v2.SiteProperties.Translation"
                  }
                ]
              }
            }
          ],
          "doc": "A convenience set of mappings from the MetaSite ID to its constituent services."
        }
      ],
      "docs": {
        "description": [
          "Encapsulates all details written to the Greyhound topic when a site's properties are updated."
        ]
      }
    },
    {
      "name": "SitePropertiesUpdated",
      "members": [
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.SitePropertiesEvent"
            }
          ],
          "doc": "Update details."
        },
        {
          "name": "metasiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the Wix site that has been updated."
        }
      ],
      "docs": {
        "description": [
          "Encapsulates all changes when site properties are updated"
        ]
      }
    },
    {
      "name": "SpecialHourPeriod",
      "members": [
        {
          "name": "comment",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Additional info about the exception. For example, \"We close earlier on New Year's Eve.\""
        },
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "End date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)."
        },
        {
          "name": "isClosed",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the business is closed (or the service is not available) during the exception.\n\nDefault: `true`.\n"
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Start date and time of the exception in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format and [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time)."
        }
      ],
      "docs": {
        "description": [
          "Exception to the business's regular hours. The business can be open or closed during the exception."
        ]
      }
    },
    {
      "name": "SupportedLanguage",
      "members": [
        {
          "name": "countryCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Language icon."
        },
        {
          "name": "isPrimary",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the supported language is the primary language for the site."
        },
        {
          "name": "languageCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Two-letter language code in [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format."
        },
        {
          "name": "locale",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Locale"
            }
          ],
          "doc": "Locale."
        },
        {
          "name": "resolutionMethod",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "How the language will be resolved. For internal use."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TimePeriod",
      "members": [
        {
          "name": "closeDay",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Day of the week the period ends on."
        },
        {
          "name": "closeTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Time the period ends in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are `00:00` to `24:00`, where `24:00` represents\nmidnight at the end of the specified day.\n\n__Note:__ If `openDay` and `closeDay` specify the same day of the week `closeTime` must be later than `openTime`.\n"
        },
        {
          "name": "openDay",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Day of the week the period starts on."
        },
        {
          "name": "openTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Time the period starts in 24-hour [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) extended format. Valid values are `00:00` to `24:00`, where `24:00` represents\nmidnight at the end of the specified day."
        }
      ],
      "docs": {
        "description": [
          "Weekly recurring time periods when the business is regularly open or the service is available."
        ]
      }
    },
    {
      "name": "Translation",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The application definition ID; this only applies to services of type ThirdPartyApps."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The instance ID of the service."
        },
        {
          "name": "serviceType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The service type."
        }
      ],
      "docs": {
        "description": [
          "A single mapping from the MetaSite ID to a particular service."
        ]
      }
    },
    {
      "name": "UpdateBusinessContactRequest",
      "members": [
        {
          "name": "businessContact",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.BusinessContactData"
            }
          ],
          "doc": "The site's business contact information."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The properties of `businessContact` to be updated. Properties not explicitly specified here are ignored. Properties included here but excluded from `businessContact` are cleared."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBusinessContactResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBusinessProfileRequest",
      "members": [
        {
          "name": "businessProfile",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.BusinessProfileData"
            }
          ],
          "doc": "The site's business profile."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The properties of `businessProfile` to be updated. Properties not explicitly specified here are ignored. Properties included here but excluded from `businessProfile` are cleared."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBusinessProfileResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBusinessScheduleRequest",
      "members": [
        {
          "name": "businessSchedule",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.BusinessSchedule"
            }
          ],
          "doc": "The site's business schedule in the site time zone."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBusinessScheduleResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateConsentPolicyRequest",
      "members": [
        {
          "name": "consentPolicy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.ConsentPolicy"
            }
          ],
          "doc": "Default consent policy defined by the site owner. Can be further limited by site visitors."
        }
      ],
      "docs": {
        "description": [
          "The request used to update site's default consent policy"
        ]
      }
    },
    {
      "name": "UpdateConsentPolicyResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The properties to be updated. Properties not explicitly specified here are ignored. Properties included here but excluded from `properties` are cleared."
        },
        {
          "name": "properties",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-business-tools-v2.SiteProperties.Properties"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
