{
  "name": "Cards",
  "memberOf": "wix-workflows-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-workflows.v2-card",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "archiveCard",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to archive.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Archives a workflow card.",
        "description": [
          "The `archiveCard()` function returns a Promise that resolves when the card has been archived.\n\n\nThis function requires you to specify the ID of a card. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "archiveCard example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function archiveCard(id) {",
              "   try {",
              "     const result = await cards.archiveCard(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "archiveCard"
    },
    {
      "name": "createCard",
      "params": [
        {
          "name": "identifiers",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.CreateCardIdentifiers"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.CreateCardOptions"
            }
          ],
          "doc": "Options to use when creating a card.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "identifiers",
        "identifiers.phaseId",
        "identifiers.workflowId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-workflows-v2.Cards.CreateCardResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a new workflow card.",
        "description": [
          "The `createCard()` function returns a Promise that resolves to the created card's ID when the card is created in the specified workflow phase.\n\nPass a value for the `position` parameter to specify the newly created card's position within the specified phase. Positions are zero-based, meaning the first position is `0`.\n\nWhen omitted, the newly created card is added to the specified phase as the top card within the phase.\n\n\nThis function requires you to specify the ID of a workflow and phase. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\n > **Note:**\n > Each workflow is limited to 5,000 cards.\n > If this limit is reached, `createCard()` throws an error.\n > [Archive cards](#archivecard) when they're no longer needed\n > to reduce card count and avoid hitting the limit.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "createCard example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function createCard(identifiers, options) {",
              "   try {",
              "     const result = await cards.createCard(identifiers, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "createCard"
    },
    {
      "name": "deleteCard",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a workflow card by ID.",
        "description": [
          "The `deleteCard()` function returns a Promise when the specified card has been deleted.\n\nThis function requires you to specify the ID of a card. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "deleteCard example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function deleteCard(id) {",
              "   try {",
              "     const result = await cards.deleteCard(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "deleteCard"
    },
    {
      "name": "getCard",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-workflows-v2.Cards.GetCardResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a workflow card by ID.",
        "description": [
          "The `getCard()` function returns a Promise that resolves to the card with the specified ID.\n\n\nThis function requires you to specify the ID of a card. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "getCard example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function getCard(id) {",
              "   try {",
              "     const result = await cards.getCard(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getCard"
    },
    {
      "name": "listCards",
      "params": [
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow whose cards will be listed.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.ListCardsOptions"
            }
          ],
          "doc": "Options to use when retrieving the list of cards.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "workflowId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-workflows-v2.Cards.ListCardsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of a workflow's cards.",
        "description": [
          "The `listCards()` function returns a Promise that resolves to a list of the specified workflow's cards.\n\n\nUse the `options` parameter to specify which cards to retrieve and in which order to retrieve them. Must use either `phaseId` or `fetchOnlyArchived`.\n\n\nCards can be sorted based on their `\"id\"`, `\"name\"`, `\"phaseId\"`, `\"createdDate\"`, `\"updatedDate\"`, `\"source\"`, and `\"position\"`.\n\n\nIf no `limit` parameter is passed, the first 50 cards are returned.\n\n\nSort order defaults to by `\"phaseId\"` and then by `\"position\"` ascending.\n\n\nThis function requires you to specify the ID of a workflow. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "listCards example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function listCards(workflowId, options) {",
              "   try {",
              "     const result = await cards.listCards(workflowId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listCards"
    },
    {
      "name": "moveCard",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to move.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.MoveCardOptions"
            }
          ],
          "doc": "Information about where to move the card.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Moves a card to a new position within a workflow.",
        "description": [
          "The `moveCard()` function returns a Promise when the specified card has been moved to the new position.\n\nUse the `options` parameter to specify the phase and position within that phase to move the card to. Positions are zero-based, meaning the first position is `0`.\n\nThis function requires you to specify the ID of a card. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "moveCard example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function moveCard(id, options) {",
              "   try {",
              "     const result = await cards.moveCard(id, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "moveCard"
    },
    {
      "name": "queryCards",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.QueryCardsOptions"
            }
          ],
          "doc": "Options to use when querying a card.\n",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-workflows-v2.Cards.QueryCardsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "The `queryCards()` function builds a query to retrieve a list of contacts and returns a `CardsQueryBuilder` object.",
        "description": [
          "The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n\nYou can refine the query by chaining `CardsQueryBuilder` functions onto the query. `CardsQueryBuilder` functions enable you to control the results `queryCards()` returns.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "queryCards example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function queryCards(options) {",
              "   try {",
              "     const result = await cards.queryCards(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryCards"
    },
    {
      "name": "restoreCard",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to restore.",
          "required": true
        },
        {
          "name": "newPhaseId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to restore the card to.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.RestoreCardOptions"
            }
          ],
          "doc": "Options to use when restoring a card.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "_id",
        "newPhaseId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Restores an archived workflow card.",
        "description": [
          "The `restoreCard()` function returns a Promise that resolves when the archived card has been restored.\n\n\nThis function requires you to specify the ID of a card. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\n\n> **Note:**\n> Each workflow is limited to 5,000 cards.\n> If this limit is reached, `createCard()` throws an error.\n> [Archive cards](#archivecard) when they're no longer needed\n> to reduce card count and avoid hitting the limit.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "restoreCard example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function restoreCard(id, newPhaseId, options) {",
              "   try {",
              "     const result = await cards.restoreCard(id, newPhaseId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "restoreCard"
    },
    {
      "name": "updateCard",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to update.",
          "required": true
        },
        {
          "name": "cardInfo",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.CardInfo"
            }
          ],
          "doc": "Card details.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "cardInfo"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates an existing workflow card.",
        "description": [
          "The `updateCard()` function returns a Promise that resolves when the card has been updated with the specified values.\n\n\n`contactId` is not a required field, but if the parameter is not passed, the field will default to empty and the card will not be associated with any contact.\n\n\nThis function requires you to specify the ID of a card. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "updateCard example",
            "body": [
              "import { cards } from 'wix-workflows.v2';",
              "  ",
              " async function updateCard(id, cardInfo, options) {",
              "   try {",
              "     const result = await cards.updateCard(id, cardInfo, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "updateCard"
    }
  ],
  "messages": [
    {
      "name": "ArchiveCardRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to archive."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ArchiveCardResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Attachment",
      "members": [
        {
          "name": "attachmentId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Attachment ID. For internal use."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact attached to the card."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Card",
      "members": [
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.CardInfo"
            }
          ],
          "doc": "Card details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CardInfo",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the card was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Card ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the card was updated."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Card description."
        },
        {
          "name": "dueDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Due date."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Display name shown at the top of the card."
        },
        {
          "name": "phaseId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase that currently holds the card."
        },
        {
          "name": "primaryAttachment",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.Attachment"
            }
          ],
          "doc": "Details about the contact attached to the card."
        },
        {
          "name": "source",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the app or service that created the contact."
        }
      ],
      "docs": {
        "description": [
          "entity representing a card-info"
        ]
      }
    },
    {
      "name": "CreateCardIdentifiers",
      "members": [
        {
          "name": "phaseId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to create the card in."
        },
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow to create the card in."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateCardOptions",
      "members": [
        {
          "name": "card",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.CardInfo"
            }
          ],
          "doc": "Card details."
        },
        {
          "name": "position",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Card position, where the first card is `0`.\n\nIf a card already occupies the specified position,\nthat card and any subsequent cards are shifted to the right by 1.\n\nDefaults to the last position.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateCardRequest",
      "members": [
        {
          "name": "card",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.CardInfo"
            }
          ],
          "doc": "Card details."
        },
        {
          "name": "phaseId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to create the card in."
        },
        {
          "name": "position",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Card position, where the first card is `0`.\n\nIf a card already occupies the specified position,\nthat card and any subsequent cards are shifted to the right by 1.\n\nDefaults to the last position.\n"
        },
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow to create the card in."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateCardResponse",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the newly created card."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCardRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCardResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCardRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCardResponse",
      "members": [
        {
          "name": "card",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.Card"
            }
          ],
          "doc": "Requested card."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCardsOptions",
      "members": [
        {
          "name": "attachmentValue",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Filters for cards with the specified contact ID."
        },
        {
          "name": "fetchArchived",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Filters for archived cards.\nIf set to `true`,\nonly archived cards are returned.\nIf set to `false`,\nonly cards that are not archived are returned.\n\nDefaults to `false`.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to return.\n\nDefaults to `50`.\n"
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order.\n\nDefaults to `0`.\n"
        },
        {
          "name": "phaseId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Filters for cards in the specified phase."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported fields:\n`id`, `name`, `createdDate`, `updatedDate`, `phaseId`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCardsRequest",
      "members": [
        {
          "name": "attachmentValue",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Filters for cards with the specified contact ID."
        },
        {
          "name": "fetchArchived",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Filters for archived cards.\nIf set to `true`,\nonly archived cards are returned.\nIf set to `false`,\nonly cards that are not archived are returned.\n\nDefaults to `false`.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to return.\n\nDefaults to `50`.\n"
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order.\n\nDefaults to `0`.\n"
        },
        {
          "name": "phaseId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Filters for cards in the specified phase."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported fields:\n`id`, `name`, `createdDate`, `updatedDate`, `phaseId`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n"
        },
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow whose cards will be listed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCardsResponse",
      "members": [
        {
          "name": "cards",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-workflows-v2.Cards.Card"
                  }
                ]
              }
            }
          ],
          "doc": "List of cards."
        },
        {
          "name": "pagination",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.PaginationResponse"
            }
          ],
          "doc": "Metadata for the page of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MoveCardOptions",
      "members": [
        {
          "name": "newPhaseId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to move the card to."
        },
        {
          "name": "newPosition",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Position of the card in the phase, where the first card is `0`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MoveCardRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to move."
        },
        {
          "name": "newPhaseId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to move the card to."
        },
        {
          "name": "newPosition",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Position of the card in the phase, where the first card is `0`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MoveCardResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PaginationResponse",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of returned items."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were skipped in the current sort order."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that matched the filter."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-workflows-v2.Cards.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCardsOptions",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.Query"
            }
          ],
          "doc": "Query, sort, and paging options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCardsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.Query"
            }
          ],
          "doc": "Query, sort, and paging options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCardsResponse",
      "members": [
        {
          "name": "cards",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-workflows-v2.Cards.Card"
                  }
                ]
              }
            }
          ],
          "doc": "List of cards that matched the query criteria."
        },
        {
          "name": "pagination",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.PaginationResponse"
            }
          ],
          "doc": "Metadata for the page of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RestoreCardOptions",
      "members": [
        {
          "name": "newPosition",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Position of the restored card in the phase,\nwhere the first card is `0`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RestoreCardRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to restore."
        },
        {
          "name": "newPhaseId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to restore the card to."
        },
        {
          "name": "newPosition",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Position of the restored card in the phase,\nwhere the first card is `0`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RestoreCardResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateCardOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateCardRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the card to update."
        },
        {
          "name": "cardInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Cards.CardInfo"
            }
          ],
          "doc": "Card details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateCardResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
