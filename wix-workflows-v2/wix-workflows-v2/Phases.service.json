{
  "name": "Phases",
  "memberOf": "wix-workflows-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-workflows.v2-phase",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createPhase",
      "params": [
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow to create the phase in.",
          "required": true
        },
        {
          "name": "phase",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.PhaseInfo"
            }
          ],
          "doc": "Phase details.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.CreatePhaseOptions"
            }
          ],
          "doc": "Options to use when creating workflow phases.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "phase",
        "phase.name",
        "workflowId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-workflows-v2.Phases.CreatePhaseResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a new workflow phase.",
        "description": [
          "The `createPhase()` function returns a Promise that resolves to the created phase ID when the phase is created in the specified workflow.\n\n\nPass a value for the `position` parameter to specify the newly created phase's position within the specified workflow. Positions are zero-based, meaning the first position is `0`.\n\n\nWhen omitted, the newly created phase is added as the last non-win phase.\n\n\nThis function requires you to specify the ID of a workflow. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "createPhase example",
            "body": [
              "import { phases } from 'wix-workflows.v2';",
              "  ",
              " async function createPhase(workflowId, phase, options) {",
              "   try {",
              "     const result = await phases.createPhase(workflowId, phase, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "createPhase"
    },
    {
      "name": "deletePhase",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a workflow phase.",
        "description": [
          "The `deletePhase()` function returns a Promise when the specified phase has been deleted.\n\n\nThis function requires you to specify the ID of a phase. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "deletePhase example",
            "body": [
              "import { phases } from 'wix-workflows.v2';",
              "  ",
              " async function deletePhase(id) {",
              "   try {",
              "     const result = await phases.deletePhase(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "deletePhase"
    },
    {
      "name": "getPhase",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-workflows-v2.Phases.GetPhaseResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a phase by ID.",
        "description": [
          "The `getPhase()` function returns a Promise that resolves to the phase with the specified ID.\n\nThis function requires you to specify the ID of a phase. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "getPhase example",
            "body": [
              "import { phases } from 'wix-workflows.v2';",
              "  ",
              " async function getPhase(id) {",
              "   try {",
              "     const result = await phases.getPhase(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getPhase"
    },
    {
      "name": "listPhases",
      "params": [
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow whose phases will be listed.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.ListPhasesOptions"
            }
          ],
          "doc": "Options to use when retrieving the list of workflow phases.\n",
          "required": false
        }
      ],
      "requiredFields": [
        "workflowId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-workflows-v2.Phases.ListPhasesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of a workflow's phases.",
        "description": [
          "The `listPhases()` function returns a Promise that resolves to a list containing information about the specified workflow's phases.\n\n\nUse the `options` parameter to specify which phases to retrieve and in which order to retrieve them. Phases can be sorted based on their `\"id\"`, `\"name\"`, and `\"position\"`. If no `limit` parameter is passed, the first 50 cards are returned. Sort order defaults to by `\"position\"` ascending.\n\n\nThis function requires you to specify the ID of a workflow. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "listPhases example",
            "body": [
              "import { phases } from 'wix-workflows.v2';",
              "  ",
              " async function listPhases(workflowId, options) {",
              "   try {",
              "     const result = await phases.listPhases(workflowId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listPhases"
    },
    {
      "name": "movePhase",
      "params": [
        {
          "name": "identifiers",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.MovePhaseIdentifiers"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "newPosition",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "New phase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.",
          "required": true
        }
      ],
      "requiredFields": [
        "identifiers",
        "identifiers.id",
        "identifiers.workflowId",
        "newPosition"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Moves a phase to a new position with a workflow.",
        "description": [
          "The `movePhase()` function returns a Promise when the specified phase has been moved to the new position.\n\n\nUse the `newPosition` parameter to specify the new phase position within the workflow. Any non-win phase can be moved to any non-win position. The win phase cannot be moved. Positions are zero-based, meaning the first position is `0`.\n\n\nThis function requires you to specify the ID of a phase. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "movePhase example",
            "body": [
              "import { phases } from 'wix-workflows.v2';",
              "  ",
              " async function movePhase(identifiers, newPosition) {",
              "   try {",
              "     const result = await phases.movePhase(identifiers, newPosition);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "movePhase"
    },
    {
      "name": "updatePhase",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to update.",
          "required": true
        },
        {
          "name": "phase",
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.PhaseInfo"
            }
          ],
          "doc": "Phase details to update.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "phase"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates an existing workflow phase.",
        "description": [
          "The `updatePhase()` function returns a Promise that resolves when the phase has been updated with the specified values.\n\n\nOnly the properties passed in the `phase` object will be updated. All other properties will remain the same.\n\n\nThis function requires you to specify the ID of a phase. To learn about retrieving IDs in the Workflows APIs, see [Retrieving IDs](wix-workflows-v2/introduction#retrieving-ids).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "updatePhase example",
            "body": [
              "import { phases } from 'wix-workflows.v2';",
              "  ",
              " async function updatePhase(id, phase) {",
              "   try {",
              "     const result = await phases.updatePhase(id, phase);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "updatePhase"
    }
  ],
  "messages": [
    {
      "name": "Attachment",
      "members": [
        {
          "name": "attachmentId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Attachment ID. For internal use."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the contact attached to the card."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Card",
      "members": [
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.CardInfo"
            }
          ],
          "doc": "Card details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CardInfo",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the card was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Card ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the card was updated."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Card description."
        },
        {
          "name": "dueDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Due date."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Display name shown at the top of the card."
        },
        {
          "name": "phaseId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase that currently holds the card."
        },
        {
          "name": "primaryAttachment",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.Attachment"
            }
          ],
          "doc": "Details about the contact attached to the card."
        },
        {
          "name": "source",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the app or service that created the contact."
        }
      ],
      "docs": {
        "description": [
          "entity representing a card-info"
        ]
      }
    },
    {
      "name": "CardsList",
      "members": [
        {
          "name": "cards",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-workflows-v2.Phases.Card"
                  }
                ]
              }
            }
          ],
          "doc": "List of cards in the phase.\nSorted according to the card display order, from top to bottom."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of cards in the phase."
        }
      ],
      "docs": {
        "description": [
          "a list of cards (a page) along with the total number"
        ]
      }
    },
    {
      "name": "CreatePhaseOptions",
      "members": [
        {
          "name": "position",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Phase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n\nDefaults to the last position,\nwhich is displayed before the win phase.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreatePhaseRequest",
      "members": [
        {
          "name": "phase",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.PhaseInfo"
            }
          ],
          "doc": "Phase details."
        },
        {
          "name": "position",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Phase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n\nDefaults to the last position,\nwhich is displayed before the win phase.\n"
        },
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow to create the phase in."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreatePhaseResponse",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the newly created phase."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeletePhaseRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeletePhaseResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetPhaseRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetPhaseResponse",
      "members": [
        {
          "name": "phase",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.Phase"
            }
          ],
          "doc": "Requested phase."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListPhasesOptions",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to return."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order.\n\nDefaults to `0`.\n"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported fields:\n`id`, `name`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListPhasesRequest",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to return."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order.\n\nDefaults to `0`.\n"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Supported fields:\n`id`, `name`\n\nList of fields to sort by.\nFormatted as `field:direction`,\nwhere field is the field name\nand direction is `asc` (ascending) or `desc` (descending).\n\nSorting is applied lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n"
        },
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow whose phases will be listed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListPhasesResponse",
      "members": [
        {
          "name": "pagination",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.PaginationResponse"
            }
          ],
          "doc": "Metadata for the page of results."
        },
        {
          "name": "phases",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-workflows-v2.Phases.Phase"
                  }
                ]
              }
            }
          ],
          "doc": "List of phases."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MovePhaseIdentifiers",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to move."
        },
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow that contains the phase to move."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MovePhaseRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to move."
        },
        {
          "name": "newPosition",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "New phase position, where the first phase is `0`.\n\nIf a phase already occupies the specified position,\nthat phase and any subsequent phases\nare shifted to the right by 1.\n"
        },
        {
          "name": "workflowId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the workflow that contains the phase to move."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MovePhaseResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PaginationResponse",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of returned items."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were skipped in the current sort order."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that matched the filter."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Phase",
      "members": [
        {
          "name": "cardsList",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.CardsList"
            }
          ],
          "doc": "Cards contained in the phase."
        },
        {
          "name": "info",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.PhaseInfo"
            }
          ],
          "doc": "Phase information."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PhaseInfo",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Phase ID."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Display name shown at the top of the phase."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-workflows-v2.Phases.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryPhasesOptions",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.Query"
            }
          ],
          "doc": "Query, sort, and paging options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryPhasesRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.Query"
            }
          ],
          "doc": "Query, sort, and paging options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryPhasesResponse",
      "members": [
        {
          "name": "pagination",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.PaginationResponse"
            }
          ],
          "doc": "Metadata for the page of results."
        },
        {
          "name": "phases",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-workflows-v2.Phases.Phase"
                  }
                ]
              }
            }
          ],
          "doc": "List of phases that matched the query criteria."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePhaseRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the phase to update."
        },
        {
          "name": "phase",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-workflows-v2.Phases.PhaseInfo"
            }
          ],
          "doc": "Phase details to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePhaseResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
