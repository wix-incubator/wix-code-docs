{ "name": "TimeLine",
  "memberOf": "wix-animations",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "timeline.js" },
  "docs":
    { "summary": "An animation timeline.",
      "description":
        [ "A timeline is used to compose animation sequences, built from [animations](#Animation),",
          " which are played over time. You can synchronize multiple animations on one or more page",
          " elements, control them as a whole, and precisely manage their timing." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "add",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "target",
              "type":
                [ "$w.HiddenMixin",
                  { "name": "Array",
                    "typeParams":
                      [ "$w.HiddenMixin" ] } ],
              "doc": "Page element or \n elements to animate." },
            { "name": "animation",
              "type":
                [ "wix-animations.TimeLine.Animation",
                  { "name": "Array",
                    "typeParams":
                      [ "wix-animations.TimeLine.Animation" ] } ],
              "doc": "Animation or animations to add to the timeline." },
            { "name": "offset",
              "type":
                [ "number",
                  "string" ],
              "doc": "When the animation starts in the timeline. When no\n `offset` is specified, the animation added starts after the previous animation ends. \n\n The `offset` can be relative to the last animation added or absolute within the whole\n timeline using this following formats:\n\n + A number specifying the absolute offset from the beginning of the timeline in\n   milliseconds, regardless of the animation's position in the timeline.\n + A `\"+=\"` expression to specify a relative offset in milliseconds, where the \n   animation starts the specified number of milliseconds after the previous\n   animation in the timeline ends. For example, `\"+=1000\"` starts the current\n   animation 1 second after the previous animation ends.\n + A `\"-=\"` expression to specify a relative offset in milliseconds, where the \n   animation starts the specified number of milliseconds before the previous\n   animation in the timeline ends. For example, `\"+-=1000\"` starts the current\n   animation 1 second before the previous animation ends." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the animation was added to." },
        "locations":
          [ { "lineno": 149,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Adds an animation to a timeline.",
            "description":
              [ "The `add()` function adds one or more animations on one or more page",
                " elements to a timeline. Any element that mixes in the [`HiddenMixin`]($w.HiddenMixin.html)",
                " can be added as an animation `target` in a timeline.",
                "",
                " By default, when no `offset` is specified ,the animations in a timeline run in",
                " the order they are added. When multiple animations are added using a single call",
                " to the add function, those animations default to run together at the same time",
                " within the timeline.",
                "",
                " You can override the default order that the animations run using the `offset`",
                " parameter." ],
            "links": [],
            "examples":
              [ { "title": "Add animations to a timeline one at a time",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage = $w(\"#myImage\");",
                      "",
                      "timeline.add(myImage, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "});",
                      "",
                      "timeline.add(myImage, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Add multiple animations to a timeline together",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline1 = wixAnimations.timeline();",
                      "let timeline2 = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage1 = $w(\"#myImage1\");",
                      "const myImage2 = $w(\"#myImage2\");",
                      "",
                      "// In timeline1, the rotation animation and opacity",
                      "// change animation will happen at the same time.",
                      "timeline1.add(myImage1, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  }, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  }",
                      ");",
                      "",
                      "// In timeline2, the rotation animation and opacity",
                      "// change animation will happen one after the other.",
                      "timeline2.add(myImage2, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "})",
                      "",
                      "timeline2.add(myImage2, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "})" ],
                  "extra":
                    {  } },
                { "title": "Add animations on multiple page elements together",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage1 = $w(\"#myImage1\");",
                      "const myImage2 = $w(\"#myImage2\");",
                      "const vectorImages = $w(\"VectorImage\");",
                      "",
                      "// Adds an animation for myImage1 ",
                      "// and myImage2 together",
                      "timeline2.add([myImage1, myImage2], {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "})",
                      "",
                      "// Adds an animation for all the",
                      "// vector images on the page",
                      "timeline2.add(vectorImages, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "})" ],
                  "extra":
                    {  } },
                { "title": "Add animations to a timeline and play it",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage1 = $w(\"#myImage1\");",
                      "  const myImage2 = $w(\"#myImage2\");",
                      "",
                      "  timeline.add( [myImage1, myImage2], {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.add( ",
                      "    myImage, ",
                      "    {",
                      "      \"opacity\": 0,",
                      "      \"duration\": 500",
                      "    }, ",
                      "    \"-=500\"",
                      "  );",
                      "",
                      "  timeline.play();",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onComplete",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "Function",
              "doc": "The name of the function or\n the function expression to run when the timeline completes playing." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the event handler was set on." },
        "locations":
          [ { "lineno": 294,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Sets an event handler that runs when the timeline completes playing.",
            "description":
              [ "The event handler set by calling the `onComplete()` function runs when a ",
                " timeline completes playing by reaching the end.",
                "",
                " When a timeline has been set to repeat, the event handler runs at the end",
                " of the last repetition and does not run for the preceding repetitions.",
                "",
                " If an event handler is already set for `onComplete`, setting a new event",
                " handler overrides the one set previously.  ",
                "",
                " To remove an event handler you set previously, call the `onComplete()`",
                " function and pass `null` for the `handler` parameter." ],
            "links": [],
            "examples":
              [ { "title": "Set an event handler that runs when a timeline completes",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onComplete( () => {",
                      "  // handle timeline completion",
                      "  console.log(\"Timeline has completed.\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Remove the event handler that runs when a timeline completes",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onComplete( null );" ],
                  "extra":
                    {  } },
                { "title": "Display a message when a timeline completes",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.onComplete( () => {",
                      "    $w(\"#messageText\").text = \"Timeline has completed.\";",
                      "  } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onRepeat",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "Function",
              "doc": "The name of the function or\n the function expression to run when the timeline repeats." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the event handler was set on." },
        "locations":
          [ { "lineno": 270,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Sets an event handler that runs when a the timeline repeats.",
            "description":
              [ "The event handler set by calling the `onRepeat()` function runs when a ",
                " timeline begins playing a repetition. It does not run for the initial",
                " play of the timeline. However, when replaying a timeline that has already",
                " been played, the event handler runs even for the first repetition of",
                " the timeline.",
                "",
                " If an event handler is already set for `onRepeat`, setting a new event",
                " handler overrides the one set previously.  ",
                "",
                " To remove an event handler you set previously, call the `onRepeat()`",
                " function and pass `null` for the `handler` parameter." ],
            "links": [],
            "examples":
              [ { "title": "Set an event handler that runs when a timeline repeats",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline({\"repeat\": 3});",
                      "",
                      "// ...",
                      "",
                      "timeline.onRepeat( () => {",
                      "  // handle timeline repetition",
                      "  console.log(\"Timeline is repeating.\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Remove the event handler that runs when a timeline repeats",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onRepeat( null );" ],
                  "extra":
                    {  } },
                { "title": "Display a message when a timeline repeats",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline({\"repeat\": 3});",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.onRepeat( () => {",
                      "    $w(\"#messageText\").text = \"Timeline is repeating.\";",
                      "  } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onStart",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "Function",
              "doc": "The name of the function or\n the function expression to run when the timeline starts playing." } ],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline the event handler was set on." },
        "locations":
          [ { "lineno": 238,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Sets an event handler that runs when the timeline starts playing.",
            "description":
              [ "The event handler set by calling the `onStart()` function runs when a ",
                " timeline starts playing from the beginning. ",
                "",
                " This happens when:",
                " ",
                " + The `play()` function is called on a timeline that has not been played yet.",
                " + The `replay()` function is called, regardless of the timeline state, since",
                "   it replays the timeline from its beginning.",
                "",
                " When a timeline has been set to repeat, the event handler runs at the beginning",
                " of the first repetition and does not run for each successive repetition. To set",
                " an event handler that runs when a timeline repeats, use the [`onRepeat()`](#onRepeat)",
                " function.",
                "",
                " If an event handler is already set for `onStart`, setting a new event",
                " handler overrides the one set previously.  ",
                "",
                " To remove an event handler you set previously, call the `onStart()`",
                " function and pass `null` for the `handler` parameter." ],
            "links": [],
            "examples":
              [ { "title": "Set an event handler that runs when a timeline starts",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onStart( () => {",
                      "  // handle timeline start",
                      "  console.log(\"Timeline has started.\");",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Remove the event handler that runs when a timeline starts",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.onStart( null );" ],
                  "extra":
                    {  } },
                { "title": "Display a message when a timeline starts",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.onStart( () => {",
                      "    $w(\"#messageText\").text = \"Timeline has started.\";",
                      "  } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "pause",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline to be paused." },
        "locations":
          [ { "lineno": 208,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Pauses a timeline.",
            "description":
              [ "Pauses a running timeline.",
                "",
                " Note that when a timeline is created it is paused by default at the ",
                " beginning of the timeline." ],
            "links": [],
            "examples":
              [ { "title": "Pause a timeline",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.pause();" ],
                  "extra":
                    {  } },
                { "title": "Create buttons for controlling timeline playback",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline(",
                      "  {",
                      "    \"repeat\": 3,",
                      "    \"repeatDelay\": 100,",
                      "    \"yoyo\": true",
                      "  }",
                      ");",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "",
                      "  $w(\"#pauseButton\").onClick( () => {",
                      "    timeline.pause();",
                      "  } );",
                      "",
                      "  $w(\"#replayButton\").onClick( () => {",
                      "    timeline.replay();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "play",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline to be played." },
        "locations":
          [ { "lineno": 192,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Plays a timeline.",
            "description":
              [ "Plays a paused timeline from the point it was paused and sets the",
                " [`hidden`]($w.HiddenMixin.html#hidden) property of the animated",
                " elements to `false`. ",
                "",
                " Note that when a timeline is created it is paused by default at the ",
                " beginning of the timeline." ],
            "links": [],
            "examples":
              [ { "title": "Play a timeline",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.play();" ],
                  "extra":
                    {  } },
                { "title": "Create buttons for controlling timeline playback",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline(",
                      "  {",
                      "    \"repeat\": 3,",
                      "    \"repeatDelay\": 100,",
                      "    \"yoyo\": true",
                      "  }",
                      ");",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "",
                      "  $w(\"#pauseButton\").onClick( () => {",
                      "    timeline.pause();",
                      "  } );",
                      "",
                      "  $w(\"#replayButton\").onClick( () => {",
                      "    timeline.replay();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "replay",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-animations.TimeLine",
            "doc": "The timeline to be replayed." },
        "locations":
          [ { "lineno": 222,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "Replays a timeline.",
            "description":
              [ "Replaying restarts the play of a paused or playing timeline from the ",
                " beginning of the timeline and sets the [`hidden`]($w.HiddenMixin.html#hidden)",
                " property of the animated elements to `false`. ",
                "",
                " Note that when a timeline is created it is paused by default at the ",
                " beginning of the timeline." ],
            "links": [],
            "examples":
              [ { "title": "Replays a timeline",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "timeline.play();" ],
                  "extra":
                    {  } },
                { "title": "Create buttons for controlling timeline playback",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline(",
                      "  {",
                      "    \"repeat\": 3,",
                      "    \"repeatDelay\": 100,",
                      "    \"yoyo\": true",
                      "  }",
                      ");",
                      "",
                      "$w.onReady( function () {",
                      "  const myImage = $w(\"#myImage\");",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  timeline.add( myImage, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  } );",
                      "",
                      "  $w(\"#playButton\").onClick( () => {",
                      "    timeline.play();",
                      "  } );",
                      "",
                      "  $w(\"#pauseButton\").onClick( () => {",
                      "    timeline.pause();",
                      "  } );",
                      "",
                      "  $w(\"#replayButton\").onClick( () => {",
                      "    timeline.replay();",
                      "  } );",
                      "} );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Animation",
        "locations":
          [ { "lineno": 11,
              "filename": "timeline.js" } ],
        "docs":
          { "summary": "An object representing a single animation from an animation timeline.",
            "links":
              [ "[add( )](#add)" ],
            "examples":
              [ { "title": "Add animations to a timeline one at a time",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage = $w(\"#myImage\");",
                      "",
                      "timeline.add(myImage, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "});",
                      "",
                      "timeline.add(myImage, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "});" ],
                  "extra":
                    {  } },
                { "title": "Add multiple animations to a timeline together",
                  "body":
                    [ "import wixAnimations from 'wix-animations';",
                      "",
                      "let timeline1 = wixAnimations.timeline();",
                      "let timeline2 = wixAnimations.timeline();",
                      "",
                      "// ...",
                      "",
                      "const myImage1 = $w(\"#myImage1\");",
                      "const myImage2 = $w(\"#myImage2\");",
                      "",
                      "// In timeline1, the rotation animation and opacity",
                      "// change animation will happen at the same time.",
                      "timeline1.add(myImage1, {",
                      "    \"rotate\": 360,",
                      "    \"scale\": .5,",
                      "    \"duration\": 1000",
                      "  }, {",
                      "    \"opacity\": 0,",
                      "    \"duration\": 1000",
                      "  }",
                      ");",
                      "",
                      "// In timeline2, the rotation animation and opacity",
                      "// change animation will happen one after the other.",
                      "timeline2.add(myImage2, {",
                      "  \"rotate\": 360,",
                      "  \"scale\": .5,",
                      "  \"duration\": 1000",
                      "})",
                      "",
                      "timeline2.add(myImage2, {",
                      "  \"opacity\": 0,",
                      "  \"duration\": 1000",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "duration",
              "type": "number",
              "doc": "Animation duration in milliseconds." },
            { "name": "delay",
              "type": "number",
              "doc": "Number of milliseconds to delay before beginning the animation.",
              "optional": true },
            { "name": "easing",
              "type": "string",
              "doc": "The animation motion acceleration or deceleration. Specifies \nthe rate of change of the animation parameters over time.\n\n One of:\n \n + `\"easeInSine\"`\n   ![Ease In Sine](images/easeInSine.png \"Ease In Sine\")\n + `\"easeOutSine\"`\n   ![Ease Out Sine](images/easeOutSine.png \"Ease Out Sine\")\n + `\"easeInOutSine\"`\n   ![Ease In-Out Sine](images/easeInOutSine.png \"Ease In-Out Sine\")\n + `\"easeInQuad\"`\n   ![Ease In Quad](images/easeInQuad.png \"Ease In Quad\")\n + `\"easeOutQuad\"`\n   ![Ease Out Quad](images/easeOutQuad.png \"Ease Out Quad\")\n + `\"easeInOutQuad\"`\n   ![Ease In-Out Quad](images/easeInOutQuad.png \"Ease In-Out Quad\")\n + `\"easeInCubic\"`\n   ![Ease In Cubic](images/easeInCubic.png \"Ease In Cubic\")\n + `\"easeOutCubic\"`\n   ![Ease Out Cubic](images/easeOutCubic.png \"Ease Out Cubic\")\n + `\"easeInOutCubic\"`\n   ![Ease In-Out Cubic](images/easeInOutCubic.png \"Ease In-Out Cubic\")\n + `\"easeInQuart\"`\n   ![Ease In Quart](images/easeInQuart.png \"Ease In Quart\")\n + `\"easeOutQuart\"`\n   ![Ease Out Quart](images/easeOutQuart.png \"Ease Out Quart\")\n + `\"easeInOutQuart\"`\n   ![Ease In-Out Quart](images/easeInOutQuart.png \"Ease In-Out Quart\")\n + `\"easeInQuint\"`\n   ![Ease In Quint](images/easeInQuint.png \"Ease In Quint\")\n + `\"easeOutQuint\"`\n   ![Ease Out Quint](images/easeOutQuint.png \"Ease Out Quint\")\n + `\"easeInOutQuint\"`\n   ![Ease In-Out Quint](images/easeInOutQuint.png \"Ease In-Out Quint\")\n + `\"easeInExpo\"`\n   ![Ease In Expo](images/easeInExpo.png \"Ease In Expo\")\n + `\"easeOutExpo\"`\n   ![Ease Out Expo](images/easeOutExpo.png \"Ease Out Expo\")\n + `\"easeInOutExpo\"`\n   ![Ease In-Out Expo](images/easeInOutExpo.png \"Ease In-Out Expo\")\n + `\"easeInCirc\"`\n   ![Ease In Circ](images/easeInCirc.png \"Ease In Circ\")\n + `\"easeOutCirc\"`\n   ![Ease Out Circ](images/easeOutCirc.png \"Ease Out Circ\")\n + `\"easeInOutCirc\"`\n   ![Ease In-Out Circ](images/easeInOutCirc.png \"Ease In-Out Circ\")\n + `\"easeInBack\"`\n   ![Ease In Back](images/easeInBack.png \"Ease In Back\")\n + `\"easeOutBack\"`\n   ![Ease Out Back](images/easeOutBack.png \"Ease Out Back\")\n + `\"easeInOutBack\"`\n   ![Ease In-Out Back](images/easeInOutBack.png \"Ease In-Out Back\")\n + `\"easeInElastic\"`\n   ![Ease In Elastic](images/easeInElastic.png \"Ease In Elastic\")\n + `\"easeOutElastic\"`\n   ![Ease Out Elastic](images/easeOutElastic.png \"Ease Out Elastic\")\n + `\"easeInOutElastic\"`\n   ![Ease In-Out Elastic](images/easeInOutElastic.png \"Ease In-Out Elastic\")\n + `\"easeInBounce\"`\n   ![Ease In Bounce](images/easeInBounce.png \"Ease In Bounce\")\n + `\"easeOutBounce\"`\n   ![Ease Out Bounce](images/easeOutBounce.png \"Ease Out Bounce\") \n + `\"easeInOutBounce\"`\n   ![Ease In-Out Bounce](images/easeInOutBounce.png \"Ease In-Out Bounce\")\n + `\"easeLinear\"`\n   ![Ease Linear](images/easeLinear.png \"Ease Linear\")\n\n\n Defaults to `\"easeInSine\"`;",
              "optional": true },
            { "name": "opacity",
              "type": "number",
              "doc": "Target opacity of the animated element or elements.",
              "optional": true },
            { "name": "rotate",
              "type": "number",
              "doc": "Number of degrees to rotate, where a complete rotation\n is 360 degrees. \n\n For example, if `rotate` is `540`, the animated element or elements will rotate\n one and a half rotations.",
              "optional": true },
            { "name": "rotateDirection",
              "type": "string",
              "doc": "Direction in which to rotate.\n Either `\"cw\"` to rotate clockwise or `\"ccw\"` to rotate counterclockwise.\n\n Defaults to `\"cw\"`.",
              "optional": true },
            { "name": "scale",
              "type": "number",
              "doc": "Target scale of the animated element or elements, where\n `1` is the original size.\n\n For example, if `scale` is `.5`, the animated element or elements will shrink to\n half their original sizes and if `scale` is `2`, the animated element or elements\n will grow to double their original sizes.",
              "optional": true },
            { "name": "scaleX",
              "type": "number",
              "doc": "Target horizontal scale of the animated element or elements.\n\n If a `scale` value is set, also setting a `scaleX` value overrides the horizontal\n scaling set use `scale`.",
              "optional": true },
            { "name": "scaleY",
              "type": "number",
              "doc": "Target vertical scale of the animated element or elements.\n\n If a `scale` value is set, also setting a `scaleY` value overrides the vertical\n scaling set use `scale`.",
              "optional": true },
            { "name": "x",
              "type":
                [ "number",
                  "string" ],
              "doc": "Horizontal pixel target to move the element or elements \n to horizontally.\n\n One of the following formats:  \n\n + A positive number to specify a target pixel to the right, relative to the\n   original position.\n + A negative number to specify a target pixel to the left, relative to the\n   original position.\n + A `\"+=\"` expression to specify a target pixel to the right, relative to the\n   last animated position. For example, \"+=100\" moves 100 pixels to the right\n   of wherever the element or elements are positioned when this specific animation\n   begins.\n + A `\"-=\"` expression to specify a target pixel to the left, relative to the\n   last animated position. For example, \"-=100\" moves 100 pixels to the left\n   of wherever the element or elements are positioned when this specific animation\n   begins.",
              "optional": true },
            { "name": "y",
              "type":
                [ "number",
                  "string" ],
              "doc": "Vertical pixel target to move the element or elements \n to vertically.\n\n One of the following formats:\n\n + A positive number to specify a target pixel down, relative to the\n   original position.\n + A negative number to specify a target pixel up, relative to the\n   original position.\n + A `\"+=\"` expression to specify a target pixel down, relative to the\n   last animated position. For example, \"+=100\" moves 100 pixels down\n   from wherever the element or elements are positioned when this specific animation\n   begins.\n + A `\"-=\"` expression to specify a target pixel up, relative to the\n   last animated position.For example, \"-=100\" moves 100 pixels up\n   from wherever the element or elements are positioned when this specific animation\n   begins.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] } ],
  "extra":
    {  } }