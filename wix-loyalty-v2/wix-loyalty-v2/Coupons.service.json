{
  "name": "Coupons",
  "memberOf": "wix-loyalty-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-loyalty.v2-coupon",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "deleteLoyaltyCoupon",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the loyalty coupon to delete.",
          "required": true
        },
        {
          "name": "revision",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the loyalty coupon is updated.\n\nTo prevent conflicting changes, the current `revision`` must be passed when updating the loyalty coupon.",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a loyalty coupon.",
        "description": [
          "The deletion of a loyalty coupon does not impact the functionality of the corresponding coupon itself."
        ],
        "examples": [
          {
            "title": "deleteLoyaltyCoupon example",
            "body": [
              "import { coupons } from 'wix-loyalty.v2';",
              "  ",
              " async function deleteLoyaltyCoupon(id, revision) {",
              "   try {",
              "     const result = await coupons.deleteLoyaltyCoupon(id, revision);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteLoyaltyCoupon"
    },
    {
      "name": "getCurrentMemberCoupons",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Coupons.GetCurrentMemberCouponsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves the loyalty coupons for the currently logged-in member.",
        "description": [],
        "examples": [
          {
            "title": "getCurrentMemberCoupons example",
            "body": [
              "import { coupons } from 'wix-loyalty.v2';",
              "  ",
              " async function getCurrentMemberCoupons() {",
              "   try {",
              "     const result = await coupons.getCurrentMemberCoupons();",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getCurrentMemberCoupons"
    },
    {
      "name": "getLoyaltyCoupon",
      "params": [
        {
          "name": "loyaltyCouponId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the loyalty coupon to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "loyaltyCouponId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Coupons.GetLoyaltyCouponResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a loyalty coupon.",
        "description": [],
        "examples": [
          {
            "title": "getLoyaltyCoupon example",
            "body": [
              "import { coupons } from 'wix-loyalty.v2';",
              "  ",
              " async function getLoyaltyCoupon(loyaltyCouponId) {",
              "   try {",
              "     const result = await coupons.getLoyaltyCoupon(loyaltyCouponId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getLoyaltyCoupon"
    },
    {
      "name": "queryLoyaltyCoupons",
      "params": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.QueryV2"
            }
          ],
          "doc": "WQL expression",
          "required": true
        }
      ],
      "requiredFields": [
        "query"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Coupons.QueryLoyaltyCouponResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of loyalty coupons, given the provided paging, filtering, and sorting.",
        "description": [],
        "examples": [
          {
            "title": "queryLoyaltyCoupons example",
            "body": [
              "import { coupons } from 'wix-loyalty.v2';",
              "  ",
              " async function queryLoyaltyCoupons(query) {",
              "   try {",
              "     const result = await coupons.queryLoyaltyCoupons(query);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryLoyaltyCoupons"
    },
    {
      "name": "redeemCurrentMemberPointsForCoupon",
      "params": [
        {
          "name": "rewardId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem.",
          "required": true
        }
      ],
      "requiredFields": [
        "rewardId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Coupons.RedeemCurrentMemberPointsForCouponResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Redeems a current customer's loyalty points for a loyalty reward and creates a loyalty coupon.",
        "description": [
          "Creating a loyalty coupon also creates a corresponding \"reference\" coupon with the [Coupons API](https://dev.wix.com/api/rest/coupons/about-wix-coupons).\nThe customer receives the reference coupon, which they can apply to their order. The loyalty coupon and its corresponding reference coupon\nare linked and the loyalty coupon's `status` reflects the current state of the reference coupon.\n\nCheck which loyalty rewards a site has available with [List Rewards](https://dev.wix.com/api/rest/wix-loyalty-program/rewards/list-rewards)."
        ],
        "examples": [
          {
            "title": "redeemCurrentMemberPointsForCoupon example",
            "body": [
              "import { coupons } from 'wix-loyalty.v2';",
              "  ",
              " async function redeemCurrentMemberPointsForCoupon(rewardId) {",
              "   try {",
              "     const result = await coupons.redeemCurrentMemberPointsForCoupon(rewardId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "redeemCurrentMemberPointsForCoupon"
    },
    {
      "name": "redeemPointsForCoupon",
      "params": [
        {
          "name": "rewardId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.RedeemPointsForCouponOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "options",
        "options.loyaltyAccountId",
        "rewardId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Coupons.RedeemPointsForCouponResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Redeems a customer's loyalty points for a loyalty reward and creates a loyalty coupon.",
        "description": [
          "Creating a loyalty coupon also creates a corresponding \"reference\" coupon with the [Coupons API](https://dev.wix.com/api/rest/coupons/about-wix-coupons).\nThe customer receives the reference coupon, which they can apply to their order. The loyalty coupon and its corresponding reference coupon\nare linked and the loyalty coupon's `status` reflects the current state of the reference coupon.\n\nCheck which loyalty rewards a site has available with [List Rewards](https://dev.wix.com/api/rest/wix-loyalty-program/rewards/list-rewards)."
        ],
        "examples": [
          {
            "title": "redeemPointsForCoupon example",
            "body": [
              "import { coupons } from 'wix-loyalty.v2';",
              "  ",
              " async function redeemPointsForCoupon(rewardId, options) {",
              "   try {",
              "     const result = await coupons.redeemPointsForCoupon(rewardId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "redeemPointsForCoupon"
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BuyXGetY",
      "members": [
        {
          "name": "x",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of purchased items required to receive free items."
        },
        {
          "name": "y",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items received for free if required number of items were purchased."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CouponReference",
      "members": [
        {
          "name": "code",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Coupon code.\n\nUnique code entered by a customer to apply the coupon.\n\nMax: 20 characters"
        },
        {
          "name": "couponId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Coupon ID."
        },
        {
          "name": "deleted",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the loyalty coupon is deleted."
        },
        {
          "name": "name",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of coupon.\n\nMax: 80 characters"
        },
        {
          "name": "specification",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.Specification"
            }
          ],
          "doc": "The information to use when creating the coupon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteLoyaltyCouponRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the loyalty coupon to delete."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the loyalty coupon is updated.\n\nTo prevent conflicting changes, the current `revision`` must be passed when updating the loyalty coupon.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteLoyaltyCouponResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "extendedFieldsUpdatedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFieldsUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCurrentMemberCouponsRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCurrentMemberCouponsResponse",
      "members": [
        {
          "name": "loyaltyCoupons",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Coupons.LoyaltyCoupon"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved loyalty coupons."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLoyaltyCouponRequest",
      "members": [
        {
          "name": "loyaltyCouponId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the loyalty coupon to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLoyaltyCouponResponse",
      "members": [
        {
          "name": "loyaltyCoupon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.LoyaltyCoupon"
            }
          ],
          "doc": "Retrieved loyalty coupon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LoyaltyCoupon",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the loyalty coupon was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Loyalty coupon ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the loyalty coupon was last updated."
        },
        {
          "name": "accountId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "[Loyalty account ID](https://dev.wix.com/api/rest/wix-loyalty-program/accounts) of the customer that redeemed points for a coupon."
        },
        {
          "name": "couponReference",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.CouponReference"
            }
          ],
          "doc": "Reference coupon information for the corresponding [coupon](https://dev.wix.com/api/rest/coupons/about-wix-coupons)\nthat is created along with the loyalty coupon."
        },
        {
          "name": "memberId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "[Member ID](https://dev.wix.com/api/rest/members/members/member-object) of the customer that redeemed points for a coupon."
        },
        {
          "name": "memberIdDeprecated",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "[Member ID](https://dev.wix.com/api/rest/members/members/member-object) of the customer that redeemed points for a coupon."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the loyalty coupon is updated.\n\nTo prevent conflicting changes, the current `revision`` must be passed when updating the loyalty coupon.\n"
        },
        {
          "name": "rewardName",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of reward that was redeemed to create this coupon."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Loyalty coupon status.\n\nThis status relates to the corresponding coupon that is created\nat the same time as the loyalty coupon and is included in `couponReference`.\n\n+ `\"ACTIVE\"`: The reference coupon is active and available to the customer.\n+ `\"APPLIED\"`: The reference coupon was applied and is no longer available for use.\n+ `\"ARCHIVED\"`: The reference coupon was deleted.\n+ `\"FAILED\"`: The reference coupon was created but something went wrong when redeeming points from the loyalty account.\n+ `\"PENDING\"`: The refence coupon was created but the loyalty points have not been redeemed yet."
        },
        {
          "name": "transactionId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Transaction ID for the transaction that created a coupon."
        }
      ],
      "docs": {
        "description": [
          "A loyalty coupon is created when a customer redeems their loyalty points for a reward. Creating a loyalty coupon\nalso creates a corresponding \"reference\" coupon with the [Coupons API](https://dev.wix.com/api/rest/coupons/about-wix-coupons)."
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Filter string (e.g., when {\"expired\":\"true\"}, expired coupons will be returned)."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.V2Paging"
            }
          ],
          "doc": "Optional pagination parameters"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort string."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCouponTemplateRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.Query"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCouponTemplateResponse",
      "members": [
        {
          "name": "couponReferences",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Coupons.CouponReference"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved CouponReferences"
        },
        {
          "name": "totalResults",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLoyaltyCouponRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.QueryV2"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLoyaltyCouponResponse",
      "members": [
        {
          "name": "loyaltyCoupons",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Coupons.LoyaltyCoupon"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved loyalty coupons."
        },
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.PagingMetadataV2"
            }
          ],
          "doc": "Metadata."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Coupons.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfQueryV2PagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemCurrentMemberPointsForCouponRequest",
      "members": [
        {
          "name": "rewardId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemCurrentMemberPointsForCouponResponse",
      "members": [
        {
          "name": "coupon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.LoyaltyCoupon"
            }
          ],
          "doc": "Created loyalty coupon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemPointsForCouponOptions",
      "members": [
        {
          "name": "loyaltyAccountId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the [loyalty account](https://dev.wix.com/api/rest/wix-loyalty-program/accounts) of the customer redeeming points."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemPointsForCouponRequest",
      "members": [
        {
          "name": "loyaltyAccountId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the [loyalty account](https://dev.wix.com/api/rest/wix-loyalty-program/accounts) of the customer redeeming points."
        },
        {
          "name": "rewardId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the [loyalty reward](https://dev.wix.com/api/rest/wix-loyalty-program/rewards) to redeem."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemPointsForCouponResponse",
      "members": [
        {
          "name": "coupon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.LoyaltyCoupon"
            }
          ],
          "doc": "Created loyalty coupon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Scope",
      "members": [
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the specific entity in the group for which the coupon is applicable.\n\nIf no `entityId` is specified, the coupon applies to all entities in the group. In some cases when a group is specified,\nan `entityId` is required. See [Scope Values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values)\nfor a list of currently supported entities for each namespace and group.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Group within a `namespace` for which the coupon is applicable.\n\nIf no group is specified, the coupon applies to all items in the namespace.\n`group` is required in some namespaces. See [Scope Values](https://dev.wix.com/api/rest/coupons/coupons/valid-scope-values)\nfor a list of currently supported groups for each namespace.\n"
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Wix application for which the coupon is applicable.\n\nOne of the following:\n+ `\"stores\"`\n+ `\"bookings\"`\n+ `\"events\"`\n+ `\"pricingPlans\"`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Specification",
      "members": [
        {
          "name": "appliesToSubscriptions",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the coupon also applies to subscriptions."
        },
        {
          "name": "buyXGetY",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.BuyXGetY"
            }
          ],
          "doc": "Free products when making a purchase. `buyXGetY` is an object that specifies `x` and `y` in the\nfollowing scenario: if a visitor purchases x number of products, they receive y number of products for free. C\nurrently only supported for coupons with a `stores` `namespace`."
        },
        {
          "name": "discountedCycleCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Specifies the amount of cycles to apply the discount to for a subscription item.\n\nCan only be set when `appliesToSubscriptions` is `TRUE` and `specification.scope.namespace` is `pricingPlans`.\nIf `discountedCycleCount` is empty, the coupon applies to all available cycles.\n\nMin: `1`\n\nMax: `999`\n"
        },
        {
          "name": "fixedPriceAmount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Specific sale price. Currently only supported for coupons with a `stores` `namespace`."
        },
        {
          "name": "freeShipping",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Free shipping. If true, the coupon applies to all items in all `namespaces` in the site."
        },
        {
          "name": "limitedToOneItem",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the coupon is limited to 1 discount per order. If true and a customer pays for multiple items\nthat the coupon applies to, only the lowest priced item is discounted.\nCoupons with a `bookings` `namespace` are always limited to 1 item."
        },
        {
          "name": "minimumSubtotal",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The coupon is only applicable when the order subtotal is over this amount."
        },
        {
          "name": "moneyOffAmount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Fixed price discount."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of coupon."
        },
        {
          "name": "percentOffRate",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Discount as a percentage."
        },
        {
          "name": "scope",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.Scope"
            }
          ],
          "doc": "Scope of the coupon. When no scope is defined, the coupon applies to all\nitems in all `namespaces` in the site."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'BUY_X_GET_Y'`\n- `'FIXED_PRICE_AMOUNT'`\n- `'FREE_SHIPPING'`\n- `'MONEY_OFF_AMOUNT'`\n- `'PERCENT_OFF_RATE'`\n- `'UNKNOWN'`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfSpecificationTypeDetailsOneOf",
            "members": [
              "buyXGetY",
              "fixedPriceAmount",
              "freeShipping",
              "moneyOffAmount",
              "percentOffRate"
            ]
          },
          {
            "name": "oneOfSpecificationScopeOrMinSubtotalOneOf",
            "members": [
              "minimumSubtotal",
              "scope"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SpecificationScopeOrMinSubtotalOneOf",
      "members": [
        {
          "name": "minimumSubtotal",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The coupon is only applicable when the order subtotal is over this amount."
        },
        {
          "name": "scope",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.Scope"
            }
          ],
          "doc": "Scope of the coupon. When no scope is defined, the coupon applies to all\nitems in all `namespaces` in the site."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SpecificationTypeDetailsOneOf",
      "members": [
        {
          "name": "buyXGetY",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Coupons.BuyXGetY"
            }
          ],
          "doc": "Free products when making a purchase. `buyXGetY` is an object that specifies `x` and `y` in the\nfollowing scenario: if a visitor purchases x number of products, they receive y number of products for free. C\nurrently only supported for coupons with a `stores` `namespace`."
        },
        {
          "name": "fixedPriceAmount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Specific sale price. Currently only supported for coupons with a `stores` `namespace`."
        },
        {
          "name": "freeShipping",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Free shipping. If true, the coupon applies to all items in all `namespaces` in the site."
        },
        {
          "name": "moneyOffAmount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Fixed price discount."
        },
        {
          "name": "percentOffRate",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Discount as a percentage."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V2Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset since the beginning of the collection."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
