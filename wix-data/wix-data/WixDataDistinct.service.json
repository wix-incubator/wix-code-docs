{ "name": "WixDataDistinct",
  "memberOf": "wix-data",
  "mixes":
    [ "wix-data.WixDataFilter" ],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 1,
      "filename": "distinct.js" },
  "docs":
    { "summary": "Provides functionality for refining a distinct data query.",
      "description":
        [ "The `WixDataDistinct` methods allow you to run, sort, filter, and control the results of a distinct query.",
          "",
          "When you run a query with the [`distinct()`](https://dev.wix.com/docs/velo/api-reference/wix-data/wix-data-query/distinct) method, the query only returns distinct items. For example, the following code queries a collection for customers over the age of 20 and logs their last names in ascending order, without duplicates:",
          "",
          "",
          " ```javascript",
          " import wixData from 'wix-data';",
          "",
          " wixData.query(\"customers\")",
          "   .gt(\"age\", 20)",
          "   .distinct(\"lastName\")",
          "   .then((results) => {",
          "     console.log(results.items);",
          "   });",
          " ```",
          "",
          " You can then further refine the distinct query by calling `WixDataDistinct` methods in the [`beforeDistinct()`](ADDLINK) hook." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "ascending",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-data.WixDataDistinct",
            "doc": "The distinct query object." },
        "locations":
          [ { "lineno": 92,
              "filename": "distinct.js" },
            { "lineno": 10,
              "filename": "sortMixin.js" } ],
        "docs":
          { "summary": "Sorts the results of the distinct query in ascending order based on the distinct property name.",
            "description":
              [ "The `ascending()` method sorts the distinct query in ascending order based on the distinct property name." ],
            "links": [],
            "examples":
              [ { "title": "Sort the results of the distinct query in ascending order",
                  "body":
                    [ "// Sort the results of the distinct query in ascending order",
                      "//" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "descending",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-data.WixDataDistinct",
            "doc": "The distinct query object." },
        "locations":
          [ { "lineno": 116,
              "filename": "distinct.js" },
            { "lineno": 41,
              "filename": "sortMixin.js" } ],
        "docs":
          { "summary": "Sorts the results of the distinct query in descending order based on the distinct property name.",
            "description":
              [ "The `descending()` method sorts the distinct query in descending order based on the distinct property name." ],
            "links": [],
            "examples":
              [ { "title": "Sort the results of the distinct query in descending order",
                  "body":
                    [ "// Sort the results of the distinct query in descending order",
                      "//" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "filter",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "filter",
              "type": "WixDataFilter",
              "doc": "Filter to refine the distinct query." } ],
        "ret":
          { "type": "wix-data.WixDataDistinct",
            "doc": "The distinct query object." },
        "locations":
          [ { "lineno": 41,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Sets the filter used to refine the distinct query.",
            "description":
              [ "The `filter()` method defines the filter used to refine the distinct query." ],
            "links": [],
            "examples":
              [ { "title": "Set the distinct query filter",
                  "body":
                    [ "// Set the distinct query filter" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getFilter",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-data.WixDataFilter",
            "doc": "The filter used to refine the distinct query." },
        "locations":
          [ { "lineno": 29,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Returns the filter used to refine the distinct query.",
            "description":
              [ "The `getFilter()` method returns a [`WixDataFilter()`](https://dev.wix.com/docs/sdk/backend-modules/data/items/wix-data-filter/introduction) that was used to refine the distinct query." ],
            "links": [],
            "examples":
              [ { "title": "Get the distinct query filter",
                  "body":
                    [ "let filter = distinctQuery.getFilter();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getPropertyName",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "string",
            "doc": "The property used to define the distinct query." },
        "locations":
          [ { "lineno": 54,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Returns the name of the property used to define the distinct query.",
            "description":
              [ "The `getPropertyName()` method returns the name of the property used to define the distinct query." ],
            "links": [],
            "examples":
              [ { "title": "Get the distinct property",
                  "body":
                    [ "// GET PROPERTY NAME let filter = distinctQuery.getFilter();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "isAscending",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "Whether the results of the distinct query are sorted in ascending order." },
        "locations":
          [ { "lineno": 80,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Whether the results of the distinct query are sorted in ascending order.",
            "description":
              [ "The `isAscending()` method returns `true` if the results of the distinct query are sorted in ascending order based on the distinct property." ],
            "links": [],
            "examples":
              [ { "title": "Check whether the results of the distinct property are sorted in ascending order",
                  "body":
                    [ "// Check whether the results of the distinct property are sorted in ascending order" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "isDescending",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "Whether the results of the distinct query are sorted in descending order." },
        "locations":
          [ { "lineno": 104,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Whether the results of the distinct query are sorted in descending order.",
            "description":
              [ "The `isDescending()` method returns `true` if the results of the distinct query are sorted in ascending order based on the distinct property." ],
            "links": [],
            "examples":
              [ { "title": "Check if the results of the distinct property are sorted in descending order",
                  "body":
                    [ "// Check if the results of the distinct property are sorted in descending order",
                      "//" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "limit",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "limit",
              "type": "number",
              "doc": "Number of items to return, which is also the [`pageSize`](https://dev.wix.com/docs/sdk/backend-modules/data/items/wix-data-result/page-size) of the results object." } ],
        "ret":
          { "type": "wix-data.WixDataDistinct",
            "doc": "A [`WixDataDistinct`](ADDLINK) object representing the refined distinct query." },
        "locations":
          [ { "lineno": 128,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Limits the number of items the distinct query returns.",
            "description":
              [ "The `limit()` method defines the number of results a distinct query returns in each page. Only one page of results is retrieved at a time. use the [`next()`](https://dev.wix.com/docs/sdk/backend-modules/data/items/wix-data-result/next) and [`prev()`](https://dev.wix.com/docs/sdk/backend-modules/data/items/wix-data-result/prev) methods to navigate the pages of a query result.",
                "",
                " By default, `limit` is set to `50`.",
                "",
                " The maximum value that `limit()` can accept is `1000`.",
                "",
                " > **Note** : For some [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code), the maximum value `limit()` can accept is less than `1000`. For example, the maximum limit for the Wix `Stores/Product` collection is 100." ],
            "links": [],
            "examples":
              [ { "title": "Add a limit to a distinct query",
                  "body":
                    [ "// Add a limit to a distinct query",
                      "// let filter = distinctQuery.getFilter();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "propertyName",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "newPropertyName",
              "type": "string",
              "doc": "Property by which to return distinct values, without duplicates." } ],
        "ret":
          { "type": "wix-data.WixDataDistinct",
            "doc": "The distinct query object." },
        "locations":
          [ { "lineno": 66,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Sets the property name by which to return distinct values.",
            "description":
              [ "The `propertyName()` method defines the property by which to return distinct values, without duplicates." ],
            "links": [],
            "examples":
              [ { "title": "Set the distinct property",
                  "body":
                    [ "// Set the distinct property",
                      "// let filter = distinctQuery.getFilter();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "skip",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "skip",
              "type": "number",
              "doc": "Number of items to skip in before returning the distinct query results." } ],
        "ret":
          { "type": "wix-data.WixDataDistinct",
            "doc": "A `WixDataDistinct` object representing the refined query." },
        "locations":
          [ { "lineno": 146,
              "filename": "distinct.js" } ],
        "docs":
          { "summary": "Sets the number of items to skip before returning distinct query results.",
            "description":
              [ "The `skip()` method defines the number of query results to skip before returning the remaining results.",
                "",
                " For example, if you query a collection and 50 items match your query, but you set `skip` to 10, the results skip the first 10 items that match and return the 11th through 50th items.",
                "",
                " By default, `skip` is set to 0." ],
            "links": [],
            "examples":
              [ { "title": "Add a skip to a distinct query",
                  "body":
                    [ "// Add a skip to a distinct query",
                      "//" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }