{ "name": "MediaManager",
  "memberOf": "wix-media-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 13,
      "filename": "index.js" },
  "docs":
    { "summary": "The `mediaManager` module contains functionality for working with\n the media that is stored in your site's [Media Manager](https://support.wix.com/en/article/about-the-media-manager-568956).",
      "description":
        [ "To use the Media Manager API, import `mediaManager` from the `wix-media-backend` module:",
          "",
          "   ```javascript",
          "   import { mediaManager } from 'wix-media-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "downloadFiles",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "fileUrls",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "A list of URLs for the file(s) to download. You can get the URLs with the \n  `fileUrl` property of the [`listFiles()`](#listFiles) function." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - The download URL for the file(s). You can pass this URL to the [`wix-location.to()`](https://www.wix.com/velo/reference/wix-location/to) function \n to open the Download bar in the browser." },
        "locations":
          [ { "lineno": 1,
              "filename": "download-files.js" } ],
        "docs":
          { "summary": "Returns a download URL for downloading files from the Media Manager.",
            "description":
              [ "The `downloadFiles()` function returns a Promise that resolves to a download URL ",
                " for the specified file(s).",
                "",
                " A compressed file is created and can be downloaded using the download URL. The compressed ",
                " file can contain up to 1000 files.    ",
                "",
                " Call the [`wix-location.to()`](https://www.wix.com/velo/reference/wix-location/to) function with ",
                " the returned download URL as the external web address. This opens the Download bar in your browser." ],
            "links": [],
            "examples":
              [ { "title": "Get a download URL for a single file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "/* Sample fileUrls value:",
                      " * ['wix:image://v1/4c47c6_9b78aa96fabd48e888e3081b303f069d~mv2.png']",
                      " */",
                      "",
                      "export function myDownloadFilesFunction(fileUrls) {",
                      "  return mediaManager.downloadFiles(fileUrls)",
                      "  .then((downloadUrl) => {",
                      "    return downloadUrl;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  })",
                      "}",
                      "",
                      "/* Promise resolves to a URL similar to:",
                      " * 'https://archive.wixmp.com/archive/wix/4c492536c61a495ca4b4526d71439a64'",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Get and go to a download URL for all files",
                  "body":
                    [ "/**************************************",
                      " * Page code                          *",
                      " **************************************/",
                      "",
                      " import wixLocation from 'wix-location';",
                      " import { myDownloadFilesFunction, myListFilesFunction } from 'backend/media';",
                      " ",
                      " $w.onReady(function () {",
                      "    ",
                      "  // ...",
                      "    ",
                      "  myListFilesFunction()",
                      "    .then((myFiles) => {",
                      "      const fileUrls = myFiles.map(file => file.fileUrl);",
                      "      myDownloadFilesFunction(fileUrls)",
                      "      .then ((downloadUrl) => {",
                      "        wixLocation.to(downloadUrl);",
                      "      });",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "});",
                      "",
                      "/**************************************",
                      " * Backend code - media.jsw           *",
                      " **************************************/",
                      "",
                      "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function myListFilesFunction() {",
                      "  return mediaManager.listFiles()",
                      "  .then((myFiles) => {",
                      "    return myFiles;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "}",
                      "",
                      "export function myDownloadFilesFunction(fileUrls) {",
                      "  return mediaManager.downloadFiles(fileUrls)",
                      "  .then((downloadUrl) => {",
                      "    return downloadUrl;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  })",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "downloadFolder",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "folderId",
              "type": "string",
              "doc": "The ID of the folder to download. You can get the ID with the \n  `folderId` property of the [`listFolders()`](#listFolders) function." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - The download URL of the folder. You can pass this URL to the [`wix-location.to()`](https://www.wix.com/velo/reference/wix-location/to) function \n to open the Download bar in the browser." },
        "locations":
          [ { "lineno": 1,
              "filename": "download-folder.js" } ],
        "docs":
          { "summary": "Returns a download URL for downloading a folder from the Media Manager.",
            "description":
              [ "The `downloadFolder()` function returns a Promise that resolves to a download URL ",
                " for a Media Manager folder's files and sub-folders.",
                "",
                " A compressed file is created and can be downloaded using the download URL. The ",
                " compressed file can contain up to 1000 files. Sub-folders are included. The name ",
                " of the top-level folder requested for download is not included.",
                "",
                " Call the [`wix-location.to()`](https://www.wix.com/velo/reference/wix-location/to) function with ",
                " the returned download URL as the external web address. This opens the Download bar in your browser." ],
            "links": [],
            "examples":
              [ { "title": "Get a download URL for a folder's contents",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "/* Sample folderId value:",
                      " * '0abec0_bed6f8efb53348379b2011514254e954'",
                      " */",
                      "",
                      "export function myDownloadFolderFunction(folderId) {",
                      "  return mediaManager.downloadFolder(folderId)",
                      "  .then((downloadUrl) => {",
                      "    return downloadUrl;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  })",
                      "}",
                      "",
                      "/* Promise resolves to a download URL similar to:",
                      " * 'https://archive.wixmp.com/archive/wix/2d8d9ffc016c443387e42abf8e459c66'",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getFileInfo",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager, returned from the [`importFile()`](#importFile), or [`upload()`](#upload) functions. The name is the string located in the file's URL. Click [here](https://www.wix.com/velo/forum/tips-tutorials-examples/creating-a-url-for-a-media-file-or-the-truth-about-getfileurl) to learn more. This name is used when calling the [`getFileInfo()`](#getFileInfo), [`getFileUrl()`](#getFileUrl),\n and [`getVideoPlaybackUrl()`](#getVideoPlaybackUrl) functions." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-media-backend.MediaManager.FileInfo" ] },
            "doc": "Fulfilled - Information about the file." },
        "locations":
          [ { "lineno": 1,
              "filename": "get-file-info.js" } ],
        "docs":
          { "summary": "Gets a file's information from the Media Manager by `fileName`.",
            "description":
              [ "The `getFileInfo()` function returns a Promise that resolves to information about",
                " the specified file.",
                "",
                " The `fileName` property is the internal name (unique identifier) which is generated when a file is uploaded by the Media Manager, returned from the [`importFile()`](#importFile), or [`upload()`](#upload) functions.",
                " To get the `fileName`, select your media file in the Media Manager and copy the URL in the 'File Info' dropdown on the right sidebar. The name is the string located in the file's URL. ",
                "",
                " You can see how to get the following `fileName` strings for each media type:",
                "",
                " + Image/GIF: `https://static.wixstatic.com/media/{22d494_cb2a8a381bb1495e9a320ae23f4fd18d~mv2.gif}`",
                "",
                " + Video: `https://video.wixstatic.com/video/{22d494_fef6ff6f52b04b4aa1e1c0ab6d1bb194}/360p/mp4/file.mp4`",
                "",
                " + Audio: `https://static.wixstatic.com/mp3/{22d494_5543f167bf1c45ea984bc76e699b457b.mp3}`",
                "",
                " + Document: `https://8b7eef41-7fbb-440b-928a-a442878112a3.usrfiles.com/ugd/{22d494_bddbcfb54d4442a7a042a3ab81347458.pdf}`",
                "",
                " You can learn more [here](https://www.wix.com/velo/forum/tips-tutorials-examples/creating-a-url-for-a-media-file-or-the-truth-about-getfileurl)." ],
            "links": [],
            "examples":
              [ { "title": "Get a file's information",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export async function getFileInfo(fileName) {",
                      "  return mediaManager.getFileInfo(fileName);",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * {",
                      " *   \"fileName\": \"f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"fileUrl\": \"wix:image://v1/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"parentFolderId\": \"2bf470f5be194b319cdb2accc3278ff9\",",
                      " *   \"originalFileName\": \"original-name.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"width\": 300,",
                      " *   \"height\": 300,",
                      " *   \"labels\": [",
                      " *     \"Blue\",",
                      " *     \"Butterfly\",",
                      " *     \"Turquoise\"",
                      " *   ],",
                      " *   \"opStatus\": \"READY\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getFileUrl",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager, returned from the [`importFile()`](#importFile), or [`upload()`](#upload) functions. The name is the string located in the file's URL. Click [here](https://www.wix.com/velo/forum/tips-tutorials-examples/creating-a-url-for-a-media-file-or-the-truth-about-getfileurl) to learn more. This name is used when calling the [`getFileInfo()`](#getFileInfo), [`getFileUrl()`](#getFileUrl),\n and [`getVideoPlaybackUrl()`](#getVideoPlaybackUrl) functions." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - The file's download URL." },
        "locations":
          [ { "lineno": 1,
              "filename": "get-file-url.js" } ],
        "docs":
          { "summary": "Gets a temporary download URL with a token from the Media Manager for a specified file.",
            "description":
              [ "The `getFileUrl()` function returns a Promise that resolves to ",
                " a download URL with a token for the specified file.",
                "",
                " Pass a Media Manager file name (unique identifier) in the `fileName` parameter",
                " as returned in the `fileName` property from the [`getFileInfo()`](#getFileInfo),",
                " [`importFile()`](#importFile), and [`upload()`](#upload) functions. ",
                "",
                "> **Note:**",
                "> Alternatively, you can create a static URL where `filename` is the Media Manager file name (unique identifier):",
                ">  ```javascript",
                ">let imageUrl = `https://static.wixstatic.com/media/${fileName}`;",
                ">```" ],
            "links": [],
            "examples":
              [ { "title": "Get a file's URL",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export async function getFileUrl(fileName) {",
                      "  return mediaManager.getFileUrl(fileName);",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * https://download-files.wix.com/_api/download/file?downloadToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9eyJpc3MiO...",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getFolderInfo",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "folderId",
              "type": "string",
              "doc": "Internal name (unique identifier) which is generated when a folder is created by the Media Manager." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-media-backend.MediaManager.FolderInfo" ] },
            "doc": "Fulfilled - Information about the folder." },
        "locations":
          [ { "lineno": 1,
              "filename": "get-folder-info.js" } ],
        "docs":
          { "summary": "Gets a folder's information from the Media Manager by `folderId`.",
            "description":
              [ "The `getFolderInfo()` function returns a Promise that resolves to information about",
                " the specified folder.",
                "",
                " The `folderId` property is the internal name (unique identifier) which is generated when a folder is created by the Media Manager." ],
            "links": [],
            "examples":
              [ { "title": "Get a folder's information",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "const folderId = \"1bf317e889264736b5acb367415fad8e\";",
                      "",
                      "export function myGetFolderInfoFunction() {",
                      "  return mediaManager.getFolderInfo(folderId)",
                      "    .then((myFolder) => {",
                      "      const folderName = myFolder.folderName;",
                      "      const updatedDate = myFolder._updatedDate;",
                      "      return myFolder;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * {",
                      " *   \"folderId\": \"1bf317e889264736b5acb367415fad8e\",",
                      " *   \"folderName\": \"greatfolder1\",",
                      " *   \"parentFolderId\": \"media-root\",",
                      " *   \"_createdDate\": \"Sun December 4 2020 14:56:15 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed May 12 2021 14:56:15 GMT+0300\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getUploadUrl",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "path",
              "type": "string",
              "doc": "The path within the Media Manager where the file will be\n uploaded. If the path does not yet exist, the missing folders will be created." },
            { "name": "options",
              "type": "wix-media-backend.MediaManager.UploadOptions",
              "doc": "Options to use when uploading the file." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-media-backend.MediaManager.UploadUrl" ] },
            "doc": "Fulfilled - The file's URL." },
        "locations":
          [ { "lineno": 1,
              "filename": "get-upload-url.js" } ],
        "docs":
          { "summary": "Gets an upload URL with a token.",
            "description":
              [ "The `getUploadUrl()` function returns a Promise that resolves to an object",
                " containing an upload URL with a token.",
                "",
                " Use `getUploadUrl()` to allow an external client to upload a single file to your",
                " site's Media Manager.",
                "",
                ">**Note:**",
                "The URL with the token is valid for a single file upload only. `getUploadUrl` must be called for each file that you want to upload.",
                "",
                "",
                " The external client uploads a file by performing a POST operation to the",
                " URL returned by `getUploadUrl()` using multipart/form-data encoding and",
                " sending the following data:",
                "",
                " ```javascript",
                " {",
                "   \"upload_token\": <uploadToken>,",
                "   \"file\": {",
                "     \"value\": <contentStream>,",
                "     \"options\": {",
                "       \"filename\": <fileName>,",
                "       \"contentType\": <contentType>",
                "     }",
                "   }",
                " };",
                " ```",
                "",
                " + `upload_token`: The returned upload token.",
                " + `file`: An object containing:",
                "     ",
                "     + `value`: The file content as a multi-part value.",
                "     + `options`: An object containing:",
                "     ",
                "         + `filename`: The name of the file as it will appear in the Media Manager.",
                "         + `contentType`: The content type of the file.",
                "",
                "",
                " The POST will return the following:",
                "",
                "   ```javascript",
                "   [ ",
                "     { ",
                "       \"parent_folder_id\": <folder id>,",
                "       \"hash\": <file hash>,",
                "       \"tags\": [],",
                "       \"file_name\": <internal file name>,",
                "       \"refs\": [],",
                "       \"labels\": [] <image recognition labels of the image content>,",
                "       \"site_id\": <site id>,",
                "       \"height\": <image height>,",
                "       \"original_file_name\": <the original file name>,",
                "       \"file_size\": <file size>,",
                "       \"width\": <image width>,",
                "       \"media_type\": \"picture\",",
                "       \"mime_type\": \"image/jpeg\"",
                "     } ",
                "   ]",
                "   ```",
                "",
                " To get a Wix image URL that can be stored in a collection or displayed in an image",
                " element or gallery from the above object, use the following expression:",
                "",
                " ```",
                " let wixImageUrl = `wix:image://v1/${response[0].file_name}/${response[0].original_file_name}#originWidth=${response[0].width}&originHeight=${response[0].height}`;",
                " ```" ],
            "links": [],
            "examples":
              [ { "title": "Get a URL with a token to be used for uploading a file by POST",
                  "body":
                    [ "/***************",
                      " * Wix Backend *",
                      " ***************/",
                      "",
                      "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function getUploadUrl() {",
                      "  return mediaManager.getUploadUrl(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/********************************",
                      " * External Node.js application *",
                      " ********************************/",
                      "",
                      "import * as request from 'request-promise';",
                      "",
                      "async function uploadImageViaUploadUrl(uploadUrl, uploadToken, contentStream, fileName, contentType) {",
                      "  const body = {",
                      "    upload_token: uploadToken,",
                      "    file: {",
                      "      value: contentStream, // a Node.js Buffer with the file content",
                      "      options: {",
                      "        filename: fileName,",
                      "        contentType: contentType",
                      "      }",
                      "    }",
                      "  };",
                      "",
                      "  const response = await request.post({url: uploadUrl, formData: body, json: true});",
                      "  return `wix:image://v1/${response[0].file_name}/${response[0].original_file_name}#originWidth=${response[0].width}&originHeight=${response[0].height}`;",
                      "} ",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to create a URL that an external application can \n use to upload a file to your site's Media Manager. \n\n The **Wix backend** code demonstrates how to create the URL and the **External Node.js**\n code demonstrates how to use the URL to upload an image and then create a Wix image URL\n from the upload response." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getVideoPlaybackUrl",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "fileName",
              "type": "string",
              "doc": "Internal name (unique identifier) which is generated when a file is uploaded by the Media Manager, returned from the [`importFile()`](#importFile), or [`upload()`](#upload) functions. The name is the string located in the file's URL. Click [here](https://www.wix.com/velo/forum/tips-tutorials-examples/creating-a-url-for-a-media-file-or-the-truth-about-getfileurl) to learn more. This name is used when calling the [`getFileInfo()`](#getFileInfo), [`getFileUrl()`](#getFileUrl),\n and [`getVideoPlaybackUrl()`](#getVideoPlaybackUrl) functions." },
            { "name": "format",
              "type": "string",
              "doc": "The format of the URL to get. Either `\"hls\"` or `\"dash\"`." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - The file's URL." },
        "locations":
          [ { "lineno": 1,
              "filename": "get-video-playback-url.js" } ],
        "docs":
          { "summary": "Gets a video file's playback URL from the Media Manager.",
            "description":
              [ "The `getVideoPlaybackUrl()` function returns a Promise that resolves to the",
                " specified video file's playback URL." ],
            "links": [],
            "examples":
              [ { "title": "Get a URL to be used for video playback",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export async function getVideoPlaybackUrl(fileName) {",
                      "  return mediaManager.getVideoPlaybackUrl(fileName, \"hls\");",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * \"https://repackager.wixmp.com/video.wixstatic.com/video/f6c0f9...\"",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "importFile",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "path",
              "type": "string",
              "doc": "The path within the Media Manager where the file will be\n uploaded. If the path does not yet exist, the missing folders will be created." },
            { "name": "url",
              "type": "string",
              "doc": "The file's URL." },
            { "name": "options",
              "type": "wix-media-backend.MediaManager.UploadOptions",
              "doc": "Options to use when uploading a file" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-media-backend.MediaManager.FileInfo" ] },
            "doc": "Fulfilled - Information about the file that was uploaded." },
        "locations":
          [ { "lineno": 1,
              "filename": "import-file.js" } ],
        "docs":
          { "summary": "Imports a file to the Media Manager from a URL.",
            "description":
              [ "The `importFile()` function returns a Promise that resolves to information",
                " about the newly imported file.",
                "",
                " Video and audio files that have been imported are not immediately available",
                " to be used even after the Promise is resolved. Before they can be used, they",
                " must first undergo transcoding. The [`onFileUploaded()`](wix-media-backend.Events.html#onFileUploaded)",
                " event is fired when an imported file has been uploaded and before the transcoding is finished." ],
            "links": [],
            "examples":
              [ { "title": "Import a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function importFile(url) {",
                      "  return mediaManager.importFile(",
                      "    \"/myImportFolder/subfolder\",",
                      "    url,",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"fileName\": \"my-image.jpg\",",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " *",
                      " * {",
                      " *   \"fileName\": \"f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"fileUrl\": \"media/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"parentFolderId\": \"2bf470f5be194b319cdb2accc3278ff9\",",
                      " *   \"originalFileName\": \"my-image.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"opStatus\": \"IN-DOWNLOAD-QUEUE\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listFiles",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "filters",
              "type": "wix-media-backend.MediaManager.FileFilterOptions",
              "doc": "File filter options.",
              "optional": true },
            { "name": "sorting",
              "type": "wix-media-backend.MediaManager.SortingOptions",
              "doc": "Sorting options.",
              "optional": true },
            { "name": "paging",
              "type": "wix-media-backend.MediaManager.PagingOptions",
              "doc": "Paging options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-media-backend.MediaManager.File" ] } ] },
            "doc": "Fulfilled - Information about the files." },
        "locations":
          [ { "lineno": 1,
              "filename": "list-files.js" } ],
        "docs":
          { "summary": "Gets a list of files from the Media Manager by folder Id (or root).",
            "description":
              [ "The `listFiles()` function returns a Promise that resolves to information about",
                " the files in the folder.",
                "",
                " To get a list of files within a specific folder in the Media Manager, pass the folder's ID in the `parentFolderId` parameter. If no folder is specified, the `listFiles()` function returns the list of files in the root folder of the Media Manager. ",
                "",
                " **Note:** This function's parameters are positional, and must be specified in the sequence shown in the syntax below. When specifying a parameter, use 'null' as a placeholder for any unspecified parameters. ",
                " For example, to specify `sorting`, call `listFiles(null, sorting, null)`." ],
            "links": [],
            "examples":
              [ { "title": "List files in a specified folder",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "const filters = {",
                      "  parentFolderId: \"8a3be85ea03e4b8b82f2f9c989557c3d\"",
                      "};",
                      "",
                      "export function myListFilesFunction() {",
                      "  return mediaManager.listFiles(filters, null, null)",
                      "    .then((myFiles) => {",
                      "      const originalFileName = myFiles[0].originalFileName;",
                      "      const fileName = myFiles[1].fileName;",
                      "      return myFiles;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"fileName\": \"f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"fileUrl\": \"wix:image://v1/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"parentFolderId\": \"8a3be85ea03e4b8b82f2f9c989557c3d\",",
                      " *   \"originalFileName\": \"original-name1.jpg\",",
                      " *   \"width\": 300,",
                      " *   \"height\": 300,",
                      " *   \"labels\": [",
                      " *     \"Blue\",",
                      " *     \"Butterfly\",",
                      " *     \"Turquoise\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Sun December 4 2020 10:56:09 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed May 12 2021 14:27:15 GMT+0300\"",
                      " * },",
                      " * {",
                      " *   \"fileName\": \"8b7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png\",",
                      " *   \"fileUrl\": \"wix:image://v1/8b7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"hash\": \"93fea6d1c6f7b10e24a729b0402ac152\",",
                      " *   \"sizeInBytes\": 232794,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/8b7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"parentFolderId\": \"8a3be85ea03e4b8b82f2f9c989557c3d\",",
                      " *   \"originalFileName\": \"original-name2.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"width\": 984,",
                      " *   \"height\": 221,",
                      " *   \"labels\": [",
                      " *     \"Font\",",
                      " *     \"Type\",",
                      " *     \"Write\"",
                      " *   ],",
                      " *   \"opStatus\": \"READY\",",
                      " *   \"_createdDate\": \"Tues January 22 2020 12:56:02 GMT+0300\",",
                      " *   \"_updatedDate\": \"Fri October 9 2020 04:56:22 GMT+0300\"",
                      " * }]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "List files in the root folder",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function myListFilesFunction() {",
                      "  return mediaManager.listFiles()",
                      "    .then((myFiles) => {",
                      "      const originalFileName = myFiles[0].originalFileName;",
                      "      const fileName = myFiles[0].fileName;",
                      "      return myFiles;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"fileName\": \"g9c0f9_tg422f4475a749e661dd14407fdbd37k~mv2.jpg\",",
                      " *   \"fileUrl\": \"wix:image://v1/g9c0f9_tg422f4475a749e661dd14407fdbd37k~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"hash\": \"Pq00kXbvu4Zt3239rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 23746,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/g9c0f9_tg422f4475a749e661dd14407fdbd37k~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"parentFolderId\": \"media-root\",",
                      " *   \"originalFileName\": \"original-name.jpg\",",
                      " *   \"width\": 220,",
                      " *   \"height\": 340,",
                      " *   \"labels\": [",
                      " *     \"Sand\",",
                      " *     \"Beach\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Mon September 2 2019 13:56:06 GMT+0300\",",
                      " *   \"_updatedDate\": \"Sat June 20 2020 14:33:07 GMT+0300\"",
                      " * }]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Filter, sort, and paginate a list of files",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "const filters = {",
                      "  parentFolderId: \"9162670cf5434db787bdd9715b46b473\",",
                      "  mediaType: \"image\",",
                      "  isPrivate: false",
                      "};",
                      "",
                      "const sorting = {",
                      "  order: \"asc\",",
                      "  field: \"originalFileName\"",
                      "};",
                      "",
                      "const paging = {",
                      "  limit: 3,",
                      "  skip: 1",
                      "};",
                      "",
                      "export function myListFilesFunction() {",
                      "  return mediaManager.listFiles(filters, sorting, paging)",
                      "    .then((myFiles) => {",
                      "      const originalFileName = myFiles[0].originalFileName;",
                      "      const fileName = myFiles[1].fileName;",
                      "      return myFiles;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"fileName\": \"p0c0f9_tg439f4475a749e181dd14407fdbd99e~mv2.jpg\",",
                      " *   \"fileUrl\": \"wix:image://v1/p0c0f9_tg439f4475a749e181dd14407fdbd99e~mv2.~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/p0c0f9_tg439f4475a749e181dd14407fdbd99e~mv2.~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"parentFolderId\": \"9162670cf5434db787bdd9715b46b473\",",
                      " *   \"originalFileName\": \"apple.jpg\",",
                      " *   \"width\": 300,",
                      " *   \"height\": 300,",
                      " *   \"labels\": [",
                      " *     \"Green\",",
                      " *     \"Tree\",",
                      " *     \"Worm\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Mon October 5 2018 14:26:27 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed May 12 2021 11:12:45 GMT+0300\"",
                      " * },",
                      " * { ",
                      " *   \"fileName\": \"qr7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png\",",
                      " *   \"fileUrl\": \"wix:image://v1/qr7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"hash\": \"93fea6d1c6f7b10e24a729b0402ac152\",",
                      " *   \"sizeInBytes\": 232794,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/qr7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"parentFolderId\": \"9162670cf5434db787bdd9715b46b473\",",
                      " *   \"originalFileName\": \"banana.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"width\": 984,",
                      " *   \"height\": 221,",
                      " *   \"labels\": [",
                      " *     \"Yellow\",",
                      " *     \"Peel\"",
                      " *   ],",
                      " *   \"opStatus\": \"READY\",",
                      " *   \"_createdDate\": \"Sun February 04 2016 02:29:07 GMT+0300\",",
                      " *   \"_updatedDate\": \"Fri October 9 2020 09:33:22 GMT+0300\"",
                      " * },",
                      " * {",
                      " *   \"fileName\": \"nm8ttl_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png\",",
                      " *   \"fileUrl\": \"wix:image://v1/nm8ttl_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"hash\": \"93fea6d1c6f7b10e24a729b0402ac152\",",
                      " *   \"sizeInBytes\": 122794,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/nm8ttl_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"parentFolderId\": \"9162670cf5434db787bdd9715b46b473\",",
                      " *   \"originalFileName\": \"cherry.jpg\",",
                      " *   \"width\": 200,",
                      " *   \"height\": 400,",
                      " *   \"labels\": [",
                      " *     \"Red\",",
                      " *     \"Stem\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Tues January 22 2019 12:56:02 GMT+0300\",",
                      " *   \"_updatedDate\": \"Thurs March 11 2021 05:44:20 GMT+0300\"",
                      " * }]",
                      " */",
                      "",
                      "",
                      "" ],
                  "extra":
                    { "description": "In this example we list image files in a specified folder that are public, and sort them in ascending alphabetical order according to the original file name. We skip the first file in the list and limit the result to the next 3 files in the list." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listFolders",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "filters",
              "type": "wix-media-backend.MediaManager.FolderFilterOptions",
              "doc": "Folder filter options.",
              "optional": true },
            { "name": "sorting",
              "type": "wix-media-backend.MediaManager.SortingOptions",
              "doc": "Sorting options.",
              "optional": true },
            { "name": "paging",
              "type": "wix-media-backend.MediaManager.PagingOptions",
              "doc": "Paging options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-media-backend.MediaManager.FolderInfo" ] } ] },
            "doc": "Fulfilled - Information about the folders." },
        "locations":
          [ { "lineno": 1,
              "filename": "list-folders.js" } ],
        "docs":
          { "summary": "Gets a list of folders from the Media Manager by folder Id (or root).",
            "description":
              [ "The `listFolders()` function returns a Promise that resolves to information about",
                " the folders in the folder.",
                "",
                " To get a list of folders within a specific folder in the Media Manager, pass the folder's ID in the `parentFolderId` parameter. If no folder is specified, the `listFolders()` function returns the list of folders in the root folder of the Media Manager.",
                " ",
                " **Note:** This function's parameters are positional, and must be specified in the sequence shown in the syntax below. When specifying a parameter, use 'null' as a placeholder for any unspecified parameters. ",
                " For example, to specify `sorting`, call `listFolders(null, sorting, null)`." ],
            "links": [],
            "examples":
              [ { "title": "List folders in a specified folder",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "const filters = {",
                      "  parentFolderId: \"8a3be85ea03e4b8b82f2f9c989557c3d\"",
                      "};",
                      "",
                      "export function myListFoldersFunction() {",
                      "  return mediaManager.listFolders(filters, null, null)",
                      "    .then((myFolders) => {",
                      "      const folderName = myFolders[0].folderName;",
                      "      const updatedDate = myFolders[1]._updatedDate;",
                      "      return myFolders;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"folderId\": \"1bf317e889264736b5acb367415fad8e\",",
                      " *   \"folderName\": \"greatfolder1\",",
                      " *   \"parentFolderId\": \"8a3be85ea03e4b8b82f2f9c989557c3d\",",
                      " *   \"_createdDate\": \"Sun December 4 2020 14:56:15 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed May 12 2021 14:56:15 GMT+0300\"",
                      " * },",
                      " * {",
                      " *   \"folderId\": \"2fj678p889264736b5acb367415fad5g\",",
                      " *   \"folderName\": \"greatfolder2\",",
                      " *   \"parentFolderId\": \"8a3be85ea03e4b8b82f2f9c989557c3d\",",
                      " *   \"_createdDate\": \"Sun December 4 2020 14:56:15 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed May 12 2021 14:56:15 GMT+0300\"",
                      " * }]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "List folders in the root folder",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function myListFoldersFunction() {",
                      "  return mediaManager.listFolders()",
                      "    .then((myFolders) => {",
                      "      const folderName = myFolders[0].folderName;",
                      "      const updatedDate = myFolders[1]._updatedDate;",
                      "      return myFolders;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"folderId\": \"4nm317e889264736b5acb367415fad6b\",",
                      " *   \"folderName\": \"folder1\",",
                      " *   \"parentFolderId\": \"media-root\",",
                      " *   \"_createdDate\": \"Mon August 5 2019 14:56:15 GMT+0300\",",
                      " *   \"_updatedDate\": \"Tues May 12 2021 07:28:12 GMT+0300\"",
                      " * },",
                      " * {",
                      " *   \"folderId\": \"2t214e889264736b5acb367415fadgc\",",
                      " *   \"folderName\": \"folder2\",",
                      " *   \"parentFolderId\": \"media-root\",",
                      " *   \"_createdDate\": \"Sun December 16 2018 12:22:22 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed June 11 2020 09:34:33 GMT+0300\"",
                      " * }]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Filter, sort, and paginate a list of folders",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "const filters = {",
                      "  parentFolderId: \"8292670cf5434db787bdd9715b46b989\"",
                      "};",
                      "",
                      "const sorting = {",
                      "  order: \"asc\",",
                      "  field: \"folderName\"",
                      "};",
                      "",
                      "const paging = {",
                      "  limit: 2,",
                      "  skip: 1",
                      "};",
                      "",
                      "export function myListFoldersFunction() {",
                      "  return mediaManager.listFolders(filters, sorting, paging)",
                      "    .then((myFolders) => {",
                      "      const folderName = myFolders[0].folderName;",
                      "      const updatedDate = myFolders[1]._updatedDate;",
                      "      return myFolders;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"folderId\": \"1bf317e889264736b5acb367415fad8e\",",
                      " *   \"folderName\": \"pictures\",",
                      " *   \"parentFolderId\": \"8292670cf5434db787bdd9715b46b989\",",
                      " *   \"_createdDate\": \"Sat July 4 2017 10:28:12 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed September 17 2020 09:06:15 GMT+0300\"",
                      " * },",
                      " * {",
                      " *   \"folderId\": \"2t214e889264736b5acb367415fadgc\",",
                      " *   \"folderName\": \"videos\",",
                      " *   \"parentFolderId\": \"8292670cf5434db787bdd9715b46b989\",",
                      " *   \"_createdDate\": \"Sun December 16 2018 12:22:22 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed June 11 2020 09:34:33 GMT+0300\"",
                      " * }]",
                      " */",
                      "",
                      "" ],
                  "extra":
                    { "description": "In this example we list folders in a specified folder, and sort them in ascending alphabetical order according to the folder name. We skip the first folder in the list and limit the result to the next 2 folders in the list." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "upload",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "path",
              "type": "string",
              "doc": "The path within the Media Manager where the file will be\n uploaded. If the path does not yet exist, the missing folders will be created." },
            { "name": "fileContent",
              "type": "Buffer",
              "doc": "Buffer containing the content to be uploaded." },
            { "name": "fileName",
              "type": "string",
              "doc": "In this case the fileName is the name you would like your file to appear as in the Media Manager." },
            { "name": "options",
              "type": "wix-media-backend.MediaManager.UploadOptions",
              "doc": "Options to use when uploading the file." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-media-backend.MediaManager.FileInfo" ] },
            "doc": "Fulfilled - Information about the file that was uploaded." },
        "locations":
          [ { "lineno": 1,
              "filename": "upload.js" } ],
        "docs":
          { "summary": "Uploads a file to the Media Manager from a [buffer](https://nodejs.org/api/buffer.html#buffer_static_method_buffer_from_string_encoding).",
            "description":
              [ "The `upload()` function returns a Promise that resolves to information about",
                " the newly uploaded file.",
                "",
                " Video and audio files that have been uploaded are not immediately available",
                " to be used even after the Promise is resolved. Before they can be used, they",
                " must first undergo transcoding. The [`onFileUploaded()`](wix-media-backend.Events.html#onFileUploaded)",
                " event is fired when a file has been uploaded and before the transcoding is finished.",
                " ",
                " >**Note:** There are limits on the size and duration of files that you can upload. See [Wix Media: Supported Media File Types and File Sizes](https://support.wix.com/en/article/wix-media-supported-media-file-types-and-file-sizes) for more details." ],
            "links": [],
            "examples":
              [ { "title": "Upload a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function uploadImage(buffer) {",
                      "  return mediaManager.upload(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    buffer,",
                      "    \"myFileName.jpg\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/*  Returns a promise that resolves to:",
                      " *  {",
                      " *    \"fileName\": \"f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg\",",
                      " *    \"mediaType\": \"image\",",
                      " *    \"isPrivate\": false,",
                      " *    \"sizeInBytes\": 51085,",
                      " *    \"mimeType\": \"image/jpeg\",",
                      " *    \"iconUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"fileUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"originalFileName\": \"myFileName.jpg\",",
                      " *    \"hash\": \"bee2f8aab80b0d011499361c2eb189eb\",",
                      " *    \"labels\": [",
                      " *      \"Blue\",",
                      " *      \"Butterfly\",",
                      " *      \"Turquoise\"",
                      " *    ],",
                      " *    \"width\": 300,",
                      " *    \"height\": 300",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Upload a file from a URL",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "import rp from 'request-promise';",
                      "",
                      "export function uploadImage(url) {",
                      "  return rp.get({ url, encoding: null })",
                      "    .then( (image) => {",
                      "      return mediaManager.upload(",
                      "        \"/myUploadFolder/subfolder\",",
                      "        image,",
                      "        \"myFileName.jpg\",",
                      "        {",
                      "          \"mediaOptions\": {",
                      "            \"mimeType\": \"image/jpeg\",",
                      "            \"mediaType\": \"image\"",
                      "          },",
                      "          \"metadataOptions\": {",
                      "            \"isPrivate\": false,",
                      "            \"isVisitorUpload\": false,",
                      "            \"context\": {",
                      "              \"someKey1\": \"someValue1\",",
                      "              \"someKey2\": \"someValue2\"",
                      "            }",
                      "          }",
                      "        }",
                      "      );",
                      "    } );",
                      " }",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * {",
                      " *   fileName: \"43io8d_4pf9jwff83ec478a811fe3f714a9c869\"",
                      " *   mediaType: \"image\"",
                      " *   isPrivate: false",
                      " *   sizeInBytes: 3631",
                      " *   mimeType: \"image/jpeg\"",
                      " *   iconUrl: \"wix:image://v1/506418...\"",
                      " *   fileUrl: \"wix:image://v1/506418...\"",
                      " *   originalFileName: \"myFileName.jpeg\"",
                      " *   hash: \"a3ac7ddabb263c2d00b73e8177d15c8d\"",
                      " * }",
                      " */",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to upload a file using a custom upload button.\n It assumes you have a regular button on your page wired to an event handler.\n\n It also assumes that you have\n [installed](https://support.wix.com/en/article/wix-code-how-to-manage-external-code-libraries-with-the-package-manager#installing-a-new-package) the\n **request-promise** node module to your site. The example uses **request-promise**\n to create a Buffer containing the contents of the file to upload." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "File",
        "locations":
          [ { "lineno": 137,
              "filename": "types.js" } ],
        "docs":
          { "summary": "An object containing information about the file that was listed.",
            "links":
              [ "[listFiles( )](#listFiles)" ],
            "examples":
              [ { "title": "List files in a specified folder",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "const filters = {",
                      "  parentFolderId: \"8a3be85ea03e4b8b82f2f9c989557c3d\"",
                      "};",
                      "",
                      "export function myListFilesFunction() {",
                      "  return mediaManager.listFiles(filters, null, null)",
                      "    .then((myFiles) => {",
                      "      const originalFileName = myFiles[0].originalFileName;",
                      "      const fileName = myFiles[1].fileName;",
                      "      return myFiles;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"fileName\": \"f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"fileUrl\": \"wix:image://v1/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"parentFolderId\": \"8a3be85ea03e4b8b82f2f9c989557c3d\",",
                      " *   \"originalFileName\": \"original-name1.jpg\",",
                      " *   \"width\": 300,",
                      " *   \"height\": 300,",
                      " *   \"labels\": [",
                      " *     \"Blue\",",
                      " *     \"Butterfly\",",
                      " *     \"Turquoise\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Sun December 4 2020 10:56:09 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed May 12 2021 14:27:15 GMT+0300\"",
                      " * },",
                      " * {",
                      " *   \"fileName\": \"8b7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png\",",
                      " *   \"fileUrl\": \"wix:image://v1/8b7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"hash\": \"93fea6d1c6f7b10e24a729b0402ac152\",",
                      " *   \"sizeInBytes\": 232794,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/8b7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"parentFolderId\": \"8a3be85ea03e4b8b82f2f9c989557c3d\",",
                      " *   \"originalFileName\": \"original-name2.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"width\": 984,",
                      " *   \"height\": 221,",
                      " *   \"labels\": [",
                      " *     \"Font\",",
                      " *     \"Type\",",
                      " *     \"Write\"",
                      " *   ],",
                      " *   \"opStatus\": \"READY\",",
                      " *   \"_createdDate\": \"Tues January 22 2020 12:56:02 GMT+0300\",",
                      " *   \"_updatedDate\": \"Fri October 9 2020 04:56:22 GMT+0300\"",
                      " * }]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "List files in the root folder",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function myListFilesFunction() {",
                      "  return mediaManager.listFiles()",
                      "    .then((myFiles) => {",
                      "      const originalFileName = myFiles[0].originalFileName;",
                      "      const fileName = myFiles[0].fileName;",
                      "      return myFiles;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"fileName\": \"g9c0f9_tg422f4475a749e661dd14407fdbd37k~mv2.jpg\",",
                      " *   \"fileUrl\": \"wix:image://v1/g9c0f9_tg422f4475a749e661dd14407fdbd37k~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"hash\": \"Pq00kXbvu4Zt3239rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 23746,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/g9c0f9_tg422f4475a749e661dd14407fdbd37k~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"parentFolderId\": \"media-root\",",
                      " *   \"originalFileName\": \"original-name.jpg\",",
                      " *   \"width\": 220,",
                      " *   \"height\": 340,",
                      " *   \"labels\": [",
                      " *     \"Sand\",",
                      " *     \"Beach\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Mon September 2 2019 13:56:06 GMT+0300\",",
                      " *   \"_updatedDate\": \"Sat June 20 2020 14:33:07 GMT+0300\"",
                      " * }]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Filter, sort, and paginate a list of files",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "const filters = {",
                      "  parentFolderId: \"9162670cf5434db787bdd9715b46b473\",",
                      "  mediaType: \"image\",",
                      "  isPrivate: false",
                      "};",
                      "",
                      "const sorting = {",
                      "  order: \"asc\",",
                      "  field: \"originalFileName\"",
                      "};",
                      "",
                      "const paging = {",
                      "  limit: 3,",
                      "  skip: 1",
                      "};",
                      "",
                      "export function myListFilesFunction() {",
                      "  return mediaManager.listFiles(filters, sorting, paging)",
                      "    .then((myFiles) => {",
                      "      const originalFileName = myFiles[0].originalFileName;",
                      "      const fileName = myFiles[1].fileName;",
                      "      return myFiles;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Returns a promise that resolves to:",
                      " * [{",
                      " *   \"fileName\": \"p0c0f9_tg439f4475a749e181dd14407fdbd99e~mv2.jpg\",",
                      " *   \"fileUrl\": \"wix:image://v1/p0c0f9_tg439f4475a749e181dd14407fdbd99e~mv2.~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/p0c0f9_tg439f4475a749e181dd14407fdbd99e~mv2.~mv2.jpg/original-name.jpg#originWidth=300&originHeight=300\",",
                      " *   \"parentFolderId\": \"9162670cf5434db787bdd9715b46b473\",",
                      " *   \"originalFileName\": \"apple.jpg\",",
                      " *   \"width\": 300,",
                      " *   \"height\": 300,",
                      " *   \"labels\": [",
                      " *     \"Green\",",
                      " *     \"Tree\",",
                      " *     \"Worm\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Mon October 5 2018 14:26:27 GMT+0300\",",
                      " *   \"_updatedDate\": \"Wed May 12 2021 11:12:45 GMT+0300\"",
                      " * },",
                      " * { ",
                      " *   \"fileName\": \"qr7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png\",",
                      " *   \"fileUrl\": \"wix:image://v1/qr7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"hash\": \"93fea6d1c6f7b10e24a729b0402ac152\",",
                      " *   \"sizeInBytes\": 232794,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/qr7eef_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"parentFolderId\": \"9162670cf5434db787bdd9715b46b473\",",
                      " *   \"originalFileName\": \"banana.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"width\": 984,",
                      " *   \"height\": 221,",
                      " *   \"labels\": [",
                      " *     \"Yellow\",",
                      " *     \"Peel\"",
                      " *   ],",
                      " *   \"opStatus\": \"READY\",",
                      " *   \"_createdDate\": \"Sun February 04 2016 02:29:07 GMT+0300\",",
                      " *   \"_updatedDate\": \"Fri October 9 2020 09:33:22 GMT+0300\"",
                      " * },",
                      " * {",
                      " *   \"fileName\": \"nm8ttl_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png\",",
                      " *   \"fileUrl\": \"wix:image://v1/nm8ttl_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"hash\": \"93fea6d1c6f7b10e24a729b0402ac152\",",
                      " *   \"sizeInBytes\": 122794,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"iconUrl\": \"wix:image://v1/nm8ttl_47332c4ae5b74db89d86d5d9e0cd303b~mv2.png/Screen%20Shot%202021-05-19%20at%209.59.29.png#originWidth=984&originHeight=1230\",",
                      " *   \"parentFolderId\": \"9162670cf5434db787bdd9715b46b473\",",
                      " *   \"originalFileName\": \"cherry.jpg\",",
                      " *   \"width\": 200,",
                      " *   \"height\": 400,",
                      " *   \"labels\": [",
                      " *     \"Red\",",
                      " *     \"Stem\"",
                      " *   ],",
                      " *   \"_createdDate\": \"Tues January 22 2019 12:56:02 GMT+0300\",",
                      " *   \"_updatedDate\": \"Thurs March 11 2021 05:44:20 GMT+0300\"",
                      " * }]",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The `fileName` property is the internal name (unique identifier) which is generated when a file is uploaded by the Media Manager, returned from the [`importFile()`](#importFile), or [`upload()`](#upload) functions. The name is the string located in the file's URL. Click [here](https://www.wix.com/velo/forum/tips-tutorials-examples/creating-a-url-for-a-media-file-or-the-truth-about-getfileurl) to learn more. Use this name when calling the [`getFileInfo()`](#getFileInfo), [`getFileUrl()`](#getFileUrl),\nand [`getVideoPlaybackUrl()`](#getVideoPlaybackUrl) functions." },
            { "name": "fileUrl",
              "type": "string",
              "doc": "URL of the file." },
            { "name": "hash",
              "type": "string",
              "doc": "File hash." },
            { "name": "sizeInBytes",
              "type": "number",
              "doc": "Size of the listed file in bytes." },
            { "name": "mimeType",
              "type": "string",
              "doc": "[Mime type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of\n the listed file." },
            { "name": "mediaType",
              "type": "string",
              "doc": "Media type of the listed file.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"`\n + `\"shape\"`\n + `\"video\"`" },
            { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the listed file is\n public or private. Private links require a token to be used." },
            { "name": "parentFolderId",
              "type": "string",
              "doc": "ID of the file's parent folder." },
            { "name": "originalFileName",
              "type": "string",
              "doc": "Original name of the uploaded file. This is the display name\n that appears in the Media Manager." },
            { "name": "iconUrl",
              "type": "string",
              "doc": "URL of the file's icon." },
            { "name": "labels",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of labels assigned to the file by the Media Manager." },
            { "name": "height",
              "type": "string",
              "doc": "Media height." },
            { "name": "width",
              "type": "string",
              "doc": "Media width." },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date the file was created." },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date the file was updated." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FileFilterOptions",
        "locations":
          [ { "lineno": 12,
              "filename": "types.js" } ],
        "docs":
          { "summary": "File filter options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "parentFolderId",
              "type": "string",
              "doc": "ID of the parent folder of the files to list.",
              "optional": true },
            { "name": "mediaType",
              "type": "string",
              "doc": "Media type of the files to list. Leave blank to list files of all media types.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"`\n + `\"shape\"`\n + `\"video\"`",
              "optional": true },
            { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the files you want to list is public or private. Leave blank to include both public and private files.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FileInfo",
        "locations":
          [ { "lineno": 92,
              "filename": "types.js" } ],
        "docs":
          { "summary": "An object containing information about the file that was uploaded.",
            "links":
              [ "[getFileInfo( )](#getFileInfo)",
                "[upload( )](#upload)",
                "[importFile( )](#importFile)",
                "[onFileUploaded( )](wix-media-backend.Events.html#onFileUploaded)",
                "[onVideoTranscoded( )](wix-media-backend.Events.html#onVideoTranscoded)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "fileName",
              "type": "string",
              "doc": "The `fileName` property is the internal name (unique identifier) which is generated when a file is uploaded by the Media Manager, returned from the [`importFile()`](#importFile), or [`upload()`](#upload) functions. The name is the string located in the file's URL. Click [here](https://www.wix.com/velo/forum/tips-tutorials-examples/creating-a-url-for-a-media-file-or-the-truth-about-getfileurl) to learn more. Use this name when calling the [`getFileInfo()`](#getFileInfo), [`getFileUrl()`](#getFileUrl),\nand [`getVideoPlaybackUrl()`](#getVideoPlaybackUrl) functions." },
            { "name": "fileUrl",
              "type": "string",
              "doc": "URL of the file." },
            { "name": "hash",
              "type": "string",
              "doc": "File hash." },
            { "name": "sizeInBytes",
              "type": "number",
              "doc": "Size of the uploaded file in bytes." },
            { "name": "mimeType",
              "type": "string",
              "doc": "[Mime type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of\n the uploaded file." },
            { "name": "mediaType",
              "type": "string",
              "doc": "Type of the file that was uploaded.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"`\n + `\"shape\"`\n + `\"video\"`" },
            { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the uploaded file is\n public or private. Private links require a token to be used." },
            { "name": "parentFolderId",
              "type": "string",
              "doc": "ID of the file's parent folder." },
            { "name": "originalFileName",
              "type": "string",
              "doc": "Original name of the uploaded file. This is the display name\n that appears in the Media Manager." },
            { "name": "opStatus",
              "type": "string",
              "doc": "Status of the file that was uploaded.\n One of:\n\n + `\"IN-DOWNLOAD-QUEUE\"`\n + `\"IN-QUEUE\"`\n + `\"READY\"`" },
            { "name": "sourceURL",
              "type": "string",
              "doc": "URL where the file was uploaded from." },
            { "name": "iconUrl",
              "type": "string",
              "doc": "URL of the file's icon." },
            { "name": "labels",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of labels assigned to the file by the Media Manager." },
            { "name": "height",
              "type": "string",
              "doc": "Media height." },
            { "name": "width",
              "type": "string",
              "doc": "Media width." },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date the file was created." },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date the file was updated." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FolderFilterOptions",
        "locations":
          [ { "lineno": 27,
              "filename": "types.js" } ],
        "docs":
          { "summary": "Folder filter options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "parentFolderId",
              "type": "string",
              "doc": "ID of the parent folder of the folders to list.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FolderInfo",
        "locations":
          [ { "lineno": 174,
              "filename": "types.js" } ],
        "docs":
          { "summary": "An object containing information about the folder.",
            "links":
              [ "[getFolderInfo( )](#getFolderInfo)",
                "[listFolders( )](#listFolders)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "folderId",
              "type": "string",
              "doc": "ID of the folder. Internal name (unique identifier) which is generated when a folder is created by the Media Manager. Use this ID when calling the [`listFiles()`](#listFiles), and [`listFolders()`](#listFolders) functions." },
            { "name": "folderName",
              "type": "string",
              "doc": "Name of the folder." },
            { "name": "parentFolderId",
              "type": "string",
              "doc": "ID of the folder's parent folder. Use this ID when calling the [`listFiles()`](#listFiles), and [`listFolders()`](#listFolders) functions." },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date the folder was created." },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date the folder was updated." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "MediaOptions",
        "locations":
          [ { "lineno": 47,
              "filename": "types.js" } ],
        "docs":
          { "summary": "An object containing information about the media options of a file to upload.",
            "links":
              [ "[`upload()`](#upload)",
                "[`importFile()`](#importFile)",
                "[`getUploadUrl()`](#getUploadUrl)" ],
            "examples":
              [ { "title": "Upload a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function uploadImage(buffer) {",
                      "  return mediaManager.upload(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    buffer,",
                      "    \"myFileName.jpg\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/*  Returns a promise that resolves to:",
                      " *  {",
                      " *    \"fileName\": \"f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg\",",
                      " *    \"mediaType\": \"image\",",
                      " *    \"isPrivate\": false,",
                      " *    \"sizeInBytes\": 51085,",
                      " *    \"mimeType\": \"image/jpeg\",",
                      " *    \"iconUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"fileUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"originalFileName\": \"myFileName.jpg\",",
                      " *    \"hash\": \"bee2f8aab80b0d011499361c2eb189eb\",",
                      " *    \"labels\": [",
                      " *      \"Blue\",",
                      " *      \"Butterfly\",",
                      " *      \"Turquoise\"",
                      " *    ],",
                      " *    \"width\": 300,",
                      " *    \"height\": 300",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Import a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function importFile(url) {",
                      "  return mediaManager.importFile(",
                      "    \"/myImportFolder/subfolder\",",
                      "    url,",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"fileName\": \"my-image.jpg\",",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " *",
                      " * {",
                      " *   \"fileName\": \"f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"fileUrl\": \"media/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"parentFolderId\": \"2bf470f5be194b319cdb2accc3278ff9\",",
                      " *   \"originalFileName\": \"my-image.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"opStatus\": \"IN-DOWNLOAD-QUEUE\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Get a URL with a token to be used for uploading a file by POST",
                  "body":
                    [ "/***************",
                      " * Wix Backend *",
                      " ***************/",
                      "",
                      "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function getUploadUrl() {",
                      "  return mediaManager.getUploadUrl(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/********************************",
                      " * External Node.js application *",
                      " ********************************/",
                      "",
                      "import * as request from 'request-promise';",
                      "",
                      "async function uploadImageViaUploadUrl(uploadUrl, uploadToken, contentStream, fileName, contentType) {",
                      "  const body = {",
                      "    upload_token: uploadToken,",
                      "    file: {",
                      "      value: contentStream, // a Node.js Buffer with the file content",
                      "      options: {",
                      "        filename: fileName,",
                      "        contentType: contentType",
                      "      }",
                      "    }",
                      "  };",
                      "",
                      "  const response = await request.post({url: uploadUrl, formData: body, json: true});",
                      "  return `wix:image://v1/${response[0].file_name}/${response[0].original_file_name}#originWidth=${response[0].width}&originHeight=${response[0].height}`;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "mediaType",
              "type": "string",
              "doc": "Type of file to upload.\n One of:\n\n + `\"audio\"`\n + `\"document\"`\n + `\"image\"`\n + `\"shape\"`\n + `\"video\"`",
              "optional": true },
            { "name": "mimeType",
              "type": "string",
              "doc": "[Mime type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of\n the file to import. The specified value must match the actual mime type of\n the file's content.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "MetadataOptions",
        "locations":
          [ { "lineno": 70,
              "filename": "types.js" } ],
        "docs":
          { "summary": "An object containing information about the metadata options of a file to upload.",
            "links":
              [ "[`upload()`](#upload)",
                "[`importFile()`](#importFile)",
                "[`getUploadUrl()`](#getUploadUrl)" ],
            "examples":
              [ { "title": "Upload a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function uploadImage(buffer) {",
                      "  return mediaManager.upload(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    buffer,",
                      "    \"myFileName.jpg\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/*  Returns a promise that resolves to:",
                      " *  {",
                      " *    \"fileName\": \"f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg\",",
                      " *    \"mediaType\": \"image\",",
                      " *    \"isPrivate\": false,",
                      " *    \"sizeInBytes\": 51085,",
                      " *    \"mimeType\": \"image/jpeg\",",
                      " *    \"iconUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"fileUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"originalFileName\": \"myFileName.jpg\",",
                      " *    \"hash\": \"bee2f8aab80b0d011499361c2eb189eb\",",
                      " *    \"labels\": [",
                      " *      \"Blue\",",
                      " *      \"Butterfly\",",
                      " *      \"Turquoise\"",
                      " *    ],",
                      " *    \"width\": 300,",
                      " *    \"height\": 300",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Import a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function importFile(url) {",
                      "  return mediaManager.importFile(",
                      "    \"/myImportFolder/subfolder\",",
                      "    url,",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"fileName\": \"my-image.jpg\",",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " *",
                      " * {",
                      " *   \"fileName\": \"f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"fileUrl\": \"media/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"parentFolderId\": \"2bf470f5be194b319cdb2accc3278ff9\",",
                      " *   \"originalFileName\": \"my-image.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"opStatus\": \"IN-DOWNLOAD-QUEUE\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Get a URL with a token to be used for uploading a file by POST",
                  "body":
                    [ "/***************",
                      " * Wix Backend *",
                      " ***************/",
                      "",
                      "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function getUploadUrl() {",
                      "  return mediaManager.getUploadUrl(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/********************************",
                      " * External Node.js application *",
                      " ********************************/",
                      "",
                      "import * as request from 'request-promise';",
                      "",
                      "async function uploadImageViaUploadUrl(uploadUrl, uploadToken, contentStream, fileName, contentType) {",
                      "  const body = {",
                      "    upload_token: uploadToken,",
                      "    file: {",
                      "      value: contentStream, // a Node.js Buffer with the file content",
                      "      options: {",
                      "        filename: fileName,",
                      "        contentType: contentType",
                      "      }",
                      "    }",
                      "  };",
                      "",
                      "  const response = await request.post({url: uploadUrl, formData: body, json: true});",
                      "  return `wix:image://v1/${response[0].file_name}/${response[0].original_file_name}#originWidth=${response[0].width}&originHeight=${response[0].height}`;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "isPrivate",
              "type": "boolean",
              "doc": "Whether the link to the uploaded file will\n be public or private. Private links require a token to be used. Defaults to\n `false`.",
              "optional": true },
            { "name": "isVisitorUpload",
              "type": "boolean",
              "doc": "Indicates if the file was uploaded by a\n site visitor. Files uploaded by visitors are tagged in the Media Manager as\n being added by a visitor. Defaults to `true`.",
              "optional": true },
            { "name": "context",
              "type": "Object",
              "doc": "An object of key:value string pairs that is sent\n back in the [`onFileUploaded()`](wix-media-backend.Events.html#onFileUploaded)\n event.",
              "optional": true },
            { "name": "fileName",
              "type": "string",
              "doc": "In this case the fileName is the name you would like your file to appear as in the Media Manager.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PaginationOptions",
        "locations":
          [ { "lineno": 47,
              "filename": "types.js" } ],
        "docs":
          { "summary": "Pagination options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "limit",
              "type": "number",
              "doc": "Amount of records to retrieve.",
              "optional": true },
            { "name": "skip",
              "type": "number",
              "doc": "Number of records to skip.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "PagingOptions",
        "locations":
          [ { "lineno": 40,
              "filename": "types.js" } ],
        "docs":
          { "summary": "Paging options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "limit",
              "type": "number",
              "doc": "Amount of records to retrieve.",
              "optional": true },
            { "name": "skip",
              "type": "number",
              "doc": "Number of records to skip.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SortOptions",
        "locations":
          [ { "lineno": 40,
              "filename": "types.js" } ],
        "docs":
          { "summary": "Sorting options. **Note:** When sorting by `\"originalFileName\"`, folders and file names that begin with capital letters come before lowercase in '`asc`' order.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "order",
              "type": "string",
              "doc": "Direction of sort: `\"asc\"` or `\"desc\"`. Defaults to `\"asc\"`.",
              "optional": true },
            { "name": "field",
              "type": "string",
              "doc": "Field to sort by: `\"folderName\"` or `\"_updatedDate\"`. Deafults to `\"_updatedDate\"`.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "SortingOptions",
        "locations":
          [ { "lineno": 33,
              "filename": "types.js" } ],
        "docs":
          { "summary": "Sorting options. **Note:** When sorting by '`originalFileName`', folders and file names that begin with capital letters come before lowercase in '`asc`' order.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "order",
              "type": "string",
              "doc": "Direction of sort: `\"asc\"` or `\"desc\"`. Defaults to `\"asc\"`.",
              "optional": true },
            { "name": "field",
              "type": "string",
              "doc": "Field to sort by: `\"originalFileName\"` or `\"_updatedDate\"`. Deafults to `\"_updatedDate\"`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadOptions",
        "locations":
          [ { "lineno": 1,
              "filename": "types.js" } ],
        "docs":
          { "summary": "An object containing information about the options of a file to upload.",
            "links": [],
            "examples":
              [ { "title": "Upload a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function uploadImage(buffer) {",
                      "  return mediaManager.upload(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    buffer,",
                      "    \"myFileName.jpg\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/*  Returns a promise that resolves to:",
                      " *  {",
                      " *    \"fileName\": \"f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg\",",
                      " *    \"mediaType\": \"image\",",
                      " *    \"isPrivate\": false,",
                      " *    \"sizeInBytes\": 51085,",
                      " *    \"mimeType\": \"image/jpeg\",",
                      " *    \"iconUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"fileUrl\": \"wix:image://v1/f6c0f9_g2ae28cf29ec4639bc45698fee57cf56~mv2.jpg/myFileName.jpg#originWidth=300&originHeight=300\",",
                      " *    \"originalFileName\": \"myFileName.jpg\",",
                      " *    \"hash\": \"bee2f8aab80b0d011499361c2eb189eb\",",
                      " *    \"labels\": [",
                      " *      \"Blue\",",
                      " *      \"Butterfly\",",
                      " *      \"Turquoise\"",
                      " *    ],",
                      " *    \"width\": 300,",
                      " *    \"height\": 300",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Import a file",
                  "body":
                    [ "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function importFile(url) {",
                      "  return mediaManager.importFile(",
                      "    \"/myImportFolder/subfolder\",",
                      "    url,",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"fileName\": \"my-image.jpg\",",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/* Returns a promise that resolves to:",
                      " *",
                      " * {",
                      " *   \"fileName\": \"f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"fileUrl\": \"media/f6c0f9_tg439f4475a749e181dd14407fdbd37e~mv2.jpg\",",
                      " *   \"hash\": \"Ew00kXbu4Zt33rzjcWa6Ng==\",",
                      " *   \"sizeInBytes\": 51085,",
                      " *   \"mimeType\": \"image/jpeg\",",
                      " *   \"mediaType\": \"image\",",
                      " *   \"isPrivate\": false,",
                      " *   \"parentFolderId\": \"2bf470f5be194b319cdb2accc3278ff9\",",
                      " *   \"originalFileName\": \"my-image.jpg\",",
                      " *   \"sourceUrl\": \"https://somedomain.com/img/original-name.jpg\",",
                      " *   \"opStatus\": \"IN-DOWNLOAD-QUEUE\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Get a URL with a token to be used for uploading a file by POST",
                  "body":
                    [ "/***************",
                      " * Wix Backend *",
                      " ***************/",
                      "",
                      "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function getUploadUrl() {",
                      "  return mediaManager.getUploadUrl(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/********************************",
                      " * External Node.js application *",
                      " ********************************/",
                      "",
                      "import * as request from 'request-promise';",
                      "",
                      "async function uploadImageViaUploadUrl(uploadUrl, uploadToken, contentStream, fileName, contentType) {",
                      "  const body = {",
                      "    upload_token: uploadToken,",
                      "    file: {",
                      "      value: contentStream, // a Node.js Buffer with the file content",
                      "      options: {",
                      "        filename: fileName,",
                      "        contentType: contentType",
                      "      }",
                      "    }",
                      "  };",
                      "",
                      "  const response = await request.post({url: uploadUrl, formData: body, json: true});",
                      "  return `wix:image://v1/${response[0].file_name}/${response[0].original_file_name}#originWidth=${response[0].width}&originHeight=${response[0].height}`;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "mediaOptions",
              "type": "wix-media-backend.MediaManager.MediaOptions",
              "doc": "Media options of the file to upload.",
              "optional": true },
            { "name": "metadataOptions",
              "type": "wix-media-backend.MediaManager.MetadataOptions",
              "doc": "Metadata options of the file to upload.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UploadUrl",
        "locations":
          [ { "lineno": 187,
              "filename": "types.js" } ],
        "docs":
          { "summary": "An object containing information about an upload URL.",
            "links":
              [ "[getUploadUrl( )](#getUploadUrl)" ],
            "examples":
              [ { "title": "Get a URL with a token to be used for uploading a file by POST",
                  "body":
                    [ "/***************",
                      " * Wix Backend *",
                      " ***************/",
                      "",
                      "import { mediaManager } from 'wix-media-backend';",
                      "",
                      "export function getUploadUrl() {",
                      "  return mediaManager.getUploadUrl(",
                      "    \"/myUploadFolder/subfolder\",",
                      "    {",
                      "      \"mediaOptions\": {",
                      "        \"mimeType\": \"image/jpeg\",",
                      "        \"mediaType\": \"image\"",
                      "      },",
                      "      \"metadataOptions\": {",
                      "        \"isPrivate\": false,",
                      "        \"isVisitorUpload\": false,",
                      "        \"context\": {",
                      "          \"someKey1\": \"someValue1\",",
                      "          \"someKey2\": \"someValue2\"",
                      "        }",
                      "      }",
                      "    }",
                      "  );",
                      "}",
                      "",
                      "/********************************",
                      " * External Node.js application *",
                      " ********************************/",
                      "",
                      "import * as request from 'request-promise';",
                      "",
                      "async function uploadImageViaUploadUrl(uploadUrl, uploadToken, contentStream, fileName, contentType) {",
                      "  const body = {",
                      "    upload_token: uploadToken,",
                      "    file: {",
                      "      value: contentStream, // a Node.js Buffer with the file content",
                      "      options: {",
                      "        filename: fileName,",
                      "        contentType: contentType",
                      "      }",
                      "    }",
                      "  };",
                      "",
                      "  const response = await request.post({url: uploadUrl, formData: body, json: true});",
                      "  return `wix:image://v1/${response[0].file_name}/${response[0].original_file_name}#originWidth=${response[0].width}&originHeight=${response[0].height}`;",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "members":
          [ { "name": "uploadUrl",
              "type": "string",
              "doc": "The URL to POST a file to." },
            { "name": "uploadToken",
              "type": "string",
              "doc": "The token to use with the file POST." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }