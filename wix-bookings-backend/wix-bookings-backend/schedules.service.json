{ "name": "schedules",
  "memberOf": "wix-bookings-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 53,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "addParticipantToSchedule",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID. Required." },
            { "name": "participant",
              "type": "wix-bookings-backend.schedules.Participant",
              "doc": "Participant." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.AddParticipantResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 555,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Adds a participant to a schedule or to a specific session.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function addParticipantToSchedule(request) {",
                      "  return schedules.addParticipantToSchedule(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "addParticipantToSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Optional. If this field is given, the participant will be added to this specific session." },
            { "name": "participant",
              "type": "wix-bookings-backend.schedules.Participant",
              "doc": "Participant." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.AddParticipantResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 568,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Adds a participant to a schedule or to a specific session.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function addParticipantToSession(request) {",
                      "  return schedules.addParticipantToSession(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "cancel",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "cancelScheduleRequest",
              "type": "wix-bookings-backend.schedules.CancelScheduleRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.CancelScheduleResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 581,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Cancels a schedule. Equivalent to batch cancel of sessions linked to a single schedule.",
            "description":
              [ "The schedule changes to status = CANCELED -  all sessions up until the time of cancellation are kept, and all future sessions are removed.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function cancel(request) {",
                      "  return schedules.cancel(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "create",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "createScheduleRequest",
              "type": "wix-bookings-backend.schedules.CreateScheduleRequest",
              "doc": "schedule" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.CreateScheduleResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 594,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Creates a schedule.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function create(request) {",
                      "  return schedules.create(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "createSessionRequest",
              "type": "wix-bookings-backend.schedules.CreateSessionRequest",
              "doc": "Schedule's session" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.CreateSessionResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 606,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Creates a session (adds a session to a schedule).",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function createSession(request) {",
                      "  return schedules.createSession(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "deleteSessionRequest",
              "type": "wix-bookings-backend.schedules.DeleteSessionRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.DeleteSessionResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 618,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Deletes a session from a schedule.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function deleteSession(request) {",
                      "  return schedules.deleteSession(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "get",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "getScheduleRequest",
              "type": "wix-bookings-backend.schedules.GetScheduleRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.GetScheduleResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 630,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Returns a schedule from the calendar.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permissions scope.",
                "> With the Read Bookings Calendar permission scope, the schedule participants are not returned." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function get(request) {",
                      "  return schedules.get(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "getSessionRequest",
              "type": "wix-bookings-backend.schedules.GetSessionRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.GetSessionResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 643,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Returns a session from the calendar.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.",
                "> With the Read Bookings Calendar permission scope, the session participants are not returned." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function getSession(request) {",
                      "  return schedules.getSession(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "list",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "listSchedulesRequest",
              "type": "wix-bookings-backend.schedules.ListSchedulesRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.ListSchedulesResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 656,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Lists schedules by schedule IDs or schedule owner IDs.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings  permission scope.",
                "> With the Read Bookings Calendar permission scope, the schedule participants are not returned." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function list(request) {",
                      "  return schedules.list(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listSessions",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "listSessionsRequest",
              "type": "wix-bookings-backend.schedules.ListSessionsRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.ListSessionsResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 669,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Returns multiple sessions from the calendar.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope",
                "> With the Read Bookings Calendar permission scope, the sessions return without participants." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function listSessions(request) {",
                      "  return schedules.listSessions(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "removeParticipant",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "removeParticipantRequest",
              "type": "wix-bookings-backend.schedules.RemoveParticipantRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.RemoveParticipantResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 682,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Removes a participant from a schedule or from a specific session.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function removeParticipant(request) {",
                      "  return schedules.removeParticipant(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "splitInterval",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "splitIntervalRequest",
              "type": "wix-bookings-backend.schedules.SplitIntervalRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.SplitIntervalResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 694,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Splits an existing interval into two or more parts.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function splitInterval(request) {",
                      "  return schedules.splitInterval(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateInterval",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "updateIntervalRequest",
              "type": "wix-bookings-backend.schedules.UpdateIntervalRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 722,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Updates an existing recurring interval.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function updateInterval(request) {",
                      "  return schedules.updateInterval(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateParticipant",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "updateParticipantRequest",
              "type": "wix-bookings-backend.schedules.UpdateParticipantRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.UpdateParticipantResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 734,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Updates participant details.",
            "description":
              [ "The field values you specify replace the existing values. Fields that you don’t specify in the request remain unchanged.",
                "Array fields, if specified, overwrite the existing arrays; this discards any previous array elements.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function updateParticipant(request) {",
                      "  return schedules.updateParticipant(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateSchedule",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "Schedule identifier." },
            { "name": "scheduleUpdateInfo",
              "type": "wix-bookings-backend.schedules.ScheduleUpdateInfo" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.Schedule" ] },
            "doc": "Fulfilled - Schedule." },
        "locations":
          [ { "lineno": 706,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Updates a schedule.",
            "description":
              [ "This method supports patch semantics. The field values you specify replace the existing values.",
                "Fields that you don’t specify in the request remain unchanged.",
                "Array fields, if specified, overwrite the existing arrays; this discards any previous array elements.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function updateSchedule(request) {",
                      "  return schedules.updateSchedule(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "updateSessionRequest",
              "type": "wix-bookings-backend.schedules.UpdateSessionRequest" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.UpdateSessionResponse" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 748,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Updates a session.",
            "description":
              [ "The field values you specify replace the existing values. Fields that you don’t specify in the request remain unchanged.",
                "Array fields, if specified, overwrite the existing arrays; this discards any previous array elements.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { schedules } from 'wix-bookings-backend';",
                      "",
                      "export function updateSession(request) {",
                      "  return schedules.updateSession(request)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.log(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "AddParticipantResponse",
        "locations":
          [ { "lineno": 32,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-backend.schedules.Participant",
              "doc": "Participant.",
              "optional": true },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "sessionId",
              "type": "string",
              "doc": "Session ID. Optional.",
              "optional": true },
            { "name": "schedule",
              "type": "wix-bookings-backend.schedules.Schedule",
              "doc": "Schedule.",
              "optional": true },
            { "name": "session",
              "type": "wix-bookings-backend.schedules.Session",
              "doc": "Session.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Availability",
        "locations":
          [ { "lineno": 42,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Describes how to calculate the schedule's availability for adding participants. Optional.",
            "description":
              [ "Empty value indicates that this schedule is not available for adding participants.",
                "This definition will be applied to the schedule's available intervals. Schedule's available intervals are the",
                "recurring intervals minus sessions that has no more spots, or schedule's sessions with open spots." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "Date",
              "doc": "The time the schedule starts to be available for booking. Required.",
              "optional": true },
            { "name": "end",
              "type": "Date",
              "doc": "The time schedule stops to be available for booking. Optional. Empty value indicates that there is no end time.",
              "optional": true },
            { "name": "linkedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.LinkedSchedule" ] },
              "doc": "Reference to other schedules for availability calculations. Optional.\nSupported only when there are no recurring intervals and with availability calculation constraints.",
              "optional": true },
            { "name": "constraints",
              "type": "wix-bookings-backend.schedules.AvailabilityConstraints",
              "doc": "Additional constraints for calculating the schedule's availability for booking. Optional.\nDescribes how to calculate the specific slots that are available for booking.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AvailabilityConstraints",
        "locations":
          [ { "lineno": 57,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Additional constraints for calculating the schedule's availability for booking. Optional.",
            "description":
              [ "Describes how to calculate the specific slots that are available for booking." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "slotDurations",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "number" ] },
              "doc": "The optional durations of the available slots in minutes. Required. Minimum: 1.\nCalculation of the available slots will generate slots with these durations if are not produce a conflict with the available intervals.",
              "optional": true },
            { "name": "timeBetweenSlots",
              "type": "number",
              "doc": "The time between slots in minutes.\nIf a slot has already booked, then the start time of the next available slot will be calculated by the booked slot's end time plus the time_between_slots value.\nMinimum: 0. Maximum: 120.",
              "optional": true },
            { "name": "slotsSplitInterval",
              "type": "wix-bookings-backend.schedules.SplitInterval",
              "doc": "Specify how to split the slots in intervals of minutes.\nThis value indicates the time between available slots' start time. e.g., from 5 minute slots (3:00, 3:05, 3:15) and 1 hour slots (3:00, 4:00, 5:00). (read-only, cannot be set in code)",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CalendarConference",
        "locations":
          [ { "lineno": 71,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "A conference meeting created for the schedule. This is used when a participant is added to a schedule.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "externalId",
              "type": "string",
              "doc": "The conference meeting ID in the provider's conferencing system",
              "optional": true },
            { "name": "hostUrl",
              "type": "string",
              "doc": "URL used by the host to start the conference meeting",
              "optional": true },
            { "name": "providerId",
              "type": "string",
              "doc": "The provider Id",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "The conference meeting ID (In WiX Calendar)",
              "optional": true },
            { "name": "guestUrl",
              "type": "string",
              "doc": "URL used by a guest to join the conference meeting",
              "optional": true },
            { "name": "password",
              "type": "string",
              "doc": "Password to join the conference.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CalendarDateTime",
        "locations":
          [ { "lineno": 83,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "The end time of the session. Required.",
            "description":
              [ "The end time must be after the start time and with the same calendar date time field." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "timestamp",
              "type": "Date",
              "doc": "The time in seconds of UTC time since Unix epoch. Optional.\nRequired if the localDateTime field is not specified.\nIf the local date time is given then this field will be ignored and will be calculated from\nthe local date time and the business timezone.",
              "optional": true },
            { "name": "localDateTime",
              "type": "wix-bookings-backend.schedules.LocalDateTime",
              "doc": "The time in local date time. Optional.\nIf the this field is specified then the timestamp will be ignored and will be calculated from\nthis local date time and the business timezone.",
              "optional": true },
            { "name": "timeZone",
              "type": "string",
              "doc": "The time zone. Optional.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelScheduleRequest",
        "locations":
          [ { "lineno": 98,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "preserveFutureSessionsWithParticipants",
              "type": "boolean",
              "doc": "Whether to preserve future sessions with reservations. Defaults to false.",
              "optional": true },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "from",
              "type": "Date",
              "doc": "Time to cancel the sessions from. Optional. If this field is empty, all of this schedule's sessions will be canceled.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.schedules.ParticipantNotification",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelScheduleResponse",
        "locations":
          [ { "lineno": 107,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.schedules.Schedule",
              "doc": "Schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ConferenceProvider",
        "locations":
          [ { "lineno": 113,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Conferencing Provider. A schedule with a conferencing provider will use to provider information to create a conference meeting on the provider's system when a session is created on the schedule or on one of its linked schedule's.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "providerId",
              "type": "string",
              "doc": "Conferencing provider ID",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateScheduleRequest",
        "locations":
          [ { "lineno": 120,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "schedule",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.schedules.Schedule",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateScheduleResponse",
        "locations":
          [ { "lineno": 127,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.schedules.Schedule",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionRequest",
        "locations":
          [ { "lineno": 133,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Schedule's session",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.schedules.Session",
              "doc": "Session." },
            { "name": "deleted",
              "type": "wix-bookings-backend.schedules.FieldMask",
              "doc": "Session fields to revert to empty, in order to revert to the data inherited from the schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionResponse",
        "locations":
          [ { "lineno": 141,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.schedules.Session",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionRequest",
        "locations":
          [ { "lineno": 147,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Session ID. Required." },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.schedules.ParticipantNotification",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionResponse",
        "locations":
          [ { "lineno": 154,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Session ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ExternalCalendarOverrides",
        "locations":
          [ { "lineno": 160,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Optional.",
            "description":
              [ "When provided, the values will be used to override default fields values which are synced to external calendar.",
                "Read more in external calendar documentation." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Optional. When provided this value will be used in the synced title of the external calendar event. Default is Session.title",
              "optional": true },
            { "name": "description",
              "type": "string",
              "doc": "Optional. When provided this value will be used in the synced description of the external calendar event.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FieldMask",
        "locations":
          [ { "lineno": 501,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Session fields to revert to empty, in order to revert to the data inherited from the schedule.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "paths",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The set of field mask paths.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Frequency",
        "locations":
          [ { "lineno": 170,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "The frequency of the interval. Optional. The default is frequency with the default repetition.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "repetition",
              "type": "number",
              "doc": "The frequency of the recurrence in weeks. i.e. when this value is 4, the interval occurs every 4 weeks. Optional. The default is 1. minimum: 1, maximum: 52.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetScheduleRequest",
        "locations":
          [ { "lineno": 177,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Schedule ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetScheduleResponse",
        "locations":
          [ { "lineno": 183,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.schedules.Schedule",
              "doc": "Schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetSessionRequest",
        "locations":
          [ { "lineno": 189,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Session ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetSessionResponse",
        "locations":
          [ { "lineno": 195,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.schedules.Session",
              "doc": "Session.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Interval",
        "locations":
          [ { "lineno": 201,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "The interval rules. The day, hour and minutes the interval is recurring.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "daysOfWeek",
              "type": "string",
              "doc": "The day the interval accrue. Optional. The default is the day of the recurring interval's start time.\nOne of:\n + \"UNDEFINED\"\n + \"MON\"\n + \"TUE\"\n + \"WED\"\n + \"THU\"\n + \"FRI\"\n + \"SAT\"\n + \"SUN\"",
              "optional": true },
            { "name": "hourOfDay",
              "type": "number",
              "doc": "The hour of the day the interval accrue. must be consistent with the Interval start time. Options. The default is 0. minimum: 0, maximum: 23.",
              "optional": true },
            { "name": "minuteOfHour",
              "type": "number",
              "doc": "The minutes of hour the interval accrue. must be consistent with the Interval end time. Options. The default is 0. minimum: 0, maximum: 59.",
              "optional": true },
            { "name": "duration",
              "type": "number",
              "doc": "The duration of the interval in minutes. Required. Part of the session end time calculation. minimum: 1, maximum: 86400.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "LinkedSchedule",
        "locations":
          [ { "lineno": 220,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule Identifier.",
              "optional": true },
            { "name": "transparency",
              "type": "string",
              "doc": "Indicates if the schedule is available during the session. Possible values are: FREE - the schedule is available during the session. BUSY - schedule are not available during the session, this is the default value.\nOne of:\n + \"UNDEFINED\"\n + \"FREE\"\n + \"BUSY\"",
              "optional": true },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "The linked schedule owner id. Read only. Derived from the schedule_id. (read-only, cannot be set in code)",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSchedulesRequest",
        "locations":
          [ { "lineno": 232,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule IDs.",
              "optional": true },
            { "name": "scheduleOwnerIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule owner IDs.",
              "optional": true },
            { "name": "dontIncludeScheduleParticipants",
              "type": "boolean",
              "doc": "Whether to return a list of the schedule's participants.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSchedulesResponse",
        "locations":
          [ { "lineno": 240,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.Schedule" ] },
              "doc": "Schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSessionsRequest",
        "locations":
          [ { "lineno": 246,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "ids",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Session ID." },
            { "name": "fieldMask",
              "type": "wix-bookings-backend.schedules.FieldMask",
              "doc": "Field mask of fields to return. Currently only supports the \"scheduleOwnerId\" field.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSessionsResponse",
        "locations":
          [ { "lineno": 253,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.Session" ] },
              "doc": "Session.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "LocalDateTime",
        "locations":
          [ { "lineno": 259,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "The time in local date time. Optional.",
            "description":
              [ "If the this field is specified then the timestamp will be ignored and will be calculated from",
                "this local date time and the business timezone." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "hourOfDay",
              "type": "number",
              "optional": true },
            { "name": "dayOfMonth",
              "type": "number",
              "optional": true },
            { "name": "year",
              "type": "number",
              "optional": true },
            { "name": "monthOfYear",
              "type": "number",
              "optional": true },
            { "name": "minutesOfHour",
              "type": "number",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Location",
        "locations":
          [ { "lineno": 1,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Geographic location of the session as free-form text. Optional.",
            "description":
              [ "This is the default location of the schedule's sessions." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "locationType",
              "type": "string",
              "doc": "One of:\n + \"UNDEFINED\"\n + \"OWNER_BUSINESS\"\n + \"OWNER_CUSTOM\"\n + \"CUSTOM\"",
              "optional": true },
            { "name": "address",
              "type": "string",
              "doc": "The address as set by the owner. Valid only when location_type is OWNER_CUSTOM.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Participant",
        "locations":
          [ { "lineno": 272,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Participant.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Name of the registered participant (optional).",
              "optional": true },
            { "name": "email",
              "type": "string",
              "doc": "Email address of the contact (optional).",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Reservation ID. Required.",
              "optional": true },
            { "name": "contactId",
              "type": "string",
              "doc": "Contact ID (optional).",
              "optional": true },
            { "name": "partySize",
              "type": "number",
              "doc": "Party size (optional). Defaults to 0. Min value is 0, max value is 250.",
              "optional": true },
            { "name": "approvalStatus",
              "type": "string",
              "doc": "Approval status for the participant. Defaults to UNDEFINED.\nOne of:\n + \"UNDEFINED\"\n + \"PENDING\"\n + \"APPROVED\"\n + \"DECLINED\"",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Phone number of the contact (optional).",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ParticipantNotification",
        "locations":
          [ { "lineno": 290,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Whether to notify participants about the change, and an optional custom message.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "notifyParticipants",
              "type": "boolean",
              "doc": "Whether to notify participants about the change",
              "optional": true },
            { "name": "message",
              "type": "string",
              "doc": "message to send to the participants, optional",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Price",
        "locations":
          [ { "lineno": 15,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "`key` of type string, `value` of type ref",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "string",
              "doc": "The price amount",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency",
              "optional": true },
            { "name": "downPayAmount",
              "type": "string",
              "doc": "Optional. Represents a required down payment as part of the transaction process.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Rate",
        "locations":
          [ { "lineno": 24,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "The price options offered to book this schedule's slots. Optional. The default is no rate.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "labeledPriceOptions",
              "type": "Object",
              "doc": "Set of key-value pairs.Mapping between a named price option and the Price itself.",
              "optional": true },
            { "name": "priceText",
              "type": "string",
              "doc": "User defined textual price. Optional.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RecurringInterval",
        "locations":
          [ { "lineno": 298,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "affectedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.LinkedSchedule" ] },
              "doc": "Specifies the list of linked schedules and the way this link affects the corresponding schedules' availability. Can be calculated from the schedule or overridden on the recurring interval.",
              "optional": true },
            { "name": "interval",
              "type": "wix-bookings-backend.schedules.Interval",
              "doc": "The interval rules. The day, hour and minutes the interval is recurring.",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "The recurring interval identifier. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "intervalType",
              "type": "string",
              "doc": "The type of recurring interval.\nOne of:\n + \"UNDEFINED\"\n + \"EVENT\"\n + \"TIME_AVAILABILITY\"\n + \"AVAILABILITY\"",
              "optional": true },
            { "name": "end",
              "type": "Date",
              "doc": "The end time of the recurring interval. Optional. Empty value indicates that there is no end time.",
              "optional": true },
            { "name": "frequency",
              "type": "wix-bookings-backend.schedules.Frequency",
              "doc": "The frequency of the interval. Optional. The default is frequency with the default repetition.",
              "optional": true },
            { "name": "start",
              "type": "Date",
              "doc": "The start time of the recurring interval. Required.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RemoveParticipantRequest",
        "locations":
          [ { "lineno": 315,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Participant ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RemoveParticipantResponse",
        "locations":
          [ { "lineno": 321,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Participant ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Schedule",
        "locations":
          [ { "lineno": 327,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Schedule.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rate",
              "type": "wix-bookings-backend.schedules.Rate",
              "doc": "The price options offered to book this schedule's slots. Optional. The default is no rate.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-backend.schedules.Location",
              "doc": "Geographic location of the session as free-form text. Optional.\nThis is the default location of the schedule's sessions.",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-backend.schedules.CalendarConference",
              "doc": "A conference meeting created for the schedule. This is used when a participant is added to a schedule.",
              "optional": true },
            { "name": "firstSessionStart",
              "type": "Date",
              "doc": "The start time of the schedule. Read only. calculated by the start time of the first session. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "The id of the schedule's owner. e.g, in case of schedule of a service, service id.",
              "optional": true },
            { "name": "intervals",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.RecurringInterval" ] },
              "doc": "Specifies the intervals for the sessions calculation. Optional. e.g. when creating class service you can add\npattern for recurring intervals, these intervals can be returned as schedule's sessions or available slots if\nthere are no other availability calculation constraints and the capacity is bigger then the current total number\nof sessions' participants.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags of the schedule. Optional. e.g., tag as service type. Google sessions tag as \"Google\".\nThis is the default tags of the schedule's sessions.",
              "optional": true },
            { "name": "participants",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.Participant" ] },
              "doc": "The registered participants of this schedule. Read only.\nCan be added using Schedules service using the Participants apis. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "availability",
              "type": "wix-bookings-backend.schedules.Availability",
              "doc": "Describes how to calculate the schedule's availability for adding participants. Optional.\nEmpty value indicates that this schedule is not available for adding participants.\nThis definition will be applied to the schedule's available intervals. Schedule's available intervals are the\nrecurring intervals minus sessions that has no more spots, or schedule's sessions with open spots.",
              "optional": true },
            { "name": "lastSessionEnd",
              "type": "Date",
              "doc": "The end time of the schedule. Read only. calculated by the end time of the last session. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "version",
              "type": "number",
              "doc": "the schedule's version (read-only, cannot be set in code)",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Schedule identifier.",
              "optional": true },
            { "name": "updated",
              "type": "Date",
              "doc": "The time when this schedule was last modified. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "inheritedFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "A list of fields for which values were inherited from the business. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "status",
              "type": "string",
              "doc": "The schedule's status. Optional.\nPossible values are: CREATED, This is the default status. CANCELLED, the schedule was cancelled.\nOne of:\n + \"UNDEFINED\"\n + \"CREATED\"\n + \"CANCELLED\"\n(read-only, cannot be set in code)",
              "optional": true },
            { "name": "totalNumberOfParticipants",
              "type": "number",
              "doc": "The current number of registered participants on this schedule when this schedule is a bookable slot. Read only.\ncalculated by the number of participants plus the additional participants. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "conferenceProvider",
              "type": "wix-bookings-backend.schedules.ConferenceProvider",
              "doc": "Conferencing Provider. A schedule with a conferencing provider will use to provider information to create a conference meeting on the provider's system when a session is created on the schedule or on one of its linked schedule's.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-backend.schedules.ExternalCalendarOverrides",
              "doc": "Optional.\nWhen provided, the values will be used to override default fields values which are synced to external calendar.\nRead more in external calendar documentation.",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "The textual title of the schedule. Optional.\nThis is the default title of the schedule's sessions. i.e., a service name. Max length: 6000.",
              "optional": true },
            { "name": "timeZone",
              "type": "string",
              "doc": "The time zone of the schedule. Optional.",
              "optional": true },
            { "name": "created",
              "type": "Date",
              "doc": "The time when this schedule was created. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "The maximum number of participants that can be added to this schedule's slots. Optional.\nThe default is 1. This is the default capacity of the schedule's sessions. minimum: 1, maximum: 1000",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ScheduleUpdateInfo",
        "locations":
          [ { "lineno": 508,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "TODO",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rate",
              "type": "wix-bookings-backend.schedules.Rate",
              "doc": "The price options offered to book this schedule's slots. Optional. The default is no rate.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-backend.schedules.Location",
              "doc": "Geographic location of the session as free-form text. Optional.\nThis is the default location of the schedule's sessions.",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-backend.schedules.CalendarConference",
              "doc": "A conference meeting created for the schedule. This is used when a participant is added to a schedule.",
              "optional": true },
            { "name": "firstSessionStart",
              "type": "Date",
              "doc": "The start time of the schedule. Read only. calculated by the start time of the first session. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "The id of the schedule's owner. e.g, in case of schedule of a service, service id.",
              "optional": true },
            { "name": "intervals",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.RecurringInterval" ] },
              "doc": "Specifies the intervals for the sessions calculation. Optional. e.g. when creating class service you can add\npattern for recurring intervals, these intervals can be returned as schedule's sessions or available slots if\nthere are no other availability calculation constraints and the capacity is bigger then the current total number\nof sessions' participants.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags of the schedule. Optional. e.g., tag as service type. Google sessions tag as \"Google\".\nThis is the default tags of the schedule's sessions.",
              "optional": true },
            { "name": "participants",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.Participant" ] },
              "doc": "The registered participants of this schedule. Read only.\nCan be added using Schedules service using the Participants apis. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "availability",
              "type": "wix-bookings-backend.schedules.Availability",
              "doc": "Describes how to calculate the schedule's availability for adding participants. Optional.\nEmpty value indicates that this schedule is not available for adding participants.\nThis definition will be applied to the schedule's available intervals. Schedule's available intervals are the\nrecurring intervals minus sessions that has no more spots, or schedule's sessions with open spots.",
              "optional": true },
            { "name": "lastSessionEnd",
              "type": "Date",
              "doc": "The end time of the schedule. Read only. calculated by the end time of the last session. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "version",
              "type": "number",
              "doc": "the schedule's version (read-only, cannot be set in code)",
              "optional": true },
            { "name": "updated",
              "type": "Date",
              "doc": "The time when this schedule was last modified. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "inheritedFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "A list of fields for which values were inherited from the business. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "status",
              "type": "string",
              "doc": "The schedule's status. Optional.\nPossible values are: CREATED, This is the default status. CANCELLED, the schedule was cancelled.\nOne of:\n + \"UNDEFINED\"\n + \"CREATED\"\n + \"CANCELLED\"\n(read-only, cannot be set in code)",
              "optional": true },
            { "name": "totalNumberOfParticipants",
              "type": "number",
              "doc": "The current number of registered participants on this schedule when this schedule is a bookable slot. Read only.\ncalculated by the number of participants plus the additional participants. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "conferenceProvider",
              "type": "wix-bookings-backend.schedules.ConferenceProvider",
              "doc": "Conferencing Provider. A schedule with a conferencing provider will use to provider information to create a conference meeting on the provider's system when a session is created on the schedule or on one of its linked schedule's.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-backend.schedules.ExternalCalendarOverrides",
              "doc": "Optional.\nWhen provided, the values will be used to override default fields values which are synced to external calendar.\nRead more in external calendar documentation.",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "The textual title of the schedule. Optional.\nThis is the default title of the schedule's sessions. i.e., a service name. Max length: 6000.",
              "optional": true },
            { "name": "timeZone",
              "type": "string",
              "doc": "The time zone of the schedule. Optional.",
              "optional": true },
            { "name": "created",
              "type": "Date",
              "doc": "The time when this schedule was created. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "The maximum number of participants that can be added to this schedule's slots. Optional.\nThe default is 1. This is the default capacity of the schedule's sessions. minimum: 1, maximum: 1000",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Session",
        "locations":
          [ { "lineno": 375,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rate",
              "type": "wix-bookings-backend.schedules.Rate",
              "doc": "The price options offered to book this schedule's slots. Optional. The default is no rate.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-backend.schedules.Location",
              "doc": "Geographic location of the session as free-form text. Optional.\nThis is the default location of the schedule's sessions.",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-backend.schedules.CalendarConference",
              "doc": "A conference meeting created for the schedule. This is used when a participant is added to a schedule.",
              "optional": true },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "The schedule owner id. Read only. Derived from the schedule_id. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags of the session. Optional. The default value is the tags in the schedule.",
              "optional": true },
            { "name": "participants",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.Participant" ] },
              "doc": "The registered participants of this session. Read only.\nCan be added using Schedules service using the Participants apis. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "affectedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.LinkedSchedule" ] },
              "doc": "Specifies the list of linked schedules and the way this link affects the corresponding schedules' availability.\nCan be calculated from the schedule intervals or overridden on the Session.\nCurrently supported only for 1 schedule.",
              "optional": true },
            { "name": "version",
              "type": "wix-bookings-backend.schedules.Session_Version",
              "optional": true },
            { "name": "originalStart",
              "type": "Date",
              "doc": "The original start time of the session in the result. Optional.",
              "optional": true },
            { "name": "id",
              "type": "string",
              "doc": "Identifier for this session when session is a single session or generated from recurring interval. Optional. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "inheritedFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "A list of fields for which values were inherited from the schedule. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "recurringIntervalId",
              "type": "string",
              "doc": "Recurring interval id. Read only. Optional.\nSpecified when the session was originally generated from schedule recurring interval. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "timeReservedAfter",
              "type": "number",
              "doc": "Time reserved after session end time. Read only.\nDerived from the schedule availability constraints time between slots.",
              "optional": true },
            { "name": "status",
              "type": "string",
              "doc": "Status of the session. Optional. Possible values are: CONFIRMED, this is the default value.\nCANCELLED, if this session was generated from recurring interval and then got deleted, or if it was created as a single session and then was deleted.\nOne of:\n + \"UNDEFINED\"\n + \"CONFIRMED\"\n + \"CANCELLED\"\n(read-only, cannot be set in code)",
              "optional": true },
            { "name": "totalNumberOfParticipants",
              "type": "number",
              "doc": "The current number of registered participants on this session. Read only.\nCalculated by the number of participants plus the additional participants. (read-only, cannot be set in code)",
              "optional": true },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule identifier. The schedule of the session. Required.\nSession must be under specific schedule.",
              "optional": true },
            { "name": "end",
              "type": "wix-bookings-backend.schedules.CalendarDateTime",
              "doc": "The end time of the session. Required.\nThe end time must be after the start time and with the same calendar date time field.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-backend.schedules.ExternalCalendarOverrides",
              "doc": "Optional.\nWhen provided, the values will be used to override default fields values which are synced to external calendar.\nRead more in external calendar documentation.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "The note of the session. Indicating additional information about the session. Optional.\nThe default is empty notes.",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "The textual title of the session, i.e. A service name. Optional. The default value is the title in the schedule.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "The type of the session.\nCan be event or working hours session that represent available time of the schedule owner.\nThe default is event.\nOne of:\n + \"UNDEFINED\"\n + \"EVENT\"\n + \"WORKING_HOURS\"\n + \"TIME_AVAILABILITY\"\n + \"AVAILABILITY\"",
              "optional": true },
            { "name": "start",
              "type": "wix-bookings-backend.schedules.CalendarDateTime",
              "doc": "The end time of the session. Required.\nThe end time must be after the start time and with the same calendar date time field.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "The maximum number of participants that can be added to the session. Optional.\nThe default value is the capacity in the schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Session_Version",
        "locations":
          [ { "lineno": 432,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleVersion",
              "type": "number",
              "optional": true },
            { "name": "sessionVersion",
              "type": "number",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SplitInterval",
        "locations":
          [ { "lineno": 439,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "summary": "Specify how to split the slots in intervals of minutes.",
            "description":
              [ "This value indicates the time between available slots' start time. e.g., from 5 minute slots (3:00, 3:05, 3:15) and 1 hour slots (3:00, 4:00, 5:00)." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sameAsDuration",
              "type": "boolean",
              "doc": "Required. Indicates where the value for schedules split interval is specifies.\nIn case this field is true, the value will be the sum of the first duration in\nschedule.availabilityConstraints.SlotDurations field and schedule.availabilityConstraints.TimeBetweenSlots field.",
              "optional": true },
            { "name": "valueInMinutes",
              "type": "number",
              "doc": "Required in case the same_as_duration field is false.\nOptional in case the same_as_duration field is true.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SplitIntervalRequest",
        "locations":
          [ { "lineno": 451,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "intervalId",
              "type": "string",
              "doc": "Interval ID." },
            { "name": "splitTimes",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "Date" ] },
              "doc": "A list of times where the interval is to be split. Must not be in the past. Must not contain duplicate times." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SplitIntervalResponse",
        "locations":
          [ { "lineno": 459,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "intervals",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.RecurringInterval" ] },
              "doc": "A list of intervals where the first is the modified original interval followed by other newly created intervals.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateIntervalRequest",
        "locations":
          [ { "lineno": 465,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "interval",
              "type": "wix-bookings-backend.schedules.RecurringInterval",
              "doc": "Recurring Interval" },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.schedules.ParticipantNotification",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateParticipantRequest",
        "locations":
          [ { "lineno": 473,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-backend.schedules.Participant",
              "doc": "Participant to update, identified by the ID field." },
            { "name": "fieldMask",
              "type": "wix-bookings-backend.schedules.FieldMask",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateParticipantResponse",
        "locations":
          [ { "lineno": 480,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-backend.schedules.Participant",
              "doc": "Participant." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionRequest",
        "locations":
          [ { "lineno": 486,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "updated",
              "type": "wix-bookings-backend.schedules.FieldMask",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "session",
              "type": "wix-bookings-backend.schedules.Session",
              "doc": "Session." },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.schedules.ParticipantNotification",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-backend.schedules.FieldMask",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionResponse",
        "locations":
          [ { "lineno": 495,
              "filename": "com.wix.bookings.schedules.api.v1.Schedules.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.schedules.Session",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }