{ "name": "ResourceCatalogQueryResult",
  "memberOf": "wix-bookings-backend.Resources",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 2,
      "filename": "ResourceCatalogQueryResult.js" },
  "docs":
    { "summary": "The results of a resource catalog query, containing the retrieved items.",
      "description":
        [ "When you execute a query with the [`find()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/find)",
          " function, it returns a Promise that resolves to a `ResourceCatalogQueryResult` object.",
          " This object contains the items that match the query, information about the",
          " query itself, and functions for paging through the query results." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentPage",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 124,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Returns the index of the current results page number.",
            "description":
              [ "The `currentPage` is a zero-based index of the current page of results.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend.resources/resourcecatalogqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend.resources/resourcecatalogqueryresult/prev) and",
                " [`next()`](wix-bookings-backend.resources/resourcecatalogqueryresult/next) functions.",
                "",
                " The `currentPage` property returns `undefined` if the query returned no results." ],
            "links": [],
            "examples":
              [ { "title": "Get the current page index of a query result",
                  "body":
                    [ "let resultPage = results.currentPage; // 0" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the current page index of the query result",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultPage = results.currentPage; // 0",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "wix-bookings-backend.Resources.ResourceQueryResults" ] },
        "locations":
          [ { "lineno": 12,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Returns an array of resources, slugs, and schedules that match the query.",
            "description":
              [ "The current page of resources, slugs, and schedules retrieved by the query.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend.resources/resourcecatalogqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend.resources/resourcecatalogqueryresult/prev) and",
                " [`next()`](wix-bookings-backend.resources/resourcecatalogqueryresult/next) functions.",
                "",
                " When no items match the query, the array is empty." ],
            "links": [],
            "examples":
              [ { "title": "Perform a query and get the resource catalog items from the result",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items; // see below",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      " /* items:",
                      "  * ",
                      "  * [",
                      "  *   {",
                      "  *     \"resource\": {",
                      "  *       \"_id\": \"2015d816-4ae1-4eb3-8f93-3c97441b5832\",",
                      "  *       \"name\": \"John Doe\",",
                      "  *       \"email\": \"john@doe.com\",",
                      "  *       \"phone\": \"555 4567\",",
                      "  *       \"description\": \"Fitness Instructor\",",
                      "  *       \"tags\": [",
                      "  *         \"staff\"",
                      "  *       ],",
                      "  *       \"scheduleIds\": [",
                      "  *         \"3ade521f-ba4e-4782-977c-0efe84e7c797\"",
                      "  *       ],",
                      "  *       \"status\": \"UPDATED\"",
                      "  *     },",
                      "  *     \"schedules\": [",
                      "  *       {",
                      "  *         \"availability\": {",
                      "  *           \"linkedSchedules\": [],",
                      "  *           \"start\": \"2021-01-01T06:00:00Z\"",
                      "  *         },",
                      "  *         \"_id\": \"3ade521f-ba4e-4782-977c-0efe84e7c797\",",
                      "  *         \"scheduleOwnerId\": \"2015d816-4ae1-4eb3-8f93-3c97441b5832\"",
                      "  *       }",
                      "  *     ],",
                      "  *     \"slugs\": [",
                      "  *       {",
                      "  *         \"_createdDate\": \"2021-04-12T11:49:50.416Z\",",
                      "  *         \"name\": \"john-doe-6\"",
                      "  *       }",
                      "  *     ]",
                      "  *   },",
                      "  *   {",
                      "  *     \"resource\": {",
                      "  *       \"_id\": \"290113d8-e525-4619-a154-b0c45110348f\",",
                      "  *       \"name\": \"Jack Brown\",",
                      "  *       \"email\": \"jbrown@test.com\",",
                      "  *       \"phone\": \"555 4321\",",
                      "  *       \"description\": \"Instructor\",",
                      "  *       \"tags\": [",
                      "  *         \"staff\"",
                      "  *       ],",
                      "  *       \"scheduleIds\": [",
                      "  *         \"95d8769e-ce74-4fe2-ab79-ab24e5c14e0e\"",
                      "  *       ],",
                      "  *       \"status\": \"UPDATED\"",
                      "  *     },",
                      "  *     \"schedules\": [",
                      "  *       {",
                      "  *         \"availability\": {",
                      "  *           \"linkedSchedules\": [",
                      "  *             {",
                      "  *               \"scheduleId\": \"9299760d-8a4a-4f89-b348-1fc611f4be17\"",
                      "  *             }",
                      "  *           ],",
                      "  *           \"start\": \"2021-04-18T07:22:42.274Z\"",
                      "  *         },",
                      "  *         \"_id\": \"95d8769e-ce74-4fe2-ab79-ab24e5c14e0e\",",
                      "  *         \"scheduleOwnerId\": \"290113d8-e525-4619-a154-b0c45110348f\"",
                      "  *       }",
                      "  *     ],",
                      "  *     \"slugs\": [",
                      "  *       {",
                      "  *         \"_createdDate\": \"2021-04-18T07:22:43.392Z\",",
                      "  *         \"name\": \"jack-brown\"",
                      "  *       }",
                      "  *     ]",
                      "  *   },",
                      "  *   {",
                      "  *     \"resource\": {",
                      "  *       \"_id\": \"4c17a7cc-c1d8-4fd1-aacd-0768df100b6d\",",
                      "  *       \"name\": \"Joe  Blue\",",
                      "  *       \"email\": \"jb@gmail.com\",",
                      "  *       \"description\": \"Joe is a good guy\",",
                      "  *       \"tags\": [",
                      "  *         \"staff\"",
                      "  *       ],",
                      "  *       \"scheduleIds\": [",
                      "  *         \"d165e99c-bae4-4e6f-a064-7d4108902be0\"",
                      "  *       ],",
                      "  *       \"status\": \"UPDATED\"",
                      "  *     },",
                      "  *     \"schedules\": [",
                      "  *       {",
                      "  *         \"availability\": {",
                      "  *           \"linkedSchedules\": [",
                      "  *             {",
                      "  *               \"scheduleId\": \"9299760d-8a4a-4f89-b348-1fc611f4be17\"",
                      "  *             }",
                      "  *           ],",
                      "  *           \"start\": \"2021-03-24T16:08:16.832Z\"",
                      "  *         },",
                      "  *         \"_id\": \"d165e99c-bae4-4e6f-a064-7d4108902be0\",",
                      "  *         \"scheduleOwnerId\": \"4c17a7cc-c1d8-4fd1-aacd-0768df100b6d\"",
                      "  *       }",
                      "  *     ],",
                      "  *     \"slugs\": [",
                      "  *       {",
                      "  *         \"_createdDate\": \"2021-01-18T10:41:31.652Z\",",
                      "  *         \"name\": \"joe-blue\"",
                      "  *       }",
                      "  *     ]",
                      "  *   },",
                      "  *   {",
                      "  *     \"resource\": {",
                      "  *       \"_id\": \"b5147aad-f117-4f8e-90fe-d61043112c94\",",
                      "  *       \"name\": \"Joe  Smith\",",
                      "  *       \"email\": \"js@s.com\",",
                      "  *       \"phone\": \"8888\",",
                      "  *       \"description\": \"\",",
                      "  *       \"tags\": [",
                      "  *         \"staff\"",
                      "  *       ],",
                      "  *       \"scheduleIds\": [",
                      "  *         \"892714a8-01f6-491c-b07c-89ae4f416dc0\"",
                      "  *       ],",
                      "  *       \"status\": \"UPDATED\"",
                      "  *     },",
                      "  *     \"schedules\": [",
                      "  *       {",
                      "  *         \"availability\": {",
                      "  *           \"linkedSchedules\": [",
                      "  *             {",
                      "  *               \"scheduleId\": \"9299760d-8a4a-4f89-b348-1fc611f4be17\"",
                      "  *             }",
                      "  *           ],",
                      "  *           \"start\": \"2021-01-01T06:00:00Z\"",
                      "  *         },",
                      "  *         \"_id\": \"892714a8-01f6-491c-b07c-89ae4f416dc0\",",
                      "  *         \"scheduleOwnerId\": \"b5147aad-f117-4f8e-90fe-d61043112c94\"",
                      "  *       }",
                      "  *     ],",
                      "  *     \"slugs\": [",
                      "  *       {",
                      "  *         \"_createdDate\": \"2021-01-25T18:10:42.682Z\",",
                      "  *         \"name\": \"joe-smith\"",
                      "  *       }",
                      "  *     ]",
                      "  *   }",
                      "  * ]",
                      "  */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "length",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 48,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Returns the number of items in the current results page.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend.resources/resourcecatalogqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend.resources/resourcecatalogqueryresult/prev) and",
                " [`next()`](wix-bookings-backend.resources/resourcecatalogqueryresult/next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the length of a query result",
                  "body":
                    [ "let resultLength = results.length; // 20" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the length of the result",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultLength = results.length; // 20",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "pageSize",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 93,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Returns the query page size.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/limit) function, can be retrieved using ",
                "the `pageSize` property, and navigating through pages is done with ",
                "the [`prev()`](wix-bookings-backend.resources/resourcecatalogqueryresult/prev) and  [`next()`](wix-bookings-backend.resources/resourcecatalogqueryresult/next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the page size of a query result",
                  "body":
                    [ "let resultPageSize = results.pageSize; // 50" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the page size of the query result",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultPageSize = results.pageSize; // 50",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "query",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder",
        "locations":
          [ { "lineno": 80,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Returns the ResourceCatalogQueryBuilder object used to get the current results.",
            "description":
              [ "Use the `query` property to create and run a new query by chaining additional `ResourceCatalogQueryBuilder` functions to it. You can only filter on properties that have not already been used in the previous query." ],
            "links": [],
            "examples":
              [ { "title": "Get the query that produced a query result",
                  "body":
                    [ "let resultQuery = results.query;" ],
                  "extra":
                    {  } },
                { "title": "Perform a query, get the query that produced the results and modify it",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let newQuery = results.query;",
                      "    newQuery",
                      "      .eq(\"slugs.name\",\"john-doe\")",
                      "      .find()",
                      "      .then((newQueryResults) => {",
                      "        let firstItem = newQueryResults.items[0];",
                      "      })",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalCount",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 65,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Returns the total number of items that match the query.",
            "description":
              [ "The `totalCount` returns the total number of items that match the query,",
                " not just the number of items in the current page." ],
            "links": [],
            "examples":
              [ { "title": "Get the number of items in a query result",
                  "body":
                    [ "let resultCount = results.totalCount; // 150" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the number of items in the result",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultCount = results.totalCount; // 150",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalPages",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 108,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Returns the total number of pages the query produced.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend.resources/resourcecatalogqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend.resources/resourcecatalogqueryresult/prev) and",
                " [`next()`](wix-bookings-backend.resources/resourcecatalogqueryresult/next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the total number of pages in a query result",
                  "body":
                    [ "let resultPages = results.totalPages; // 3" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the total number of pages in the query result",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultPages = results.totalPages; // 3",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hasNext",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are more results." },
        "locations":
          [ { "lineno": 189,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Indicates if the query has more results.",
            "links": [],
            "examples":
              [ { "title": "Get whether the query result object has more results",
                  "body":
                    [ "let hasNext = results.hasNext(); // true" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "async function retrieveAllItems() {",
                      "  let allItems = [];",
                      "",
                      "  let results = await resources.queryResourceCatalog()",
                      "    .limit(1000)",
                      "    .find();",
                      "  allItems = allItems.concat(results.items);",
                      "",
                      "  while (results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems = allItems.concat(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasPrev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are previous results." },
        "locations":
          [ { "lineno": 199,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Indicates the query has previous results.",
            "links": [],
            "examples":
              [ { "title": "Get whether the query result object has previous results",
                  "body":
                    [ "let hasPrev = results.hasPrev(); // false" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "next",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resources.ResourceCatalogQueryResult" ] },
            "doc": "Fulfilled - A query result object with the next page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 145,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Retrieves the next page of query results.",
            "description":
              [ "The `next()` function retrieves the next page of query results.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend.resources/resourcecatalogqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend.resources/resourcecatalogqueryresult/prev) and",
                " [`next()`](wix-bookings-backend.resources/resourcecatalogqueryresult/next) functions.",
                "",
                " If items are added or removed between calls to `next()` the values returned",
                " by `ResourceCatalogQueryResult` may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the next page of a query result",
                  "body":
                    [ "oldResults.next()",
                      "  .then((results) => {",
                      "    const newResults = results;",
                      "    const items = newResults.items;",
                      "    const firstItem = items[0];",
                      "    const totalCount = newResults.totalCount;",
                      "    const pageSize = newResults.pageSize;",
                      "    const currentPage = newResults.currentPage;",
                      "    const totalPages = newResults.totalPages;",
                      "    const hasNext = newResults.hasNext();",
                      "    const hasPrev = newResults.hasPrev();",
                      "    const length = newResults.length;",
                      "    const query = newResults.query;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "async function retrieveAllItems() {",
                      "  let allItems = [];",
                      "",
                      "  let results = await resources.queryResourceCatalog()",
                      "    .limit(1000)",
                      "    .find();",
                      "  allItems = allItems.concat(results.items);",
                      "",
                      "  while (results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems = allItems.concat(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "prev",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resources.ResourceCatalogQueryResult" ] },
            "doc": "Fulfilled - A query result object with the previous page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 168,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Retrieves the previous page of query results.",
            "description":
              [ "The `prev()` function retrieves the previous page of query results.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend.resources/resourcecatalogquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend.resources/resourcecatalogqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend.resources/resourcecatalogqueryresult/prev) and",
                " [`next()`](wix-bookings-backend.resources/resourcecatalogqueryresult/next) functions.",
                "",
                " If items are added or removed between calls to `prev()` the values returned",
                " may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the previous page of a query result",
                  "body":
                    [ "oldResults.prev()",
                      "  .then((results) => {",
                      "    const newResults = results;",
                      "    const items = newResults.items;",
                      "    const firstItem = items[0];",
                      "    const totalCount = newResults.totalCount;",
                      "    const pageSize = newResults.pageSize;",
                      "    const currentPage = newResults.currentPage;",
                      "    const totalPages = newResults.totalPages;",
                      "    const hasNext = newResults.hasNext();",
                      "    const hasPrev = newResults.hasPrev();",
                      "    const length = newResults.length;",
                      "    const query = newResults.query;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }