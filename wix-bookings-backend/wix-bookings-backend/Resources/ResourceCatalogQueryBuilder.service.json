{ "name": "ResourceCatalogQueryBuilder",
  "memberOf": "wix-bookings-backend.Resources",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 1,
      "filename": "ResourceCatalogQueryBuilder.js" },
  "docs":
    { "summary": "Contains functionality for refining a  Catalog query.",
      "description":
        [ "The `ResourceCatalogQueryBuilder` functions enable you to run, sort, filter, and control",
          " which results a query returns.",
          "",
          " Typically, you build a query using any of the ResourceCatalog query functions,",
          " refine the query by chaining `ResourceCatalogQueryBuilder` functions, and then execute the",
          " query by chaining the [`find()`](wix-bookings-backend.Resources/resourcescatalogquerybuilder/find) function.",
          "",
          " For example, the following code queries all bookings of the customer with the",
          " specified contact ID and logs the first 5 results to the console, sorted in",
          " ascending order by the sessions' start times:",
          "",
          " ```javascript",
          " import wixBookingsBackend from 'wix-bookings-backend';",
          "",
          " wixBookingsBackend.queryResourceCatalog",
          "   .eq(\"_id\", \"2cb1846f-0c7a-4c39-8736-349236cfab40\")",
          "   .limit(5)",
          "   .find()",
          "   .then( (results) => {",
          "     console.log(results.items);",
          "   } );",
          " ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "eq",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose value will be compared with `value`.\n\nSupported properties:\n+ `_id`\n+ `slugs.name`" },
            { "name": "value",
              "type": "*",
              "doc": "The value to match against." } ],
        "ret":
          { "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder",
            "doc": "A `ResourceCatalogQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 47,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property value equals the specified value.",
            "description":
              [ "The `eq()` function refines a `ResourceCatalogQueryBuilder` to only",
                " match items where the value of the specified property equals the specified `value`.",
                "",
                " It only matches values of the same type. For example, a number value stored",
                " as a String type does not match the same number stored as a Number type.",
                "",
                " Matching strings with `eq()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`.",
                "",
                " If the value of the `propertyName` property is an Array, `eq()` includes items",
                " in which any of the elements of the Array match the specified `value`." ],
            "links": [],
            "examples":
              [ { "title": "Add an equals filter to a query",
                  "body":
                    [ "let query = resources.queryResourceCatalog().eq(\"_id\",\"3f9215e0-7e96-417f-9c16-628e71c77311\");" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add an equals filter, and run it",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .eq(\"slugs.name\",\"john-smith\")",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items;",
                      "      let firstItem = items[0];",
                      "      let totalCount = results.totalCount;",
                      "      let pageSize = results.pageSize;",
                      "      let currentPage = results.currentPage;",
                      "      let totalPages = results.totalPages;",
                      "      let hasNext = results.hasNext();",
                      "      let hasPrev = results.hasPrev();",
                      "      let length = results.length;",
                      "      let query = results.query;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "find",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder.QueryOptions",
              "doc": "Options to use when performing a query.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resources.ResourceCatalogQueryResult" ] },
            "doc": "Fulfilled - A Promise that resolves to the results of the query.\nRejected - Error that caused the query to fail." },
        "locations":
          [ { "lineno": 198,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Returns the resources that match the query.",
            "description":
              [ "The `find()` function returns a Promise that resolves to the results found",
                " by the query and some information about the results. The Promise is",
                " rejected if `find()` is called with incorrect permissions or if any of the",
                " functions used to refine the query are invalid.",
                "",
                " Use the `options` parameter to run `find()` without checking for permissions." ],
            "links": [],
            "examples":
              [ { "title": "Perform a find on a query",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items;",
                      "      let firstItem = items[0];",
                      "      let totalCount = results.totalCount;",
                      "      let pageSize = results.pageSize;",
                      "      let currentPage = results.currentPage;",
                      "      let totalPages = results.totalPages;",
                      "      let hasNext = results.hasNext();",
                      "      let hasPrev = results.hasPrev();",
                      "      let length = results.length;",
                      "      let query = results.query;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Perform a find on a query using options",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "const options = {",
                      "  \"suppressAuth\": true",
                      "};",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .find(options)",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items;",
                      "      let firstItem = items[0];",
                      "      let totalCount = results.totalCount;",
                      "      let pageSize = results.pageSize;",
                      "      let currentPage = results.currentPage;",
                      "      let totalPages = results.totalPages;",
                      "      let hasNext = results.hasNext();",
                      "      let hasPrev = results.hasPrev();",
                      "      let length = results.length;",
                      "      let query = results.query;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasSome",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "propertyName",
              "type": "string",
              "doc": "The property whose values will be compared with `value`.\n\nSupported properties:\n+ `_id`\n+ `slugs.name`" },
            { "name": "value",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The values to match against." } ],
        "ret":
          { "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder",
            "doc": "A `ResourceCatalogQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 75,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Refines a query to match items whose specified property contains any of the specified `value` parameters.",
            "description":
              [ "The `hasSome()` function refines a `ResourceCatalogQueryBuilder` to only match items where the value of the specified property equals any of the specified values in the array.",
                "",
                " Matching strings with `hasSome()` is case sensitive, so `\"text\"` is not equal to `\"Text\"`.",
                "",
                "If the value of the specified property is an array, `hasSome()` will match if any of the elements of that array match any of the specified values.",
                "",
                "You can specify a list of values to match by providing comma-separated String, Number, or Date types as the `value` parameters. You can also specify a list of these values by including them in an array and providing the array as the `value`." ],
            "links": [],
            "examples":
              [ { "title": "Add a hasSome filter to a query",
                  "body":
                    [ "let query = resources.queryResourceCatalog().hasSome(\"slugs.name\", [\"john-smith\", \"jane-doe\", \"jack-black\"]);" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a hasSome filter, and run it",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .hasSome(\"slugs.name\", [\"john-smith\", \"jane-doe\", \"jack-black\"])",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items;",
                      "      let firstItem = items[0];",
                      "      let totalCount = results.totalCount;",
                      "      let pageSize = results.pageSize;",
                      "      let currentPage = results.currentPage;",
                      "      let totalPages = results.totalPages;",
                      "      let hasNext = results.hasNext();",
                      "      let hasPrev = results.hasPrev();",
                      "      let length = results.length;",
                      "      let query = results.query;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "limit",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "limit",
              "type": "number",
              "doc": "The number of items to return, which is also the [`pageSize`](wix-bookings-backend/resources-obj/resourcecatalogqueryresult/pageSize) of the results object." } ],
        "ret":
          { "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder",
            "doc": "A `ResourceCatalogQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 159,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Limits the number of items the query returns.",
            "description":
              [ "The `limit()` function defines the number of results a query returns in each",
                " page. Only one page of results is retrieved at a time. The [`next()`](wix-bookings-backend/resources-obj/resourcecatalogqueryresult/next)",
                " and [`prev()`](wix-bookings-backend/resources-obj/resourcecatalogqueryresult/prev) functions are used to",
                " navigate the pages of a query result.",
                "",
                " By default, `limit` is set to `50`.",
                "",
                " The maximum value that `limit()` can accept is `1000`." ],
            "links": [],
            "examples":
              [ { "title": "Add a limit to a query",
                  "body":
                    [ "let query = resources.queryResourceCatalog().limit(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a limit, and run it",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .limit(10)",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items;",
                      "      let firstItem = items[0];",
                      "      let totalCount = results.totalCount;",
                      "      let pageSize = results.pageSize;",
                      "      let currentPage = results.currentPage;",
                      "      let totalPages = results.totalPages;",
                      "      let hasNext = results.hasNext();",
                      "      let hasPrev = results.hasPrev();",
                      "      let length = results.length;",
                      "      let query = results.query;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "skip",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "skip",
              "type": "number",
              "doc": "The number of items to skip in the query results before returning the results." } ],
        "ret":
          { "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder",
            "doc": "A `ResourceCatalogQueryBuilder` object representing the refined query." },
        "locations":
          [ { "lineno": 179,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Sets the number of items to skip before returning query results.",
            "description":
              [ "The `skip()` function defines the number of results to skip in the query",
                " results before returning new query results.",
                "",
                " For example, if you query a collection and 50 items match your query, but",
                " you set `skip` to 10, the results returned will skip the first 10 items",
                " that match and return the 11th through 50th items.",
                "",
                " By default, `skip` is set to 0." ],
            "links": [],
            "examples":
              [ { "title": "Add a skip to a query",
                  "body":
                    [ "let query = resources.queryResourceCatalog().skip(10);" ],
                  "extra":
                    {  } },
                { "title": "Create a query, add a skip, and run it",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "resources.queryResourceCatalog()",
                      "  .skip(10)",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items;",
                      "      let firstItem = items[0];",
                      "      let totalCount = results.totalCount;",
                      "      let pageSize = results.pageSize;",
                      "      let currentPage = results.currentPage;",
                      "      let totalPages = results.totalPages;",
                      "      let hasNext = results.hasNext();",
                      "      let hasPrev = results.hasPrev();",
                      "      let length = results.length;",
                      "      let query = results.query;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "QueryOptions",
        "locations":
          [ { "lineno": 31,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Options to use when performing a query.",
            "description":
              [ "The `options` parameter is an optional parameter that can be used when",
                " calling the query [`find()`](wix-bookings-backend.Resources/resourcescatalogquerybuilder/find) functions. To use `options`, pass it a `QueryOptions`",
                " object with the following key:value pair:",
                "",
                " + `\"includeDeleted\"`: `true`/`false`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }