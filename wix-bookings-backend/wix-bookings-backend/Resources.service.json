{ "name": "Resources",
  "memberOf": "wix-bookings-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "resources.js" },
  "docs":
    { "summary": "The Bookings Resources API provides functionality for creating, managing, and querying resources.",
      "description":
        [ "The Bookings Resources API provides functionality for creating, managing, and querying resources.",
          "",
          "A resource is business asset like a staff member, or equipment needed to provide a service.",
          "Each resource owns a schedule. The schedule defines the resource's availability. You can set up a custom schedule for a resource, use the business's default working hours, or combine the two.",
          "",
          "Resources have tags that you can use for grouping. For example, add a `\"room\"` tag for classroom resources and an `\"equipment\"` tag for resources like computers and projectors.",
          "",
          "There are 2 tags that are used by the Wix Bookings app:",
          "+ `\"staff\"`: Resources with the `\"staff\"` tag appear in the Bookings app's **Staff** page. ",
          "+ `\"business\"`: The Bookings app creates a resource with a name and tag value of `\"business\"`. This resource owns a schedule that contains the operating hours of the business and cannot be deleted. This schedule is used when creating resources that use the business’s operating hours for the resource's working hours.",
          "",
          "You can have up to 135 active resources and an additional 135 deleted resources.",
          "",
          "To use the Resources API, import `resources` from the `wix-bookings-backend` module:",
          "",
          "```javascript",
          "import { resources } from \"wix-bookings-backend\";",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "createResource",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "resourceInfo",
              "type": "wix-bookings-backend.Resources.ResourceInfo",
              "doc": "Information to use when creating a resource." },
            { "name": "scheduleInfo",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Resources.ResourceScheduleInfo" ] },
              "doc": "List of schedules to be assigned to the created resource. Currently only a single schedule is allowed. If provided, any additional schedules in the resource object will be ignored." },
            { "name": "options",
              "type": "wix-bookings-backend.Options",
              "doc": "An object representing the available options for creating a resource.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resource" ] },
            "doc": "Fulfilled - Resource" },
        "locations":
          [ { "lineno": 35,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Creates a resource.",
            "description":
              [ "<!--ONLY:VELO-->",
                " The `createResource()` function returns a Promise that resolves to the created resource.",
                "<!--END:ONLY:VELO-->",
                "",
                " Bookings resources are created with a schedule. The schedule and its sessions determine the resource's availability. Note that the schedule must contain a start date in the `availability.start` property.",
                " For resources that are available during the business's default hours, add the business's schedule as a linked schedule in the resource's schedule. For resources have their own hours, create sessions with type `\"WORKING_HOURS\"` using the resource's schedule.",
                " You can use both individual and recurring sessions to define resource availability. You cannot use availability constraints for resource schedules.",
                "",
                " <!--ONLY:VELO-->",
                " When creating a resource using `createResource()`, include the resource's schedule information. Set the schedule information as follows:",
                "+ If the resource uses the default business hours, get the business resource's schedule ID  and include it in the `scheduleInfo.availability.linkedSchedules` array in the `scheduleInfo` parameter. The default hours can bee found in the Dashboard under **Settings** in the **Bookings** section, on the **Appointment hours** page.",
                "+ If the resource has its own custom working hours, create the resource, then create sessions of type `\"WORKING_HOURS\"` using the [`createSession()`](wix-bookings-backend.Sessions/createsession) function. Use the `scheduleId` returned from `createResource()` when creating the sessions. These session can be single sessions or recurring sessions.",
                "+ You can have both default business hours and custom hours for the same resource schedule by combining the steps above.",
                "",
                "> **Notes:**",
                "> + The Wix Bookings app does not show both default business hours and custom hours on the **Staff** page in the dashboard. If you've set up both custom and default business hours, only the default business hours will appear in the app, although both are working.",
                "> + The Wix Bookings app does not show non-recurring `WORKING_HOURS` sessions in the resource calendar.",
                "> + You can only add the business resource's schedule as a linked schedule for a resource.",
                "> + A resource can have one schedule only.",
                "> + You can have up to 135 active resources and an additional 135 deleted resources.",
                "> + Only users with the **Bookings Admin** [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can create a resource. You can override the role permissions by setting the `options.suppressAuth` parameter to `true`.",
                "<!--END:ONLY:VELO-->",
                "",
                "<!--ONLY:REST",
                " Use the following steps to create resources:",
                "  1. Create the resource using including schedule information.",
                "  1. If the resource uses the default business hours, get the business resource's schedule ID  and include it in the `scheduleInfo.availability.linkedSchedules` array in the in the schedule parameters.",
                "  1. If the resource has its own custom working hours, create sessions of type `\"WORKING_HOURS\"`. Use the `scheduleId` of the new resource when creating the sessions. These session can be single sessions or recurring sessions. You can have both business hours and custom hours for the same resource schedule.",
                "",
                ">**Notes:**",
                "> + A resource can have one schedule only.",
                "> + You can have up to 135 active resources and an additional 135 deleted resources.",
                "",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "Create a resource using the business's hours for the resource's availability",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "export function getBusinessSchedule() {",
                      "  return resources.queryResourceCatalog()",
                      "    .eq(\"slugs.name\", \"business\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      const businessResource = results.items[0].resource;",
                      "      return businessResource;",
                      "    });",
                      "}",
                      "",
                      "export async function createStaffWithBusinessHours(staffInfo) {",
                      "",
                      "  staffInfo = {",
                      "    'name': \"John Doe\",",
                      "    'email': \"john@doe.com\",",
                      "    'phone': \"555 4567\",",
                      "    'description': \"Fitness Instructor\"",
                      "  };",
                      "",
                      "  const businessResource = await getBusinessSchedule();",
                      "  const businessResourceScheduleId = businessResource.scheduleIds[0];",
                      "  const schedules = [{",
                      "    availability: {",
                      "      linkedSchedules: [{",
                      "        scheduleId: businessResourceScheduleId",
                      "      },],",
                      "      start: new Date(),",
                      "    }",
                      "  }];",
                      "  const resource = {",
                      "    name: staffInfo.name,",
                      "    email: staffInfo.email,",
                      "    phone: staffInfo.phone,",
                      "    description: staffInfo.description,",
                      "    tags: ['staff'],",
                      "  };",
                      "  const options = { suppressAuth: true }",
                      "",
                      "  return resources.createResource(resource, schedules, options)",
                      "    .then((resource) => {",
                      "      return resource;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error('Failed to create resource: ', error);",
                      "      return error;",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Example of a returned resource:",
                      " * \"_id\": \"6235c808-c3c6-49f2-a000-bc8eded9f106\",",
                      " * \"name\": \"John Doe\",",
                      " * \"email\": \"john@doe.com\",",
                      " * \"phone\": \"555 4567\",",
                      " * \"description\": \"Fitness Instructor\",",
                      " * \"tags\": [",
                      " *   \"staff\"",
                      " * ],",
                      " * \"scheduleIds\": [",
                      " *   \"a5d20a3a-eb25-497a-9fc1-f546ac8422fc\"",
                      " * ],",
                      " * \"status\": \"CREATED\"",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Create a resource with its own schedule",
                  "body":
                    [ "import { resources, sessions } from \"wix-bookings-backend\";",
                      "",
                      "export async function createResourceWithRecurringSession() {",
                      "  let staffInfo = {",
                      "    'name': \"John W. Doe\",",
                      "    'email': \"john@doe.com\",",
                      "    'phone': \"555 4567\",",
                      "    'description': \"Fitness Instructor\"",
                      "  };",
                      "",
                      "  ",
                      "  const resource = {",
                      "    name: staffInfo.name,",
                      "    email: staffInfo.email,",
                      "    phone: staffInfo.phone,",
                      "    description: staffInfo.description,",
                      "    tags: ['staff'],",
                      "  };",
                      "",
                      "  const resourceSchedule = [{",
                      "    availability: {",
                      "      linkedSchedules: [],",
                      "      start: new Date()",
                      "    }",
                      "  }];",
                      "  const options = { suppressAuth: true }",
                      "  let newResource;",
                      "",
                      "  try {",
                      "    newResource = await resources.createResource(resource, resourceSchedule, options)",
                      "  } catch (error) {",
                      "    console.error('Failed to create resource: ', error);",
                      "    return error;",
                      "  }",
                      "",
                      "  let recurringSession = {",
                      "    scheduleId: newResource.scheduleIds[0],",
                      "    start: {",
                      "      localDateTime: {",
                      "        year: 2021,",
                      "        monthOfYear: 3,",
                      "        dayOfMonth: 1,",
                      "        hourOfDay: 10,",
                      "        minutesOfHour: 0",
                      "      }",
                      "    },",
                      "    end: {",
                      "      localDateTime: {",
                      "        year: 2021,",
                      "        monthOfYear: 3,",
                      "        dayOfMonth: 1,",
                      "        hourOfDay: 16,",
                      "        minutesOfHour: 0",
                      "      }",
                      "    },",
                      "    type: 'AVAILABILITY',",
                      "    recurrence: 'FREQ=WEEKLY;INTERVAL=1;BYDAY=MO;UNTIL=20220101T000000Z'",
                      "  };",
                      "",
                      "  let recurrenceRules = ['FREQ=WEEKLY;INTERVAL=1;BYDAY=MO;UNTIL=20220101T000000Z']",
                      "  recurrenceRules.push('FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20220101T000000Z')",
                      "",
                      "  let promiseList = [];",
                      "  recurrenceRules.forEach(rule => {",
                      "    try {",
                      "      recurringSession.recurrence = rule;",
                      "      console.log(\"recurringSession\", recurringSession)",
                      "      promiseList.push(sessions.createSession(recurringSession, options))",
                      "    } catch (error) {",
                      "      console.error('Failed to create session:', error);",
                      "    }",
                      "  })",
                      "",
                      "  return Promise.all(promiseList)",
                      "    .then(sessions => {",
                      "      const resourceSessions = {",
                      "        resource: newResource,",
                      "        sessions: sessions",
                      "      };",
                      "      return resourceSessions;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error)",
                      "    })",
                      "}",
                      "",
                      " /* Example returned object:",
                      "  *",
                      "  * {",
                      "  *   \"resource\": {",
                      "  *     \"_id\": \"09ca6193-3532-4c55-bed6-5ebf8608684f\",",
                      "  *     \"name\": \"John W. Doe\",",
                      "  *     \"email\": \"john@doe.com\",",
                      "  *     \"phone\": \"555 4567\",",
                      "  *     \"description\": \"Fitness Instructor\",",
                      "  *     \"tags\": [",
                      "  *       \"staff\"",
                      "  *     ],",
                      "  *     \"scheduleIds\": [",
                      "  *       \"62e49e88-c668-46a2-9033-3a0cf09013e7\"",
                      "  *     ],",
                      "  *     \"status\": \"CREATED\"",
                      "  *   },",
                      "  *   \"sessions\": [",
                      "  *     {",
                      "  *       \"end\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 16,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"_id\": \"62e49e88c66846a290333a0cf09013e7-4eb49d5842a049fbbbc1742dd1b6ac7d\",",
                      "  *       \"notes\": \"\",",
                      "  *       \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=MO;UNTIL=20220101T000000Z\",",
                      "  *       \"scheduleId\": \"62e49e88-c668-46a2-9033-3a0cf09013e7\",",
                      "  *       \"scheduleOwnerId\": \"09ca6193-3532-4c55-bed6-5ebf8608684f\",",
                      "  *       \"start\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 10,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"status\": \"CONFIRMED\",",
                      "  *       \"tags\": [],",
                      "  *       \"type\": \"WORKING_HOURS\"",
                      "  *     },",
                      "  *     {",
                      "  *       \"end\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 16,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"_id\": \"62e49e88c66846a290333a0cf09013e7-0f43ee04eaa6430f849b210531ce2854\",",
                      "  *       \"notes\": \"\",",
                      "  *       \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20220101T000000Z\",",
                      "  *       \"scheduleId\": \"62e49e88-c668-46a2-9033-3a0cf09013e7\",",
                      "  *       \"scheduleOwnerId\": \"09ca6193-3532-4c55-bed6-5ebf8608684f\",",
                      "  *       \"start\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 10,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"status\": \"CONFIRMED\",",
                      "  *       \"tags\": [],",
                      "  *       \"type\": \"WORKING_HOURS\"",
                      "  *     }",
                      "  *   ]",
                      "  */  ",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "" ],
                  "extra":
                    { "description": "Create a resource, then create 2 recurring sessions on Mondays and Wednesdays from 10 AM to 4 PM." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteResource",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "resourceId",
              "type": "string",
              "doc": "ID of the resource to delete." },
            { "name": "options",
              "type": "wix-bookings-backend.Options",
              "doc": "An object representing the available options for deleting a resource.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - ID of the deleted resource." },
        "locations":
          [ { "lineno": 111,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Deletes a resource.",
            "description":
              [ "The `deleteResource()` function returns a Promise that is resolved when a resource is deleted.",
                "Deleting a resource updates its `status` to `\"DELETED\"`.",
                "",
                "You cannot delete a resource if it has booked sessions.",
                "",
                "<!--ONLY:VELO-->",
                ">**Notes:**",
                "> + The Bookings app automatically creates a resource with a name and tag of value \"business\". This resource is used for the business's schedule and working hours and cannot be deleted.",
                "> + You can have up to 135 active resources and an additional 135 deleted resources.",
                "> + Only users with the **Bookings Admin** [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can delete a resource. You can override the role permissions by setting the `options.suppressAuth` parameter to `true`.",
                "<!--END:ONLY:VELO-->",
                "<!--ONLY:REST",
                ">**Notes:**",
                "> + The Bookings app creates a resource with `\"business\"` in name and tag values. This resource is used for the business's schedule and working hours and cannot be deleted.",
                "> + You can have up to 135 active resources and an additional 135 deleted resources.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "Delete a resource",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "export function myDeleteResource(resourceId) {",
                      "  const options = { suppressAuth: true };",
                      "  return resources.deleteResource(resourceId, options)",
                      "      .then((deletedResource) => {",
                      "          return deletedResource;",
                      "      })",
                      "      .catch((error) => {",
                      "          return error;",
                      "      });",
                      "}",
                      "    ",
                      "  // Resolves to a string containing the deleted resource ID.",
                      "  // For example:  \"3f9215e0-7e96-417f-9c16-628e71c77311\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "queryResourceCatalog",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder",
            "doc": "A `ResourceCatalogQueryBuilder` object that contains the refined query" },
        "locations":
          [ { "lineno": 27,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Creates a query to retrieve extended resource information.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `queryResourceCatalog()` function builds a query to retrieve a catalog of resources, including resources' related schedules and slugs, and returns a [`ResourceCatalogQueryBuilder`](wix-bookings-backend.resources/resourcecatalogquerybuilder/introduction) object.",
                "The returned object contains the query definition, which is typically used to run the query using the [`find()`](#find) function.",
                "",
                "The `ResourceCatalogQueryBuilder` functions enable you to run, filter, and control",
                "which results a query returns.",
                "",
                "Typically, you build a query using the resource catalog query function,",
                "refine the query by chaining `ResourceCatalogQueryBuilder` functions, and then execute the",
                "query by chaining the `find()` function.",
                "",
                "",
                "The query runs with the following `ResourceCatalogQueryBuilder` defaults that you can override:",
                "",
                "+ [`skip`](wix-bookings-backend.Resources.resourcecatalogquerybuilder.html.#skip): `0`",
                "+ [`limit`](wix-bookings-backend.Resources.resourcecatalogquerybuilder.html.#limit): `50`",
                "",
                "The following query builder functions are supported for `queryResourceCatalog()`. ",
                "|Property|Supported Filters&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|",
                "|--|--|",
                "|`_id`|[`eq()`](wix-bookings-backend.Resources/resourcecatalogquerybuilder/eq)| ",
                "|`slugs.name` | [`eq()`](wix-bookings-backend.Resources/resourcecatalogquerybuilder/eq), [`hasSome()`](wix-bookings-backend.Resources/resourcecatalogquerybuilder/hasSome)| ",
                "",
                "For a full description of the Resources object, see the object returned for the [`items`](wix-bookings-backend.resources/resourcecatalogqueryresult/items) array in `ResourceCatalogQueryResult`.",
                "",
                ">**Note:**",
                "> Only users with the **Bookings Admin** [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can query a resources." ],
            "links": [],
            "examples":
              [ { "title": "Create a query, add an eq filter, and run it",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "return resources.queryResourceCatalog()",
                      "  .eq(\"_id\",\"290113d8-e525-4619-a154-b0c45110348f\")",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      const items = results.items;",
                      "      const firstItem = items[0];",
                      "      const totalCount = results.totalCount;",
                      "      const pageSize = results.pageSize;",
                      "      const currentPage = results.currentPage;",
                      "      const totalPages = results.totalPages;",
                      "      const hasNext = results.hasNext();",
                      "      const hasPrev = results.hasPrev();",
                      "      const length = results.length;",
                      "      const query = results.query;",
                      "      return results.items;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "",
                      " /* Returns a promise that resolves to an array of resourceCatalog objects:",
                      "  *",
                      "  *  [",
                      "  *     {",
                      "  *      \"resource\": {",
                      "  *        \"_id\": \"290113d8-e525-4619-a154-b0c45110348f\",",
                      "  *        \"name\": \"Jack Brown\",",
                      "  *        \"email\": \"jbrown@test.com\",",
                      "  *        \"phone\": \"555 4321\",",
                      "  *        \"description\": \"Instructor\",",
                      "  *        \"tags\": [",
                      "  *          \"staff\"",
                      "  *        ],",
                      "  *        \"scheduleIds\": [",
                      "  *          \"95d8769e-ce74-4fe2-ab79-ab24e5c14e0e\"",
                      "  *        ],",
                      "  *        \"status\": \"UPDATED\"",
                      "  *      },",
                      "  *      \"schedules\": [",
                      "  *        {",
                      "  *          \"availability\": {",
                      "  *            \"linkedSchedules\": [",
                      "  *              {",
                      "  *                \"scheduleId\": \"9299760d-8a4a-4f89-b348-1fc611f4be17\"",
                      "  *              }",
                      "  *            ],",
                      "  *            \"start\": \"2021-04-18T07:22:42.274Z\"",
                      "  *          },",
                      "  *          \"_id\": \"95d8769e-ce74-4fe2-ab79-ab24e5c14e0e\",",
                      "  *          \"scheduleOwnerId\": \"290113d8-e525-4619-a154-b0c45110348f\"",
                      "  *        }",
                      "  *      ],",
                      "  *      \"slugs\": [",
                      "  *        {",
                      "  *          \"_createdDate\": \"2021-04-18T07:22:43.392Z\",",
                      "  *          \"name\": \"jack-brown\"",
                      "  *        }",
                      "  *      ]",
                      "  */ " ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->   \n\n<!--ONLY:REST\nThis query is optional. If no query is provided than all non-deleted resources are returned.\n\n|Property|Is supported|\n|--|--|\n|filter | supports `resource.id`, `resource.tag`, `resource.status`|\n|paging | supported |\n|fields | supported |\n|paging | not supported |\n|fields | not supported |\n|fieldsets | not supported |\n\n> **Permissions**\n> This endpoint requires the Read Bookings Calendar, Read Bookings - Public Data, Read Bookings - Including Participants or Manage Bookings permission scope.\n<!--END:ONLY:REST-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateResource",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "ID of the resource to be updated." },
            { "name": "resourceInfo",
              "type": "wix-bookings-backend.Resources.UpdateResourceInfo",
              "doc": "Resource information to update." },
            { "name": "options",
              "type": "wix-bookings-backend.Options",
              "doc": "An object representing the available options for updating a resource.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resource" ] },
            "doc": "Fulfilled - Updated resource" },
        "locations":
          [ { "lineno": 85,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Updates a resource.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `updateResource()` function returns a Promise that resolves when a resource is updated.",
                "<!--END:ONLY:VELO-->",
                "Use this function to update all bookings resource information except for the resource's schedule. To update a resource's schedule use [`updateResourceSchedule()`](wix-bookings-backend/resource/updateresourceschedule).",
                "",
                "<!--ONLY:VELO-->",
                ">**Notes:**",
                "> + When updating a resource you cannot change the system tags used by the Wix Bookings app. Tags used by the app have the values `\"business\"` and `\"staff\"`.",
                "> + Only users with the **Bookings Admin** [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can update a resource. You can override the role permissions by setting the `options.suppressAuth` parameter to `true`.",
                "<!--END:ONLY:VELO-->",
                "<!--ONLY:REST",
                ">**Note:** When updating a resource you cannot change the system tags used by the Wix Bookings app. Tags used by the app have the values `\"business\"` and `\"staff\"`.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "Update a resource, changing its phone and email",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "export function myUpdateResource(resourceId) {",
                      "",
                      "  const newPhone = \"7778521\";",
                      "  const newEmail = \"tomjones@yoga.com\";",
                      "  const options = { suppressAuth: true };",
                      "",
                      "  return resources.updateResource(resourceId, { phone: newPhone ,email: newEmail}, options)",
                      "      .then((updatedResource) => {",
                      "          return updatedResource;",
                      "      }).catch((error) => {",
                      "          console.error('Failed to update resource: ', error);",
                      "          return error;",
                      "      });",
                      "}",
                      "",
                      "",
                      " /* Updated resource:",
                      "  *",
                      "  * {",
                      "  *   \"_id\": \"dc19d7db-6996-494b-8d6d-943d64e1f32a\",",
                      "  *   \"name\": \"Tom Jones\",",
                      "  *   \"email\": \"tomjones@yoga.com\",",
                      "  *   \"phone\": \"7778521\",",
                      "  *   \"description\": \"Yoga and self-defense instructor.\",",
                      "  *   \"tags\": [",
                      "  *     \"staff\"",
                      "  *   ],",
                      "  *   \"scheduleIds\": [",
                      "  *     \"8fbeefbb-76dc-4f67-b292-66e871d5984a\"",
                      "  *   ],",
                      "  *   \"status\": \"UPDATED\"",
                      "  * }",
                      "  */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateResourceSchedule",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "resourceId",
              "type": "string",
              "doc": "Resource ID to update." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "scheduleInfo",
              "type": "wix-bookings-backend.Resources.ResourceScheduleInfo",
              "doc": "Updated schedule information." },
            { "name": "options",
              "type": "wix-bookings-backend.Options",
              "doc": "An object representing the available options for updating a resource schedule.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resources.ResourceSchedule" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 140,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Updates a resource's schedule.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `updateResourceSchedule()` function returns a Promise that resolves when a resource's schedule has been updated.",
                "Use this function to update the bookings resource's schedule. To update other resource details  use [`updateResource()`](wix-bookings-backend/resources/updateresource).",
                "<!--END:ONLY:VELO-->",
                "The following schedule properties can be updated:",
                "+ `availability.start`",
                " + `availability.linkedSchedules`",
                "",
                "**Update a resource's schedule to remove business hours and add custom hours.**",
                " <!--ONLY:REST",
                "+ Update the resource's schedule to remove the business's `scheduleId` from the `availability.linkedSchedules` array.",
                "+ Create a set of recurring sessions of type `\"WORKING_HOURS\"` to define the resource's new hours.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                "+ Use [`updateResourceSchedule()`](wix-bookings-backend.Resources/updateresourcesession) to remove the business's scheduleId from the `availability.linkedSchedules` array.",
                "+ Use [`createSession()`](wix-bookings-backend.Sessions/createsession) to create a set of recurring sessions of type `\"WORKING_HOURS\"` to define the resource's new hours.",
                "<!--END:ONLY:VELO-->",
                "",
                "**Update a resource's schedule to add default business hours, and keep or remove custom hours.**",
                "<!--ONLY:REST",
                "+ Update the resource's schedule to add the business resource's `scheduleId` to the `availability.linkedSchedules` array.",
                "+ If you want to remove the custom sessions, delete the resource's sessions of type `\"WORKING_HOURS\"`.",
                " You do not have to delete exiting custom sessions. Custom session that are not deleted will continue to be included in availability calculations and can still be booked.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                "+ Use [`updateResourceSchedule()`](wix-bookings-backend.Resources/updateresourcesession) to add the business resource's `scheduleId` to the `availability.linkedSchedules` array.",
                "+ If you want to remove the custom sessions, use [`deleteSession()`](wix-bookings-backend.Sessions/deletesession) to delete the resource's sessions of type `\"WORKING_HOURS\"`. You do not have to delete exiting custom sessions. You can have both default working hours and custom hours for the same schedule. Custom sessions that are not deleted will continue to be included in availability calculations and can still be booked.",
                "> **Notes:**",
                "> + The Wix Bookings app does not show both default business hours and custom hours on the **Staff** page in the dashboard. If you've set up both custom and default business hours, only the default business hours will appear in the app, although both are working.",
                "> + A resource can have one schedule only.",
                "> + A resource can have both default business hours and custom hours in its schedule.",
                "> + When updating a resource's schedule you cannot change the system tags used by the Wix Bookings app. Tags used by the app have the values \"INDIVIDUAL\", \"GROUP\", and \"COURSE”.",
                "> + Only users with the **Bookings Admin** [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can update a resource schedule. You can override the role permissions by setting the `options.suppressAuth` parameter to `true`.",
                "<!--END:ONLY:VELO-->",
                "<!--ONLY:REST",
                ">**Notes:**",
                "> + A resource can have one schedule only.",
                "> + A resource can have both default business hours and custom hours in its schedule.",
                "> + When updating a resource's schedule you cannot change the system tags used by the Wix Bookings app. Tags used by the app have the values \"INDIVIDUAL\", \"GROUP\", and \"COURSE”.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "Update a resource's schedule from business to custom hours",
                  "body":
                    [ "import { resources, sessions } from \"wix-bookings-backend\";",
                      "",
                      "export",
                      "  function getResourceById(resourceId) {",
                      "  return resources.queryResourceCatalog()",
                      "    .eq(\"_id\", resourceId)",
                      "    .find()",
                      "    .then((results) => {",
                      "      if (results.items.length > 0)",
                      "        return results.items[0].resource",
                      "    })",
                      "}",
                      "export async function updateResourceToCustomHours(resourceId) {",
                      "  let resource = await getResourceById(resourceId);",
                      "  let recurrenceRules = ['FREQ=WEEKLY;INTERVAL=1;BYDAY=MO;UNTIL=20220101T000000Z'];",
                      "  recurrenceRules.push('FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20220101T000000Z');",
                      "  let recurringSession = {",
                      "    scheduleId: resource.scheduleIds[0],",
                      "    start: {",
                      "      localDateTime: {",
                      "        year: 2021,",
                      "        monthOfYear: 3,",
                      "        dayOfMonth: 1,",
                      "        hourOfDay: 10,",
                      "        minutesOfHour: 0",
                      "      }",
                      "    },",
                      "    end: {",
                      "      localDateTime: {",
                      "        year: 2021,",
                      "        monthOfYear: 3,",
                      "        dayOfMonth: 1,",
                      "        hourOfDay: 16,",
                      "        minutesOfHour: 0",
                      "      }",
                      "    },",
                      "    type: 'WORKING_HOURS',",
                      "    recurrence: 'placeholder'",
                      "  };",
                      "  let updateResourceScheduleInfo = {",
                      "    availability: {",
                      "      linkedSchedules: []",
                      "    }",
                      "  };",
                      "  try {",
                      "    var resourceSchedule = await resources.updateResourceSchedule(resourceId, resource.scheduleIds[0], updateResourceScheduleInfo);",
                      "  } catch (error) {",
                      "    console.error('Failed to update resource: ', error);",
                      "  }",
                      "  let promiseList = [];",
                      "  recurrenceRules.forEach(rule => {",
                      "    try {",
                      "      recurringSession.recurrence = rule;",
                      "      console.log(\"Rec sess\", rule, recurringSession)",
                      "      promiseList.push(sessions.createSession(recurringSession, []));",
                      "    } catch (error) {",
                      "      console.error('Failed to create session:', error);",
                      "    }",
                      "  })",
                      "  return Promise.all(promiseList)",
                      "    .then(sessions => {",
                      "      const resourceSessions = {",
                      "        resource: resource,",
                      "        schedule: resourceSchedule,",
                      "        sessions: sessions",
                      "      };",
                      "      return resourceSessions;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "}",
                      " /* Example of a returned resource, schedule, and sessions array:",
                      "  *",
                      "  * {",
                      "  *   \"resource\": {",
                      "  *     \"_id\": \"2a843db6-cb3f-4c96-90b8-f2f6e0055cae\",",
                      "  *     \"name\": \"Kitty Corner\",",
                      "  *     \"email\": \"kc@tets.com\",",
                      "  *     \"phone\": \"5558566\",",
                      "  *     \"description\": \"Yoga Guru\",",
                      "  *     \"tags\": [",
                      "  *       \"staff\"",
                      "  *     ],",
                      "  *     \"scheduleIds\": [",
                      "  *       \"aec380c0-ca2c-43c2-98f4-9aebbd3276f3\"",
                      "  *     ],",
                      "  *     \"status\": \"UPDATED\"",
                      "  *   },",
                      "  *   \"schedule\": {",
                      "  *     \"availability\": {",
                      "  *       \"linkedSchedules\": [],",
                      "  *       \"start\": \"2021-04-25T04:00:00.000Z\"",
                      "  *     },",
                      "  *     \"_id\": \"aec380c0-ca2c-43c2-98f4-9aebbd3276f3\",",
                      "  *     \"scheduleOwnerId\": \"2a843db6-cb3f-4c96-90b8-f2f6e0055cae\"",
                      "  *   },",
                      "  *   \"sessions\": [",
                      "  *     {",
                      "  *       \"end\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 16,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"_id\": \"aec380c0ca2c43c298f49aebbd3276f3-d93af6386f854cf7946927ac68813e7e\",",
                      "  *       \"notes\": \"\",",
                      "  *       \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=MO;UNTIL=20220101T000000Z\",",
                      "  *       \"scheduleId\": \"aec380c0-ca2c-43c2-98f4-9aebbd3276f3\",",
                      "  *       \"scheduleOwnerId\": \"2a843db6-cb3f-4c96-90b8-f2f6e0055cae\",",
                      "  *       \"start\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 10,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"status\": \"UPDATED\",",
                      "  *       \"tags\": [],",
                      "  *       \"type\": \"WORKING_HOURS\"",
                      "  *     },",
                      "  *     {",
                      "  *       \"end\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 16,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"_id\": \"aec380c0ca2c43c298f49aebbd3276f3-9f7959bd662a4eea97805a6067cfe079\",",
                      "  *       \"notes\": \"\",",
                      "  *       \"recurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=WE;UNTIL=20220101T000000Z\",",
                      "  *       \"scheduleId\": \"aec380c0-ca2c-43c2-98f4-9aebbd3276f3\",",
                      "  *       \"scheduleOwnerId\": \"2a843db6-cb3f-4c96-90b8-f2f6e0055cae\",",
                      "  *       \"start\": {",
                      "  *         \"localDateTime\": {",
                      "  *           \"year\": 2021,",
                      "  *           \"monthOfYear\": 3,",
                      "  *           \"dayOfMonth\": 1,",
                      "  *           \"hourOfDay\": 10,",
                      "  *           \"minutesOfHour\": 0",
                      "  *         }",
                      "  *       },",
                      "  *       \"status\": \"UPDATED\",",
                      "  *       \"tags\": [],",
                      "  *       \"type\": \"WORKING_HOURS\"",
                      "  *     }",
                      "  *   ]",
                      "  * }",
                      "  */" ],
                  "extra":
                    { "description": "Update a resource's schedule from the business's default working hours to 2 custom days per week." } },
                { "title": "Update a resource's schedule from custom to business hours",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "export function getBusinessSchedule() {",
                      "  return resources.queryResourceCatalog()",
                      "    .eq(\"slugs.name\", \"business\")",
                      "    .find()",
                      "    .then((results) => {",
                      "      const businessResource = results.items[0].resource;",
                      "      return businessResource;",
                      "    });",
                      "}",
                      "",
                      "",
                      "export async function updateResourceToBusinessHours(resourceId) {",
                      "   ",
                      "  const businessResource = await getBusinessSchedule();",
                      "  const businessResourceScheduleId = businessResource.scheduleIds[0]",
                      "",
                      "  const result = await resources.queryResourceCatalog().eq(\"_id\", resourceId).find();",
                      "  const resource = result.items[0].resource",
                      "  const scheduleId = resource.scheduleIds[0]",
                      "",
                      "  let updateResourceScheduleInfo = {",
                      "      availability: {",
                      "          linkedSchedules: [{",
                      "              scheduleId: businessResourceScheduleId",
                      "          }, ],",
                      "          start: new Date()",
                      "      }",
                      "  };",
                      "  ",
                      "  return resources.updateResourceSchedule(resourceId, scheduleId, updateResourceScheduleInfo)",
                      "      .then((schedule) => {",
                      "          return schedule;",
                      "      }).catch((error) => {",
                      "          console.error('Failed to update resource schedule: ', error);",
                      "          return error;",
                      "      });",
                      "}",
                      "",
                      "/* Example returned schedule:",
                      " *",
                      " *  {",
                      " *    \"_id\": \"9f372f46-cf75-49d2-837a-9c013525e17f\",",
                      " *      \"scheduleOwnerId\": \"bbed138b-f7c6-497c-b5bf-0fcf9389018d\",",
                      " *        \"availability\": {",
                      " *      \"linkedSchedules\": [",
                      " *        {",
                      " *          \"scheduleId\": \"9299760d-8a4a-4f89-b348-1fc611f4be17\"",
                      " *        }",
                      " *      ],",
                      " *        \"start\": \"2021-04-28T17:07:29.124Z\"",
                      " *    }",
                      " *  }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "LinkedSchedulesInfo",
        "locations":
          [ { "lineno": 409,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID, of the linked schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ResourceInfo",
        "locations":
          [ { "lineno": 389,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Resource details.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Resource name." },
            { "name": "email",
              "type": "string",
              "doc": "Resource email address.",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Resource phone number.",
              "optional": true },
            { "name": "description",
              "type": "string",
              "doc": "Resource description.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Resource tags. Tags are used to identify, group, and filter the different types of resources. For example, 'staff' or 'room'.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ResourceQueryResults",
        "locations":
          [ { "lineno": 33,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "ResourceCatalog query results.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "resource",
              "type": "wix-bookings-backend.Resource",
              "doc": "Resource." },
            { "name": "schedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Resources.ResourceSchedule" ] },
              "doc": "Resource's schedules." },
            { "name": "slugs",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Resources.Slug" ] },
              "doc": "History of slugified resource names." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "ResourceSchedule",
        "locations":
          [ { "lineno": 416,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the schedule's owner entity. This may be a resource ID or a service ID." },
            { "name": "availability",
              "type": "wix-bookings-backend.Resources.ResourceScheduleAvailability",
              "doc": "An object describing how to calculate the schedule's availability.\nAn empty object indicates that the schedule is not available for booking." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ResourceScheduleAvailability",
        "locations":
          [ { "lineno": 373,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "An object describing how to calculate the schedule's availability.",
            "description":
              [ "An empty object indicates that the schedule is not available for booking." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "Date",
              "doc": "Date and time the schedule starts to be available for booking." },
            { "name": "linkedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.LinkedResourceScheduleInfo" ] },
              "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ResourceScheduleAvailabilityInfo",
        "locations":
          [ { "lineno": 400,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "An object describing how to calculate the schedule's availability.",
            "description":
              [ "An empty object indicates that the schedule is not available for booking." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "Date",
              "doc": "Date and time the schedule starts to be available for booking.",
              "optional": true },
            { "name": "linkedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.LinkedResourceScheduleInfo" ] },
              "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ResourceScheduleInfo",
        "locations":
          [ { "lineno": 382,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "availability",
              "type": "wix-bookings-backend.Resources.ResourceScheduleAvailability",
              "doc": "An object describing how to calculate the schedule's availability.\nAn empty object indicates that the schedule is not available for booking.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Slug",
        "locations":
          [ { "lineno": 41,
              "filename": "ResourceCatalogQueryResult.js" } ],
        "docs":
          { "summary": "Slugified resource name.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Slugified resource name." },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date and time the resource name was created." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "UpdateResourceInfo",
        "locations":
          [ { "lineno": 425,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Resource details.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Resource name.",
              "optional": true },
            { "name": "email",
              "type": "string",
              "doc": "Resource email address.",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Resource phone number.",
              "optional": true },
            { "name": "description",
              "type": "string",
              "doc": "Resource description.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Resource tags. Tags are used to identify, group, and filter the different types of resources. For example, 'staff' or 'room'.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }