{ "name": "Sessions",
  "memberOf": "wix-bookings-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 1,
      "filename": "sessions.js" },
  "docs":
    { "summary": "The Resources API provides functionality for creating, managing, and querying sessions.",
      "description":
        [ "A session is an occupied period of time on a [schedule](wix-bookings-backend/sessions-obj/introduction#schedules) or a period of availability on a resource's schedule.",
          "A session is owned by a schedule which in turn has an owner. The owner of a session's schedule can be a service or a resource.",
          "Sessions can be of type `\"WORKING_HOURS\"` or `\"EVENT\"`:",
          "+ A session with type `\"WORKING_HOURS\"` defines the availability of a resource. ",
          "+ A session with type `\"EVENT\"` creates a reserved period of time on the calendar for the owner of the schedule that the session belongs to. ",
          "",
          "A session may be an individual session or a recurring session. ",
          "An individual session has a discrete start and end date. A recurring session defines a series of repeating sessions. A session is recurring session if the `recurrence` property contains a recurrence rule.  A session is an instance of a recurring session if the `instanceOfRecurrence` property contains a recurrence rule.",
          "The recurrence is defined using a subset of [RRULE](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html)s.",
          "",
          "The following RRULE parameters are supported:",
          "",
          "|Keyword|Description|Supported values|",
          "|--|--|---|",
          "|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|",
          "|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|",
          "|`UNTIL`|The UTC end date and time of the recurrence. Optional.|",
          "|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|",
          "",
          "For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:",
          "`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`",
          "",
          "A session includes an optional list of `affectedSchedules`. This is a list of linked schedules and the way each schedule's availability is affected. For example, the schedule of an instructor is linked to the session for the class that they instruct. ",
          "",
          "Sessions have tags that can be used to group sessions. The Wix Bookings app has some reserved tags: ",
          "+ The tag `\"Blocked\"` is used to create a session that blocks the resource' availability but is not related to a service. Use this tag to schedule non-working hours where the resource is not available. ",
          "+ The `\"Google_Event\"` tag is used by the app for events created by Google applications. Google events are read-only.",
          "",
          "Sessions inherit properties from the schedules that they belong to. You can override inherited properties for each session unless the session is a recurring session. The following lists the session properties that are inherited from the schedule.",
          "",
          "+ `affectedSchedules`, from Schedule.availability.linkedSchedules",
          "+ `title`",
          "+ `tags`",
          "+ `location`",
          "+ `capacity`",
          "+ `rate`",
          "",
          "",
          "",
          "To use the Sessions API, import `sessions` from the `wix-bookings-backend` module:",
          "",
          "```javascript",
          "import { sessions } from \"wix-bookings-backend\";",
          "```",
          "",
          "### Schedules",
          "A schedule is a collection of [sessions](wix-bookings-backend/sessions-obj/introduction#sessions) and the metadata to calculate availability. A schedule is owned by either a service or a resource. The `scheduleOwnerId` property contains the ID of the owning resource or service.",
          "",
          "<!-- >>>>>>RELEASE with services and schedules<<<<<<.",
          "Schedules contain metadata for the following areas:",
          "+ Availability",
          "+ Pricing",
          "+ Location",
          "+ Participants",
          "+ Conference calls",
          "-->",
          "",
          "The wix-bookings-backend uses uses the schedule's `availability` object to calculate available slots on the schedule owner's calendar. The availability object contains an array of `linkedSchedules`. This array contains a list of other schedules that impact this schedule’s availability. The `transparency` string defines how this schedules’ availability is affected. ",
          "- When `transparency` is set to `”FREE` availability slots are calculated for this schedule based on the linked schedules, but bookings made on the linked schedules do not affect this schedule. ",
          "- When set to `”BUSY”` availability slots are calculated for this schedule based on the linked schedules excluding slots that have already been booked on the linked schedules.",
          "",
          "<!-- >>>>>>RELEASE with services and schedules<<<<<<.",
          "NEEDS TO BE CLARIFIED . Shedules.LinkedSchedules and Sessions.affectedSchedules. For example, if we have two services, math tutoring and science tutoring, and they are both offered by a tutor called John. John will have both / Both math and science schedules will have John's schedule ID in their linkedSchedules array with a transparency of \"BUSY\".",
          "Both have transparency `”BUSY”`. When the math service is booked between 3 and 4pm, a session is created for John’s schedule for that time. The science service’s schedule is in John’s list of linked schedules. When availability is calculated for the science service, there will be no slots available between 3 and 4pm, because John is teaching math.",
          "",
          "Tags are used for grouping schedules and for specific functions in the Wix Bookings app. ",
          "The Wix Bookings app uses the following predefined tags to set schedule types for services:",
          "`\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE”` for appointments, classes and courses. Once the schedule type is set using these tags, you cannot update it.",
          "In addition to the app's tags, you can create and update tags for your own use.",
          "",
          "Some data defined in the **Settings** page is inherited by the schedule by default. Inherited fields are:",
          "+ location.businessLocation from the **Business Info** page. ",
          "+ availability.constraints.slotsSplitInterval from the **Appointment Time Slots** section in the **Bookings Policy** page",
          "The `inheritedFields` property lists the fields that were inherited from the **Business Info** page. ",
          "-->" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "createSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionInfo",
              "type": "wix-bookings-backend.Sessions.SessionInfo",
              "doc": "Session." },
            { "name": "options",
              "type": "wix-bookings-backend.Options",
              "doc": "An object representing the available options for creating a session." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Session" ] },
            "doc": "Fulfilled - Session." },
        "locations":
          [ { "lineno": 93,
              "filename": "sessions.js" } ],
        "docs":
          { "summary": "Creates a session.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `createSchedule()` function returns a Promise that resolves when a schedule is created.",
                "<!--END:ONLY:VELO-->",
                "",
                "A session is an occupied period of time on a schedule or period of availability on a resource's schedule.",
                "Sessions can be of type \"WORKING_HOURS\" or \"EVENT\". A session with type \"WORKING_HOURS\" defines the availability of a resource. A session with type \"EVENT\" creates an event on the calendar for service or resource that owns the session's schedule.",
                "",
                "Set `type` to `\"WORKING_HOURS\"` when creating sessions for resource availability.",
                "Set `type` to `\"EVENT\"` when creating sessions owned by a service's schedule, or when creating a blocked time for a resource.",
                "",
                "The `start` and `end` properties set the time and duration of the session. For non-recurring sessions, `timestamp` or  `localDateTime` properties can be used.",
                "For recurring sessions, use the `localDateTime` property only. For recurring sessions, the `start` property sets the date and time of the first recurring session, subject to the recurrence rule. The `year`, `monthOfYear` and `dayOfMonth` properties in the `end` property are used with the `hourOfDay` and `minutesOfHour` properties to set the duration of each session relative to the `start`.",
                "The `UNTIL` keyword in the `recurrence` property sets the date for the last recurring session.",
                "",
                "You can create a session that blocks hours on the resource's calendar making the resource unavailable.",
                "Create a non-recurring session of type `\"EVENT\"`, and add `\"Blocked\"` to the `tags` array.",
                "",
                "For recurring availability sessions, the following properties must be populated:",
                "",
                "+ scheduleId",
                "+ start",
                "+ end",
                "+ type",
                "+ recurrence",
                "",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Create a session.",
                  "body":
                    [ "import { sessions } from \"wix-bookings-backend\";",
                      "",
                      "export function createNonRecurringSessions(scheduleId) {",
                      "  const sessionInfo = {",
                      "    scheduleId,",
                      "    start: {",
                      "      timestamp: \"2021-02-15T12:00:00.000-07:00\"",
                      "    },",
                      "    end: {",
                      "      timestamp: \"2021-02-15T13:00:00.000-07:00\"",
                      "    },",
                      "    type: \"WORKING_HOURS\"",
                      "  };",
                      "  const clearInheritedFields = [];",
                      "",
                      "  return sessions.createSession(sessionInfo, clearInheritedFields)",
                      "    .then((session) => {",
                      "      return session;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error('Failed to create session:', error);",
                      "    });",
                      "}",
                      "",
                      "/*  Returns a Promise that resolves to a session object:",
                      "{",
                      "  \"id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\",",
                      "  \"scheduleId\": \"db48c597-9445-44dc-ac5b-65a48cb981c9\",",
                      "  \"scheduleOwnerId\": \"ffbd61a8-5988-4ec5-b44d-7339f6e90f34\",",
                      "  \"start\": {",
                      "   \"timestamp\": \"2021-02-15T19:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"end\": {",
                      "   \"timestamp\": \"2021-02-15T20:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"affectedSchedules\": [],",
                      "  \"tags\": [],",
                      "  \"notes\": \"\",",
                      "  \"totalNumberOfParticipants\": 0,",
                      "  \"participants\": [],",
                      "  \"inheritedFields\": [",
                      "   \"affectedSchedules\",",
                      "   \"calendarConference\",",
                      "   \"capacity\",",
                      "   \"externalCalendarOverrides\",",
                      "   \"location\",",
                      "   \"rate\",",
                      "   \"tags\",",
                      "   \"title\"",
                      "  ],",
                      "  \"status\": \"CONFIRMED\",",
                      "  \"type\": \"WORKING_HOURS\",",
                      "  \"version\": {",
                      "   \"scheduleVersion\": 2,",
                      "   \"sessionVersion\": 0",
                      "  },",
                      "  \"_id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\"",
                      " }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Create a recurring session for a resource.",
                  "body":
                    [ "import { sessions } from \"wix-bookings-backend\";",
                      "",
                      "export function createNonRecurringSessions(scheduleId) {",
                      "  const sessionInfo = {",
                      "    scheduleId,",
                      "    start: {",
                      "      timestamp: \"2021-02-15T12:00:00.000-07:00\"",
                      "    },",
                      "    end: {",
                      "      timestamp: \"2021-02-15T13:00:00.000-07:00\"",
                      "    },",
                      "    type: \"WORKING_HOURS\"",
                      "  };",
                      "  const clearInheritedFields = [];",
                      "",
                      "  return sessions.createSession(sessionInfo, clearInheritedFields)",
                      "    .then((session) => {",
                      "      return session;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error('Failed to create session:', error);",
                      "    });",
                      "}",
                      "",
                      "/*  Returns a Promise that resolves to a session object:",
                      "{",
                      "  \"id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\",",
                      "  \"scheduleId\": \"db48c597-9445-44dc-ac5b-65a48cb981c9\",",
                      "  \"scheduleOwnerId\": \"ffbd61a8-5988-4ec5-b44d-7339f6e90f34\",",
                      "  \"start\": {",
                      "   \"timestamp\": \"2021-02-15T19:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"end\": {",
                      "   \"timestamp\": \"2021-02-15T20:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"affectedSchedules\": [],",
                      "  \"tags\": [],",
                      "  \"notes\": \"\",",
                      "  \"totalNumberOfParticipants\": 0,",
                      "  \"participants\": [],",
                      "  \"inheritedFields\": [",
                      "   \"affectedSchedules\",",
                      "   \"calendarConference\",",
                      "   \"capacity\",",
                      "   \"externalCalendarOverrides\",",
                      "   \"location\",",
                      "   \"rate\",",
                      "   \"tags\",",
                      "   \"title\"",
                      "  ],",
                      "  \"status\": \"CONFIRMED\",",
                      "  \"type\": \"WORKING_HOURS\",",
                      "  \"version\": {",
                      "   \"scheduleVersion\": 2,",
                      "   \"sessionVersion\": 0",
                      "  },",
                      "  \"_id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\"",
                      " }",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID. Required." },
            { "name": "options",
              "type": "wix-bookings-backend.Sessions.DeleteSessionOptions",
              "doc": "An object representing the available options for deleting a session." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - Session ID." },
        "locations":
          [ { "lineno": 186,
              "filename": "sessions.js" } ],
        "docs":
          { "summary": "Deletes a session from a schedule.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `deleteSession()` function returns a Promise that resolves to a session Id when the session has been deleted.",
                "<!--END:ONLY:VELO-->",
                "Use the `participantNotification` property to send an email to the participants when the session is deleted.",
                "When deleting a session of type `\"EVENT\"` where a booking exists, the booking's status is updated to `\"CANCELED\"`.",
                "To delete a set of recurring sessions, specify the session's `recurringSessionId` in the `sessionId` property in the parameters.",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Delete a session.",
                  "body":
                    [ "import { sessions } from \"wix-bookings-backend\";",
                      "",
                      "export function deleteSession(sessionId) {",
                      "  const deleteSessionOptions = {",
                      "      participantNotification: {",
                      "          notifyParticipants: true",
                      "      }",
                      "  };",
                      "  return sessions.deleteSession(sessionId, deleteSessionOptions)",
                      "      .then((result) => {",
                      "          return result;",
                      "      })",
                      "      .catch((error) => {",
                      "          console.error(\"Delete session failed:\", error);",
                      "      });",
                      "",
                      "}",
                      "",
                      "/*  Returns a Promise that resolves to a sessionId:",
                      "",
                      "  1f823e5a49904d6b966e33e0e3015df5-8978dd03913f41e98bc0147ad5ca30da",
                      "",
                      "*/" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Session" ] },
            "doc": "Fulfilled - Session." },
        "locations":
          [ { "lineno": 162,
              "filename": "sessions.js" } ],
        "docs":
          { "summary": "Returns a session from the calendar.",
            "description":
              [ "<!--ONLY:VELO-->",
                " The `getSession()` function returns a Promise that resolves to a session for a specified session ID.",
                "<!--END:ONLY:VELO-->",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.",
                "> With the Read Bookings Calendar permission scope, the session participants are not returned.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Delete a session.",
                  "body":
                    [ "import { sessions } from \"wix-bookings-backend\";",
                      "",
                      "export function myGetSession(sessionId) {",
                      "  return sessions.getSession(sessionId)",
                      "      .then((session) => {",
                      "          return session",
                      "      })",
                      "      .catch((error) => {",
                      "          console.error(\"Failed to get the session:\", error);",
                      "      });",
                      "}",
                      "",
                      " /* Returns a Promise that resolves to a session object:",
                      "  *",
                      "  * {",
                      "  *   \"_id\": \"193ZPR9ppP9emJUCLevcLf6orynNEIDt5nc0520xjGQILnPPaF5s62yK3BWz7ExgIRM1HunZjEPUQ0IeScwcTFJNXEmLG2g6Q8tvUJQZrPhU6XKhVrlLZr C3YcVfygADFiCPyyy5IVhgtDpF30FnPznyrtkyH5fPewLT28aPO3bYaUZcXnNWumH3AaEAb8eyvUVbvkBxGSsv9RZXCgcMTjnhXUNwTBUGGxULnv2ir8gdx9*  sKqqjF5eWVWWmC1F9JYvSJf0P089XVyVeIg7suugA9fZX6vwkmlzMp5WO9HWEd7wBiLhi0Rngxgpc7wGMPaCZmJkDZxQOcf\",",
                      "  *   \"scheduleId\": \"53616b1f-0c3c-45a1-b282-675acd248179\",",
                      "  *   \"scheduleOwnerId\": \"b71df756-309f-468e-aec2-f82b9a9a9441\",",
                      "  *   \"start\": {",
                      "  *     \"timestamp\": \"2021-03-18T22:30:00Z\",",
                      "  *     \"localDateTime\": {",
                      "  *       \"year\": 2021,",
                      "  *       \"monthOfYear\": 3,",
                      "  *       \"dayOfMonth\": 18,",
                      "  *       \"hourOfDay\": 18,",
                      "  *       \"minutesOfHour\": 30",
                      "  *     },",
                      "  *     \"timeZone\": \"America/New_York\"",
                      "  *   },",
                      "  *   \"end\": {",
                      "  *     \"timestamp\": \"2021-03-18T23:30:00Z\",",
                      "  *     \"localDateTime\": {",
                      "  *       \"year\": 2021,",
                      "  *       \"monthOfYear\": 3,",
                      "  *       \"dayOfMonth\": 18,",
                      "  *       \"hourOfDay\": 19,",
                      "  *       \"minutesOfHour\": 30",
                      "  *     },",
                      "  *     \"timeZone\": \"America/New_York\"",
                      "  *   },",
                      "  *   \"affectedSchedules\": [",
                      "  *     {",
                      "  *       \"scheduleId\": \"c331881b-ef28-4ab1-b50a-d46d7a9dcef4\",",
                      "  *       \"transparency\": \"BUSY\",",
                      "  *       \"scheduleOwnerId\": \"5fe118a5-d4b2-464e-9334-268be4422908\"",
                      "  *     }",
                      "  *   ],",
                      "  *   \"title\": \"Yoga Class\",",
                      "  *   \"tags\": [",
                      "  *     \"GROUP\"",
                      "  *   ],",
                      "  *   \"location\": {",
                      "  *     \"locationType\": \"OWNER_CUSTOM\",",
                      "  *     \"address\": \"down on the corner, out on the street\",",
                      "  *     \"customAddress\": {",
                      "  *       \"formattedAddress\": \"down on the corner, out on the street\",",
                      "  *       \"subdivisions\": []",
                      "  *     }",
                      "  *   },",
                      "  *   \"capacity\": 50,",
                      "  *   \"rate\": {",
                      "  *     \"labeledPriceOptions\": {",
                      "  *       \"general\": {",
                      "  *         \"amount\": \"50\",",
                      "  *         \"currency\": \"USD\",",
                      "  *         \"downPayAmount\": \"0\"",
                      "  *       }",
                      "  *     }",
                      "  *   },",
                      "  *   \"notes\": \"\",",
                      "  *   \"totalNumberOfParticipants\": 0,",
                      "  *   \"participants\": [],",
                      "  *   \"inheritedFields\": [",
                      "  *     \"affectedSchedules\",",
                      "  *     \"calendarConference\",",
                      "  *     \"capacity\",",
                      "  *     \"end\",",
                      "  *     \"externalCalendarOverrides\",",
                      "  *     \"location\",",
                      "  *     \"rate\",",
                      "  *     \"start\",",
                      "  *     \"tags\",",
                      "  *     \"title\"",
                      "  *   ],",
                      "  *   \"status\": \"CONFIRMED\",",
                      "  *   \"recurringIntervalId\": \"98035a92-469b-4ec5-8006-59746fe03096\",",
                      "  *   \"recurringSessionId\": \"53616b1f0c3c45a1b282675acd248179-98035a92469b4ec5800659746fe03096\",",
                      "  *   \"type\": \"EVENT\",",
                      "  *   \"instanceOfRecurrence\": \"FREQ=WEEKLY;INTERVAL=1;BYDAY=TH\"",
                      "  * }",
                      "  */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "querySessions",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-bookings-backend.Sessions.SessionQueryBuilder",
            "doc": "Contains functionality for refining a session query." },
        "locations":
          [ { "lineno": 371,
              "filename": "SessionQueryBuilder.js" } ],
        "docs":
          { "summary": "Retrieves a list of the sessions according to the specified filters and paging.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The querySessions() function builds a query to retrieve a list of sessions, and returns a SessionQueryBuilder object.",
                "The returned object contains the query definition which is typically used to run the query using the find() function.",
                "",
                "The `SessionQueryBuilder` functions enable you to run, sort, filter, and control",
                "which results a query returns.",
                "",
                "Typically, you build a query using any of the session query functions,",
                "refine the query by chaining `SessionQueryBuilder` functions, and then execute the",
                "query by chaining the [`find()`](#find) function.",
                "",
                "For example, the following code queries...:",
                "",
                "```javascript",
                "import wixBookingsBackend from 'wix-bookings-backend';",
                "",
                "wixBookingsBackend.sessions.querySessions()",
                "  .eq(\"<property1>\", \"<value1>\")",
                "  .limit(5)",
                "  .find()",
                "  .then( (results) => {",
                "    console.log(results.items);",
                "  } );",
                "```",
                "",
                "The query runs with the following SessionQueryBuilder defaults that you can override:",
                "",
                "+ [`skip`](wix-bookings-backend/sessions-obj/sessionqueryresult#skip): `0`",
                "+ [`limit`](wix-bookings-backend/sessions-obj/sessionqueryresult#limit): `50`",
                "",
                "The following QueryBuilder functions are supported for querySessions(). For a full description of the Session object, see the object returned for the `items` property in SessionQueryResult.",
                "|Property|Supported Filters&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|",
                "|--|--|",
                "|`_id`|[`eq()`](wix-bookings-backend/sessions-obj/sessionquerybuilder/eq)|",
                "|`slugs.name` | [`eq()`](wix-bookings-backend/sessions-obj/sessionquerybuilder/eq), [`hasSome()`](wix-bookings-backend/sessions-obj/sessionquerybuilder/hasSome)| Bookings made by the specified contact ID. `eq(\"slugs.name\",\"john-smith\")`|",
                "",
                "<!--END:ONLY:VELO-->   ",
                "<!--ONLY:REST",
                "This query is optional. If no query is provided than all non-deleted resources are returned.",
                "",
                "|Property|Is supported|",
                "|--|--|",
                "|filter | supports `resource.id`, `resource.tag`, `resource.status`|",
                "|paging | supported |",
                "|fields | supported |",
                "|paging | not supported |",
                "|fields | not supported |",
                "|fieldsets | not supported |",
                "",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar, Read Bookings - Public Data, Read Bookings - Including Participants or Manage Bookings permission scope.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID." },
            { "name": "sessionInfo",
              "type": "wix-bookings-backend.UpdateSessionInfo",
              "doc": "Session." },
            { "name": "options",
              "type": "wix-bookings-backend.Sessions.UpdateSessionsOptions",
              "doc": "An object representing the available options for updating a session." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Session" ] },
            "doc": "Fulfilled - Session." },
        "locations":
          [ { "lineno": 137,
              "filename": "sessions.js" } ],
        "docs":
          { "summary": "Updates a session.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `updateSession()` function returns a Promise that resolves when the session has been updated.",
                "<!--END:ONLY:VELO-->",
                "The property values specified in the `sessionInfo` object replace the existing values. If a property is not specified in the request it will remain unchanged.",
                "Array properties, if specified, overwrite the existing array and all of its elements.",
                "The `participants` array cannot be updated.",
                "Use the participantNotification property to send an email to the participants notifying them of the change.",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Delete a session.",
                  "body":
                    [ "import { sessions } from \"wix-bookings-backend\";",
                      "//<<<<<UPDATE SESSION>>>>>>>>>>>",
                      "export function myGetSession(sessionId) {",
                      "  return sessions.getSession(sessionId)",
                      "      .then((session) => {",
                      "          return session",
                      "      })",
                      "      .catch((error) => {",
                      "          console.error(\"Failed to get the session:\", error);",
                      "      });",
                      "}",
                      "",
                      " " ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "AddParticipantRequest_19276617738",
        "locations":
          [ { "lineno": 306,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Participants",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID. Required." },
            { "name": "participant",
              "type": "wix-bookings-backend.Participant_14950462006",
              "doc": "Participant." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddParticipantResult_251409248271",
        "locations":
          [ { "lineno": 314,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-backend.Participant_16742085086:getSession",
              "doc": "Participant." },
            { "name": "schedule",
              "type": "wix-bookings-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddParticipantToSessionRequest_18455855278",
        "locations":
          [ { "lineno": 291,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Participants",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID. Required." },
            { "name": "participant",
              "type": "wix-bookings-backend.Participant_14950462006",
              "doc": "Participant." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddParticipantToSessionResult_259936134190",
        "locations":
          [ { "lineno": 299,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-backend.Participant_16742085086:getSession",
              "doc": "Participant." },
            { "name": "session",
              "type": "wix-bookings-backend.Session_255663383937:getSession",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Availability_161223611200",
        "locations":
          [ { "lineno": 798,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "An object describing how to calculate the schedule's availability.",
            "description":
              [ "An empty object indicates that the schedule is not available for booking." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "Date",
              "doc": "Date and time the schedule starts to be available for booking. For example, a schedule can become available at a future date.",
              "optional": true },
            { "name": "end",
              "type": "Date",
              "doc": "Date and time the schedule stops being available for booking. No value indicates no end time.",
              "optional": true },
            { "name": "linkedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.LinkedResourceScheduleInfo" ] },
              "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints.",
              "optional": true },
            { "name": "constraints",
              "type": "wix-bookings-backend.AvailabilityConstraints_1966120690",
              "doc": "Constraints for calculating the schedule's availability.",
              "optional": true },
            { "name": "locations",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Location_147848441914" ] },
              "doc": "Not supported yet.\nA list of possible locations for the session when `use_default_location` is set to `false`. Slots are generated for each location. Only one of the possible locations can be chosen by the customer. \n\n **NOTE**: When using the `locations` parameter, the default location is not automatically included in the list.",
              "optional": true },
            { "name": "useDefaultLocation",
              "type": "boolean",
              "doc": "Not supported yet.\n Whether the schedule's slots are only available at the schedule's default location, as set in `schedule.location`. If set to `false`, the `locations` array is used to set the possible locations of the schedule's sessions.\n Default is `true`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Availability_161316299921",
        "locations":
          [ { "lineno": 461,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "An object describing how to calculate the schedule's availability.",
            "description":
              [ "An empty object indicates that the schedule is not available for booking." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "Date",
              "doc": "Date and time the schedule starts to be available for booking. For example, a schedule can become available at a future date." },
            { "name": "end",
              "type": "Date",
              "doc": "Date and time the schedule stops being available for booking. No value indicates no end time.",
              "optional": true },
            { "name": "linkedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.LinkedResourceScheduleInfo" ] },
              "doc": "Other schedules that impact the availability calculation. Relevant only when there are availability constraints.",
              "optional": true },
            { "name": "constraints",
              "type": "wix-bookings-backend.AvailabilityConstraints_1966120690",
              "doc": "Constraints for calculating the schedule's availability.",
              "optional": true },
            { "name": "locations",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Location_147848441914" ] },
              "doc": "Not supported yet.\nA list of possible locations for the session when `use_default_location` is set to `false`. Slots are generated for each location. Only one of the possible locations can be chosen by the customer. \n\n **NOTE**: When using the `locations` parameter, the default location is not automatically included in the list.",
              "optional": true },
            { "name": "useDefaultLocation",
              "type": "boolean",
              "doc": "Not supported yet.\n Whether the schedule's slots are only available at the schedule's default location, as set in `schedule.location`. If set to `false`, the `locations` array is used to set the possible locations of the schedule's sessions.\n Default is `true`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelScheduleRequest_9598834207",
        "locations":
          [ { "lineno": 321,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "from",
              "type": "Date",
              "doc": "Time to cancel the sessions from. Optional. If this field is empty, all of this schedule's sessions will be canceled.",
              "optional": true },
            { "name": "preserveFutureSessionsWithParticipants",
              "type": "boolean",
              "doc": "Whether to preserve future sessions with reservations. Defaults to false.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelScheduleResult_252251674885",
        "locations":
          [ { "lineno": 330,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateScheduleRequest_208107594401",
        "locations":
          [ { "lineno": 479,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "schedule",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.Sessions.Schedule_206582583816",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateScheduleResult_250539731587",
        "locations":
          [ { "lineno": 486,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionRequest_233485006195",
        "locations":
          [ { "lineno": 576,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Schedule's session",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_225620643475",
              "doc": "Session.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionResult_258115196402",
        "locations":
          [ { "lineno": 584,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_255663383937:getSession",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionResult_30222691074:createSession",
        "locations":
          [ { "lineno": 336,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-backend.CalendarDateTime",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-backend.CalendarDateTime",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO-->\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO-->\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionOptions",
        "locations":
          [ { "lineno": 517,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionRequest_6604909881",
        "locations":
          [ { "lineno": 590,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID. Required.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionResult_2746856964",
        "locations":
          [ { "lineno": 597,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetScheduleRequest_308712754",
        "locations":
          [ { "lineno": 524,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Schedule ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetScheduleResult_252079800197",
        "locations":
          [ { "lineno": 530,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSchedulesRequest_7169811266",
        "locations":
          [ { "lineno": 550,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule IDs.",
              "optional": true },
            { "name": "scheduleOwnerIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule owner IDs.",
              "optional": true },
            { "name": "dontIncludeScheduleParticipants",
              "type": "boolean",
              "doc": "Whether to return a list of the schedule's participants.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSchedulesResult_253828204701",
        "locations":
          [ { "lineno": 558,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Schedule_252114210686" ] },
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSessionsRequest_9558471744",
        "locations":
          [ { "lineno": 536,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "session",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "ids",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Session ID.",
              "optional": true },
            { "name": "fieldMask",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSessionsResult_260386006111",
        "locations":
          [ { "lineno": 544,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Session_255663383937:getSession" ] },
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSlotsRequest_23531210904",
        "locations":
          [ { "lineno": 278,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "listQuery",
              "type": "wix-bookings-backend.QueryV2_25356650774",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListSlotsResult_263978911646",
        "locations":
          [ { "lineno": 284,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "slots",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Session_255663383937:getSession" ] },
              "doc": "Slots on the calendar." },
            { "name": "pagingMetadata",
              "type": "wix-bookings-backend.PagingMetadataV2_5481679798" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "QueryOptions_114952375",
        "locations":
          [ { "lineno": 271,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "The `options` parameter is an optional parameter that can be used when calling the query [`find()`](#find) function.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RemoveParticipantRequest_156275188",
        "locations":
          [ { "lineno": 564,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Participant ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RemoveParticipantResult_1039961440",
        "locations":
          [ { "lineno": 570,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Participant ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Schedule_206489895095",
        "locations":
          [ { "lineno": 816,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Schedule.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the schedule's owner entity. This may be a resource ID, a session ID, or a service ID.",
              "optional": true },
            { "name": "timeZone",
              "type": "string",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Default title for the schedule's sessions. Maximum length: 6000 characters.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for grouping schedules. These tags are the default tags for the schedule's sessions.\nThe Wix Bookings app uses the following predefined tags to set schedule type: `\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE\"`. Once the schedule type is set using these tags, you cannot update it. In addition to the app's tags, you can create and update your own tags.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-backend.Location_147848441914",
              "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can be added to the schedule's sessions. Default is 1.",
              "optional": true },
            { "name": "rate",
              "type": "wix-bookings-backend.Rate_13652876269",
              "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "availability",
              "type": "wix-bookings-backend.Sessions.Availability_161223611200",
              "doc": "An object describing how to calculate the schedule's availability.\nAn empty object indicates that the schedule is not available for booking.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-backend.ExternalCalendarOverrides_672201097",
              "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-backend.CalendarConference_22421061789",
              "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Schedule_206582583816",
        "locations":
          [ { "lineno": 492,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Schedule.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Schedule ID.",
              "optional": true },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "ID of the schedule's owner entity. This may be a resource ID, a session ID, or a service ID." },
            { "name": "timeZone",
              "type": "string",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Default title for the schedule's sessions. Maximum length: 6000 characters.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for grouping schedules. These tags are the default tags for the schedule's sessions.\nThe Wix Bookings app uses the following predefined tags to set schedule type: `\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE\"`. Once the schedule type is set using these tags, you cannot update it. In addition to the app's tags, you can create and update your own tags.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-backend.Location_147848441914",
              "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can be added to the schedule's sessions. Default is 1.",
              "optional": true },
            { "name": "rate",
              "type": "wix-bookings-backend.Rate_13652876269",
              "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "availability",
              "type": "wix-bookings-backend.Sessions.Availability_161316299921",
              "doc": "An object describing how to calculate the schedule's availability.\nAn empty object indicates that the schedule is not available for booking.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-backend.ExternalCalendarOverrides_672201097",
              "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-backend.CalendarConference_22421061789",
              "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SessionBatchRequest_253468111100",
        "locations":
          [ { "lineno": 603,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionsToCreate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Sessions.CreateSessionRequest_233485006195" ] },
              "optional": true },
            { "name": "sessionsToUpdate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Sessions.UpdateSessionRequest_241476392166" ] },
              "optional": true },
            { "name": "sessionsToDelete",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Sessions.DeleteSessionRequest_6604909881" ] },
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SessionBatchResult_262834721643",
        "locations":
          [ { "lineno": 611,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionsCreated",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Sessions.CreateSessionResult_258115196402" ] } },
            { "name": "sessionsUpdated",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Sessions.UpdateSessionResult_256943726943" ] } },
            { "name": "sessionsDeleted",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Sessions.DeleteSessionResult_2746856964" ] } } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SessionInfo",
        "locations":
          [ { "lineno": 406,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-backend.CalendarDateTimeInfo",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-backend.CalendarDateTimeInfo",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO-->\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Session_13364701673:1updateSession",
        "locations":
          [ { "lineno": 667,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "start",
              "type": "wix-bookings-backend.CalendarDateTimeInfo",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time.",
              "optional": true },
            { "name": "end",
              "type": "wix-bookings-backend.CalendarDateTimeInfo",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO-->\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Session_27106184519",
        "locations":
          [ { "lineno": 201,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-backend.CalendarDateTime",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-backend.CalendarDateTime",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO-->\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO-->\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SplitRecurringSessionRequest_3004348263",
        "locations":
          [ { "lineno": 634,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID." },
            { "name": "splitTimes",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "Date" ] },
              "doc": "A list of times where the session is to be split. Must not be in the past. Must not contain duplicate times." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SplitRecurringSessionResult_259463627938",
        "locations":
          [ { "lineno": 641,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "recurringSessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Session_255663383937:getSession" ] },
              "doc": "A list of recurring sessions where the first is the modified original session followed by other newly created sessions." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateParticipantRequest_20461774022",
        "locations":
          [ { "lineno": 647,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-backend.Participant_14950462006",
              "doc": "Participant." },
            { "name": "fieldMask",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateParticipantResult_15516915249",
        "locations":
          [ { "lineno": 654,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participant",
              "type": "wix-bookings-backend.Participant_16742085086:getSession",
              "doc": "Participant." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateScheduleRequest_217519934368",
        "locations":
          [ { "lineno": 841,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.Sessions.Schedule_206489895095",
              "doc": "Schedule.",
              "optional": true },
            { "name": "fieldMask",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "alignTimeExceptions",
              "type": "boolean",
              "doc": "Optional. Defaults to false. In case of updated intervals' start time, this field indicates whether to align those interval's time exceptions.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateScheduleResult_252878884022",
        "locations":
          [ { "lineno": 850,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "schedule",
              "type": "wix-bookings-backend.Schedule_252114210686",
              "doc": "Schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionInfo",
        "locations":
          [ { "lineno": 660,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionRequest_241476392166",
        "locations":
          [ { "lineno": 619,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_225620643475",
              "doc": "Session.",
              "optional": true },
            { "name": "updated",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "Field mask of fields to update.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionRequest_6081029889:updateSession",
        "locations":
          [ { "lineno": 721,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionResult_256943726943",
        "locations":
          [ { "lineno": 628,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_255663383937:getSession",
              "doc": "Session." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionResult_29051221615:updateSession",
        "locations":
          [ { "lineno": 728,
              "filename": "allTypeDefs.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "scheduleOwnerId",
              "type": "string",
              "doc": "Owner ID of the schedule that the session belongs to." },
            { "name": "start",
              "type": "wix-bookings-backend.CalendarDateTime",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-backend.CalendarDateTime",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session." },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty." },
            { "name": "status",
              "type": "string",
              "doc": "Session status.\n<!--ONLY:VELO-->\n One of:\n - `\"CONFIRMED\"` Default value.\n - `\"CANCELLED\"` \n    - The session was generated from a recurring session and then deleted.\n    - The session was created as a single session and then deleted.\n    - The session is a recurring session and was deleted.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"CONFIRMED\"`\n + `\"CANCELLED\"`" },
            { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID, if the session is a recurring session." },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\n<!--ONLY:VELO-->\n One of:\n - `\"EVENT\"` The session creates an event on the calendar for the owner of the schedule that the session belongs to.\n - `\"WORKING_HOURS\"` The session represents a resource's available working hours.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`" },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->" } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }