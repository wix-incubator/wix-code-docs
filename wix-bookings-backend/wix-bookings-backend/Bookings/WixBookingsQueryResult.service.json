{ "name": "WixBookingsQueryResult",
  "memberOf": "wix-bookings-backend.Bookings",
  "mixes": [],
  "labels":
    [ "changed",
      "removed" ],
  "location":
    { "lineno": 2,
      "filename": "WixBookingsQueryResult.js" },
  "docs":
    { "summary": "The results of a data query, containing the retrieved items.",
      "description":
        [ "When you execute a query with the [`find()`](wix-data.BookingsQuery.html#find)",
          " function, it returns a Promise that resolves to a `BookingsQueryResult` object.",
          " This object contains the items that match the query, information about the",
          " query itself, and functions for paging through the query results." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentPage",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 108,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Returns the index of the current results page number.",
            "description":
              [ "The `currentPage` is a zero-based index of the current page of results.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend/bookings-obj/wixbookingsquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/prev) and",
                " [`next()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/next) functions.",
                "",
                " The `currentPage` property returns `undefined` if the query returned no results." ],
            "links": [],
            "examples":
              [ { "title": "Get the current page index of a query result",
                  "body":
                    [ "let resultPage = results.currentPage; // 0" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the current page index of the query result",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "bookings.queryBookings()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultPage = results.currentPage; // 0",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "wix-bookings-backend.Booking" ] },
        "locations":
          [ { "lineno": 12,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Returns the an array of bookings that match the query.",
            "description":
              [ "The current page of bookings retrieved by the query.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend/bookings-obj/wixbookingsquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/prev) and",
                " [`next()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/next) functions.",
                "",
                " When no items match the query, the `booking` array is empty." ],
            "links": [],
            "examples":
              [ { "title": "Get the booking items from a query result.",
                  "body":
                    [ "let items = results.items;",
                      "",
                      "/*",
                      " * [",
                      " *   {",
                      " *     \"_id\":          \"1234\",",
                      " *     \"_owner\":       \"f45jf8d2-grkj-2opd-4ovk-9rfj4wo5tvj3\",",
                      " *     \"_createdDate\": \"2017-05-29T08:35:52.344Z\",",
                      " *     \"_updatedDate\": \"2017-05-29T08:35:52.344Z\",",
                      " *     \"title\":        \"Dr.\",",
                      " *     \"first_name\":   \"Jane\",",
                      " *     \"last_name\":    \"Doe\",",
                      " *     \"status\":       \"active\"",
                      " *   },",
                      " *   {",
                      " *     \"_id\":          \"5678\",",
                      " *     \"_owner\":       \"f45jf8d2-grkj-2opd-4ovk-9rfj4wo5tvj3\",",
                      " *     \"_createdDate\": \"2017-05-25T12:48:56.572Z\",",
                      " *     \"_updatedDate\": \"2017-05-29T07:30:15.869Z\",",
                      " *     \"title\":        \"Mr.\",",
                      " *     \"first_name\":   \"John\",",
                      " *     \"last_name\":    \"Doe\",",
                      " *     \"status\":       \"active\"",
                      " *   }",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the booking items from the result.",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "bookings.queryBookings()",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      let items = results.items; // see below",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    let errorMsg = error.message;",
                      "    let code = error.code;",
                      "  });",
                      "",
                      "",
                      "/* items:",
                      " *",
                      " * [",
                      " *   {",
                      " *     \"id\": \"28f8d0d2-9704-441c-b8d0-5ac89548f729\",",
                      " *     \"bookedEntity\": {",
                      " *      \"serviceId\": \"b71df756-309f-468e-aec2-f82b9a9a9441\",",
                      " *      \"scheduleId\": \"53616b1f-0c3c-45a1-b282-675acd248179\",",
                      " *      \"singleSession\": {",
                      " *      \"sessionId\": \"193ZPR9ppP9emJUCLevcLf6orynNEIDt5nc0520xjGQILnPPaF5s62yK3BWz7Exg",
                      "                IRM1HunZjEPUQ0IeScwcTFJNXEmLG2g6Q8tvUJQZrPhU6XKhVrlLZraC3YcVfygADFiCPyyy5IVhgtDpF30FnQDoG8I60n21QAlhok4LHNlkBszoGZ67jGMeDOqxS8PXZgJx87ByXwfgsN3AfXbndYxESrFnttLnRSFzcsolOnBRWHQAvTO0Tm0lEZ2wIkEAlBrLj6aximrsee44236Oi5bWmdlEdc6fgZ8rfy8bmNs GyV8ryxoDEs8OrU3KHtZEnocCDS1rwZBU2n\",",
                      " *      \"start\": \"2021-01-15T10:30:00Z\",",
                      " *      \"end\": \"2021-01-15T11:00:00Z\"",
                      " *     },",
                      " *     \"title\": \"Yoga Class\",",
                      " *     \"location\": {",
                      " *     \"locationType\": \"OWNER_BUSINESS\"",
                      " *     },",
                      " *     \"rate\": {",
                      " *        \"labeledPriceOptions\": {",
                      " *        \"general\": {",
                      " *          \"amount\": \"50\",",
                      " *          \"currency\": \"USD\",",
                      " *          \"downPayAmount\": \"0\"",
                      " *         }",
                      " *       }",
                      " *     },",
                      " *     \"tags\": [",
                      " *       \"GROUP\"",
                      " *       ]",
                      " *     },",
                      " *    \"bookedResources\": [",
                      " *     {",
                      " *      \"id\": \"76570209-101f-409b-af97-b445bdb63125\",",
                      " *      \"name\": \"John Smith\",",
                      " *      \"email\": \"\",",
                      " *      \"_id\": \"76570209-101f-409b-af97-b445bdb63125\"",
                      " *     }",
                      " *    ],",
                      " *    \"paymentDetails\": {",
                      " *      \"balance\": {",
                      " *      \"finalPrice\": {",
                      " *        \"amount\": \"50\",",
                      " *        \"currency\": \"USD\",",
                      " *        \"downPayAmount\": \"0\"",
                      " *      },",
                      " *      \"amountReceived\": \"0\"",
                      " *    },",
                      " *    \"wixPayDetails\": {",
                      " *      \"orderId\": \"4c34902f-e821-4886-90ea-dd43c56065bd\",",
                      " *      \"orderAmount\": \"50\",",
                      " *      \"orderStatus\": \"UNDEFINED\"",
                      " *    },",
                      " *    \"state\": \"CANCELED\",",
                      " *    \"wixPayMultipleDetails\": [",
                      " *    {",
                      " *       \"orderId\": \"4c34902f-e821-4886-90ea-dd43c56065bd\",",
                      " *       \"orderAmount\": \"50\",",
                      " *       \"orderStatus\": \"UNDEFINED\"",
                      " *     }",
                      " *    ]",
                      " *    },",
                      " *    \"status\": \"CANCELED\",",
                      " *    \"created\": \"2021-01-05T13:51:37.029Z\",",
                      " *    \"attendanceInfo\": {",
                      " *    \"attendanceStatus\": true,",
                      " *    \"numberOfAttendees\": 3",
                      " *    },",
                      " *    \"bookingSource\": {",
                      " *     \"platform\": \"WEB\",",
                      " *     \"actor\": \"CUSTOMER\",",
                      " *     \"appDefId\": \"13d21c63-b5ec-5912-8397-c3a5ddb27a97\",",
                      " *     \"appName\": \"Wix Bookings\"",
                      " *    },",
                      " *    \"formInfo\": {",
                      " *      \"paymentSelection\": [",
                      " *      {",
                      " *        \"rateLabel\": \"general\",",
                      " *        \"numberOfParticipants\": 1",
                      " *      }",
                      " *     ],",
                      " *    \"customFormFields\": {},",
                      " *    \"additionalFields\": [",
                      " *    {",
                      " *      \"id\": \"00000000-0000-0000-0000-000000000008\",",
                      " *      \"label\": \"Add Your Message\",",
                      " *      \"valueType\": \"LONG_TEXT\",",
                      " *      \"_id\": \"00000000-0000-0000-0000-000000000008\"",
                      " *     }",
                      " *    ],",
                      " *    \"contactDetails\": {",
                      " *      \"contactId\": \"81c9168e-95b8-47fd-8e6a-ad9fdf71b38e\",",
                      " *      \"firstName\": \"Michael Smith\",",
                      " *      \"email\": \"msmith@home.com\",",
                      " *      \"timeZone\": \"America/New_York\",",
                      " *      \"countryCode\": \"US\"",
                      " *     }",
                      " *   },",
                      " *     \"_id\": \"28f8d0d2-9704-441c-b8d0-5ac89548f729\"  ",
                      " *   },",
                      " *   {",
                      " *     \"id\": \"1b136d38-02e1-4452-8849-c253e29428a5\",",
                      " *     \"bookedEntity\": {",
                      " *        \"serviceId\": \"55dd33e7-6b98-4b18-beaf-4341e31c42f1\",",
                      " *        \"scheduleId\": \"3bf923b4-990b-4303-bde1-7f326e30a1f9\",",
                      " *        \"singleSession\": {",
                      "  *       \"sessionId\": \"193ZPR9ppP9emJUCLevcLf6orynNEIDt5nc0520xjGQILnPPaF5s62yK3BWz7Exg",
                      "                IRM1HunZjEPUQ0IeScwcTFJNXEmLG2g6Q8tvUJQZrPhU6XKhVrlLZraC3YcVfygADFiCPyyy5IVhgtDpF30FnQDoG8I60n21QAlhok4LHNlkBszoGZ67jGMeDOqxS8PXZgJx87ByXwfgsN3AfXbndYxESrFnttLnRSFzcsolOnBRWHQAvTO0Tm0lEZ2wIkEAlBrLj6aximrsee44236Oi5bWmdlEdc6fgZ8rfy8bmNs GyV8ryxoDEs8OrU3KHtZEnocCDS1rwZBU2n\",",
                      " *          \"start\": \"2020-12-25T12:00:00Z\",",
                      " *          \"end\": \"2020-12-25T12:30:00Z\"",
                      " *        },",
                      " *        \"title\": \"Self Defence\",",
                      " *        \"location\": {",
                      " *          \"locationType\": \"OWNER_BUSINESS\"",
                      " *        },",
                      " *        \"rate\": {",
                      " *          \"labeledPriceOptions\": {",
                      " *            \"general\": {",
                      " *              \"amount\": \"25\",",
                      " *              \"currency\": \"USD\",",
                      " *              \"downPayAmount\": \"0\"",
                      " *            }",
                      " *          },",
                      " *          \"priceText\": \"\"",
                      " *        },",
                      " *        \"tags\": [",
                      " *          \"GROUP\"",
                      " *        ]",
                      " *      },",
                      " *      \"bookedResources\": [",
                      " *        {",
                      " *          \"id\": \"00dc9bd7-d69d-4b39-8c2b-6a9177725431\",",
                      " *          \"name\": \"Jane Smith\",",
                      " *          \"email\": \"jsmith@gmail.com\",",
                      " *          \"_id\": \"00dc9bd7-d69d-4b39-8c2b-6a9177725431\"",
                      " *        }",
                      " *      ],",
                      " *      \"formInfo\": {",
                      " *        \"contactDetails\": {",
                      " *          \"contactId\": \"9434edfb-eb71-4799-a544-79d5d67b5c44\",",
                      " *          \"firstName\": \"Paul White\",",
                      " *          \"email\": \"paulw@gmail.com\",",
                      " *          \"phone\": \"555 3456\",",
                      " *          \"timeZone\": \"America/New_York\",",
                      " *          \"countryCode\": \"US\"",
                      " *        },",
                      " *        \"paymentSelection\": [",
                      " *          {",
                      " *            \"rateLabel\": \"general\",",
                      " *            \"numberOfParticipants\": 1",
                      " *          }",
                      " *        ],",
                      " *        \"customFormFields\": {",
                      " *          \"00000000-0000-0000-0000-000000000008\": \"\"",
                      " *        },",
                      " *        \"additionalFields\": [",
                      " *          {",
                      " *            \"id\": \"00000000-0000-0000-0000-000000000008\",",
                      " *            \"value\": \"\",",
                      " *            \"label\": \"Add Your Message\",",
                      " *            \"valueType\": \"LONG_TEXT\",",
                      " *         \"_id\": \"00000000-0000-0000-0000-000000000008\"",
                      " *       }",
                      " *     ]",
                      " *   },",
                      " *   \"paymentDetails\": {",
                      " *     \"balance\": {",
                      " *       \"finalPrice\": {",
                      " *         \"amount\": \"25\",",
                      " *         \"currency\": \"USD\",",
                      " *         \"downPayAmount\": \"0\"",
                      " *       },",
                      " *       \"amountReceived\": \"25\"",
                      " *     },",
                      " *     \"wixPayDetails\": {",
                      " *       \"txId\": \"9ce4b5fa-05ee-4932-8889-0d873a732ddf\",",
                      " *       \"orderId\": \"3279d38d-8618-4c93-ba60-f403ff272601\",",
                      " *       \"orderAmount\": \"25\",",
                      " *       \"orderStatus\": \"UNDEFINED\",",
                      " *       \"orderApprovalTime\": \"2020-12-24T09:39:05.617Z\",",
                      " *       \"paymentVendorName\": \"offline\"",
                      " *     },",
                      " *     \"state\": \"COMPLETE\",",
                      " *     \"wixPayMultipleDetails\": [",
                      " *       {",
                      " *         \"txId\": \"9ce4b5fa-05ee-4932-8889-0d873a732ddf\",",
                      " *         \"orderId\": \"3279d38d-8618-4c93-ba60-f403ff272601\",",
                      " *         \"orderAmount\": \"25\",",
                      " *         \"orderStatus\": \"UNDEFINED\",",
                      " *         \"orderApprovalTime\": \"2020-12-24T09:39:05.617Z\",",
                      " *         \"paymentVendorName\": \"offline\"",
                      " *       }",
                      " *     ]",
                      " *   },",
                      " *   \"status\": \"CONFIRMED\",",
                      " *   \"created\": \"2020-12-24T09:37:33.996Z\",",
                      " *   \"bookingSource\": {",
                      " *     \"platform\": \"WEB\",",
                      " *     \"actor\": \"CUSTOMER\",",
                      " *     \"appDefId\": \"13d21c63-b5ec-5912-8397-c3a5ddb27a97\",",
                      " *     \"appName\": \"Wix Bookings\"",
                      " *   },",
                      " *   \"_id\": \"1b136d38-02e1-4452-8849-c253e29428a5\"",
                      " * }",
                      " * ]",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "length",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 33,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Returns the number of items in the current results page.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-bookings-backend/bookings-obj/wixbookingsquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/prev) and",
                " [`next()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the length of a query result",
                  "body":
                    [ "let resultLength = results.length; // 20" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the length of the result",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "bookings.queryBookings()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultLength = results.length; // 20",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "pageSize",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 77,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Returns the query page size.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-bookings-backend/bookings-obj/wixbookingsquerybuilder/limit) function, can be retrieved using ",
                "the `pageSize` property, and navigating through pages is done with ",
                "the [`prev()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/prev) and  [`next()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the page size of a query result",
                  "body":
                    [ "let resultPageSize = results.pageSize; // 50" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the page size of the query result",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "bookings.queryBookings()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultPageSize = results.pageSize; // 50",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "query",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-bookings-backend.Bookings.WixBookingsQueryBuilder",
        "locations":
          [ { "lineno": 65,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Returns the query used to get the current results.",
            "links": [],
            "examples":
              [ { "title": "Get the query that produced a query result",
                  "body":
                    [ "let resultQuery = results.query;",
                      "",
                      "/* resultQuery:",
                      " *   ",
                      " *  \"filterTree\": {",
                      " *    \"$and\": [",
                      " *      {",
                      " *        \"status\": {",
                      " *          \"$hasSome\": [",
                      " *            \"PENDING_APPROVAL\",",
                      " *            \"CONFIRMED\",",
                      " *            \"DECLINED\",",
                      " *            \"CANCELED\",",
                      " *            \"PENDING_CHECKOUT\",",
                      " *            \"PENDING\"",
                      " *          ]",
                      " *        }",
                      " *      }",
                      " *    ]",
                      " *  },",
                      " *  \"invalidArguments\": [],",
                      " *  \"sort\": [",
                      " *    {",
                      " *      \"fieldName\": \"created\",",
                      " *      \"order\": \"DESC\"",
                      " *    }",
                      " *  ],",
                      " *  \"paging\": {",
                      " *    \"offset\": 9",
                      " *  },",
                      " *  \"pagingMethod\": \"OFFSET\"",
                      " *  ",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the query that produced the result",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "bookings.queryBookings()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultQuery = results.query;",
                      "  });",
                      "",
                      "",
                      "/* resultQuery:",
                      " *   ",
                      " *  \"filterTree\": {",
                      " *    \"$and\": [",
                      " *      {",
                      " *        \"status\": {",
                      " *          \"$hasSome\": [",
                      " *            \"PENDING_APPROVAL\",",
                      " *            \"CONFIRMED\",",
                      " *            \"DECLINED\",",
                      " *            \"CANCELED\",",
                      " *            \"PENDING_CHECKOUT\",",
                      " *            \"PENDING\"",
                      " *          ]",
                      " *        }",
                      " *      }",
                      " *    ]",
                      " *  },",
                      " *  \"invalidArguments\": [],",
                      " *  \"sort\": [",
                      " *    {",
                      " *      \"fieldName\": \"created\",",
                      " *      \"order\": \"DESC\"",
                      " *    }",
                      " *  ],",
                      " *  \"paging\": {",
                      " *    \"offset\": 9",
                      " *  },",
                      " *  \"pagingMethod\": \"OFFSET\"",
                      " *  ",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalCount",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 50,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Returns the total number of items that match the query.",
            "description":
              [ "The `totalCount` returns the total number of items that match the query,",
                " not just the number of items in the current page." ],
            "links": [],
            "examples":
              [ { "title": "Get the number of items in a query result",
                  "body":
                    [ "let resultCount = results.totalCount; // 150" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the number of items in the result",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "bookings.queryBookings()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultCount = results.totalCount; // 150",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalPages",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 92,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Returns the total number of pages the query produced.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-bookings-backend/bookings-obj/wixbookingsquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/prev) and",
                " [`next()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the total number of pages in a query result",
                  "body":
                    [ "let resultPages = results.totalPages; // 3" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the total number of pages in the query result",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "// ...",
                      "",
                      "bookings.queryBookings()",
                      "  .find()",
                      "  .then((results) => {",
                      "    let resultPages = results.totalPages; // 3",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hasNext",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are more results." },
        "locations":
          [ { "lineno": 173,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Indicates if the query has more results.",
            "links": [],
            "examples":
              [ { "title": "Get whether the query result object has more results",
                  "body":
                    [ "let hasNext = results.hasNext(); // true" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "async function retrieveAllItems() {",
                      "  let allItems = [];",
                      "",
                      "  let results = await bookings.queryBookings()",
                      "    .limit(1000)",
                      "    .find(); ",
                      "  allItems.push(results.items);",
                      "",
                      "  while(results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems.push(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasPrev",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are previous results." },
        "locations":
          [ { "lineno": 183,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Indicates the query has previous results.",
            "links": [],
            "examples":
              [ { "title": "Get whether the query result object has previous results",
                  "body":
                    [ "let hasPrev = results.hasPrev(); // false" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "next",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Bookings.WixBookingsQueryResult" ] },
            "doc": "Fulfilled - A query result object with the next page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 129,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Retrieves the next page of query results.",
            "description":
              [ "The `next()` function retrieves the next page of query results.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend/bookings-obj/wixbookingsquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/prev) and",
                " [`next()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/next) functions.",
                "",
                " If items are added or removed between calls to `next()` the values returned",
                " by `BookingsQueryResult` may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the next page of a query result",
                  "body":
                    [ "oldResults.next()",
                      "  .then( (results) => {",
                      "    let newResults = results;",
                      "    let items = newResults.items;",
                      "    let firstItem = items[0];",
                      "    let totalCount = newResults.totalCount;",
                      "    let pageSize = newResults.pageSize;",
                      "    let currentPage = newResults.currentPage;",
                      "    let totalPages = newResults.totalPages;",
                      "    let hasNext = newResults.hasNext();",
                      "    let hasPrev = newResults.hasPrev();",
                      "    let length = newResults.length;",
                      "    let query = newResults.query;",
                      "  } )",
                      "  .catch( (error) => {",
                      "    let errorMsg = error.message;",
                      "    let code = error.code;",
                      "  } );" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "async function retrieveAllItems() {",
                      "  let allItems = [];",
                      "",
                      "  let results = await bookings.queryBookings()",
                      "    .limit(1000)",
                      "    .find(); ",
                      "  allItems.push(results.items);",
                      "",
                      "  while(results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems.push(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "prev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Bookings.WixBookingsQueryResult" ] },
            "doc": "Fulfilled - A query result object with the previous page of query results.\nRejected - The errors that caused the rejection." },
        "locations":
          [ { "lineno": 152,
              "filename": "WixBookingsQueryResult.js" } ],
        "docs":
          { "summary": "Retrieves the previous page of query results.",
            "description":
              [ "The `prev()` function retrieves the previous page of query results.",
                "",
                " The page size is defined by the [`limit()`](wix-bookings-backend/bookings-obj/wixbookingsquerybuilder/limit)",
                " function, can be retrieved using the [`pageSize`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/pageSize) property, and",
                " navigating through pages is done with the [`prev()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/prev) and",
                " [`next()`](wix-bookings-backend/bookings-obj/wixbookingsqueryresult/next) functions.",
                "",
                " If items are added or removed between calls to `prev()` the values returned",
                " may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the previous page of a query result",
                  "body":
                    [ "oldResults.prev()",
                      "  .then( (results) => {",
                      "    let newResults = results;",
                      "    let items = newResults.items;",
                      "    let firstItem = items[0];",
                      "    let totalCount = newResults.totalCount;",
                      "    let pageSize = newResults.pageSize;",
                      "    let currentPage = newResults.currentPage;",
                      "    let totalPages = newResults.totalPages;",
                      "    let hasNext = newResults.hasNext();",
                      "    let hasPrev = newResults.hasPrev();",
                      "    let length = newResults.length;",
                      "    let query = newResults.query;",
                      "  } )",
                      "  .catch( (error) => {",
                      "    let errorMsg = error.message;",
                      "    let code = error.code;",
                      "  } );" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }