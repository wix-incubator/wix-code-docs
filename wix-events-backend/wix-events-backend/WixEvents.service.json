{ "name": "WixEvents",
  "memberOf": "wix-events-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 8,
      "filename": "index.js" },
  "docs":
    { "summary": "The Events API provides functionality for updating and managing events created in the Wix Events app.",
      "description":
        [ "The Events API provides functionality for updating and managing events created in the Wix Events app.",
          "",
          "To enable events backend API functionality for your site, add the [Wix Events](https://support.wix.com/en/article/adding-wix-events-to-your-site) application to your site.",
          "You must upgrade your site to a [Premium Plan](https://support.wix.com/en/article/upgrading-your-site-to-premium-3066683) in order to accept events and receive online payments. ",
          "",
          "",
          "The Events API provides events functionality allowing you to:",
          "+ List and [query](wix-events-backend/events/queryevents) booking information.",
          "+ [Confirm](wix-events-backend/events/confirmbooking) pending booking requests.",
          "+ [Decline](wix-events-backend/events/declinebooking) pending booking requests.",
          "+ [Cancel](wix-events-backend/events/cancelbooking) a booking.",
          "+ [Set attendance](wix-events-backend/events/setattendance) for booked sessions.",
          "+ [Set](wix-events-backend/events/setbookingaspaid) a booking as paid.",
          "+ Update the customer's [booking information](wix-events-backend/events/updatecustomerinfo).",
          "",
          "To use the Events API, import `events` from the `wix-events-backend` module:",
          "",
          "```javascript",
          "import { wixEvents } from \"wix-events-backend\";",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "cancelEvent",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.wixEvents.CancelEventResult_292957908554" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 32,
              "filename": "wix_events_EventManagement_Cancel_cancelEvent.js" } ],
        "docs":
          { "summary": "Cancels an event and closes registration.",
            "description":
              [ "If event cancellation notifications are enabled, canceling an event automatically sends cancellation emails and/or push notifications to registered guests." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function cancelEvent() {",
                      "  const eventId = \"a string\";",
                      "",
                      "  return wixEvents",
                      "    .cancelEvent(eventId)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "copyEvent",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.wixEvents.CopyEventResult_291863410341" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 32,
              "filename": "wix_events_EventManagement_Copy_copyEvent.js" } ],
        "docs":
          { "summary": "Copies an event, including its registration form, notifications and tickets configuration - scheduled two weeks from the original event.",
            "description":
              [ "Multilingual translations are also copied to the new event.",
                "",
                "When an event with same title already exists, appends (1), (2), ... to it. For example, copying an event titled \"My Event\" creates \"My Event (1)\".",
                "Very long event titles are cropped: \"Daily stand-up ev... (2)\"." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function copyEvent() {",
                      "  const eventId = \"a string\";",
                      "",
                      "  return wixEvents",
                      "    .copyEvent(eventId)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "createEvent",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "eventInfo",
              "type": "wix-events-backend.wixEvents.EventData_78315588998",
              "doc": "Event data." },
            { "name": "options",
              "type": "wix-events-backend.wixEvents.CreateEventRequest_4173585239" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.wixEvents.CreateEventResult_294914669964" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 97,
              "filename": "wix_events_EventManagement_CreateV2_createEvent.js" } ],
        "docs":
          { "summary": "Creates a new event, with a default registration form in the given language.",
            "description":
              [ "Default registration form includes first name, last name, and email inputs.",
                "To learn more about registration form and customize it, see [Registration Form](https://dev.wix.com/api/rest/wix-events/wix-events/registration-form/about-the-registration-form-api).",
                "The event is automatically configured to send daily summary reports of new registrations to site business email.",
                "RegistrationConfig.initialType is required - allowed value when creating is RSVP or TICKETS." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function createEvent() {",
                      "  const eventInfo = {",
                      "    title: \"a string\",",
                      "    description: \"a string\",",
                      "    location: {",
                      "      name: \"a string\",",
                      "      address: {",
                      "        street: {",
                      "          addressLine1: \"a string\"",
                      "        },",
                      "        formatted: \"a string\",",
                      "        addressLine2: \"a string\",",
                      "        location: {",
                      "          latitude: 1.23,",
                      "          longitude: 1.23",
                      "        },",
                      "        city: \"a string\",",
                      "        subdivision: \"a string\",",
                      "        country: \"a string\",",
                      "        postalCode: \"a string\"",
                      "      },",
                      "      type: \"VENUE\"",
                      "    },",
                      "    scheduling: {",
                      "      settings: {",
                      "        tbd: true,",
                      "        tbdMessage: \"a string\",",
                      "        startDate: new Date(),",
                      "        endDate: new Date(),",
                      "        timeZoneId: \"a string\",",
                      "        endDateHidden: true,",
                      "        showTimeZone: true",
                      "      }",
                      "    },",
                      "    mainImage: \"wix:image://v1/mediaId/filename.jpg#originWidth=42&originHeight=42\",",
                      "    registration: {",
                      "      rsvp: {",
                      "        settings: {",
                      "          rsvpStatusOptions: \"YES_ONLY\",",
                      "          limit: 42,",
                      "          waitlist: true",
                      "        }",
                      "      },",
                      "      settings: {",
                      "        externalRegistrationUrl: \"a string\",",
                      "        registrationPaused: true,",
                      "        restrictedTo: \"VISITOR\",",
                      "        registrationDisabled: true,",
                      "        eventType: \"NA_EVENT_TYPE\"",
                      "      },",
                      "      ticketing: {",
                      "        settings: {",
                      "          formAssignedPerTicket: true,",
                      "          tax: {",
                      "            type: \"INCLUDED\",",
                      "            name: \"a string\",",
                      "            rate: \"a string\"",
                      "          }",
                      "        }",
                      "      }",
                      "    },",
                      "    guestList: {",
                      "      settings: {",
                      "        public: true",
                      "      }",
                      "    },",
                      "    about: \"a string\",",
                      "    videoConferencing: {",
                      "      settings: {",
                      "        enabled: true,",
                      "        providerId: \"a string\",",
                      "        conferenceType: \"MEETING\"",
                      "      }",
                      "    }",
                      "  };",
                      "  const options = {",
                      "    language: \"a string\"",
                      "  };",
                      "",
                      "  return wixEvents",
                      "    .createEvent(eventInfo, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "deleteEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.wixEvents.DeleteEventResult_36228257" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 7,
              "filename": "wix_events_EventManagement_Delete_deleteEvent.js" } ],
        "docs":
          { "summary": "Deletes an event.",
            "description":
              [ "Deleted events are not returned via API. The only way to retrieve them is via GDPR access request." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function deleteEvent() {",
                      "  const eventId = \"a string\";",
                      "",
                      "  return wixEvents",
                      "    .deleteEvent(eventId)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getEvent",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.wixEvents.GetEventResult_292130555372" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 32,
              "filename": "wix_events_EventManagement_Get_getEvent.js" } ],
        "docs":
          { "summary": "Retrieves an event by ID or URL slug.",
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function getEvent() {",
                      "  const eventId = \"a string\";",
                      "",
                      "  return wixEvents",
                      "    .getEvent(eventId)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "updateEvent",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." },
            { "name": "eventInfo",
              "type": "wix-events-backend.wixEvents.EventData_68445027057",
              "doc": "Event data to update (partial)" },
            { "name": "options",
              "type": "wix-events-backend.wixEvents.UpdateEventRequest_2842136330" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.wixEvents.UpdateEventResult_292294459449" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 89,
              "filename": "wix_events_EventManagement_Update_updateEvent.js" } ],
        "docs":
          { "summary": "Updates an event's parameters. See [Partial Updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.",
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function updateEvent() {",
                      "  const eventId = \"a string\";",
                      "  const eventInfo = {",
                      "    title: \"a string\",",
                      "    description: \"a string\",",
                      "    location: {",
                      "      name: \"a string\",",
                      "      address: {",
                      "        street: {",
                      "          addressLine1: \"a string\"",
                      "        },",
                      "        formatted: \"a string\",",
                      "        addressLine2: \"a string\",",
                      "        location: {",
                      "          latitude: 1.23,",
                      "          longitude: 1.23",
                      "        },",
                      "        city: \"a string\",",
                      "        subdivision: \"a string\",",
                      "        country: \"a string\",",
                      "        postalCode: \"a string\"",
                      "      },",
                      "      type: \"VENUE\"",
                      "    },",
                      "    scheduling: {",
                      "      settings: {",
                      "        tbd: true,",
                      "        tbdMessage: \"a string\",",
                      "        startDate: new Date(),",
                      "        endDate: new Date(),",
                      "        timeZoneId: \"a string\",",
                      "        endDateHidden: true,",
                      "        showTimeZone: true",
                      "      }",
                      "    },",
                      "    mainImage: \"wix:image://v1/mediaId/filename.jpg#originWidth=42&originHeight=42\",",
                      "    registration: {",
                      "      rsvp: {",
                      "        settings: {",
                      "          rsvpStatusOptions: \"YES_ONLY\",",
                      "          limit: 42,",
                      "          waitlist: true",
                      "        }",
                      "      },",
                      "      settings: {",
                      "        externalRegistrationUrl: \"a string\",",
                      "        registrationPaused: true,",
                      "        restrictedTo: \"VISITOR\",",
                      "        registrationDisabled: true",
                      "      },",
                      "      ticketing: {",
                      "        settings: {",
                      "          formAssignedPerTicket: true,",
                      "          tax: {",
                      "            type: \"INCLUDED\",",
                      "            name: \"a string\",",
                      "            rate: \"a string\"",
                      "          }",
                      "        }",
                      "      }",
                      "    },",
                      "    guestList: {",
                      "      settings: {",
                      "        public: true",
                      "      }",
                      "    },",
                      "    about: \"a string\",",
                      "    videoConferencing: {",
                      "      settings: {",
                      "        enabled: true,",
                      "        providerId: \"a string\",",
                      "        conferenceType: \"MEETING\"",
                      "      }",
                      "    }",
                      "  };",
                      "  const options = {",
                      "    language: \"a string\"",
                      "  };",
                      "",
                      "  return wixEvents",
                      "    .updateEvent(eventId, eventInfo, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }