{ "name": "EventsQueryResult",
  "memberOf": "wix-events-backend.WixEvents",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 638,
      "filename": "event-query.js" },
  "docs":
    { "summary": "The results of a Wix events query, containing the retrieved items.",
      "description":
        [ "When you execute a query with the [`find()`](wix-events-backend.eventsquerybuilder.html#find)",
          "function, it returns a Promise that resolves to an `EventsQueryResult` object.",
          "This object contains the items that match the query, information about the",
          "query itself, and functions for paging through the query results." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentPage",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 753,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Returns the index of the current results page number.",
            "description":
              [ "The `currentPage` is a zero-based index of the current page of results.",
                "",
                "The page size is defined by the [`limit()`](wix-events-backend.eventsquerybuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions.",
                "",
                "The `currentPage` property returns `undefined` if the query returned no results." ],
            "links": [],
            "examples":
              [ { "title": "Get the current page index of a query result",
                  "body":
                    [ "const resultPage = results.currentPage; // 0" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the current page index of the query result",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "// ...",
                      "",
                      "wixEvents.queryEvents()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultPage = results.currentPage; // 0",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "wix-events-backend.WixEvents.WixEvent" ] },
        "locations":
          [ { "lineno": 649,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Returns the items that match the query.",
            "description":
              [ "The current page of Wix events retrieved by the query.",
                "",
                "> **Note:** When no items match the query, the `items` array is empty.",
                "",
                "To paginate your query results, use the `EventsQueryResult` pagination properties and functions." ],
            "links": [],
            "examples":
              [ { "title": "Perform a find on a query",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "// ...",
                      "",
                      "wixEvents.queryEvents()",
                      "  .find()",
                      "  .then((results) => {",
                      "    if (results.items.length > 0) {",
                      "      const items = results.items;",
                      "      const firstItem = items[0];",
                      "      const totalCount = results.totalCount;",
                      "      const pageSize = results.pageSize;",
                      "      const currentPage = results.currentPage;",
                      "      const totalPages = results.totalPages;",
                      "      const hasNext = results.hasNext();",
                      "      const hasPrev = results.hasPrev();",
                      "      const length = results.length;",
                      "      const query = results.query;",
                      "    } else {",
                      "      // handle case where no matching items found",
                      "    }",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "length",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 664,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Returns the number of items in the current results page.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-events-backend.eventsquerybuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the length of a query result",
                  "body":
                    [ "const resultLength = results.length; // 20" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the length of the result",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "// ...",
                      "",
                      "wixEvents.queryEvents()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultLength = results.length; // 20",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "pageSize",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 725,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Returns the query page size.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-events-backend.eventsquerybuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the page size of a query result",
                  "body":
                    [ "const resultPageSize = results.pageSize; // 50" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the page size of the result",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "// ...",
                      "",
                      "wixEvents.queryEvents()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultPageSize = results.pageSize; // 50",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "query",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-events-backend.WixEvents.EventsQueryBuilder",
        "locations":
          [ { "lineno": 690,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Contains functionality for refining a Wix events query.",
            "description":
              [ "The `EventsQueryBuilder` functions enable you to run, sort, filter, and control",
                " which results a query returns.",
                "",
                " Typically, you build a query using any of the event query functions,",
                " refine the query by chaining `EventsQueryBuilder` functions, and then execute the",
                " query by chaining the [`find()`](#find) function.",
                "",
                " For example, the following code returns the first 5 upcoming Wix events created by",
                " a given event manager, including scheduled events and events that ",
                " have started. The events are listed in ascending",
                " order by the event's start date.",
                "",
                " ```javascript",
                " import { wixEvents } from 'wix-events-backend';",
                "",
                " wixEventsBackend.queryEvents()",
                "  .eq(\"createdBy\", \"4c47c608-cfa8-4037-93ac-738f09560ed3\")",
                "  .hasSome(\"status\", [\"SCHEDULED\", \"STARTED\"])",
                "  .ascending(\"scheduling.startDate\")",
                "  .limit(5)",
                "  .find()",
                "  .then( (results) => {",
                "    console.log(results.items);",
                "  } );",
                "```" ],
            "links": [],
            "examples":
              [ { "title": "Get the query that produced a query result",
                  "body":
                    [ "const resultQuery = results.query;" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the query that produced the result",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "// ...",
                      "",
                      "wixEvents.queryEvents()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const newQuery = results.query;",
                      "    newQuery",
                      "      .ge(\"_createdDate\", \"2021-01-01T15:21:41.960Z\")",
                      "      .find()",
                      "      .then((newQueryResults) => {",
                      "        const firstItem = newQueryResults.items[0];",
                      "      })",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalCount",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 678,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Returns the total number of items that match the query.",
            "description":
              [ "The `totalCount` returns the total number of items that match the query,",
                " not just the number of items in the current page." ],
            "links": [],
            "examples":
              [ { "title": "Get the number of items in a query result",
                  "body":
                    [ "const resultCount = results.totalCount; // 150" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the number of items in the result",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "// ...",
                      "",
                      "wixEvents.queryEvents()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultCount = results.totalCount; // 150",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalPages",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 739,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Returns the total number of pages the query produced.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-events-backend.eventsquerybuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get the total number of pages in a query result",
                  "body":
                    [ "const resultPages = results.totalPages; // 3" ],
                  "extra":
                    {  } },
                { "title": "Perform a query and get the total number of pages in the result",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "// ...",
                      "",
                      "wixEvents.queryEvents()",
                      "  .find()",
                      "  .then((results) => {",
                      "    const resultPages = results.totalPages; // 3",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hasNext",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are more results." },
        "locations":
          [ { "lineno": 817,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Indicates if the query has more results.",
            "links": [],
            "examples":
              [ { "title": "Get the next page of a query result",
                  "body":
                    [ "const hasNext = results.hasNext(); // true" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "async function retrieveAllItems() {",
                      "  let allItems = [];",
                      "",
                      "  const results = await wixEvents.queryEvents()",
                      "    .limit(100)",
                      "    .find();",
                      "  allItems.push(results.items);",
                      "",
                      "  while (results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems.push(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasPrev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are previous results." },
        "locations":
          [ { "lineno": 827,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Indicates if the query has previous results.",
            "links": [],
            "examples":
              [ { "title": "Get the previous page of a query result",
                  "body":
                    [ "const hasPrev = results.hasPrev(); // false" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "next",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.EventsQueryResult" ] },
            "doc": "Fulfilled - The results of a Wix events query, containing the retrieved items.\nWhen you execute a query with the [`find()`](wix-events-backend.eventsquerybuilder.html#find)\nfunction, it returns a Promise that resolves to an `EventsQueryResult` object.\nThis object contains the items that match the query, information about the\nquery itself, and functions for paging through the query results." },
        "locations":
          [ { "lineno": 771,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Retrieves the next page of query results.",
            "description":
              [ "The `next()` function retrieves the next page of query results.",
                "",
                "The page size is defined by the [`limit()`](wix-events-backend.eventsquerybuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions.",
                "",
                "If items are added or removed between calls to `next()` the values returned",
                "by `EventsQueryResult` may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the next page of a query result",
                  "body":
                    [ "oldResults.next()",
                      "  .then((results) => {",
                      "    const newResults = results;",
                      "    const items = newResults.items;",
                      "    const firstItem = items[0];",
                      "    const totalCount = newResults.totalCount;",
                      "    const pageSize = newResults.pageSize;",
                      "    const currentPage = newResults.currentPage;",
                      "    const totalPages = newResults.totalPages;",
                      "    const hasNext = newResults.hasNext();",
                      "    const hasPrev = newResults.hasPrev();",
                      "    const length = newResults.length;",
                      "    const query = newResults.query;",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } },
                { "title": "Iterate through all pages of query results",
                  "body":
                    [ "import { wixEvents } from 'wix-events-backend';",
                      "",
                      "async function retrieveAllItems() {",
                      "  let allItems = [];",
                      "",
                      "  const results = await wixEvents.queryEvents()",
                      "    .limit(100)",
                      "    .find();",
                      "  allItems.push(results.items);",
                      "",
                      "  while (results.hasNext()) {",
                      "    results = await results.next();",
                      "    allItems.push(results.items);",
                      "  }",
                      "  return allItems;",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example demonstrates how to get all query results, bypassing the maximum limit of 1000." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "prev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.EventsQueryResult" ] },
            "doc": "Fulfilled - The results of a Wix events query, containing the retrieved items.\nWhen you execute a query with the [`find()`](wix-events-backend.eventsquerybuilder.html#find)\nfunction, it returns a Promise that resolves to an `EventsQueryResult` object.\nThis object contains the items that match the query, information about the\nquery itself, and functions for paging through the query results." },
        "locations":
          [ { "lineno": 795,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Retrieves the previous page of query results.",
            "description":
              [ "The `prev()` function retrieves the previous page of query results.",
                "",
                "The page size is defined by the [`limit()`](wix-events-backend.eventsquerybuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions.",
                "",
                "If items are added or removed between calls to `prev()` the values returned",
                "by `EventsQueryResult` may change." ],
            "links": [],
            "examples":
              [ { "title": "Get the previous page of a query result",
                  "body":
                    [ "oldResults.prev()",
                      "  .then((results) => {",
                      "    const newResults = results;",
                      "    const items = newResults.items;",
                      "    const firstItem = items[0];",
                      "    const totalCount = newResults.totalCount;",
                      "    const pageSize = newResults.pageSize;",
                      "    const currentPage = newResults.currentPage;",
                      "    const totalPages = newResults.totalPages;",
                      "    const hasNext = newResults.hasNext();",
                      "    const hasPrev = newResults.hasPrev();",
                      "    const length = newResults.length;",
                      "    const query = newResults.query;",
                      "  })",
                      "  .catch((error) => {",
                      "    const queryError = error;",
                      "  });" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }