{ "name": "EventsQueryResult",
  "memberOf": "wix-events-backend.WixEvents",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 478,
      "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" },
  "docs":
    { "summary": "The results of a Wix events query, containing the retrieved items.",
      "description":
        [ "When you execute a query with the [`find()`](wix-events-backend.EventsQueryBuilder.html#find)",
          "function, it returns a Promise that resolves to a `EventsQueryResult` object.",
          "This object contains the items that match the query, information about the",
          "query itself, and functions for paging through the query results." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "currentPage",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 583,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Returns the index of the current results page number.",
            "description":
              [ "The `currentPage` is a zero-based index of the current page of results.",
                "",
                "The page size is defined by the [`limit()`](wix-events-backend.EventsQueryBuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions.",
                "",
                "The `currentPage` property returns `undefined` if the query returned no results." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "wix-events-backend.WixEvents.WixEvent" ] },
        "locations":
          [ { "lineno": 488,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Returns the items that match the query.",
            "description":
              [ "The current page of items retrieved by the query.",
                "",
                "Events list",
                "",
                "",
                "> **Note:** When no items match the query, the items array is empty.",
                "",
                "To paginate your query results, use the `EventsQueryResult` pagination properties and functions." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "length",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 504,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Returns the number of items in the current results page.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-events-backend.EventsQueryBuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "pageSize",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 559,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Returns the query page size.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-events-backend.EventsQueryBuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "query",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "wix-events-backend.WixEvents.EventsQueryBuilder",
        "locations":
          [ { "lineno": 526,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Contains functionality for refining a Wix events query.",
            "description":
              [ "The `EventsQueryBuilder` functions enable you to run, sort, filter, and control",
                "which results a query returns.",
                "",
                "Typically, you build a query using any of the events query functions,",
                "refine the query by chaining `EventsQueryBuilder` functions, and then execute the",
                "query by chaining the [`find()`](#find) function.",
                "",
                "For example, the following code returns the first 5 upcoming Wix events created by",
                "a given event manager, including scheduled events and events that ",
                "have started. The events are listed in ascending",
                "order by the event's start date.",
                "",
                "```javascript",
                "import wixEventsBackend from 'wix-events-backend';",
                "",
                "wixEventsBackend.queryEvents()",
                "  .eq(\"createdBy\", \"4c47c608-cfa8-4037-93ac-738f09560ed3\")",
                "  .hasSome(\"status\", [\"SCHEDULED\", \"STARTED\"])",
                "  .ascending(\"scheduling.startDate\")",
                "  .limit(5)",
                "  .find()",
                "  .then( (results) => {",
                "    console.log(results.items);",
                "  } );",
                "```" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalCount",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 516,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Returns the total number of items that match the query.",
            "description":
              [ "The `totalCount` returns the total number of items that match the query,",
                "not just the number of items in the current page." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "totalPages",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 571,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Returns the total number of pages the query produced.",
            "description":
              [ "The page size is defined by the [`limit()`](wix-events-backend.EventsQueryBuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hasNext",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are more results." },
        "locations":
          [ { "lineno": 641,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Indicates if the query has more results.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "hasPrev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "boolean",
            "doc": "`true` if there are previous results." },
        "locations":
          [ { "lineno": 648,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Indicates if the query has previous results.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "next",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.EventsQueryResult" ] },
            "doc": "Fulfilled - The results of a Wix events query, containing the retrieved items.\nWhen you execute a query with the [`find()`](wix-events-backend.EventsQueryBuilder.html#find)\nfunction, it returns a Promise that resolves to a `EventsQueryResult` object.\nThis object contains the items that match the query, information about the\nquery itself, and functions for paging through the query results." },
        "locations":
          [ { "lineno": 599,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Retrieves the next page of query results.",
            "description":
              [ "The `next()` function retrieves the next page of query results.",
                "",
                "The page size is defined by the [`limit()`](wix-events-backend.EventsQueryBuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions.",
                "",
                "If items are added or removed between calls to `next()` the values returned",
                "by `EventsQueryResult` may change." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "prev",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.EventsQueryResult" ] },
            "doc": "Fulfilled - The results of a Wix events query, containing the retrieved items.\nWhen you execute a query with the [`find()`](wix-events-backend.EventsQueryBuilder.html#find)\nfunction, it returns a Promise that resolves to a `EventsQueryResult` object.\nThis object contains the items that match the query, information about the\nquery itself, and functions for paging through the query results." },
        "locations":
          [ { "lineno": 620,
              "filename": "wix_events_EventManagement_QueryV2_queryEvents.js" } ],
        "docs":
          { "summary": "Retrieves the previous page of query results.",
            "description":
              [ "The `prev()` function retrieves the previous page of query results.",
                "",
                "The page size is defined by the [`limit()`](wix-events-backend.EventsQueryBuilder.html#limit)",
                "function, can be retrieved using the [`pageSize`](#pageSize) property, and",
                "navigating through pages is done with the [`prev()`](#prev) and",
                "[`next()`](#next) functions.",
                "",
                "If items are added or removed between calls to `prev()` the values returned",
                "by `EventsQueryResult` may change." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }